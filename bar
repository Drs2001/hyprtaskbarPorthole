#!/usr/bin/bash
file="${XDG_RUNTIME_DIR:-/tmp}/dmFyIF-ags.js"

/bin/cat <<EOF | /bin/base64 --decode > $file
dmFyIF9fY3JlYXRlID0gT2JqZWN0LmNyZWF0ZTsKdmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTsKdmFyIF9fZ2V0T3duUHJvcERlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOwp2YXIgX19rbm93blN5bWJvbCA9IChuYW1lLCBzeW1ib2wpID0+IChzeW1ib2wgPSBTeW1ib2xbbmFtZV0pID8gc3ltYm9sIDogU3ltYm9sLmZvcigiU3ltYm9sLiIgKyBuYW1lKTsKdmFyIF9fdHlwZUVycm9yID0gKG1zZykgPT4gewogIHRocm93IFR5cGVFcnJvcihtc2cpOwp9Owp2YXIgX19kZWZOb3JtYWxQcm9wID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWU7CnZhciBfX25hbWUgPSAodGFyZ2V0LCB2YWx1ZSkgPT4gX19kZWZQcm9wKHRhcmdldCwgIm5hbWUiLCB7IHZhbHVlLCBjb25maWd1cmFibGU6IHRydWUgfSk7CnZhciBfX2RlY29yYXRvclN0YXJ0ID0gKGJhc2UpID0+IFssICwgLCBfX2NyZWF0ZShiYXNlPy5bX19rbm93blN5bWJvbCgibWV0YWRhdGEiKV0gPz8gbnVsbCldOwp2YXIgX19kZWNvcmF0b3JTdHJpbmdzID0gWyJjbGFzcyIsICJtZXRob2QiLCAiZ2V0dGVyIiwgInNldHRlciIsICJhY2Nlc3NvciIsICJmaWVsZCIsICJ2YWx1ZSIsICJnZXQiLCAic2V0Il07CnZhciBfX2V4cGVjdEZuID0gKGZuKSA9PiBmbiAhPT0gdm9pZCAwICYmIHR5cGVvZiBmbiAhPT0gImZ1bmN0aW9uIiA/IF9fdHlwZUVycm9yKCJGdW5jdGlvbiBleHBlY3RlZCIpIDogZm47CnZhciBfX2RlY29yYXRvckNvbnRleHQgPSAoa2luZCwgbmFtZSwgZG9uZSwgbWV0YWRhdGEsIGZucykgPT4gKHsga2luZDogX19kZWNvcmF0b3JTdHJpbmdzW2tpbmRdLCBuYW1lLCBtZXRhZGF0YSwgYWRkSW5pdGlhbGl6ZXI6IChmbikgPT4gZG9uZS5fID8gX190eXBlRXJyb3IoIkFscmVhZHkgaW5pdGlhbGl6ZWQiKSA6IGZucy5wdXNoKF9fZXhwZWN0Rm4oZm4gfHwgbnVsbCkpIH0pOwp2YXIgX19kZWNvcmF0b3JNZXRhZGF0YSA9IChhcnJheSwgdGFyZ2V0KSA9PiBfX2RlZk5vcm1hbFByb3AodGFyZ2V0LCBfX2tub3duU3ltYm9sKCJtZXRhZGF0YSIpLCBhcnJheVszXSk7CnZhciBfX3J1bkluaXRpYWxpemVycyA9IChhcnJheSwgZmxhZ3MsIHNlbGYsIHZhbHVlKSA9PiB7CiAgZm9yICh2YXIgaSA9IDAsIGZucyA9IGFycmF5W2ZsYWdzID4+IDFdLCBuID0gZm5zICYmIGZucy5sZW5ndGg7IGkgPCBuOyBpKyspIGZsYWdzICYgMSA/IGZuc1tpXS5jYWxsKHNlbGYpIDogdmFsdWUgPSBmbnNbaV0uY2FsbChzZWxmLCB2YWx1ZSk7CiAgcmV0dXJuIHZhbHVlOwp9Owp2YXIgX19kZWNvcmF0ZUVsZW1lbnQgPSAoYXJyYXksIGZsYWdzLCBuYW1lLCBkZWNvcmF0b3JzLCB0YXJnZXQsIGV4dHJhKSA9PiB7CiAgdmFyIGZuLCBpdCwgZG9uZSwgY3R4LCBhY2Nlc3MsIGsgPSBmbGFncyAmIDcsIHMgPSAhIShmbGFncyAmIDgpLCBwID0gISEoZmxhZ3MgJiAxNik7CiAgdmFyIGogPSBrID4gMyA/IGFycmF5Lmxlbmd0aCArIDEgOiBrID8gcyA/IDEgOiAyIDogMCwga2V5ID0gX19kZWNvcmF0b3JTdHJpbmdzW2sgKyA1XTsKICB2YXIgaW5pdGlhbGl6ZXJzID0gayA+IDMgJiYgKGFycmF5W2ogLSAxXSA9IFtdKSwgZXh0cmFJbml0aWFsaXplcnMgPSBhcnJheVtqXSB8fCAoYXJyYXlbal0gPSBbXSk7CiAgdmFyIGRlc2MgPSBrICYmICghcCAmJiAhcyAmJiAodGFyZ2V0ID0gdGFyZ2V0LnByb3RvdHlwZSksIGsgPCA1ICYmIChrID4gMyB8fCAhcCkgJiYgX19nZXRPd25Qcm9wRGVzYyhrIDwgNCA/IHRhcmdldCA6IHsgZ2V0IFtuYW1lXSgpIHsKICAgIHJldHVybiBfX3ByaXZhdGVHZXQodGhpcywgZXh0cmEpOwogIH0sIHNldCBbbmFtZV0oeCkgewogICAgcmV0dXJuIF9fcHJpdmF0ZVNldCh0aGlzLCBleHRyYSwgeCk7CiAgfSB9LCBuYW1lKSk7CiAgayA/IHAgJiYgayA8IDQgJiYgX19uYW1lKGV4dHJhLCAoayA+IDIgPyAic2V0ICIgOiBrID4gMSA/ICJnZXQgIiA6ICIiKSArIG5hbWUpIDogX19uYW1lKHRhcmdldCwgbmFtZSk7CiAgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHsKICAgIGN0eCA9IF9fZGVjb3JhdG9yQ29udGV4dChrLCBuYW1lLCBkb25lID0ge30sIGFycmF5WzNdLCBleHRyYUluaXRpYWxpemVycyk7CiAgICBpZiAoaykgewogICAgICBjdHguc3RhdGljID0gcywgY3R4LnByaXZhdGUgPSBwLCBhY2Nlc3MgPSBjdHguYWNjZXNzID0geyBoYXM6IHAgPyAoeCkgPT4gX19wcml2YXRlSW4odGFyZ2V0LCB4KSA6ICh4KSA9PiBuYW1lIGluIHggfTsKICAgICAgaWYgKGsgXiAzKSBhY2Nlc3MuZ2V0ID0gcCA/ICh4KSA9PiAoayBeIDEgPyBfX3ByaXZhdGVHZXQgOiBfX3ByaXZhdGVNZXRob2QpKHgsIHRhcmdldCwgayBeIDQgPyBleHRyYSA6IGRlc2MuZ2V0KSA6ICh4KSA9PiB4W25hbWVdOwogICAgICBpZiAoayA+IDIpIGFjY2Vzcy5zZXQgPSBwID8gKHgsIHkpID0+IF9fcHJpdmF0ZVNldCh4LCB0YXJnZXQsIHksIGsgXiA0ID8gZXh0cmEgOiBkZXNjLnNldCkgOiAoeCwgeSkgPT4geFtuYW1lXSA9IHk7CiAgICB9CiAgICBpdCA9ICgwLCBkZWNvcmF0b3JzW2ldKShrID8gayA8IDQgPyBwID8gZXh0cmEgOiBkZXNjW2tleV0gOiBrID4gNCA/IHZvaWQgMCA6IHsgZ2V0OiBkZXNjLmdldCwgc2V0OiBkZXNjLnNldCB9IDogdGFyZ2V0LCBjdHgpLCBkb25lLl8gPSAxOwogICAgaWYgKGsgXiA0IHx8IGl0ID09PSB2b2lkIDApIF9fZXhwZWN0Rm4oaXQpICYmIChrID4gNCA/IGluaXRpYWxpemVycy51bnNoaWZ0KGl0KSA6IGsgPyBwID8gZXh0cmEgPSBpdCA6IGRlc2Nba2V5XSA9IGl0IDogdGFyZ2V0ID0gaXQpOwogICAgZWxzZSBpZiAodHlwZW9mIGl0ICE9PSAib2JqZWN0IiB8fCBpdCA9PT0gbnVsbCkgX190eXBlRXJyb3IoIk9iamVjdCBleHBlY3RlZCIpOwogICAgZWxzZSBfX2V4cGVjdEZuKGZuID0gaXQuZ2V0KSAmJiAoZGVzYy5nZXQgPSBmbiksIF9fZXhwZWN0Rm4oZm4gPSBpdC5zZXQpICYmIChkZXNjLnNldCA9IGZuKSwgX19leHBlY3RGbihmbiA9IGl0LmluaXQpICYmIGluaXRpYWxpemVycy51bnNoaWZ0KGZuKTsKICB9CiAgcmV0dXJuIGsgfHwgX19kZWNvcmF0b3JNZXRhZGF0YShhcnJheSwgdGFyZ2V0KSwgZGVzYyAmJiBfX2RlZlByb3AodGFyZ2V0LCBuYW1lLCBkZXNjKSwgcCA/IGsgXiA0ID8gZXh0cmEgOiBkZXNjIDogdGFyZ2V0Owp9Owp2YXIgX19hY2Nlc3NDaGVjayA9IChvYmosIG1lbWJlciwgbXNnKSA9PiBtZW1iZXIuaGFzKG9iaikgfHwgX190eXBlRXJyb3IoIkNhbm5vdCAiICsgbXNnKTsKdmFyIF9fcHJpdmF0ZUluID0gKG1lbWJlciwgb2JqKSA9PiBPYmplY3Qob2JqKSAhPT0gb2JqID8gX190eXBlRXJyb3IoJ0Nhbm5vdCB1c2UgdGhlICJpbiIgb3BlcmF0b3Igb24gdGhpcyB2YWx1ZScpIDogbWVtYmVyLmhhcyhvYmopOwp2YXIgX19wcml2YXRlR2V0ID0gKG9iaiwgbWVtYmVyLCBnZXR0ZXIyKSA9PiAoX19hY2Nlc3NDaGVjayhvYmosIG1lbWJlciwgInJlYWQgZnJvbSBwcml2YXRlIGZpZWxkIiksIGdldHRlcjIgPyBnZXR0ZXIyLmNhbGwob2JqKSA6IG1lbWJlci5nZXQob2JqKSk7CnZhciBfX3ByaXZhdGVBZGQgPSAob2JqLCBtZW1iZXIsIHZhbHVlKSA9PiBtZW1iZXIuaGFzKG9iaikgPyBfX3R5cGVFcnJvcigiQ2Fubm90IGFkZCB0aGUgc2FtZSBwcml2YXRlIG1lbWJlciBtb3JlIHRoYW4gb25jZSIpIDogbWVtYmVyIGluc3RhbmNlb2YgV2Vha1NldCA/IG1lbWJlci5hZGQob2JqKSA6IG1lbWJlci5zZXQob2JqLCB2YWx1ZSk7CnZhciBfX3ByaXZhdGVTZXQgPSAob2JqLCBtZW1iZXIsIHZhbHVlLCBzZXR0ZXIyKSA9PiAoX19hY2Nlc3NDaGVjayhvYmosIG1lbWJlciwgIndyaXRlIHRvIHByaXZhdGUgZmllbGQiKSwgc2V0dGVyMiA/IHNldHRlcjIuY2FsbChvYmosIHZhbHVlKSA6IG1lbWJlci5zZXQob2JqLCB2YWx1ZSksIHZhbHVlKTsKdmFyIF9fcHJpdmF0ZU1ldGhvZCA9IChvYmosIG1lbWJlciwgbWV0aG9kKSA9PiAoX19hY2Nlc3NDaGVjayhvYmosIG1lbWJlciwgImFjY2VzcyBwcml2YXRlIG1ldGhvZCIpLCBtZXRob2QpOwoKLy8gLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvb3ZlcnJpZGVzLnRzCmZ1bmN0aW9uIHNuYWtlaWZ5KHN0cikgewogIHJldHVybiBzdHIucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgIiQxXyQyIikucmVwbGFjZUFsbCgiLSIsICJfIikudG9Mb3dlckNhc2UoKTsKfQphc3luYyBmdW5jdGlvbiBzdXBwcmVzcyhtb2QsIHBhdGNoMikgewogIHJldHVybiBtb2QudGhlbigobSkgPT4gcGF0Y2gyKG0uZGVmYXVsdCkpLmNhdGNoKCgpID0+IHZvaWQgMCk7Cn0KZnVuY3Rpb24gcGF0Y2gocHJvdG8sIHByb3ApIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkocHJvdG8sIHByb3AsIHsKICAgIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXNbYGdldF8ke3NuYWtlaWZ5KHByb3ApfWBdKCk7CiAgICB9CiAgfSk7Cn0KYXdhaXQgc3VwcHJlc3MoaW1wb3J0KCJnaTovL0FzdGFsQXBwcyIpLCAoeyBBcHBzLCBBcHBsaWNhdGlvbiB9KSA9PiB7CiAgcGF0Y2goQXBwcy5wcm90b3R5cGUsICJsaXN0Iik7CiAgcGF0Y2goQXBwbGljYXRpb24ucHJvdG90eXBlLCAia2V5d29yZHMiKTsKICBwYXRjaChBcHBsaWNhdGlvbi5wcm90b3R5cGUsICJjYXRlZ29yaWVzIik7Cn0pOwphd2FpdCBzdXBwcmVzcyhpbXBvcnQoImdpOi8vQXN0YWxCYXR0ZXJ5IiksICh7IFVQb3dlciB9KSA9PiB7CiAgcGF0Y2goVVBvd2VyLnByb3RvdHlwZSwgImRldmljZXMiKTsKfSk7CmF3YWl0IHN1cHByZXNzKGltcG9ydCgiZ2k6Ly9Bc3RhbEJsdWV0b290aCIpLCAoeyBBZGFwdGVyLCBCbHVldG9vdGg6IEJsdWV0b290aDIsIERldmljZSB9KSA9PiB7CiAgcGF0Y2goQWRhcHRlci5wcm90b3R5cGUsICJ1dWlkcyIpOwogIHBhdGNoKEJsdWV0b290aDIucHJvdG90eXBlLCAiYWRhcHRlcnMiKTsKICBwYXRjaChCbHVldG9vdGgyLnByb3RvdHlwZSwgImRldmljZXMiKTsKICBwYXRjaChEZXZpY2UucHJvdG90eXBlLCAidXVpZHMiKTsKfSk7CmF3YWl0IHN1cHByZXNzKGltcG9ydCgiZ2k6Ly9Bc3RhbEh5cHJsYW5kIiksICh7IEh5cHJsYW5kOiBIeXBybGFuZDIsIE1vbml0b3IsIFdvcmtzcGFjZSB9KSA9PiB7CiAgcGF0Y2goSHlwcmxhbmQyLnByb3RvdHlwZSwgImJpbmRzIik7CiAgcGF0Y2goSHlwcmxhbmQyLnByb3RvdHlwZSwgIm1vbml0b3JzIik7CiAgcGF0Y2goSHlwcmxhbmQyLnByb3RvdHlwZSwgIndvcmtzcGFjZXMiKTsKICBwYXRjaChIeXBybGFuZDIucHJvdG90eXBlLCAiY2xpZW50cyIpOwogIHBhdGNoKE1vbml0b3IucHJvdG90eXBlLCAiYXZhaWxhYmxlTW9kZXMiKTsKICBwYXRjaChNb25pdG9yLnByb3RvdHlwZSwgImF2YWlsYWJsZV9tb2RlcyIpOwogIHBhdGNoKFdvcmtzcGFjZS5wcm90b3R5cGUsICJjbGllbnRzIik7Cn0pOwphd2FpdCBzdXBwcmVzcyhpbXBvcnQoImdpOi8vQXN0YWxNcHJpcyIpLCAoeyBNcHJpcywgUGxheWVyIH0pID0+IHsKICBwYXRjaChNcHJpcy5wcm90b3R5cGUsICJwbGF5ZXJzIik7CiAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgInN1cHBvcnRlZF91cmlfc2NoZW1lcyIpOwogIHBhdGNoKFBsYXllci5wcm90b3R5cGUsICJzdXBwb3J0ZWRVcmlTY2hlbWVzIik7CiAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgInN1cHBvcnRlZF9taW1lX3R5cGVzIik7CiAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgInN1cHBvcnRlZE1pbWVUeXBlcyIpOwogIHBhdGNoKFBsYXllci5wcm90b3R5cGUsICJjb21tZW50cyIpOwp9KTsKYXdhaXQgc3VwcHJlc3MoaW1wb3J0KCJnaTovL0FzdGFsTmV0d29yayIpLCAoeyBXaWZpIH0pID0+IHsKICBwYXRjaChXaWZpLnByb3RvdHlwZSwgImFjY2Vzc19wb2ludHMiKTsKICBwYXRjaChXaWZpLnByb3RvdHlwZSwgImFjY2Vzc1BvaW50cyIpOwp9KTsKYXdhaXQgc3VwcHJlc3MoaW1wb3J0KCJnaTovL0FzdGFsTm90aWZkIiksICh7IE5vdGlmZDogTm90aWZkMiwgTm90aWZpY2F0aW9uIH0pID0+IHsKICBwYXRjaChOb3RpZmQyLnByb3RvdHlwZSwgIm5vdGlmaWNhdGlvbnMiKTsKICBwYXRjaChOb3RpZmljYXRpb24ucHJvdG90eXBlLCAiYWN0aW9ucyIpOwp9KTsKYXdhaXQgc3VwcHJlc3MoaW1wb3J0KCJnaTovL0FzdGFsUG93ZXJQcm9maWxlcyIpLCAoeyBQb3dlclByb2ZpbGVzIH0pID0+IHsKICBwYXRjaChQb3dlclByb2ZpbGVzLnByb3RvdHlwZSwgImFjdGlvbnMiKTsKfSk7CmF3YWl0IHN1cHByZXNzKGltcG9ydCgiZ2k6Ly9Bc3RhbFdwIiksICh7IFdwOiBXcDIsIEF1ZGlvLCBWaWRlbyB9KSA9PiB7CiAgcGF0Y2goV3AyLnByb3RvdHlwZSwgImRldmljZXMiKTsKICBwYXRjaChBdWRpby5wcm90b3R5cGUsICJzdHJlYW1zIik7CiAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCAicmVjb3JkZXJzIik7CiAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCAibWljcm9waG9uZXMiKTsKICBwYXRjaChBdWRpby5wcm90b3R5cGUsICJzcGVha2VycyIpOwogIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgImRldmljZXMiKTsKICBwYXRjaChWaWRlby5wcm90b3R5cGUsICJzdHJlYW1zIik7CiAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCAicmVjb3JkZXJzIik7CiAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCAic2lua3MiKTsKICBwYXRjaChWaWRlby5wcm90b3R5cGUsICJzb3VyY2VzIik7CiAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCAiZGV2aWNlcyIpOwp9KTsKYXdhaXQgc3VwcHJlc3MoaW1wb3J0KCJnaTovL0FzdGFsVHJheSIpLCAoeyBUcmF5IH0pID0+IHsKICBwYXRjaChUcmF5LnByb3RvdHlwZSwgIml0ZW1zIik7Cn0pOwoKLy8gLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2dvYmplY3QudHMKaW1wb3J0IEdPYmplY3QgZnJvbSAiZ2k6Ly9HT2JqZWN0IjsKaW1wb3J0IEdMaWIgZnJvbSAiZ2k6Ly9HTGliIjsKCi8vIC4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC91dGlsLnRzCmZ1bmN0aW9uIGtlYmFiaWZ5KHN0cikgewogIHJldHVybiBzdHIucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgIiQxLSQyIikucmVwbGFjZUFsbCgiXyIsICItIikudG9Mb3dlckNhc2UoKTsKfQpmdW5jdGlvbiBzbmFrZWlmeTIoc3RyKSB7CiAgcmV0dXJuIHN0ci5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCAiJDEtJDIiKS5yZXBsYWNlQWxsKCItIiwgIl8iKS50b0xvd2VyQ2FzZSgpOwp9CmZ1bmN0aW9uIHhtbCh7IG5hbWUsIGF0dHJpYnV0ZXMsIGNoaWxkcmVuIH0pIHsKICBsZXQgYnVpbGRlciA9IGA8JHtuYW1lfWA7CiAgY29uc3QgYXR0cnMgPSBPYmplY3QuZW50cmllcyhhdHRyaWJ1dGVzID8/IFtdKTsKICBpZiAoYXR0cnMubGVuZ3RoID4gMCkgewogICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgYXR0cnMpIHsKICAgICAgYnVpbGRlciArPSBgICR7a2V5fT0iJHt2YWx1ZX0iYDsKICAgIH0KICB9CiAgaWYgKGNoaWxkcmVuICYmIGNoaWxkcmVuLmxlbmd0aCA+IDApIHsKICAgIGJ1aWxkZXIgKz0gIj4iOwogICAgZm9yIChjb25zdCBub2RlIG9mIGNoaWxkcmVuKSB7CiAgICAgIGJ1aWxkZXIgKz0geG1sKG5vZGUpOwogICAgfQogICAgYnVpbGRlciArPSBgPC8ke25hbWV9PmA7CiAgfSBlbHNlIHsKICAgIGJ1aWxkZXIgKz0gIiAvPiI7CiAgfQogIHJldHVybiBidWlsZGVyOwp9CmZ1bmN0aW9uIHNldChvYmosIHByb3AsIHZhbHVlKSB7CiAgY29uc3Qga2V5ID0gc25ha2VpZnkyKHByb3ApOwogIGNvbnN0IGdldHRlcjIgPSBgZ2V0XyR7a2V5fWA7CiAgY29uc3Qgc2V0dGVyMiA9IGBzZXRfJHtrZXl9YDsKICBsZXQgY3VycmVudDsKICBpZiAoZ2V0dGVyMiBpbiBvYmogJiYgdHlwZW9mIG9ialtnZXR0ZXIyXSA9PT0gImZ1bmN0aW9uIikgewogICAgY3VycmVudCA9IG9ialtnZXR0ZXIyXSgpOwogIH0gZWxzZSB7CiAgICBjdXJyZW50ID0gb2JqW3Byb3BdOwogIH0KICBpZiAoY3VycmVudCAhPT0gdmFsdWUpIHsKICAgIGlmIChzZXR0ZXIyIGluIG9iaiAmJiB0eXBlb2Ygb2JqW3NldHRlcjJdID09PSAiZnVuY3Rpb24iKSB7CiAgICAgIDsKICAgICAgb2JqW3NldHRlcjJdKHZhbHVlKTsKICAgIH0gZWxzZSB7CiAgICAgIE9iamVjdC5hc3NpZ24ob2JqLCB7IFtwcm9wXTogdmFsdWUgfSk7CiAgICB9CiAgfQp9CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvZ29iamVjdC50cwp2YXIgcHJpdiA9IFN5bWJvbCgiZ29iamVjdCBwcml2YXRlIik7CnZhciB7IGRlZmluZVByb3BlcnR5LCBmcm9tRW50cmllcywgZW50cmllcyB9ID0gT2JqZWN0Owp2YXIgeyBPYmplY3Q6IEdPYmosIHJlZ2lzdGVyQ2xhc3MgfSA9IEdPYmplY3Q7CnZhciBTaWduYWxGbGFncyA9IEdPYmplY3QuU2lnbmFsRmxhZ3M7CnZhciBBY2N1bXVsYXRvclR5cGUgPSBHT2JqZWN0LkFjY3VtdWxhdG9yVHlwZTsKdmFyIFBhcmFtU3BlYyA9IEdPYmplY3QuUGFyYW1TcGVjOwp2YXIgUGFyYW1GbGFncyA9IEdPYmplY3QuUGFyYW1GbGFnczsKZnVuY3Rpb24gYXNzZXJ0RmllbGQoY3R4KSB7CiAgaWYgKGN0eC5wcml2YXRlKSB0aHJvdyBFcnJvcigicHJpdmF0ZSBmaWVsZHMgYXJlIG5vdCBzdXBwb3J0ZWQiKTsKICBpZiAoY3R4LnN0YXRpYykgdGhyb3cgRXJyb3IoInN0YXRpYyBmaWVsZHMgYXJlIG5vdCBzdXBwb3J0ZWQiKTsKICBpZiAodHlwZW9mIGN0eC5uYW1lICE9PSAic3RyaW5nIikgewogICAgdGhyb3cgRXJyb3IoIm9ubHkgc3RyaW5ncyBjYW4gYmUgZ29iamVjdCBwcm9wZXJ0eSBrZXlzIik7CiAgfQogIHJldHVybiBjdHgubmFtZTsKfQpmdW5jdGlvbiBnZXR0ZXIodHlwZURlY2xhcmF0aW9uKSB7CiAgcmV0dXJuIGZ1bmN0aW9uKGdldCwgY3R4KSB7CiAgICBjb25zdCBmaWVsZE5hbWUgPSBhc3NlcnRGaWVsZChjdHgpOwogICAgY29uc3QgbWV0YSA9IGN0eC5tZXRhZGF0YTsKICAgIGNvbnN0IHByb3BzID0gbWV0YS5wcm9wZXJ0aWVzID8/PSB7fTsKICAgIGlmIChmaWVsZE5hbWUgaW4gcHJvcHMpIHsKICAgICAgY29uc3QgeyBmbGFncywgdHlwZSB9ID0gcHJvcHNbZmllbGROYW1lXTsKICAgICAgcHJvcHNbZmllbGROYW1lXSA9IHsgZmxhZ3M6IGZsYWdzIHwgUGFyYW1GbGFncy5SRUFEQUJMRSwgdHlwZSB9OwogICAgfSBlbHNlIHsKICAgICAgcHJvcHNbZmllbGROYW1lXSA9IHsgZmxhZ3M6IFBhcmFtRmxhZ3MuUkVBREFCTEUsIHR5cGU6IHR5cGVEZWNsYXJhdGlvbiB9OwogICAgfQogICAgcmV0dXJuIGdldDsKICB9Owp9CmZ1bmN0aW9uIHNldHRlcih0eXBlRGVjbGFyYXRpb24pIHsKICByZXR1cm4gZnVuY3Rpb24oc2V0MiwgY3R4KSB7CiAgICBjb25zdCBmaWVsZE5hbWUgPSBhc3NlcnRGaWVsZChjdHgpOwogICAgY29uc3QgbWV0YSA9IGN0eC5tZXRhZGF0YTsKICAgIGNvbnN0IHByb3BzID0gbWV0YS5wcm9wZXJ0aWVzID8/PSB7fTsKICAgIGlmIChmaWVsZE5hbWUgaW4gcHJvcHMpIHsKICAgICAgY29uc3QgeyBmbGFncywgdHlwZSB9ID0gcHJvcHNbZmllbGROYW1lXTsKICAgICAgcHJvcHNbZmllbGROYW1lXSA9IHsgZmxhZ3M6IGZsYWdzIHwgUGFyYW1GbGFncy5XUklUQUJMRSwgdHlwZSB9OwogICAgfSBlbHNlIHsKICAgICAgcHJvcHNbZmllbGROYW1lXSA9IHsgZmxhZ3M6IFBhcmFtRmxhZ3MuV1JJVEFCTEUsIHR5cGU6IHR5cGVEZWNsYXJhdGlvbiB9OwogICAgfQogICAgcmV0dXJuIHNldDI7CiAgfTsKfQpmdW5jdGlvbiBzaWduYWwoLi4uYXJncykgewogIHJldHVybiBmdW5jdGlvbihtZXRob2QsIGN0eCkgewogICAgaWYgKGN0eC5wcml2YXRlKSB0aHJvdyBFcnJvcigicHJpdmF0ZSBmaWVsZHMgYXJlIG5vdCBzdXBwb3J0ZWQiKTsKICAgIGlmIChjdHguc3RhdGljKSB0aHJvdyBFcnJvcigic3RhdGljIGZpZWxkcyBhcmUgbm90IHN1cHBvcnRlZCIpOwogICAgaWYgKHR5cGVvZiBjdHgubmFtZSAhPT0gInN0cmluZyIpIHsKICAgICAgdGhyb3cgRXJyb3IoIm9ubHkgc3RyaW5ncyBjYW4gYmUgZ29iamVjdCBzaWduYWxzIik7CiAgICB9CiAgICBjb25zdCBzaWduYWxOYW1lMiA9IGtlYmFiaWZ5KGN0eC5uYW1lKTsKICAgIGNvbnN0IG1ldGEgPSBjdHgubWV0YWRhdGE7CiAgICBjb25zdCBzaWduYWxzID0gbWV0YS5zaWduYWxzID8/PSB7fTsKICAgIGlmIChBcnJheS5pc0FycmF5KGFyZ3NbMF0pKSB7CiAgICAgIGNvbnN0IFtwYXJhbXMsIHJldHVyblR5cGUsIG9wdGlvbnNdID0gYXJnczsKICAgICAgc2lnbmFsc1tzaWduYWxOYW1lMl0gPSB7CiAgICAgICAgbWV0aG9kLAogICAgICAgIGRlZmF1bHQ6IG9wdGlvbnM/LmRlZmF1bHQgPz8gdHJ1ZSwKICAgICAgICBwYXJhbV90eXBlczogcGFyYW1zLm1hcCgoaSkgPT4gIiRndHlwZSIgaW4gaSA/IGkuJGd0eXBlIDogaSksCiAgICAgICAgLi4ucmV0dXJuVHlwZSAmJiB7CiAgICAgICAgICByZXR1cm5fdHlwZTogIiRndHlwZSIgaW4gcmV0dXJuVHlwZSA/IHJldHVyblR5cGUuJGd0eXBlIDogcmV0dXJuVHlwZQogICAgICAgIH0sCiAgICAgICAgLi4ub3B0aW9ucz8uZmxhZ3MgJiYgewogICAgICAgICAgZmxhZ3M6IG9wdGlvbnMuZmxhZ3MKICAgICAgICB9LAogICAgICAgIC4uLnR5cGVvZiBvcHRpb25zPy5hY2N1bXVsYXRvciA9PT0gIm51bWJlciIgJiYgewogICAgICAgICAgYWNjdW11bGF0b3I6IG9wdGlvbnMuYWNjdW11bGF0b3IKICAgICAgICB9CiAgICAgIH07CiAgICB9IGVsc2UgewogICAgICBjb25zdCBwYXJhbXMgPSBhcmdzOwogICAgICBzaWduYWxzW3NpZ25hbE5hbWUyXSA9IHsKICAgICAgICBtZXRob2QsCiAgICAgICAgZGVmYXVsdDogdHJ1ZSwKICAgICAgICBwYXJhbV90eXBlczogcGFyYW1zLm1hcCgoaSkgPT4gIiRndHlwZSIgaW4gaSA/IGkuJGd0eXBlIDogaSkKICAgICAgfTsKICAgIH0KICAgIHJldHVybiBmdW5jdGlvbiguLi5wYXJhbXMpIHsKICAgICAgcmV0dXJuIHRoaXMuZW1pdChzaWduYWxOYW1lMiwgLi4ucGFyYW1zKTsKICAgIH07CiAgfTsKfQp2YXIgTUFYSU5UID0gMiAqKiAzMSAtIDE7CnZhciBNSU5JTlQgPSAtKDIgKiogMzEpOwp2YXIgTUFYVUlOVCA9IDIgKiogMzIgLSAxOwp2YXIgTUFYRkxPQVQgPSAzNDAyODIzNWUzMTsKdmFyIE1JTkZMT0FUID0gLTM0MDI4MjM1ZTMxOwp2YXIgTUlOSU5UNjQgPSBOdW1iZXIuTUlOX1NBRkVfSU5URUdFUjsKdmFyIE1BWElOVDY0ID0gTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVI7CmZ1bmN0aW9uIHBzcGVjRnJvbUdUeXBlKHR5cGUsIG5hbWUsIGZsYWdzKSB7CiAgc3dpdGNoICh0eXBlKSB7CiAgICBjYXNlIEdPYmplY3QuVFlQRV9CT09MRUFOOgogICAgICByZXR1cm4gUGFyYW1TcGVjLmJvb2xlYW4obmFtZSwgIiIsICIiLCBmbGFncywgZmFsc2UpOwogICAgY2FzZSBHT2JqZWN0LlRZUEVfU1RSSU5HOgogICAgICByZXR1cm4gUGFyYW1TcGVjLnN0cmluZyhuYW1lLCAiIiwgIiIsIGZsYWdzLCAiIik7CiAgICBjYXNlIEdPYmplY3QuVFlQRV9JTlQ6CiAgICAgIHJldHVybiBQYXJhbVNwZWMuaW50KG5hbWUsICIiLCAiIiwgZmxhZ3MsIE1JTklOVCwgTUFYSU5ULCAwKTsKICAgIGNhc2UgR09iamVjdC5UWVBFX1VJTlQ6CiAgICAgIHJldHVybiBQYXJhbVNwZWMudWludChuYW1lLCAiIiwgIiIsIGZsYWdzLCAwLCBNQVhVSU5ULCAwKTsKICAgIGNhc2UgR09iamVjdC5UWVBFX0lOVDY0OgogICAgICByZXR1cm4gUGFyYW1TcGVjLmludDY0KG5hbWUsICIiLCAiIiwgZmxhZ3MsIE1JTklOVDY0LCBNQVhJTlQ2NCwgMCk7CiAgICBjYXNlIEdPYmplY3QuVFlQRV9VSU5UNjQ6CiAgICAgIHJldHVybiBQYXJhbVNwZWMudWludDY0KG5hbWUsICIiLCAiIiwgZmxhZ3MsIDAsIE51bWJlci5NQVhfU0FGRV9JTlRFR0VSLCAwKTsKICAgIGNhc2UgR09iamVjdC5UWVBFX0ZMT0FUOgogICAgICByZXR1cm4gUGFyYW1TcGVjLmZsb2F0KG5hbWUsICIiLCAiIiwgZmxhZ3MsIE1JTkZMT0FULCBNQVhGTE9BVCwgMCk7CiAgICBjYXNlIEdPYmplY3QuVFlQRV9ET1VCTEU6CiAgICAgIHJldHVybiBQYXJhbVNwZWMuZG91YmxlKG5hbWUsICIiLCAiIiwgZmxhZ3MsIE51bWJlci5NSU5fVkFMVUUsIE51bWJlci5NSU5fVkFMVUUsIDApOwogICAgY2FzZSBHT2JqZWN0LlRZUEVfSlNPQkpFQ1Q6CiAgICAgIHJldHVybiBQYXJhbVNwZWMuanNvYmplY3QobmFtZSwgIiIsICIiLCBmbGFncyk7CiAgICBjYXNlIEdPYmplY3QuVFlQRV9WQVJJQU5UOgogICAgICByZXR1cm4gUGFyYW1TcGVjLm9iamVjdChuYW1lLCAiIiwgIiIsIGZsYWdzLCBHTGliLlZhcmlhbnQpOwogICAgY2FzZSBHT2JqZWN0LlRZUEVfRU5VTToKICAgIGNhc2UgR09iamVjdC5UWVBFX0lOVEVSRkFDRToKICAgIGNhc2UgR09iamVjdC5UWVBFX0JPWEVEOgogICAgY2FzZSBHT2JqZWN0LlRZUEVfUE9JTlRFUjoKICAgIGNhc2UgR09iamVjdC5UWVBFX1BBUkFNOgogICAgY2FzZSBHT2JqZWN0LnR5cGVfZnJvbV9uYW1lKCJHVHlwZSIpOgogICAgICB0aHJvdyBFcnJvcihgY2Fubm90IGd1ZXNzIFBhcmFtU3BlYyBmcm9tIEdUeXBlICIke3R5cGV9ImApOwogICAgY2FzZSBHT2JqZWN0LlRZUEVfT0JKRUNUOgogICAgZGVmYXVsdDoKICAgICAgcmV0dXJuIFBhcmFtU3BlYy5vYmplY3QobmFtZSwgIiIsICIiLCBmbGFncywgdHlwZSk7CiAgfQp9CmZ1bmN0aW9uIHBzcGVjKG5hbWUsIGZsYWdzLCBkZWNsYXJhdGlvbikgewogIGlmIChkZWNsYXJhdGlvbiBpbnN0YW5jZW9mIFBhcmFtU3BlYykgcmV0dXJuIGRlY2xhcmF0aW9uOwogIGlmIChkZWNsYXJhdGlvbiA9PT0gT2JqZWN0IHx8IGRlY2xhcmF0aW9uID09PSBGdW5jdGlvbiB8fCBkZWNsYXJhdGlvbiA9PT0gQXJyYXkpIHsKICAgIHJldHVybiBQYXJhbVNwZWMuanNvYmplY3QobmFtZSwgIiIsICIiLCBmbGFncyk7CiAgfQogIGlmIChkZWNsYXJhdGlvbiA9PT0gU3RyaW5nKSB7CiAgICByZXR1cm4gUGFyYW1TcGVjLnN0cmluZyhuYW1lLCAiIiwgIiIsIGZsYWdzLCAiIik7CiAgfQogIGlmIChkZWNsYXJhdGlvbiA9PT0gTnVtYmVyKSB7CiAgICByZXR1cm4gUGFyYW1TcGVjLmRvdWJsZShuYW1lLCAiIiwgIiIsIGZsYWdzLCAtTnVtYmVyLk1BWF9WQUxVRSwgTnVtYmVyLk1BWF9WQUxVRSwgMCk7CiAgfQogIGlmIChkZWNsYXJhdGlvbiA9PT0gQm9vbGVhbikgewogICAgcmV0dXJuIFBhcmFtU3BlYy5ib29sZWFuKG5hbWUsICIiLCAiIiwgZmxhZ3MsIGZhbHNlKTsKICB9CiAgaWYgKCIkZ3R5cGUiIGluIGRlY2xhcmF0aW9uKSB7CiAgICByZXR1cm4gcHNwZWNGcm9tR1R5cGUoZGVjbGFyYXRpb24uJGd0eXBlLCBuYW1lLCBmbGFncyk7CiAgfQogIGlmICh0eXBlb2YgZGVjbGFyYXRpb24gPT09ICJmdW5jdGlvbiIpIHsKICAgIHJldHVybiBkZWNsYXJhdGlvbihuYW1lLCBmbGFncyk7CiAgfQogIHRocm93IEVycm9yKCJpbnZhbGlkIFByb3BlcnR5VHlwZURlY2xhcmF0aW9uIik7Cn0KZnVuY3Rpb24gcmVnaXN0ZXIob3B0aW9ucyA9IHt9KSB7CiAgcmV0dXJuIGZ1bmN0aW9uKGNscywgY3R4KSB7CiAgICBjb25zdCB0ID0gb3B0aW9ucy5UZW1wbGF0ZTsKICAgIGlmICh0eXBlb2YgdCA9PT0gInN0cmluZyIgJiYgIXQuc3RhcnRzV2l0aCgicmVzb3VyY2U6Ly8iKSAmJiAhdC5zdGFydHNXaXRoKCJmaWxlOi8vIikpIHsKICAgICAgb3B0aW9ucy5UZW1wbGF0ZSA9IG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZSh0KTsKICAgIH0KICAgIGNvbnN0IG1ldGEgPSBjdHgubWV0YWRhdGE7CiAgICBjb25zdCBwcm9wcyA9IGZyb21FbnRyaWVzKAogICAgICBlbnRyaWVzKG1ldGEucHJvcGVydGllcyA/PyB7fSkubWFwKChbZmllbGROYW1lLCB7IGZsYWdzLCB0eXBlIH1dKSA9PiB7CiAgICAgICAgY29uc3Qga2V5ID0ga2ViYWJpZnkoZmllbGROYW1lKTsKICAgICAgICBjb25zdCBzcGVjID0gcHNwZWMoa2V5LCBmbGFncywgdHlwZSk7CiAgICAgICAgcmV0dXJuIFtrZXksIHNwZWNdOwogICAgICB9KQogICAgKTsKICAgIGNvbnN0IHNpZ25hbHMgPSBmcm9tRW50cmllcygKICAgICAgZW50cmllcyhtZXRhLnNpZ25hbHMgPz8ge30pLm1hcCgoW3NpZ25hbE5hbWUyLCB7IGRlZmF1bHQ6IGRlZiwgbWV0aG9kLCAuLi5zaWduYWwyIH1dKSA9PiB7CiAgICAgICAgaWYgKGRlZikgewogICAgICAgICAgZGVmaW5lUHJvcGVydHkoY2xzLnByb3RvdHlwZSwgYG9uXyR7c2lnbmFsTmFtZTIucmVwbGFjZUFsbCgiLSIsICJfIil9YCwgewogICAgICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSwKICAgICAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSwKICAgICAgICAgICAgdmFsdWU6IG1ldGhvZAogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICAgIHJldHVybiBbc2lnbmFsTmFtZTIsIHNpZ25hbDJdOwogICAgICB9KQogICAgKTsKICAgIGRlbGV0ZSBtZXRhLnByb3BlcnRpZXM7CiAgICBkZWxldGUgbWV0YS5zaWduYWxzOwogICAgcmVnaXN0ZXJDbGFzcyh7IC4uLm9wdGlvbnMsIFByb3BlcnRpZXM6IHByb3BzLCBTaWduYWxzOiBzaWduYWxzIH0sIGNscyk7CiAgfTsKfQpGdW5jdGlvbi4kZ3R5cGUgPSBPYmplY3QuJGd0eXBlOwpBcnJheS4kZ3R5cGUgPSBPYmplY3QuJGd0eXBlOwpEYXRlLiRndHlwZSA9IE9iamVjdC4kZ3R5cGU7Ck1hcC4kZ3R5cGUgPSBPYmplY3QuJGd0eXBlOwpTZXQuJGd0eXBlID0gT2JqZWN0LiRndHlwZTsKCi8vIC4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2d0azQvYXBwLnRzCmltcG9ydCBHTGliNCBmcm9tICJnaTovL0dMaWI/dmVyc2lvbj0yLjAiOwppbXBvcnQgR3RrIGZyb20gImdpOi8vR3RrP3ZlcnNpb249NC4wIjsKaW1wb3J0IEdkayBmcm9tICJnaTovL0dkaz92ZXJzaW9uPTQuMCI7CmltcG9ydCBHaW8zIGZyb20gImdpOi8vR2lvP3ZlcnNpb249Mi4wIjsKCi8vIC4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9kYnVzLnRzCmltcG9ydCBHaW8gZnJvbSAiZ2k6Ly9HaW8iOwppbXBvcnQgR0xpYjIgZnJvbSAiZ2k6Ly9HTGliIjsKaW1wb3J0IEdPYmplY3QyIGZyb20gImdpOi8vR09iamVjdCI7CnZhciBERUZBVUxUX1RJTUVPVVQgPSAxZTQ7CnZhciBWYXJpYW50ID0gR0xpYjIuVmFyaWFudDsKdmFyIGluZm8gPSBTeW1ib2woImRidXMgaW50ZXJmYWNlIGluZm8iKTsKdmFyIGludGVybmFscyA9IFN5bWJvbCgiZGJ1cyBpbnRlcmZhY2UgaW50ZXJuYWxzIik7CnZhciByZW1vdGVNZXRob2QgPSBTeW1ib2woInByb3h5IHJlbW90ZU1ldGhvZCIpOwp2YXIgcmVtb3RlTWV0aG9kQXN5bmMgPSBTeW1ib2woInByb3h5IHJlbW90ZU1ldGhvZEFzeW5jIik7CnZhciByZW1vdGVQcm9wZXJ0eVNldCA9IFN5bWJvbCgicHJveHkgcmVtb3RlUHJvcGVydHlTZXQiKTsKdmFyIF9hOwp2YXIgU2VydmljZSA9IGNsYXNzIGV4dGVuZHMgR09iamVjdDIuT2JqZWN0IHsKICBjb25zdHJ1Y3RvcigpIHsKICAgIHN1cGVyKCk7CiAgICB0aGlzW19hXSA9IHsKICAgICAgcHJpdjoge30sCiAgICAgIG9uU3RvcDogLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKQogICAgfTsKICAgIGNvbnN0IHNlcnZpY2UgPSB0aGlzLmNvbnN0cnVjdG9yOwogICAgaWYgKCFzZXJ2aWNlW2luZm9dKSB0aHJvdyBFcnJvcigibWlzc2luZyBpbnRlcmZhY2UgaW5mbyIpOwogICAgdGhpcy4jaW5mbyA9IHNlcnZpY2VbaW5mb107CiAgfQogIHN0YXRpYyB7CiAgICBHT2JqZWN0Mi5yZWdpc3RlckNsYXNzKHRoaXMpOwogIH0KICAjaW5mbzsKICBub3RpZnkocHJvcGVydHlOYW1lKSB7CiAgICBjb25zdCBwcm9wID0gdGhpcy4jaW5mby5sb29rdXBfcHJvcGVydHkocHJvcGVydHlOYW1lKTsKICAgIGlmIChwcm9wICYmIHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0KSB7CiAgICAgIHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0LmVtaXRfcHJvcGVydHlfY2hhbmdlZCgKICAgICAgICBwcm9wZXJ0eU5hbWUsCiAgICAgICAgbmV3IEdMaWIyLlZhcmlhbnQocHJvcC5zaWduYXR1cmUsIHRoaXNbcHJvcGVydHlOYW1lXSkKICAgICAgKTsKICAgIH0KICAgIHN1cGVyLm5vdGlmeShwcm9wID8ga2ViYWJpZnkocHJvcGVydHlOYW1lKSA6IHByb3BlcnR5TmFtZSk7CiAgfQogIGVtaXQobmFtZSwgLi4ucGFyYW1zKSB7CiAgICBjb25zdCBzaWduYWwyID0gdGhpcy4jaW5mby5sb29rdXBfc2lnbmFsKG5hbWUpOwogICAgaWYgKHNpZ25hbDIgJiYgdGhpc1tpbnRlcm5hbHNdLmRidXNPYmplY3QpIHsKICAgICAgY29uc3Qgc2lnbmF0dXJlID0gYCgke3NpZ25hbDIuYXJncy5tYXAoKGEpID0+IGEuc2lnbmF0dXJlKS5qb2luKCIiKX0pYDsKICAgICAgdGhpc1tpbnRlcm5hbHNdLmRidXNPYmplY3QuZW1pdF9zaWduYWwobmFtZSwgbmV3IEdMaWIyLlZhcmlhbnQoc2lnbmF0dXJlLCBwYXJhbXMpKTsKICAgIH0KICAgIHJldHVybiBzdXBlci5lbWl0KHNpZ25hbDIgPyBrZWJhYmlmeShuYW1lKSA6IG5hbWUsIC4uLnBhcmFtcyk7CiAgfQogIC8vIHNlcnZlcgogICNoYW5kbGVQcm9wZXJ0eUdldChfLCBwcm9wZXJ0eU5hbWUpIHsKICAgIGNvbnN0IHByb3AgPSB0aGlzLiNpbmZvLmxvb2t1cF9wcm9wZXJ0eShwcm9wZXJ0eU5hbWUpOwogICAgaWYgKCFwcm9wKSB7CiAgICAgIHRocm93IEVycm9yKGAke3RoaXMuY29uc3RydWN0b3IubmFtZX0gaGFzIG5vIGV4cG9ydGVkIHByb3BlcnR5OiAiJHtwcm9wZXJ0eU5hbWV9ImApOwogICAgfQogICAgY29uc3QgdmFsdWUgPSB0aGlzW3Byb3BlcnR5TmFtZV07CiAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAidW5kZWZpbmVkIikgewogICAgICByZXR1cm4gbmV3IEdMaWIyLlZhcmlhbnQocHJvcC5zaWduYXR1cmUsIHZhbHVlKTsKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiBudWxsOwogICAgfQogIH0KICAvLyBzZXJ2ZXIKICAjaGFuZGxlUHJvcGVydHlTZXQoXywgcHJvcGVydHlOYW1lLCB2YWx1ZSkgewogICAgY29uc3QgbmV3VmFsdWUgPSB2YWx1ZS5kZWVwVW5wYWNrKCk7CiAgICBjb25zdCBwcm9wID0gdGhpcy4jaW5mby5sb29rdXBfcHJvcGVydHkocHJvcGVydHlOYW1lKTsKICAgIGlmICghcHJvcCkgewogICAgICB0aHJvdyBFcnJvcihgJHt0aGlzLmNvbnN0cnVjdG9yLm5hbWV9IGhhcyBubyBwcm9wZXJ0eTogIiR7cHJvcGVydHlOYW1lfSJgKTsKICAgIH0KICAgIGlmICh0aGlzW3Byb3BlcnR5TmFtZV0gIT09IG5ld1ZhbHVlKSB7CiAgICAgIHRoaXNbcHJvcGVydHlOYW1lXSA9IHZhbHVlLmRlZXBVbnBhY2soKTsKICAgIH0KICB9CiAgLy8gc2VydmVyCiAgI3JldHVybkVycm9yKGVycm9yLCBpbnZvY2F0aW9uKSB7CiAgICBjb25zb2xlLmVycm9yKGVycm9yKTsKICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEdMaWIyLkVycm9yKSB7CiAgICAgIHJldHVybiBpbnZvY2F0aW9uLnJldHVybl9nZXJyb3IoZXJyb3IpOwogICAgfQogICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHsKICAgICAgcmV0dXJuIGludm9jYXRpb24ucmV0dXJuX2RidXNfZXJyb3IoCiAgICAgICAgZXJyb3IubmFtZS5pbmNsdWRlcygiLiIpID8gZXJyb3IubmFtZSA6IGBnanMuSlNFcnJvci4ke2Vycm9yLm5hbWV9YCwKICAgICAgICBlcnJvci5tZXNzYWdlCiAgICAgICk7CiAgICB9CiAgICBpbnZvY2F0aW9uLnJldHVybl9kYnVzX2Vycm9yKCJnanMuREJ1c1NlcnZpY2UuVW5rbm93bkVycm9yIiwgYCR7ZXJyb3J9YCk7CiAgfQogIC8vIHNlcnZlcgogICNyZXR1cm5WYWx1ZSh2YWx1ZSwgbWV0aG9kTmFtZSwgaW52b2NhdGlvbikgewogICAgaWYgKHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSB2b2lkIDApIHsKICAgICAgcmV0dXJuIGludm9jYXRpb24ucmV0dXJuX3ZhbHVlKG5ldyBHTGliMi5WYXJpYW50KCIoKSIsIFtdKSk7CiAgICB9CiAgICBjb25zdCBhcmdzID0gdGhpcy4jaW5mby5sb29rdXBfbWV0aG9kKG1ldGhvZE5hbWUpPy5vdXRfYXJncyA/PyBbXTsKICAgIGNvbnN0IHNpZ25hdHVyZSA9IGAoJHthcmdzLm1hcCgoYXJnKSA9PiBhcmcuc2lnbmF0dXJlKS5qb2luKCIiKX0pYDsKICAgIGlmICghQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHRocm93IEVycm9yKCJ2YWx1ZSBoYXMgdG8gYmUgYSB0dXBsZSIpOwogICAgaW52b2NhdGlvbi5yZXR1cm5fdmFsdWUobmV3IEdMaWIyLlZhcmlhbnQoc2lnbmF0dXJlLCB2YWx1ZSkpOwogIH0KICAvLyBzZXJ2ZXIKICAjaGFuZGxlTWV0aG9kQ2FsbChfLCBtZXRob2ROYW1lLCBwYXJhbWV0ZXJzLCBpbnZvY2F0aW9uKSB7CiAgICB0cnkgewogICAgICBjb25zdCB2YWx1ZSA9IHRoaXNbbWV0aG9kTmFtZV0oCiAgICAgICAgLi4ucGFyYW1ldGVycy5kZWVwVW5wYWNrKCkKICAgICAgKTsKICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgR0xpYjIuVmFyaWFudCkgewogICAgICAgIGludm9jYXRpb24ucmV0dXJuX3ZhbHVlKHZhbHVlKTsKICAgICAgfSBlbHNlIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFByb21pc2UpIHsKICAgICAgICB2YWx1ZS50aGVuKCh2YWx1ZTIpID0+IHRoaXMuI3JldHVyblZhbHVlKHZhbHVlMiwgbWV0aG9kTmFtZSwgaW52b2NhdGlvbikpLmNhdGNoKChlcnJvcikgPT4gdGhpcy4jcmV0dXJuRXJyb3IoZXJyb3IsIGludm9jYXRpb24pKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiNyZXR1cm5WYWx1ZSh2YWx1ZSwgbWV0aG9kTmFtZSwgaW52b2NhdGlvbik7CiAgICAgIH0KICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgIHRoaXMuI3JldHVybkVycm9yKGVycm9yLCBpbnZvY2F0aW9uKTsKICAgIH0KICB9CiAgLy8gc2VydmVyCiAgYXN5bmMgc2VydmUoewogICAgYnVzVHlwZSA9IEdpby5CdXNUeXBlLlNFU1NJT04sCiAgICBuYW1lID0gdGhpcy4jaW5mby5uYW1lLAogICAgb2JqZWN0UGF0aCA9ICIvIiArIHRoaXMuI2luZm8ubmFtZS5zcGxpdCgiLiIpLmpvaW4oIi8iKSwKICAgIGZsYWdzID0gR2lvLkJ1c05hbWVPd25lckZsYWdzLk5PTkUsCiAgICB0aW1lb3V0OiB0aW1lb3V0MiA9IERFRkFVTFRfVElNRU9VVAogIH0gPSB7fSkgewogICAgY29uc3QgaW1wbCA9IG5ldyBHaW8uREJ1c0V4cG9ydGVkT2JqZWN0KAogICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIG1pc3NpbmcgY29uc3RydWN0b3IgdHlwZQogICAgICB7IGdfaW50ZXJmYWNlX2luZm86IHRoaXMuI2luZm8gfQogICAgKTsKICAgIGltcGwuY29ubmVjdCgiaGFuZGxlLW1ldGhvZC1jYWxsIiwgdGhpcy4jaGFuZGxlTWV0aG9kQ2FsbC5iaW5kKHRoaXMpKTsKICAgIGltcGwuY29ubmVjdCgiaGFuZGxlLXByb3BlcnR5LWdldCIsIHRoaXMuI2hhbmRsZVByb3BlcnR5R2V0LmJpbmQodGhpcykpOwogICAgaW1wbC5jb25uZWN0KCJoYW5kbGUtcHJvcGVydHktc2V0IiwgdGhpcy4jaGFuZGxlUHJvcGVydHlTZXQuYmluZCh0aGlzKSk7CiAgICB0aGlzLiNpbmZvLmNhY2hlX2J1aWxkKCk7CiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgICBsZXQgc291cmNlID0gdGltZW91dDIgPiAwID8gc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgcmVqZWN0KEVycm9yKGBzZXJ2ZSB0aW1lZCBvdXRgKSk7CiAgICAgICAgc291cmNlID0gbnVsbDsKICAgICAgfSwgdGltZW91dDIpIDogbnVsbDsKICAgICAgY29uc3QgY2xlYXIgPSAoKSA9PiB7CiAgICAgICAgaWYgKHNvdXJjZSkgewogICAgICAgICAgY2xlYXJUaW1lb3V0KHNvdXJjZSk7CiAgICAgICAgICBzb3VyY2UgPSBudWxsOwogICAgICAgIH0KICAgICAgfTsKICAgICAgY29uc3QgYnVzSWQgPSBHaW8uYnVzX293bl9uYW1lKAogICAgICAgIGJ1c1R5cGUsCiAgICAgICAgbmFtZSwKICAgICAgICBmbGFncywKICAgICAgICAoY29ubikgPT4gewogICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgaW1wbC5leHBvcnQoY29ubiwgb2JqZWN0UGF0aCk7CiAgICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0ID0gaW1wbDsKICAgICAgICAgICAgdGhpc1tpbnRlcm5hbHNdLm9uU3RvcC5hZGQoKCkgPT4gewogICAgICAgICAgICAgIEdpby5idXNfdW5vd25fbmFtZShidXNJZCk7CiAgICAgICAgICAgICAgaW1wbC51bmV4cG9ydCgpOwogICAgICAgICAgICAgIHRoaXMuI2luZm8uY2FjaGVfcmVsZWFzZSgpOwogICAgICAgICAgICAgIGRlbGV0ZSB0aGlzW2ludGVybmFsc10uZGJ1c09iamVjdDsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHJlc29sdmUodGhpcyk7CiAgICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgICByZWplY3QoZXJyb3IpOwogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgY2xlYXIsCiAgICAgICAgY2xlYXIKICAgICAgKTsKICAgIH0pOwogIH0KICAvLyBwcm94eQogICNoYW5kbGVQcm9wZXJ0aWVzQ2hhbmdlZChfLCBjaGFuZ2VkLCBpbnZhbGlkYXRlZCkgewogICAgY29uc3Qgc2V0MiA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KFsuLi5PYmplY3Qua2V5cyhjaGFuZ2VkLmRlZXBVbnBhY2soKSksIC4uLmludmFsaWRhdGVkXSk7CiAgICBmb3IgKGNvbnN0IHByb3Agb2Ygc2V0Mi52YWx1ZXMoKSkgewogICAgICB0aGlzLm5vdGlmeShwcm9wKTsKICAgIH0KICB9CiAgLy8gcHJveHkKICAjaGFuZGxlU2lnbmFsKF8sIF9zZW5kZXIsIHNpZ25hbDIsIHBhcmFtZXRlcnMpIHsKICAgIHRoaXMuZW1pdChrZWJhYmlmeShzaWduYWwyKSwgLi4ucGFyYW1ldGVycy5kZWVwVW5wYWNrKCkpOwogIH0KICAvLyBwcm94eQogICNyZW1vdGVNZXRob2RQYXJhbXMobWV0aG9kTmFtZSwgYXJncykgewogICAgY29uc3QgeyBwcm94eSB9ID0gdGhpc1tpbnRlcm5hbHNdOwogICAgaWYgKCFwcm94eSkgdGhyb3cgRXJyb3IoImludmFsaWQgcmVtb3RlTWV0aG9kIGludm9jYXRpb246IG5vdCBhIHByb3h5Iik7CiAgICBjb25zdCBtZXRob2QgPSB0aGlzLiNpbmZvLmxvb2t1cF9tZXRob2QobWV0aG9kTmFtZSk7CiAgICBpZiAoIW1ldGhvZCkgdGhyb3cgRXJyb3IoIm1ldGhvZCBub3QgZm91bmQiKTsKICAgIGNvbnN0IHNpZ25hdHVyZSA9IGAoJHttZXRob2QuaW5fYXJncy5tYXAoKGEpID0+IGEuc2lnbmF0dXJlKS5qb2luKCIiKX0pYDsKICAgIHJldHVybiBbCiAgICAgIG1ldGhvZE5hbWUsCiAgICAgIG5ldyBHTGliMi5WYXJpYW50KHNpZ25hdHVyZSwgYXJncyksCiAgICAgIEdpby5EQnVzQ2FsbEZsYWdzLk5PTkUsCiAgICAgIERFRkFVTFRfVElNRU9VVCwKICAgICAgbnVsbAogICAgXTsKICB9CiAgLy8gcHJveHkKICBbKGluZm8sIF9hID0gaW50ZXJuYWxzLCByZW1vdGVNZXRob2QpXShtZXRob2ROYW1lLCBhcmdzKSB7CiAgICBjb25zdCBwYXJhbXMgPSB0aGlzLiNyZW1vdGVNZXRob2RQYXJhbXMobWV0aG9kTmFtZSwgYXJncyk7CiAgICByZXR1cm4gdGhpc1tpbnRlcm5hbHNdLnByb3h5LmNhbGxfc3luYyguLi5wYXJhbXMpOwogIH0KICAvLyBwcm94eQogIFtyZW1vdGVNZXRob2RBc3luY10obWV0aG9kTmFtZSwgYXJncykgewogICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCBwYXJhbXMgPSB0aGlzLiNyZW1vdGVNZXRob2RQYXJhbXMobWV0aG9kTmFtZSwgYXJncyk7CiAgICAgICAgdGhpc1tpbnRlcm5hbHNdLnByb3h5LmNhbGwoLi4ucGFyYW1zLCAoXywgcmVzKSA9PiB7CiAgICAgICAgICB0cnkgewogICAgICAgICAgICByZXNvbHZlKHRoaXNbaW50ZXJuYWxzXS5wcm94eS5jYWxsX2ZpbmlzaChyZXMpKTsKICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgfQogICAgfSk7CiAgfQogIC8vIHByb3h5CiAgW3JlbW90ZVByb3BlcnR5U2V0XShuYW1lLCB2YWx1ZSkgewogICAgY29uc3QgcHJveHkgPSB0aGlzW2ludGVybmFsc10ucHJveHk7CiAgICBjb25zdCBwcm9wID0gdGhpcy4jaW5mby5sb29rdXBfcHJvcGVydHkobmFtZSk7CiAgICBjb25zdCB2YXJpYW50ID0gbmV3IEdMaWIyLlZhcmlhbnQocHJvcC5zaWduYXR1cmUsIHZhbHVlKTsKICAgIHByb3h5LnNldF9jYWNoZWRfcHJvcGVydHkobmFtZSwgdmFyaWFudCk7CiAgICBwcm94eS5jYWxsKAogICAgICAib3JnLmZyZWVkZXNrdG9wLkRCdXMuUHJvcGVydGllcy5TZXQiLAogICAgICBuZXcgR0xpYjIuVmFyaWFudCgiKHNzdikiLCBbcHJveHkuZ0ludGVyZmFjZU5hbWUsIG5hbWUsIHZhcmlhbnRdKSwKICAgICAgR2lvLkRCdXNDYWxsRmxhZ3MuTk9ORSwKICAgICAgLTEsCiAgICAgIG51bGwsCiAgICAgIChfLCByZXMpID0+IHsKICAgICAgICB0cnkgewogICAgICAgICAgcHJveHkuY2FsbF9maW5pc2gocmVzKTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICBjb25zb2xlLmVycm9yKGUpOwogICAgICAgIH0KICAgICAgfQogICAgKTsKICB9CiAgLy8gcHJveHkKICBhc3luYyBwcm94eSh7CiAgICBidXMgPSBHaW8uREJ1cy5zZXNzaW9uLAogICAgbmFtZSA9IHRoaXMuI2luZm8ubmFtZSwKICAgIG9iamVjdFBhdGggPSAiLyIgKyB0aGlzLiNpbmZvLm5hbWUuc3BsaXQoIi4iKS5qb2luKCIvIiksCiAgICBmbGFncyA9IEdpby5EQnVzUHJveHlGbGFncy5OT05FLAogICAgdGltZW91dDogdGltZW91dDIgPSBERUZBVUxUX1RJTUVPVVQKICB9ID0ge30pIHsKICAgIGNvbnN0IHByb3h5ID0gbmV3IEdpby5EQnVzUHJveHkoewogICAgICBnQ29ubmVjdGlvbjogYnVzLAogICAgICBnSW50ZXJmYWNlTmFtZTogdGhpcy4jaW5mby5uYW1lLAogICAgICBnSW50ZXJmYWNlSW5mbzogdGhpcy4jaW5mbywKICAgICAgZ05hbWU6IG5hbWUsCiAgICAgIGdGbGFnczogZmxhZ3MsCiAgICAgIGdPYmplY3RQYXRoOiBvYmplY3RQYXRoCiAgICB9KTsKICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAgIGNvbnN0IGNhbmNhbGxhYmxlID0gbmV3IEdpby5DYW5jZWxsYWJsZSgpOwogICAgICBsZXQgc291cmNlID0gdGltZW91dDIgPiAwID8gc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgcmVqZWN0KEVycm9yKGBwcm94eSB0aW1lZCBvdXRgKSk7CiAgICAgICAgc291cmNlID0gbnVsbDsKICAgICAgICBjYW5jYWxsYWJsZS5jYW5jZWwoKTsKICAgICAgfSwgdGltZW91dDIpIDogbnVsbDsKICAgICAgcHJveHkuaW5pdF9hc3luYyhHTGliMi5QUklPUklUWV9ERUZBVUxULCBjYW5jYWxsYWJsZSwgKF8sIHJlcykgPT4gewogICAgICAgIHRyeSB7CiAgICAgICAgICBpZiAoc291cmNlKSB7CiAgICAgICAgICAgIGNsZWFyVGltZW91dChzb3VyY2UpOwogICAgICAgICAgICBzb3VyY2UgPSBudWxsOwogICAgICAgICAgfQogICAgICAgICAgcHJveHkuaW5pdF9maW5pc2gocmVzKTsKICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5wcm94eSA9IHByb3h5OwogICAgICAgICAgY29uc3QgaWRzID0gWwogICAgICAgICAgICBwcm94eS5jb25uZWN0KCJnLXNpZ25hbCIsIHRoaXMuI2hhbmRsZVNpZ25hbC5iaW5kKHRoaXMpKSwKICAgICAgICAgICAgcHJveHkuY29ubmVjdCgKICAgICAgICAgICAgICAiZy1wcm9wZXJ0aWVzLWNoYW5nZWQiLAogICAgICAgICAgICAgIHRoaXMuI2hhbmRsZVByb3BlcnRpZXNDaGFuZ2VkLmJpbmQodGhpcykKICAgICAgICAgICAgKQogICAgICAgICAgXTsKICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5vblN0b3AuYWRkKCgpID0+IHsKICAgICAgICAgICAgaWRzLmZvckVhY2goKGlkKSA9PiBwcm94eS5kaXNjb25uZWN0KGlkKSk7CiAgICAgICAgICAgIGRlbGV0ZSB0aGlzW2ludGVybmFsc10ucHJveHk7CiAgICAgICAgICB9KTsKICAgICAgICAgIHJlc29sdmUodGhpcyk7CiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0pOwogIH0KICBzdG9wKCkgewogICAgY29uc3QgeyBvblN0b3AgfSA9IHRoaXNbaW50ZXJuYWxzXTsKICAgIGZvciAoY29uc3QgY2Igb2Ygb25TdG9wLnZhbHVlcygpKSB7CiAgICAgIG9uU3RvcC5kZWxldGUoY2IpOwogICAgICBjYigpOwogICAgfQogIH0KfTsKZnVuY3Rpb24gaWZhY2UobmFtZSwgb3B0aW9ucykgewogIHJldHVybiBmdW5jdGlvbihjbHMsIGN0eCkgewogICAgY29uc3QgbWV0YSA9IGN0eC5tZXRhZGF0YTsKICAgIGlmICghbWV0YSkgdGhyb3cgRXJyb3IoYCR7Y2xzLm5hbWV9IGlzIG5vdCBhbiBpbnRlcmZhY2VgKTsKICAgIGNvbnN0IHsgZGJ1c01ldGhvZHMgPSB7fSwgZGJ1c1NpZ25hbHMgPSB7fSwgZGJ1c1Byb3BlcnRpZXMgPSB7fSB9ID0gbWV0YTsKICAgIGNvbnN0IGluZm9YbWwgPSB4bWwoewogICAgICBuYW1lOiAibm9kZSIsCiAgICAgIGNoaWxkcmVuOiBbCiAgICAgICAgewogICAgICAgICAgbmFtZTogImludGVyZmFjZSIsCiAgICAgICAgICBhdHRyaWJ1dGVzOiB7IG5hbWUgfSwKICAgICAgICAgIGNoaWxkcmVuOiBbCiAgICAgICAgICAgIC4uLk9iamVjdC5lbnRyaWVzKGRidXNNZXRob2RzKS5tYXAoKFtuYW1lMiwgYXJnc10pID0+ICh7CiAgICAgICAgICAgICAgbmFtZTogIm1ldGhvZCIsCiAgICAgICAgICAgICAgYXR0cmlidXRlczogeyBuYW1lOiBuYW1lMiB9LAogICAgICAgICAgICAgIGNoaWxkcmVuOiBhcmdzLm1hcCgoYXJnKSA9PiAoeyBuYW1lOiAiYXJnIiwgYXR0cmlidXRlczogYXJnIH0pKQogICAgICAgICAgICB9KSksCiAgICAgICAgICAgIC4uLk9iamVjdC5lbnRyaWVzKGRidXNTaWduYWxzKS5tYXAoKFtuYW1lMiwgYXJnc10pID0+ICh7CiAgICAgICAgICAgICAgbmFtZTogInNpZ25hbCIsCiAgICAgICAgICAgICAgYXR0cmlidXRlczogeyBuYW1lOiBuYW1lMiB9LAogICAgICAgICAgICAgIGNoaWxkcmVuOiBhcmdzLm1hcCgoYXJnKSA9PiAoeyBuYW1lOiAiYXJnIiwgYXR0cmlidXRlczogYXJnIH0pKQogICAgICAgICAgICB9KSksCiAgICAgICAgICAgIC4uLk9iamVjdC52YWx1ZXMoZGJ1c1Byb3BlcnRpZXMpLm1hcCgoeyBuYW1lOiBuYW1lMiwgdHlwZSwgcmVhZCwgd3JpdGUgfSkgPT4gKHsKICAgICAgICAgICAgICBuYW1lOiAicHJvcGVydHkiLAogICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHsKICAgICAgICAgICAgICAgIC4uLm5hbWUyICYmIHsgbmFtZTogbmFtZTIgfSwKICAgICAgICAgICAgICAgIHR5cGUsCiAgICAgICAgICAgICAgICBhY2Nlc3M6IChyZWFkID8gInJlYWQiIDogIiIpICsgKHdyaXRlID8gIndyaXRlIiA6ICIiKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkpCiAgICAgICAgICBdCiAgICAgICAgfQogICAgICBdCiAgICB9KTsKICAgIE9iamVjdC5hc3NpZ24oY2xzLCB7IFtpbmZvXTogR2lvLkRCdXNJbnRlcmZhY2VJbmZvLm5ld19mb3JfeG1sKGluZm9YbWwpIH0pOwogICAgcmVnaXN0ZXIob3B0aW9ucykoY2xzLCBjdHgpOwogIH07Cn0KZnVuY3Rpb24gaW5zdGFsbE1ldGhvZChhcmdzLCBtZXRob2QsIGN0eCkgewogIGNvbnN0IG5hbWUgPSBjdHgubmFtZTsKICBjb25zdCBtZXRhID0gY3R4Lm1ldGFkYXRhOwogIGNvbnN0IG1ldGhvZHMgPSBtZXRhLmRidXNNZXRob2RzID8/PSB7fTsKICBpZiAodHlwZW9mIG5hbWUgIT09ICJzdHJpbmciKSB7CiAgICB0aHJvdyBFcnJvcigib25seSBzdHJpbmcgbmFtZWQgbWV0aG9kcyBhcmUgYWxsb3dlZCIpOwogIH0KICBjb25zdCBbaW5BcmdzLCBvdXRBcmdzID0gW11dID0gQXJyYXkuaXNBcnJheShhcmdzWzBdKSA/IGFyZ3MgOiBbYXJnc107CiAgbWV0aG9kc1tuYW1lXSA9IFsKICAgIC4uLmluQXJncy5tYXAoKGFyZykgPT4gKHsKICAgICAgZGlyZWN0aW9uOiAiaW4iLAogICAgICAuLi50eXBlb2YgYXJnID09PSAic3RyaW5nIiA/IHsgdHlwZTogYXJnIH0gOiBhcmcKICAgIH0pKSwKICAgIC4uLm91dEFyZ3MubWFwKChhcmcpID0+ICh7CiAgICAgIGRpcmVjdGlvbjogIm91dCIsCiAgICAgIC4uLnR5cGVvZiBhcmcgPT09ICJzdHJpbmciID8geyB0eXBlOiBhcmcgfSA6IGFyZwogICAgfSkpCiAgXTsKICByZXR1cm4gbmFtZTsKfQpmdW5jdGlvbiBtZXRob2RBc3luYyguLi5hcmdzKSB7CiAgcmV0dXJuIGZ1bmN0aW9uKG1ldGhvZCwgY3R4KSB7CiAgICBjb25zdCBuYW1lID0gaW5zdGFsbE1ldGhvZChhcmdzLCBtZXRob2QsIGN0eCk7CiAgICByZXR1cm4gYXN5bmMgZnVuY3Rpb24oLi4uYXJnczIpIHsKICAgICAgaWYgKHRoaXNbaW50ZXJuYWxzXS5wcm94eSkgewogICAgICAgIGNvbnN0IHZhbHVlID0gYXdhaXQgdGhpc1tyZW1vdGVNZXRob2RBc3luY10obmFtZSwgYXJnczIpOwogICAgICAgIHJldHVybiB2YWx1ZS5kZWVwVW5wYWNrKCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIG1ldGhvZC5hcHBseSh0aGlzLCBhcmdzMik7CiAgICAgIH0KICAgIH07CiAgfTsKfQoKLy8gLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvYXBwL2RidXMudHMKdmFyIF9SZXF1ZXN0X2RlYywgX1F1aXRfZGVjLCBfVG9nZ2xlV2luZG93X2RlYywgX0luc3BlY3Rvcl9kZWMsIF9hMiwgX0FwcERCdXNfZGVjb3JhdG9ycywgX2luaXQ7Cl9BcHBEQnVzX2RlY29yYXRvcnMgPSBbaWZhY2UoImlvLkFzdGFsLkFwcGxpY2F0aW9uIildOwp2YXIgX0FwcERCdXMgPSBjbGFzcyBfQXBwREJ1cyBleHRlbmRzIChfYTIgPSBTZXJ2aWNlLCBfSW5zcGVjdG9yX2RlYyA9IFttZXRob2RBc3luYygpXSwgX1RvZ2dsZVdpbmRvd19kZWMgPSBbbWV0aG9kQXN5bmMoInMiKV0sIF9RdWl0X2RlYyA9IFttZXRob2RBc3luYygpXSwgX1JlcXVlc3RfZGVjID0gW21ldGhvZEFzeW5jKFsiYXMiXSwgWyJzIl0pXSwgX2EyKSB7CiAgY29uc3RydWN0b3IoaW1wbCkgewogICAgc3VwZXIoKTsKICAgIF9fcnVuSW5pdGlhbGl6ZXJzKF9pbml0LCA1LCB0aGlzKTsKICAgIHRoaXMuaW1wbCA9IHZvaWQgMDsKICAgIHRoaXMuaW1wbCA9IGltcGw7CiAgfQogIGFzeW5jIEluc3BlY3RvcigpIHsKICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5pbXBsLmluc2VjdG9yKCkpOwogIH0KICBhc3luYyBUb2dnbGVXaW5kb3cobmFtZSkgewogICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzLmltcGwudG9nZ2xlV2luZG93KG5hbWUpKTsKICB9CiAgYXN5bmMgUXVpdCgpIHsKICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5pbXBsLnF1aXQoKSk7CiAgfQogIGFzeW5jIFJlcXVlc3QoYXJndikgewogICAgcmV0dXJuIHRoaXMuaW1wbC5yZXF1ZXN0KGFyZ3YpLnRoZW4oKHJlcykgPT4gW3Jlc10pOwogIH0KICBzdGF0aWMgcHJveHkoaW5zdGFuY2VOYW1lKSB7CiAgICBjb25zdCBhcHAyID0gbmV3IF9BcHBEQnVzKHsKICAgICAgaW5zZWN0b3IoKSB7CiAgICAgIH0sCiAgICAgIHRvZ2dsZVdpbmRvdygpIHsKICAgICAgfSwKICAgICAgcXVpdCgpIHsKICAgICAgfSwKICAgICAgcmVxdWVzdDogKCkgPT4gUHJvbWlzZS5yZWplY3QoKQogICAgfSk7CiAgICByZXR1cm4gYXBwMi5wcm94eSh7CiAgICAgIG5hbWU6ICJpby5Bc3RhbC4iICsgaW5zdGFuY2VOYW1lCiAgICB9KTsKICB9Cn07Cl9pbml0ID0gX19kZWNvcmF0b3JTdGFydChfYTIpOwpfX2RlY29yYXRlRWxlbWVudChfaW5pdCwgMSwgIkluc3BlY3RvciIsIF9JbnNwZWN0b3JfZGVjLCBfQXBwREJ1cyk7Cl9fZGVjb3JhdGVFbGVtZW50KF9pbml0LCAxLCAiVG9nZ2xlV2luZG93IiwgX1RvZ2dsZVdpbmRvd19kZWMsIF9BcHBEQnVzKTsKX19kZWNvcmF0ZUVsZW1lbnQoX2luaXQsIDEsICJRdWl0IiwgX1F1aXRfZGVjLCBfQXBwREJ1cyk7Cl9fZGVjb3JhdGVFbGVtZW50KF9pbml0LCAxLCAiUmVxdWVzdCIsIF9SZXF1ZXN0X2RlYywgX0FwcERCdXMpOwpfQXBwREJ1cyA9IF9fZGVjb3JhdGVFbGVtZW50KF9pbml0LCAwLCAiQXBwREJ1cyIsIF9BcHBEQnVzX2RlY29yYXRvcnMsIF9BcHBEQnVzKTsKX19ydW5Jbml0aWFsaXplcnMoX2luaXQsIDEsIF9BcHBEQnVzKTsKdmFyIEFwcERCdXMgPSBfQXBwREJ1czsKCi8vIC4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2d0azQvYXBwLnRzCmltcG9ydCB7IHNldENvbnNvbGVMb2dEb21haW4gfSBmcm9tICJjb25zb2xlIjsKaW1wb3J0IHsgZXhpdCwgcHJvZ3JhbUFyZ3MgfSBmcm9tICJzeXN0ZW0iOwoKLy8gLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9qc3gudHMKaW1wb3J0IEdPYmplY3Q1IGZyb20gImdpOi8vR09iamVjdCI7CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L0ZyYWdtZW50LnRzCmltcG9ydCBHT2JqZWN0MyBmcm9tICJnaTovL0dPYmplY3QiOwp2YXIgX2EzLCBfYjsKdmFyIEZyYWdtZW50ID0gY2xhc3MgX0ZyYWdtZW50IGV4dGVuZHMgR09iamVjdDMuT2JqZWN0IHsKICBzdGF0aWMgewogICAgdGhpc1tfYl0gPSB7CiAgICAgIGFwcGVuZDogeyBwYXJhbV90eXBlczogW0dPYmplY3QzLlRZUEVfT0JKRUNUXSB9LAogICAgICByZW1vdmU6IHsgcGFyYW1fdHlwZXM6IFtHT2JqZWN0My5UWVBFX09CSkVDVF0gfQogICAgfTsKICB9CiAgc3RhdGljIHsKICAgIHRoaXNbX2EzXSA9IHsKICAgICAgY2hpbGRyZW46IEdPYmplY3QzLlBhcmFtU3BlYy5qc29iamVjdCgiY2hpbGRyZW4iLCAiIiwgIiIsIEdPYmplY3QzLlBhcmFtRmxhZ3MuUkVBREFCTEUpCiAgICB9OwogIH0KICBzdGF0aWMgewogICAgR09iamVjdDMucmVnaXN0ZXJDbGFzcyh0aGlzKTsKICB9CiAgKlsoX2IgPSBHT2JqZWN0My5zaWduYWxzLCBfYTMgPSBHT2JqZWN0My5wcm9wZXJ0aWVzLCBTeW1ib2wuaXRlcmF0b3IpXSgpIHsKICAgIHlpZWxkKiB0aGlzLl9jaGlsZHJlbjsKICB9CiAgYXBwZW5kKGNoaWxkKSB7CiAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBfRnJhZ21lbnQpIHsKICAgICAgdGhyb3cgRXJyb3IoYG5lc3RpbmcgRnJhZ21lbnRzIGFyZSBub3QgeWV0IHN1cHBvcnRlZGApOwogICAgfQogICAgdGhpcy5fY2hpbGRyZW4ucHVzaChjaGlsZCk7CiAgICB0aGlzLmVtaXQoImFwcGVuZCIsIGNoaWxkKTsKICAgIHRoaXMubm90aWZ5KCJjaGlsZHJlbiIpOwogIH0KICByZW1vdmUoY2hpbGQpIHsKICAgIGNvbnN0IGluZGV4ID0gdGhpcy5fY2hpbGRyZW4uZmluZEluZGV4KChpKSA9PiBpID09PSBjaGlsZCk7CiAgICB0aGlzLl9jaGlsZHJlbi5zcGxpY2UoaW5kZXgsIDEpOwogICAgdGhpcy5lbWl0KCJyZW1vdmUiLCBjaGlsZCk7CiAgICB0aGlzLm5vdGlmeSgiY2hpbGRyZW4iKTsKICB9CiAgY29uc3RydWN0b3IoeyBjaGlsZHJlbiA9IFtdIH0gPSB7fSkgewogICAgc3VwZXIoKTsKICAgIHRoaXMuX2NoaWxkcmVuID0gQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl07CiAgfQogIGNvbm5lY3Qoc2lnbmFsMiwgY2FsbGJhY2spIHsKICAgIHJldHVybiBzdXBlci5jb25uZWN0KHNpZ25hbDIsIGNhbGxiYWNrKTsKICB9Cn07CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L3N0YXRlLnRzCmltcG9ydCBHT2JqZWN0NCBmcm9tICJnaTovL0dPYmplY3QiOwppbXBvcnQgR2lvMiBmcm9tICJnaTovL0dpbyI7CmltcG9ydCBHTGliMyBmcm9tICJnaTovL0dMaWIiOwp2YXIgZW1wdHkgPSBTeW1ib2woImVtcHR5IGNvbXB1dGVkIHZhbHVlIik7CnZhciBBY2Nlc3NvciA9IGNsYXNzIF9BY2Nlc3NvciBleHRlbmRzIEZ1bmN0aW9uIHsKICBzdGF0aWMgewogICAgdGhpcy4kZ3R5cGUgPSBHT2JqZWN0NC5UWVBFX0pTT0JKRUNUOwogIH0KICAjZ2V0OwogICNzdWJzY3JpYmU7CiAgY29uc3RydWN0b3IoZ2V0LCBzdWJzY3JpYmUpIHsKICAgIHN1cGVyKCJyZXR1cm4gYXJndW1lbnRzLmNhbGxlZS5fY2FsbC5hcHBseShhcmd1bWVudHMuY2FsbGVlLCBhcmd1bWVudHMpIik7CiAgICB0aGlzLiNzdWJzY3JpYmUgPSBzdWJzY3JpYmUgPz8gKCgpID0+ICgpID0+IHZvaWQgMCk7CiAgICB0aGlzLiNnZXQgPSBnZXQ7CiAgfQogIC8qKgogICAqIFN1YnNjcmliZSBmb3IgdmFsdWUgY2hhbmdlcy4KICAgKiBAcGFyYW0gY2FsbGJhY2sgVGhlIGZ1bmN0aW9uIHRvIHJ1biB3aGVuIHRoZSBjdXJyZW50IHZhbHVlIGNoYW5nZXMuCiAgICogQHJldHVybnMgVW5zdWJzY3JpYmUgZnVuY3Rpb24uCiAgICovCiAgc3Vic2NyaWJlKGNhbGxiYWNrKSB7CiAgICByZXR1cm4gdGhpcy4jc3Vic2NyaWJlKGNhbGxiYWNrKTsKICB9CiAgLyoqCiAgICogQHJldHVybnMgVGhlIGN1cnJlbnQgdmFsdWUuCiAgICovCiAgZ2V0KCkgewogICAgcmV0dXJuIHRoaXMuI2dldCgpOwogIH0KICAvKioKICAgKiBDcmVhdGUgYSBuZXcgYEFjY2Vzc29yYCB0aGF0IGFwcGxpZXMgYSB0cmFuc2Zvcm1hdGlvbiBvbiBpdHMgdmFsdWUuCiAgICogQHBhcmFtIHRyYW5zZm9ybSBUaGUgdHJhbnNmb3JtYXRpb24gdG8gYXBwbHkuIFNob3VsZCBiZSBhIHB1cmUgZnVuY3Rpb24uCiAgICovCiAgYXModHJhbnNmb3JtKSB7CiAgICByZXR1cm4gbmV3IF9BY2Nlc3NvcigoKSA9PiB0cmFuc2Zvcm0odGhpcy4jZ2V0KCkpLCB0aGlzLiNzdWJzY3JpYmUpOwogIH0KICBfY2FsbCh0cmFuc2Zvcm0pIHsKICAgIGxldCB2YWx1ZSA9IGVtcHR5OwogICAgbGV0IHVuc3ViOwogICAgY29uc3Qgc3Vic2NyaWJlcnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpOwogICAgY29uc3Qgc3Vic2NyaWJlID0gKGNhbGxiYWNrKSA9PiB7CiAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7CiAgICAgICAgdW5zdWIgPSB0aGlzLnN1YnNjcmliZSgoKSA9PiB7CiAgICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IHRyYW5zZm9ybSh0aGlzLmdldCgpKTsKICAgICAgICAgIGlmICh2YWx1ZSAhPT0gbmV3VmFsdWUpIHsKICAgICAgICAgICAgdmFsdWUgPSBuZXdWYWx1ZTsKICAgICAgICAgICAgQXJyYXkuZnJvbShzdWJzY3JpYmVycykuZm9yRWFjaCgoY2IpID0+IGNiKCkpOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CiAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjayk7CiAgICAgIHJldHVybiAoKSA9PiB7CiAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKTsKICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkgewogICAgICAgICAgdmFsdWUgPSBlbXB0eTsKICAgICAgICAgIHVuc3ViKCk7CiAgICAgICAgfQogICAgICB9OwogICAgfTsKICAgIGNvbnN0IGdldCA9ICgpID0+IHsKICAgICAgcmV0dXJuIHZhbHVlICE9PSBlbXB0eSA/IHZhbHVlIDogdHJhbnNmb3JtKHRoaXMuZ2V0KCkpOwogICAgfTsKICAgIHJldHVybiBuZXcgX0FjY2Vzc29yKGdldCwgc3Vic2NyaWJlKTsKICB9CiAgdG9TdHJpbmcoKSB7CiAgICByZXR1cm4gYEFjY2Vzc29yPCR7dGhpcy5nZXQoKX0+YDsKICB9CiAgW1N5bWJvbC50b1ByaW1pdGl2ZV0oKSB7CiAgICBjb25zb2xlLndhcm4oIkFjY2Vzc29yIGltcGxpY2l0bHkgY29udmVydGVkIHRvIGEgcHJpbWl0aXZlIHZhbHVlLiIpOwogICAgcmV0dXJuIHRoaXMudG9TdHJpbmcoKTsKICB9Cn07CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L2Vudi50cwpmdW5jdGlvbiBjb25maWd1ZShjb25mKSB7CiAgcmV0dXJuIE9iamVjdC5hc3NpZ24oZW52LCBjb25mKTsKfQpmdW5jdGlvbiBtaXNzaW5nSW1wbCgpIHsKICB0aHJvdyBFcnJvcigibWlzc2luZyBpbXBsIik7Cn0KdmFyIGVudiA9IHsKICBpbnRyaW5zaWNFbGVtZW50czoge30sCiAgdGV4dE5vZGU6IG1pc3NpbmdJbXBsLAogIGFwcGVuZENoaWxkOiBtaXNzaW5nSW1wbCwKICByZW1vdmVDaGlsZDogbWlzc2luZ0ltcGwsCiAgc2V0Q3NzOiBtaXNzaW5nSW1wbCwKICBzZXRDbGFzczogbWlzc2luZ0ltcGwsCiAgaW5pdFByb3BzOiAoKSA9PiB2b2lkIDAsCiAgZGVmYXVsdENsZWFudXA6ICgpID0+IHZvaWQgMAp9OwoKLy8gLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9zY29wZS50cwp2YXIgU2NvcGUgPSBjbGFzcyBfU2NvcGUgewogIGNvbnN0cnVjdG9yKHBhcmVudCkgewogICAgdGhpcy5jb250ZXh0cyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7CiAgICB0aGlzLmNsZWFudXBzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTsKICAgIHRoaXMubW91bnRzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTsKICAgIHRoaXMubW91bnRlZCA9IGZhbHNlOwogICAgdGhpcy5wYXJlbnQgPSBwYXJlbnQ7CiAgfQogIG9uQ2xlYW51cChjYWxsYmFjaykgewogICAgdGhpcy5jbGVhbnVwcz8uYWRkKGNhbGxiYWNrKTsKICB9CiAgb25Nb3VudChjYWxsYmFjaykgewogICAgaWYgKHRoaXMucGFyZW50ICYmICF0aGlzLnBhcmVudC5tb3VudGVkKSB7CiAgICAgIHRoaXMucGFyZW50Lm9uTW91bnQoY2FsbGJhY2spOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy5tb3VudHMuYWRkKGNhbGxiYWNrKTsKICAgIH0KICB9CiAgcnVuKGZuKSB7CiAgICBjb25zdCBwcmV2ID0gX1Njb3BlLmN1cnJlbnQ7CiAgICBfU2NvcGUuY3VycmVudCA9IHRoaXM7CiAgICB0cnkgewogICAgICByZXR1cm4gZm4oKTsKICAgIH0gZmluYWxseSB7CiAgICAgIHRoaXMubW91bnRzLmZvckVhY2goKGNiKSA9PiBjYigpKTsKICAgICAgdGhpcy5tb3VudHMuY2xlYXIoKTsKICAgICAgdGhpcy5tb3VudGVkID0gdHJ1ZTsKICAgICAgX1Njb3BlLmN1cnJlbnQgPSBwcmV2OwogICAgfQogIH0KICBkaXNwb3NlKCkgewogICAgdGhpcy5jbGVhbnVwcy5mb3JFYWNoKChjYikgPT4gY2IoKSk7CiAgICB0aGlzLmNsZWFudXBzLmNsZWFyKCk7CiAgICB0aGlzLmNvbnRleHRzLmNsZWFyKCk7CiAgICBkZWxldGUgdGhpcy5wYXJlbnQ7CiAgfQp9OwpmdW5jdGlvbiBvbkNsZWFudXAoY2xlYW51cCkgewogIGlmICghU2NvcGUuY3VycmVudCkgewogICAgY29uc29sZS5lcnJvcihFcnJvcigib3V0IG9mIHRyYWNraW5nIGNvbnRleHQ6IHdpbGwgbm90IGJlIGFibGUgdG8gY2xlYW51cCIpKTsKICB9CiAgU2NvcGUuY3VycmVudD8ub25DbGVhbnVwKGNsZWFudXApOwp9CmZ1bmN0aW9uIGNyZWF0ZVJvb3QoZm4pIHsKICBjb25zdCBzY29wZSA9IG5ldyBTY29wZShudWxsKTsKICByZXR1cm4gc2NvcGUucnVuKCgpID0+IGZuKCgpID0+IHNjb3BlLmRpc3Bvc2UoKSkpOwp9CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L2pzeC50cwp2YXIgZ3RrVHlwZSA9IFN5bWJvbCgiZ3RrIGJ1aWxkZXIgdHlwZSIpOwp2YXIgYXBwZW5kQ2hpbGQgPSBTeW1ib2woIkpTWCBhZGQgY2hpbGQgbWV0aG9kIik7CnZhciByZW1vdmVDaGlsZCA9IFN5bWJvbCgiSlNYIGFkZCByZW1vdmUgbWV0aG9kIik7CmZ1bmN0aW9uIGdldFR5cGUob2JqZWN0KSB7CiAgcmV0dXJuIGd0a1R5cGUgaW4gb2JqZWN0ID8gb2JqZWN0W2d0a1R5cGVdIDogbnVsbDsKfQpmdW5jdGlvbiBpc0dPYmplY3RDdG9yKGN0b3IpIHsKICByZXR1cm4gY3Rvci5wcm90b3R5cGUgaW5zdGFuY2VvZiBHT2JqZWN0NS5PYmplY3Q7Cn0KZnVuY3Rpb24gaXNGdW5jdGlvbkN0b3IoY3RvcikgewogIHJldHVybiB0eXBlb2YgY3RvciA9PT0gImZ1bmN0aW9uIiAmJiAhaXNHT2JqZWN0Q3RvcihjdG9yKTsKfQpmdW5jdGlvbiBzaWduYWxOYW1lKGtleSkgewogIGNvbnN0IFtzaWcsIGRldGFpbF0gPSBrZWJhYmlmeShrZXkuc2xpY2UoMikpLnNwbGl0KCI6Iik7CiAgaWYgKHNpZy5zdGFydHNXaXRoKCJub3RpZnktIikpIHsKICAgIHJldHVybiBgbm90aWZ5Ojoke3NpZy5zbGljZSg3KX1gOwogIH0KICByZXR1cm4gZGV0YWlsID8gYCR7c2lnfTo6JHtkZXRhaWx9YCA6IHNpZzsKfQpmdW5jdGlvbiByZW1vdmUocGFyZW50LCBjaGlsZCkgewogIGlmIChwYXJlbnQgaW5zdGFuY2VvZiBGcmFnbWVudCkgewogICAgcGFyZW50LnJlbW92ZShjaGlsZCk7CiAgICByZXR1cm47CiAgfQogIGlmIChyZW1vdmVDaGlsZCBpbiBwYXJlbnQgJiYgdHlwZW9mIHBhcmVudFtyZW1vdmVDaGlsZF0gPT09ICJmdW5jdGlvbiIpIHsKICAgIHBhcmVudFtyZW1vdmVDaGlsZF0oY2hpbGQpOwogICAgcmV0dXJuOwogIH0KICBlbnYucmVtb3ZlQ2hpbGQocGFyZW50LCBjaGlsZCk7Cn0KZnVuY3Rpb24gYXBwZW5kKHBhcmVudCwgY2hpbGQpIHsKICBpZiAocGFyZW50IGluc3RhbmNlb2YgRnJhZ21lbnQpIHsKICAgIHBhcmVudC5hcHBlbmQoY2hpbGQpOwogICAgcmV0dXJuOwogIH0KICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBGcmFnbWVudCkgewogICAgZm9yIChjb25zdCBjaCBvZiBjaGlsZCkgewogICAgICBhcHBlbmQocGFyZW50LCBjaCk7CiAgICB9CiAgICBjb25zdCBhcHBlbmRIYW5kbGVyID0gY2hpbGQuY29ubmVjdCgiYXBwZW5kIiwgKF8sIGNoKSA9PiB7CiAgICAgIGlmICghKGNoIGluc3RhbmNlb2YgR09iamVjdDUuT2JqZWN0KSkgewogICAgICAgIHJldHVybiBjb25zb2xlLmVycm9yKFR5cGVFcnJvcihgY2Fubm90IGFkZCAke2NofSB0byAke3BhcmVudH1gKSk7CiAgICAgIH0KICAgICAgYXBwZW5kKHBhcmVudCwgY2gpOwogICAgfSk7CiAgICBjb25zdCByZW1vdmVIYW5kbGVyID0gY2hpbGQuY29ubmVjdCgicmVtb3ZlIiwgKF8sIGNoKSA9PiB7CiAgICAgIGlmICghKGNoIGluc3RhbmNlb2YgR09iamVjdDUuT2JqZWN0KSkgewogICAgICAgIHJldHVybiBjb25zb2xlLmVycm9yKFR5cGVFcnJvcihgY2Fubm90IHJlbW92ZSAke2NofSBmcm9tICR7cGFyZW50fWApKTsKICAgICAgfQogICAgICByZW1vdmUocGFyZW50LCBjaCk7CiAgICB9KTsKICAgIG9uQ2xlYW51cCgoKSA9PiB7CiAgICAgIGNoaWxkLmRpc2Nvbm5lY3QoYXBwZW5kSGFuZGxlcik7CiAgICAgIGNoaWxkLmRpc2Nvbm5lY3QocmVtb3ZlSGFuZGxlcik7CiAgICB9KTsKICAgIHJldHVybjsKICB9CiAgaWYgKGFwcGVuZENoaWxkIGluIHBhcmVudCAmJiB0eXBlb2YgcGFyZW50W2FwcGVuZENoaWxkXSA9PT0gImZ1bmN0aW9uIikgewogICAgcGFyZW50W2FwcGVuZENoaWxkXShjaGlsZCwgZ2V0VHlwZShjaGlsZCkpOwogICAgcmV0dXJuOwogIH0KICBlbnYuYXBwZW5kQ2hpbGQocGFyZW50LCBjaGlsZCk7Cn0KZnVuY3Rpb24gc2V0VHlwZShvYmplY3QsIHR5cGUpIHsKICBpZiAoZ3RrVHlwZSBpbiBvYmplY3QgJiYgb2JqZWN0W2d0a1R5cGVdICE9PSAiIikgewogICAgY29uc29sZS53YXJuKGB0eXBlIG92ZXJyaWRlbiBmcm9tICR7b2JqZWN0W2d0a1R5cGVdfSB0byAke3R5cGV9IG9uICR7b2JqZWN0fWApOwogIH0KICBPYmplY3QuYXNzaWduKG9iamVjdCwgeyBbZ3RrVHlwZV06IHR5cGUgfSk7Cn0KZnVuY3Rpb24ganN4KGN0b3IsIGlucHJvcHMsIGtleSkgewogIGNvbnN0IHsgJCwgJHR5cGUsICRjb25zdHJ1Y3RvciwgY2hpbGRyZW4sIC4uLnJlc3QgfSA9IGlucHJvcHM7CiAgY29uc3QgcHJvcHMgPSByZXN0OwogIGlmIChrZXkpIE9iamVjdC5hc3NpZ24ocHJvcHMsIHsga2V5IH0pOwogIGNvbnN0IGRlZmVyUHJvcHMgPSBlbnYuaW5pdFByb3BzKGN0b3IsIHByb3BzKSA/PyBbXTsKICBjb25zdCBkZWZlcnJlZFByb3BzID0ge307CiAgZm9yIChjb25zdCBba2V5MiwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkgewogICAgaWYgKHZhbHVlID09PSB2b2lkIDApIHsKICAgICAgZGVsZXRlIHByb3BzW2tleTJdOwogICAgfQogICAgaWYgKGRlZmVyUHJvcHMuaW5jbHVkZXMoa2V5MikpIHsKICAgICAgZGVmZXJyZWRQcm9wc1trZXkyXSA9IHByb3BzW2tleTJdOwogICAgICBkZWxldGUgcHJvcHNba2V5Ml07CiAgICB9CiAgfQogIGlmICh0eXBlb2YgY3RvciA9PT0gInN0cmluZyIpIHsKICAgIGlmIChjdG9yIGluIGVudi5pbnRyaW5zaWNFbGVtZW50cykgewogICAgICBjdG9yID0gZW52LmludHJpbnNpY0VsZW1lbnRzW2N0b3JdOwogICAgfSBlbHNlIHsKICAgICAgdGhyb3cgRXJyb3IoYHVua25vd24gaW50cmluc2ljIGVsZW1lbnQgIiR7Y3Rvcn0iYCk7CiAgICB9CiAgfQogIGlmIChpc0Z1bmN0aW9uQ3RvcihjdG9yKSkgewogICAgY29uc3Qgb2JqZWN0MiA9IGN0b3IoeyBjaGlsZHJlbiwgLi4ucHJvcHMgfSk7CiAgICBpZiAoJHR5cGUpIHNldFR5cGUob2JqZWN0MiwgJHR5cGUpOwogICAgJD8uKG9iamVjdDIpOwogICAgcmV0dXJuIG9iamVjdDI7CiAgfQogIGNvbnN0IHsgY3NzLCBjbGFzczogY2xhc3NOYW1lIH0gPSBwcm9wczsKICBkZWxldGUgcHJvcHMuY3NzOwogIGRlbGV0ZSBwcm9wcy5jbGFzczsKICBjb25zdCBzaWduYWxzID0gW107CiAgY29uc3QgYmluZGluZ3MgPSBbXTsKICBmb3IgKGNvbnN0IFtrZXkyLCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMocHJvcHMpKSB7CiAgICBpZiAoa2V5Mi5zdGFydHNXaXRoKCJvbiIpKSB7CiAgICAgIHNpZ25hbHMucHVzaChba2V5MiwgdmFsdWVdKTsKICAgICAgZGVsZXRlIHByb3BzW2tleTJdOwogICAgfQogICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHsKICAgICAgYmluZGluZ3MucHVzaChba2V5MiwgdmFsdWVdKTsKICAgICAgcHJvcHNba2V5Ml0gPSB2YWx1ZS5nZXQoKTsKICAgIH0KICB9CiAgY29uc3Qgb2JqZWN0ID0gJGNvbnN0cnVjdG9yID8gJGNvbnN0cnVjdG9yKHByb3BzKSA6IG5ldyBjdG9yKHByb3BzKTsKICBpZiAoJGNvbnN0cnVjdG9yKSBPYmplY3QuYXNzaWduKG9iamVjdCwgcHJvcHMpOwogIGlmICgkdHlwZSkgc2V0VHlwZShvYmplY3QsICR0eXBlKTsKICBpZiAoY3NzKSBlbnYuc2V0Q3NzKG9iamVjdCwgY3NzKTsKICBpZiAoY2xhc3NOYW1lKSBlbnYuc2V0Q2xhc3Mob2JqZWN0LCBjbGFzc05hbWUpOwogIGZvciAobGV0IGNoaWxkIG9mIEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW4gOiBbY2hpbGRyZW5dKSB7CiAgICBpZiAoY2hpbGQgPT09IHRydWUpIHsKICAgICAgY29uc29sZS53YXJuKEVycm9yKCJUcnlpbmcgdG8gYWRkIGJvb2xlYW4gdmFsdWUgb2YgYHRydWVgIGFzIGEgY2hpbGQuIikpOwogICAgICBjb250aW51ZTsKICAgIH0KICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkKSkgewogICAgICBmb3IgKGNvbnN0IGNoIG9mIGNoaWxkKSB7CiAgICAgICAgYXBwZW5kKG9iamVjdCwgY2gpOwogICAgICB9CiAgICB9IGVsc2UgaWYgKGNoaWxkKSB7CiAgICAgIGlmICghKGNoaWxkIGluc3RhbmNlb2YgR09iamVjdDUuT2JqZWN0KSkgewogICAgICAgIGNoaWxkID0gZW52LnRleHROb2RlKGNoaWxkKTsKICAgICAgfQogICAgICBhcHBlbmQob2JqZWN0LCBjaGlsZCk7CiAgICB9CiAgfQogIGNvbnN0IGRpc3Bvc2VIYW5kbGVycyA9IHNpZ25hbHMubWFwKChbc2lnLCBoYW5kbGVyXSkgPT4gewogICAgY29uc3QgaWQgPSBvYmplY3QuY29ubmVjdChzaWduYWxOYW1lKHNpZyksIGhhbmRsZXIpOwogICAgcmV0dXJuICgpID0+IG9iamVjdC5kaXNjb25uZWN0KGlkKTsKICB9KTsKICBmb3IgKGNvbnN0IFtrZXkyLCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoZGVmZXJyZWRQcm9wcykpIHsKICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7CiAgICAgIGJpbmRpbmdzLnB1c2goW2tleTIsIHZhbHVlXSk7CiAgICB9IGVsc2UgewogICAgICBPYmplY3QuYXNzaWduKG9iamVjdCwgeyBba2V5Ml06IHZhbHVlIH0pOwogICAgfQogIH0KICBjb25zdCBkaXNwb3NlQmluZGluZ3MgPSBiaW5kaW5ncy5tYXAoKFtwcm9wLCBiaW5kaW5nXSkgPT4gewogICAgY29uc3QgZGlzcG9zZSA9IGJpbmRpbmcuc3Vic2NyaWJlKCgpID0+IHsKICAgICAgc2V0KG9iamVjdCwgcHJvcCwgYmluZGluZy5nZXQoKSk7CiAgICB9KTsKICAgIHNldChvYmplY3QsIHByb3AsIGJpbmRpbmcuZ2V0KCkpOwogICAgcmV0dXJuIGRpc3Bvc2U7CiAgfSk7CiAgaWYgKGRpc3Bvc2VCaW5kaW5ncy5sZW5ndGggPiAwIHx8IGRpc3Bvc2VIYW5kbGVycy5sZW5ndGggPiAwKSB7CiAgICBvbkNsZWFudXAoKCkgPT4gewogICAgICBkaXNwb3NlSGFuZGxlcnMuZm9yRWFjaCgoY2IpID0+IGNiKCkpOwogICAgICBkaXNwb3NlQmluZGluZ3MuZm9yRWFjaCgoY2IpID0+IGNiKCkpOwogICAgfSk7CiAgfQogICQ/LihvYmplY3QpOwogIHJldHVybiBvYmplY3Q7Cn0KdmFyIGpzeHMgPSBqc3g7CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L1RoaXMudHMKaW1wb3J0IEdPYmplY3Q2IGZyb20gImdpOi8vR09iamVjdCI7CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9ndGs0L2FwcC50cwpHdGsuaW5pdCgpOwpHTGliNC51bnNldGVudigiTERfUFJFTE9BRCIpOwphd2FpdCBpbXBvcnQoImdpOi8vQWR3P3ZlcnNpb249MSIpLnRoZW4oKHsgZGVmYXVsdDogQWR3IH0pID0+IEFkdy5pbml0KCkpLmNhdGNoKCgpID0+IHZvaWQgMCk7CnZhciBfcmVxdWVzdF9kZWMsIF9jdXJzb3JUaGVtZV9kZWMsIF9jdXJzb3JUaGVtZV9kZWMyLCBfaWNvblRoZW1lX2RlYywgX2ljb25UaGVtZV9kZWMyLCBfZ3RrVGhlbWVfZGVjLCBfZ3RrVGhlbWVfZGVjMiwgX3dpbmRvd3NfZGVjLCBfbW9uaXRvcnNfZGVjLCBfd2luZG93VG9nZ2xlZF9kZWMsIF9hNCwgX0FwcF9kZWNvcmF0b3JzLCBfaW5zdGFuY2VOYW1lLCBfbWFpbiwgX3JlcXVlc3RIYW5kbGVycywgX2RidXNTZXJ2aWNlLCBfY3NzUHJvdmlkZXJzLCBfQXBwX2luc3RhbmNlcywgc2V0dGluZ3NfZ2V0LCBkaXNwbGF5X2dldCwgX2luaXQyOwpfQXBwX2RlY29yYXRvcnMgPSBbcmVnaXN0ZXIoKV07CnZhciBBcHAgPSBjbGFzcyBleHRlbmRzIChfYTQgPSBHdGsuQXBwbGljYXRpb24sIF93aW5kb3dUb2dnbGVkX2RlYyA9IFtzaWduYWwoR3RrLldpbmRvdyldLCBfbW9uaXRvcnNfZGVjID0gW2dldHRlcihBcnJheSldLCBfd2luZG93c19kZWMgPSBbZ2V0dGVyKEFycmF5KV0sIF9ndGtUaGVtZV9kZWMyID0gW3NldHRlcihTdHJpbmcpXSwgX2d0a1RoZW1lX2RlYyA9IFtnZXR0ZXIoU3RyaW5nKV0sIF9pY29uVGhlbWVfZGVjMiA9IFtzZXR0ZXIoU3RyaW5nKV0sIF9pY29uVGhlbWVfZGVjID0gW2dldHRlcihTdHJpbmcpXSwgX2N1cnNvclRoZW1lX2RlYzIgPSBbc2V0dGVyKFN0cmluZyldLCBfY3Vyc29yVGhlbWVfZGVjID0gW2dldHRlcihTdHJpbmcpXSwgX3JlcXVlc3RfZGVjID0gW3NpZ25hbChBcnJheSwgRnVuY3Rpb24pXSwgX2E0KSB7CiAgY29uc3RydWN0b3IoKSB7CiAgICBzdXBlcih7IGZsYWdzOiBHaW8zLkFwcGxpY2F0aW9uRmxhZ3MuSEFORExFU19DT01NQU5EX0xJTkUgfSk7CiAgICBfX3J1bkluaXRpYWxpemVycyhfaW5pdDIsIDUsIHRoaXMpOwogICAgX19wcml2YXRlQWRkKHRoaXMsIF9BcHBfaW5zdGFuY2VzKTsKICAgIF9fcHJpdmF0ZUFkZCh0aGlzLCBfaW5zdGFuY2VOYW1lLCAiYWdzIik7CiAgICBfX3ByaXZhdGVBZGQodGhpcywgX21haW4pOwogICAgX19wcml2YXRlQWRkKHRoaXMsIF9yZXF1ZXN0SGFuZGxlcnMsIDApOwogICAgX19wcml2YXRlQWRkKHRoaXMsIF9kYnVzU2VydmljZSk7CiAgICBfX3ByaXZhdGVBZGQodGhpcywgX2Nzc1Byb3ZpZGVycywgbmV3IEFycmF5KCkpOwogICAgX19wcml2YXRlU2V0KHRoaXMsIF9kYnVzU2VydmljZSwgbmV3IEFwcERCdXMoewogICAgICB0b2dnbGVXaW5kb3c6IHRoaXMudG9nZ2xlX3dpbmRvdy5iaW5kKHRoaXMpLAogICAgICBxdWl0OiB0aGlzLnF1aXQuYmluZCh0aGlzKSwKICAgICAgcmVxdWVzdDogKGFyZ3YpID0+IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB0aGlzLnJlcXVlc3QoYXJndiwgcmVzb2x2ZSkpLAogICAgICBpbnNlY3RvcjogKCkgPT4gewogICAgICAgIEd0ay5XaW5kb3cuc2V0X2ludGVyYWN0aXZlX2RlYnVnZ2luZyh0cnVlKTsKICAgICAgfQogICAgfSkpOwogICAgX19wcml2YXRlR2V0KHRoaXMsIF9BcHBfaW5zdGFuY2VzLCBkaXNwbGF5X2dldCkuZ2V0X21vbml0b3JzKCkuY29ubmVjdCgiaXRlbXMtY2hhbmdlZCIsICgpID0+IHsKICAgICAgdGhpcy5ub3RpZnkoIm1vbml0b3JzIik7CiAgICB9KTsKICAgIHRoaXMuY29ubmVjdCgid2luZG93LWFkZGVkIiwgKF8sIHdpbmRvdykgPT4gewogICAgICBjb25zdCBpZDEgPSB3aW5kb3cuY29ubmVjdCgibm90aWZ5Ojp2aXNpYmxlIiwgKCkgPT4gdGhpcy53aW5kb3dUb2dnbGVkKHdpbmRvdykpOwogICAgICBjb25zdCBpZDIgPSB0aGlzLmNvbm5lY3QoIndpbmRvdy1yZW1vdmVkIiwgKF8yLCByZW1vdmVkKSA9PiB7CiAgICAgICAgaWYgKHJlbW92ZWQgPT0gd2luZG93KSB7CiAgICAgICAgICB3aW5kb3cuZGlzY29ubmVjdChpZDEpOwogICAgICAgICAgdGhpcy5kaXNjb25uZWN0KGlkMik7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0pOwogICAgX19wcml2YXRlR2V0KHRoaXMsIF9BcHBfaW5zdGFuY2VzLCBzZXR0aW5nc19nZXQpLmNvbm5lY3QoIm5vdGlmeSIsIChfLCB7IG5hbWUgfSkgPT4gewogICAgICBzd2l0Y2ggKG5hbWUpIHsKICAgICAgICBjYXNlICJndGstdGhlbWUtbmFtZSI6CiAgICAgICAgICB0aGlzLm5vdGlmeSgiZ3RrLXRoZW1lIik7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICJndGstaWNvbi10aGVtZS1uYW1lIjoKICAgICAgICAgIHRoaXMubm90aWZ5KCJpY29uLXRoZW1lIik7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICJndGstY3Vyc29yLXRoZW1lLW5hbWUiOgogICAgICAgICAgdGhpcy5ub3RpZnkoImN1cnNvci10aGVtZSIpOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIGJyZWFrOwogICAgICB9CiAgICB9KTsKICB9CiAgZ2V0IGluc3RhbmNlTmFtZSgpIHsKICAgIHJldHVybiBfX3ByaXZhdGVHZXQodGhpcywgX2luc3RhbmNlTmFtZSk7CiAgfQogIC8qKgogICAqIEdldCBhbGwgbW9uaXRvcnMgZnJvbSB7QGxpbmsgR2RrLkRpc3BsYXl9LgogICAqLwogIGdldF9tb25pdG9ycygpIHsKICAgIGNvbnN0IG1vbnMgPSBfX3ByaXZhdGVHZXQodGhpcywgX0FwcF9pbnN0YW5jZXMsIGRpc3BsYXlfZ2V0KS5nZXRfbW9uaXRvcnMoKTsKICAgIGNvbnN0IGxpc3QgPSBuZXcgQXJyYXkoKTsKICAgIGxldCBtb25pdG9yID0gbnVsbDsKICAgIGxldCBpID0gMDsKICAgIHdoaWxlICgobW9uaXRvciA9IG1vbnMuZ2V0X2l0ZW0oaSsrKSkgIT09IG51bGwpIHsKICAgICAgbGlzdC5wdXNoKG1vbml0b3IpOwogICAgfQogICAgcmV0dXJuIGxpc3Q7CiAgfQogIHdpbmRvd1RvZ2dsZWQod2luZG93KSB7CiAgICB2b2lkIHdpbmRvdzsKICB9CiAgZ2V0IG1vbml0b3JzKCkgewogICAgcmV0dXJuIHRoaXMuZ2V0X21vbml0b3JzKCk7CiAgfQogIGdldCB3aW5kb3dzKCkgewogICAgcmV0dXJuIHRoaXMuZ2V0X3dpbmRvd3MoKTsKICB9CiAgc2V0IGd0a1RoZW1lKG5hbWUpIHsKICAgIF9fcHJpdmF0ZUdldCh0aGlzLCBfQXBwX2luc3RhbmNlcywgc2V0dGluZ3NfZ2V0KS5ndGtUaGVtZU5hbWUgPSBuYW1lOwogIH0KICBnZXQgZ3RrVGhlbWUoKSB7CiAgICByZXR1cm4gX19wcml2YXRlR2V0KHRoaXMsIF9BcHBfaW5zdGFuY2VzLCBzZXR0aW5nc19nZXQpLmd0a1RoZW1lTmFtZTsKICB9CiAgc2V0IGljb25UaGVtZShuYW1lKSB7CiAgICBfX3ByaXZhdGVHZXQodGhpcywgX0FwcF9pbnN0YW5jZXMsIHNldHRpbmdzX2dldCkuZ3RrSWNvblRoZW1lTmFtZSA9IG5hbWU7CiAgfQogIGdldCBpY29uVGhlbWUoKSB7CiAgICByZXR1cm4gX19wcml2YXRlR2V0KHRoaXMsIF9BcHBfaW5zdGFuY2VzLCBzZXR0aW5nc19nZXQpLmd0a0ljb25UaGVtZU5hbWU7CiAgfQogIHNldCBjdXJzb3JUaGVtZShuYW1lKSB7CiAgICBfX3ByaXZhdGVHZXQodGhpcywgX0FwcF9pbnN0YW5jZXMsIHNldHRpbmdzX2dldCkuZ3RrQ3Vyc29yVGhlbWVOYW1lID0gbmFtZTsKICB9CiAgZ2V0IGN1cnNvclRoZW1lKCkgewogICAgcmV0dXJuIF9fcHJpdmF0ZUdldCh0aGlzLCBfQXBwX2luc3RhbmNlcywgc2V0dGluZ3NfZ2V0KS5ndGtDdXJzb3JUaGVtZU5hbWU7CiAgfQogIC8qKgogICAqIEdldCBhIHdpbmRvdyBieSBpdHMge0BsaW5rIEd0ay5XaWRnZXQucHJvdG90eXBlLm5hbWV9IHRoYXQgaGFzIGJlZW4gYWRkZWQgdG8gdGhpcyBhcHAKICAgKiB1c2luZyB7QGxpbmsgR3RrLkFwcGxpY2F0aW9uLnByb3RvdHlwZS5hZGRfd2luZG93fS4KICAgKi8KICBnZXRfd2luZG93KG5hbWUpIHsKICAgIHJldHVybiB0aGlzLndpbmRvd3MuZmluZCgodykgPT4gdy5uYW1lID09PSBuYW1lKTsKICB9CiAgLyoqCiAgICogVG9nZ2xlIHRoZSB2aXNpYmlsaXR5IG9mIGEgd2luZG93IGJ5IGl0cyB7QGxpbmsgR3RrLldpZGdldC5wcm90b3R5cGUubmFtZX0KICAgKiB0aGF0IGhhcyBiZWVuIGFkZGVkIHRvIHRoaXMgYXBwIHVzaW5nIHtAbGluayBHdGsuQXBwbGljYXRpb24ucHJvdG90eXBlLmFkZF93aW5kb3d9LgogICAqLwogIHRvZ2dsZV93aW5kb3cobmFtZSkgewogICAgY29uc3Qgd2luID0gdGhpcy5nZXRfd2luZG93KG5hbWUpOwogICAgaWYgKCF3aW4pIHRocm93IEVycm9yKGBubyB3aW5kb3cgcmVnaXN0ZXJlZCB3aXRoIG5hbWUgIiR7bmFtZX0iYCk7CiAgICB3aW4udmlzaWJsZSA9ICF3aW4udmlzaWJsZTsKICB9CiAgLyoqCiAgICogUmVzZXQgcHJldmlvdXNseSBzZXQgY3NzIHByb3ZpZGVycyB3aXRoIHtAbGluayBBcHAucHJvdG90eXBlLmFwcGx5X2Nzc30uCiAgICovCiAgcmVzZXRfY3NzKCkgewogICAgZm9yIChjb25zdCBwcm92aWRlciBvZiBfX3ByaXZhdGVHZXQodGhpcywgX2Nzc1Byb3ZpZGVycykpIHsKICAgICAgR3RrLlN0eWxlQ29udGV4dC5yZW1vdmVfcHJvdmlkZXJfZm9yX2Rpc3BsYXkoX19wcml2YXRlR2V0KHRoaXMsIF9BcHBfaW5zdGFuY2VzLCBkaXNwbGF5X2dldCksIHByb3ZpZGVyKTsKICAgIH0KICB9CiAgLyoqCiAgICogQWRkIGEgbmV3IHtAbGluayBHdGsuQ3NzUHJvdmlkZXJ9LgogICAqIEBwYXJhbSBzdHlsZSBDc3Mgc3RyaW5nIG9yIGEgcGF0aCB0byBhIGNzcyBmaWxlLgogICAqLwogIGFwcGx5X2NzcyhzdHlsZSwgcmVzZXQgPSBmYWxzZSkgewogICAgY29uc3QgcHJvdmlkZXIgPSBuZXcgR3RrLkNzc1Byb3ZpZGVyKCk7CiAgICBwcm92aWRlci5jb25uZWN0KCJwYXJzaW5nLWVycm9yIiwgKF8sIHNlY3Rpb24sIGVycm9yKSA9PiB7CiAgICAgIGNvbnN0IG5hbWUgPSBzZWN0aW9uLmdldF9maWxlKCk/LmdldF9iYXNlbmFtZSgpID8/ICIiOwogICAgICBjb25zdCBsaW5lID0gc2VjdGlvbi5nZXRfc3RhcnRfbG9jYXRpb24oKS5saW5lcyArIDE7CiAgICAgIGNvbnN0IGNoYXJzID0gc2VjdGlvbi5nZXRfc3RhcnRfbG9jYXRpb24oKS5saW5lX2NoYXJzICsgMTsKICAgICAgY29uc29sZS5lcnJvcihgQ1NTIEVycm9yICR7bmFtZX06JHtsaW5lfToke2NoYXJzfSAke2Vycm9yLm1lc3NhZ2V9YCk7CiAgICB9KTsKICAgIGlmIChyZXNldCkgdGhpcy5yZXNldF9jc3MoKTsKICAgIGlmIChHTGliNC5maWxlX3Rlc3Qoc3R5bGUsIEdMaWI0LkZpbGVUZXN0LkVYSVNUUykpIHsKICAgICAgcHJvdmlkZXIubG9hZF9mcm9tX3BhdGgoc3R5bGUpOwogICAgfSBlbHNlIGlmIChzdHlsZS5zdGFydHNXaXRoKCJyZXNvdXJjZTovLyIpKSB7CiAgICAgIHByb3ZpZGVyLmxvYWRfZnJvbV9yZXNvdXJjZShzdHlsZS5yZXBsYWNlKCJyZXNvdXJjZTovLyIsICIiKSk7CiAgICB9IGVsc2UgewogICAgICBwcm92aWRlci5sb2FkX2Zyb21fc3RyaW5nKHN0eWxlKTsKICAgIH0KICAgIEd0ay5TdHlsZUNvbnRleHQuYWRkX3Byb3ZpZGVyX2Zvcl9kaXNwbGF5KAogICAgICBfX3ByaXZhdGVHZXQodGhpcywgX0FwcF9pbnN0YW5jZXMsIGRpc3BsYXlfZ2V0KSwKICAgICAgcHJvdmlkZXIsCiAgICAgIEd0ay5TVFlMRV9QUk9WSURFUl9QUklPUklUWV9VU0VSCiAgICApOwogICAgX19wcml2YXRlR2V0KHRoaXMsIF9jc3NQcm92aWRlcnMpLnB1c2gocHJvdmlkZXIpOwogIH0KICAvKioKICAgKiBTaG9ydGN1dCBmb3Ige0BsaW5rIEd0ay5JY29uVGhlbWUucHJvdG90eXBlLmFkZF9zZWFyY2hfcGF0aH0uCiAgICovCiAgYWRkX2ljb25zKHBhdGgpIHsKICAgIEd0ay5JY29uVGhlbWUuZ2V0X2Zvcl9kaXNwbGF5KF9fcHJpdmF0ZUdldCh0aGlzLCBfQXBwX2luc3RhbmNlcywgZGlzcGxheV9nZXQpKS5hZGRfc2VhcmNoX3BhdGgocGF0aCk7CiAgfQogIC8qKgogICAqIFF1aXQgYW5kIGV4aXQgdGhlIGFwcGxpY2F0aW9uLgogICAqLwogIHF1aXQoY29kZSA9IDApIHsKICAgIF9fcHJpdmF0ZUdldCh0aGlzLCBfZGJ1c1NlcnZpY2UpLnN0b3AoKTsKICAgIHN1cGVyLnF1aXQoKTsKICAgIGV4aXQoY29kZSk7CiAgfQogIHJlcXVlc3QoYXJncywgcmVzcG9uc2UpIHsKICAgIGlmIChfX3ByaXZhdGVHZXQodGhpcywgX3JlcXVlc3RIYW5kbGVycykgPT09IDApIHsKICAgICAgcmVzcG9uc2UoYGluc3RhbmNlICIke3RoaXMuaW5zdGFuY2VOYW1lfSIgaGFzIG5vIHJlcXVlc3QgaGFuZGxlciBpbXBsZW1lbnRlZGApOwogICAgfQogICAgdm9pZCBhcmdzOwogIH0KICB2ZnVuY19jb21tYW5kX2xpbmUoY21kKSB7CiAgICBpZiAoY21kLmlzUmVtb3RlKSB7CiAgICAgIHRoaXMucmVxdWVzdChjbWQuZ2V0X2FyZ3VtZW50cygpLCAoc3RyKSA9PiB7CiAgICAgICAgY21kLnByaW50X2xpdGVyYWwoc3RyICsgIlxuIik7CiAgICAgICAgY21kLmRvbmUoKTsKICAgICAgfSk7CiAgICB9IGVsc2UgewogICAgICB0aGlzLmhvbGQoKTsKICAgICAgX19wcml2YXRlR2V0KHRoaXMsIF9kYnVzU2VydmljZSkuc2VydmUoewogICAgICAgIG5hbWU6IHRoaXMuYXBwbGljYXRpb25JZAogICAgICB9KTsKICAgICAgY3JlYXRlUm9vdCgoZGlzcG9zZSkgPT4gewogICAgICAgIHZhciBfYTc7CiAgICAgICAgdGhpcy5jb25uZWN0KCJzaHV0ZG93biIsIGRpc3Bvc2UpOwogICAgICAgIChfYTcgPSBfX3ByaXZhdGVHZXQodGhpcywgX21haW4pKSA9PSBudWxsID8gdm9pZCAwIDogX2E3LmNhbGwodGhpcywgLi4ucHJvZ3JhbUFyZ3MpOwogICAgICB9KTsKICAgIH0KICAgIHJldHVybiAwOwogIH0KICBzdGFydChjb25maWcpIHsKICAgIGNvbnN0IHsgbWFpbiwgcmVxdWVzdEhhbmRsZXIsIGluc3RhbmNlTmFtZSwgY3NzLCBpY29ucywgLi4uY2ZnIH0gPSBjb25maWc7CiAgICBfX3ByaXZhdGVTZXQodGhpcywgX21haW4sIG1haW4pOwogICAgT2JqZWN0LmFzc2lnbih0aGlzLCBjZmcpOwogICAgaWYgKHJlcXVlc3RIYW5kbGVyKSB7CiAgICAgIHRoaXMuY29ubmVjdCgicmVxdWVzdCIsIChfLCBhcmdzLCByZXNwb25zZSkgPT4gcmVxdWVzdEhhbmRsZXIoYXJncywgcmVzcG9uc2UpKTsKICAgIH0KICAgIGlmIChpbnN0YW5jZU5hbWUpIF9fcHJpdmF0ZVNldCh0aGlzLCBfaW5zdGFuY2VOYW1lLCBpbnN0YW5jZU5hbWUpOwogICAgaWYgKGNzcykgdGhpcy5hcHBseV9jc3MoY3NzLCBmYWxzZSk7CiAgICBpZiAoaWNvbnMpIGFwcC5hZGRfaWNvbnMoaWNvbnMpOwogICAgdGhpcy5hcHBsaWNhdGlvbklkID0gImlvLkFzdGFsLiIgKyB0aGlzLmluc3RhbmNlTmFtZTsKICAgIHNldENvbnNvbGVMb2dEb21haW4odGhpcy5pbnN0YW5jZU5hbWUpOwogICAgdGhpcy5ydW5Bc3luYyhwcm9ncmFtQXJncyk7CiAgfQogIGNvbm5lY3Qoc2lnbmFsMiwgY2FsbGJhY2spIHsKICAgIGlmIChzaWduYWwyID09PSAicmVxdWVzdCIpIF9fcHJpdmF0ZVNldCh0aGlzLCBfcmVxdWVzdEhhbmRsZXJzLCBfX3ByaXZhdGVHZXQodGhpcywgX3JlcXVlc3RIYW5kbGVycykgKyAxKTsKICAgIHJldHVybiBzdXBlci5jb25uZWN0KHNpZ25hbDIsIGNhbGxiYWNrKTsKICB9Cn07Cl9pbml0MiA9IF9fZGVjb3JhdG9yU3RhcnQoX2E0KTsKX2luc3RhbmNlTmFtZSA9IG5ldyBXZWFrTWFwKCk7Cl9tYWluID0gbmV3IFdlYWtNYXAoKTsKX3JlcXVlc3RIYW5kbGVycyA9IG5ldyBXZWFrTWFwKCk7Cl9kYnVzU2VydmljZSA9IG5ldyBXZWFrTWFwKCk7Cl9jc3NQcm92aWRlcnMgPSBuZXcgV2Vha01hcCgpOwpfQXBwX2luc3RhbmNlcyA9IG5ldyBXZWFrU2V0KCk7CnNldHRpbmdzX2dldCA9IGZ1bmN0aW9uKCkgewogIGNvbnN0IHNldHRpbmdzID0gR3RrLlNldHRpbmdzLmdldF9kZWZhdWx0KCk7CiAgaWYgKCFzZXR0aW5ncykgdGhyb3cgRXJyb3IoImNvdWxkIG5vdCBnZXQgc2V0dGluZ3MiKTsKICByZXR1cm4gc2V0dGluZ3M7Cn07CmRpc3BsYXlfZ2V0ID0gZnVuY3Rpb24oKSB7CiAgY29uc3QgZGlzcGxheSA9IEdkay5EaXNwbGF5LmdldF9kZWZhdWx0KCk7CiAgaWYgKCFkaXNwbGF5KSB0aHJvdyBFcnJvcigiY291bGQgbm90IGdldCBkaXNwbGF5Iik7CiAgcmV0dXJuIGRpc3BsYXk7Cn07Cl9fZGVjb3JhdGVFbGVtZW50KF9pbml0MiwgMSwgIndpbmRvd1RvZ2dsZWQiLCBfd2luZG93VG9nZ2xlZF9kZWMsIEFwcCk7Cl9fZGVjb3JhdGVFbGVtZW50KF9pbml0MiwgMiwgIm1vbml0b3JzIiwgX21vbml0b3JzX2RlYywgQXBwKTsKX19kZWNvcmF0ZUVsZW1lbnQoX2luaXQyLCAyLCAid2luZG93cyIsIF93aW5kb3dzX2RlYywgQXBwKTsKX19kZWNvcmF0ZUVsZW1lbnQoX2luaXQyLCAzLCAiZ3RrVGhlbWUiLCBfZ3RrVGhlbWVfZGVjMiwgQXBwKTsKX19kZWNvcmF0ZUVsZW1lbnQoX2luaXQyLCAyLCAiZ3RrVGhlbWUiLCBfZ3RrVGhlbWVfZGVjLCBBcHApOwpfX2RlY29yYXRlRWxlbWVudChfaW5pdDIsIDMsICJpY29uVGhlbWUiLCBfaWNvblRoZW1lX2RlYzIsIEFwcCk7Cl9fZGVjb3JhdGVFbGVtZW50KF9pbml0MiwgMiwgImljb25UaGVtZSIsIF9pY29uVGhlbWVfZGVjLCBBcHApOwpfX2RlY29yYXRlRWxlbWVudChfaW5pdDIsIDMsICJjdXJzb3JUaGVtZSIsIF9jdXJzb3JUaGVtZV9kZWMyLCBBcHApOwpfX2RlY29yYXRlRWxlbWVudChfaW5pdDIsIDIsICJjdXJzb3JUaGVtZSIsIF9jdXJzb3JUaGVtZV9kZWMsIEFwcCk7Cl9fZGVjb3JhdGVFbGVtZW50KF9pbml0MiwgMSwgInJlcXVlc3QiLCBfcmVxdWVzdF9kZWMsIEFwcCk7CkFwcCA9IF9fZGVjb3JhdGVFbGVtZW50KF9pbml0MiwgMCwgIkFwcCIsIF9BcHBfZGVjb3JhdG9ycywgQXBwKTsKX19ydW5Jbml0aWFsaXplcnMoX2luaXQyLCAxLCBBcHApOwp2YXIgYXBwID0gbmV3IEFwcCgpOwp2YXIgYXBwX2RlZmF1bHQgPSBhcHA7CgovLyBzYXNzOi9ob21lL2R5bGFuL1Byb2plY3RzL2h5cHJ0YXNrYmFyV2luZG93cy9zdHlsZS5zY3NzCnZhciBzdHlsZV9kZWZhdWx0ID0gIndpbmRvdy5CYXIge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgY29sb3I6IEB0aGVtZV9mZ19jb2xvcjtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG53aW5kb3cuQmFyID4gY2VudGVyYm94IHtcbiAgYmFja2dyb3VuZDogIzIyMjIyNjtcbn1cbndpbmRvdy5CYXIgYnV0dG9uIHtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBtYXJnaW4tdG9wOiA0cHg7XG4gIG1hcmdpbi1ib3R0b206IDZweDtcbn1cbndpbmRvdy5CYXIgLnN0YXJ0YnV0dG9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxud2luZG93LkJhciAuc3RhcnRidXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDgpO1xuICBib3gtc2hhZG93OiAwIDJweCA2cHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcbn1cbndpbmRvdy5CYXIgLnN0YXJ0YnV0dG9uIGltYWdlIHtcbiAgcGFkZGluZzogMC4zcmVtO1xufVxud2luZG93LkJhciAudXRpbGl0aWVzIGJ1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxud2luZG93LkJhciAudXRpbGl0aWVzIGJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wOCk7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xufVxud2luZG93LkJhciAudXRpbGl0aWVzIGxhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAxcmVtO1xufVxud2luZG93LkJhciAuZGF0ZXRpbWUgYnV0dG9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG53aW5kb3cuQmFyIC5kYXRldGltZSBidXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDgpO1xuICBib3gtc2hhZG93OiAwIDJweCA2cHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcbn1cbndpbmRvdy5CYXIgLmRhdGV0aW1lIGxhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAwLjlyZW07XG59XG53aW5kb3cuQmFyIC5oaWRld2luZG93c2J1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBtYXJnaW4tcmlnaHQ6IDNweDtcbiAgcGFkZGluZzogMC4ycmVtO1xufVxud2luZG93LkJhciAuaGlkZXdpbmRvd3NidXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDgpO1xuICBib3gtc2hhZG93OiAwIDJweCA2cHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcbn1cblxuLnN5c3RyYXlidXR0b24gYnV0dG9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAyMDBtcyBlYXNlLCBib3gtc2hhZG93IDE1MG1zIGVhc2U7XG59XG4uc3lzdHJheWJ1dHRvbiBidXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDgpO1xuICBib3gtc2hhZG93OiAwIDJweCA2cHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcbn1cbi5zeXN0cmF5YnV0dG9uIGJ1dHRvbjphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTYpO1xuICBib3gtc2hhZG93OiAwIDFweCAzcHggcmdiYSgwLCAwLCAwLCAwLjMpO1xufVxuXG4uc3lzdHJheW1lbnUgPiBjb250ZW50cyB7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYm9yZGVyLWNvbG9yOiAjNDM0MzQ1O1xuICBib3JkZXItd2lkdGg6IDEuNXB4O1xuICBwYWRkaW5nOiAwcmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDM0LCAzNCwgMzgsIDAuOTgpO1xufVxuLnN5c3RyYXltZW51ID4gYXJyb3cge1xuICAtZ3RrLWljb24tc291cmNlOiBub25lOyAvKiByZW1vdmUgdGhlIGFycm93IGdyYXBoaWMgKi9cbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG4uc3lzdHJheW1lbnUgLnBvcG92ZXJtZW51c3RhY2sge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cbi5zeXN0cmF5bWVudSAuYmx1ZXRvb3RobWVudSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuLnN5c3RyYXltZW51IC5ibHVldG9vdGhtZW51IC5zZXBlcmF0b3Ige1xuICBtaW4taGVpZ2h0OiAxLjVweDtcbn1cbi5zeXN0cmF5bWVudSAuYmx1ZXRvb3RobWVudSAuc3ViaGVhZGluZyB7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbiAgbWFyZ2luLXRvcDogNXB4O1xufVxuLnN5c3RyYXltZW51IC5ibHVldG9vdGhtZW51IC5kZXZpY2Vyb3cge1xuICBwYWRkaW5nLWxlZnQ6IDVweDtcbiAgcGFkZGluZy1yaWdodDogNXB4O1xufVxuLnN5c3RyYXltZW51IC5ibHVldG9vdGhtZW51IC5kZXZpY2Vyb3cgLnN0YXR1c0xhYmVsIHtcbiAgZm9udC1zaXplOiAwLjhyZW07XG4gIHBhZGRpbmctdG9wOiA1cHg7XG59XG5cbndpbmRvdy5Ob3RpZmljYXRpb24ge1xuICBiYWNrZ3JvdW5kOiAjMjIyMjI2O1xuICBjb2xvcjogI2ZmZjtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICBwYWRkaW5nOiA4cHg7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMS4yO1xufVxud2luZG93Lk5vdGlmaWNhdGlvbiBpbWFnZSB7XG4gIC1ndGstaWNvbi1zaXplOiAzMnB4O1xufVxud2luZG93Lk5vdGlmaWNhdGlvbiAuc3VtbWFyeSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufSI7CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9ndGs0L2luZGV4LnRzCmltcG9ydCBBc3RhbCBmcm9tICJnaTovL0FzdGFsP3ZlcnNpb249NC4wIjsKaW1wb3J0IEd0azIgZnJvbSAiZ2k6Ly9HdGs/dmVyc2lvbj00LjAiOwppbXBvcnQgR2RrMiBmcm9tICJnaTovL0dkaz92ZXJzaW9uPTQuMCI7CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9wcm9jZXNzLnRzCmltcG9ydCBHaW80IGZyb20gImdpOi8vR2lvP3ZlcnNpb249Mi4wIjsKaW1wb3J0IEdMaWI1IGZyb20gImdpOi8vR0xpYj92ZXJzaW9uPTIuMCI7CnZhciBlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7CnZhciBfZXhpdF9kZWMsIF9zdGRlcnJfZGVjLCBfc3Rkb3V0X2RlYywgX2E1LCBfUHJvY2Vzc19kZWNvcmF0b3JzLCBfaW5pdDMsIF9lbmNvZGVyLCBfb3V0U3RyZWFtLCBfZXJyU3RyZWFtLCBfaW5TdHJlYW0sIF9wcm9jZXNzLCBfUHJvY2Vzc19pbnN0YW5jZXMsIHJlYWRTdHJlYW1fZm47Cl9Qcm9jZXNzX2RlY29yYXRvcnMgPSBbcmVnaXN0ZXIoKV07CnZhciBfUHJvY2VzcyA9IGNsYXNzIF9Qcm9jZXNzIGV4dGVuZHMgKF9hNSA9IEdPYmplY3QuT2JqZWN0LCBfc3Rkb3V0X2RlYyA9IFtzaWduYWwoU3RyaW5nKV0sIF9zdGRlcnJfZGVjID0gW3NpZ25hbChTdHJpbmcpXSwgX2V4aXRfZGVjID0gW3NpZ25hbChOdW1iZXIsIEJvb2xlYW4pXSwgX2E1KSB7CiAgY29uc3RydWN0b3IoeyBhcmd2IH0pIHsKICAgIHN1cGVyKCk7CiAgICBfX3J1bkluaXRpYWxpemVycyhfaW5pdDMsIDUsIHRoaXMpOwogICAgX19wcml2YXRlQWRkKHRoaXMsIF9Qcm9jZXNzX2luc3RhbmNlcyk7CiAgICBfX3ByaXZhdGVBZGQodGhpcywgX2VuY29kZXIsIG5ldyBUZXh0RW5jb2RlcigpKTsKICAgIF9fcHJpdmF0ZUFkZCh0aGlzLCBfb3V0U3RyZWFtKTsKICAgIF9fcHJpdmF0ZUFkZCh0aGlzLCBfZXJyU3RyZWFtKTsKICAgIF9fcHJpdmF0ZUFkZCh0aGlzLCBfaW5TdHJlYW0pOwogICAgX19wcml2YXRlQWRkKHRoaXMsIF9wcm9jZXNzKTsKICAgIGNvbnN0IHByb2Nlc3MgPSBfX3ByaXZhdGVTZXQodGhpcywgX3Byb2Nlc3MsIEdpbzQuU3VicHJvY2Vzcy5uZXcoCiAgICAgIGFyZ3YsCiAgICAgIEdpbzQuU3VicHJvY2Vzc0ZsYWdzLlNURElOX1BJUEUgfCBHaW80LlN1YnByb2Nlc3NGbGFncy5TVERPVVRfUElQRSB8IEdpbzQuU3VicHJvY2Vzc0ZsYWdzLlNUREVSUl9QSVBFCiAgICApKTsKICAgIF9fcHJpdmF0ZVNldCh0aGlzLCBfaW5TdHJlYW0sIEdpbzQuRGF0YU91dHB1dFN0cmVhbS5uZXcocHJvY2Vzcy5nZXRfc3RkaW5fcGlwZSgpKSk7CiAgICBfX3ByaXZhdGVTZXQodGhpcywgX291dFN0cmVhbSwgR2lvNC5EYXRhSW5wdXRTdHJlYW0ubmV3KHByb2Nlc3MuZ2V0X3N0ZG91dF9waXBlKCkpKTsKICAgIF9fcHJpdmF0ZVNldCh0aGlzLCBfZXJyU3RyZWFtLCBHaW80LkRhdGFJbnB1dFN0cmVhbS5uZXcocHJvY2Vzcy5nZXRfc3RkZXJyX3BpcGUoKSkpOwogICAgX19wcml2YXRlTWV0aG9kKHRoaXMsIF9Qcm9jZXNzX2luc3RhbmNlcywgcmVhZFN0cmVhbV9mbikuY2FsbCh0aGlzLCBfX3ByaXZhdGVHZXQodGhpcywgX291dFN0cmVhbSkpOwogICAgX19wcml2YXRlTWV0aG9kKHRoaXMsIF9Qcm9jZXNzX2luc3RhbmNlcywgcmVhZFN0cmVhbV9mbikuY2FsbCh0aGlzLCBfX3ByaXZhdGVHZXQodGhpcywgX2VyclN0cmVhbSkpOwogICAgcHJvY2Vzcy53YWl0X2FzeW5jKG51bGwsIChfLCByZXMpID0+IHsKICAgICAgdHJ5IHsKICAgICAgICBwcm9jZXNzLndhaXRfZmluaXNoKHJlcyk7CiAgICAgIH0gY2F0Y2ggewogICAgICB9CiAgICAgIGlmIChwcm9jZXNzLmdldF9pZl9leGl0ZWQoKSkgewogICAgICAgIHRoaXMuZXhpdChwcm9jZXNzLmdldF9leGl0X3N0YXR1cygpLCBmYWxzZSk7CiAgICAgIH0KICAgICAgaWYgKHByb2Nlc3MuZ2V0X2lmX3NpZ25hbGVkKCkpIHsKICAgICAgICB0aGlzLmV4aXQocHJvY2Vzcy5nZXRfdGVybV9zaWcoKSwgdHJ1ZSk7CiAgICAgIH0KICAgIH0pOwogIH0KICBzdGRvdXQob3V0KSB7CiAgICB2b2lkIG91dDsKICB9CiAgc3RkZXJyKGVycikgewogICAgdm9pZCBlcnI7CiAgfQogIGV4aXQoY29kZSwgc2lnbmFsZWQpIHsKICAgIHZvaWQgW2NvZGUsIHNpZ25hbGVkXTsKICB9CiAgY29ubmVjdChzaWduYWwyLCBjYWxsYmFjaykgewogICAgcmV0dXJuIHN1cGVyLmNvbm5lY3Qoc2lnbmFsMiwgY2FsbGJhY2spOwogIH0KICAvKioKICAgKiBGb3JjZSBxdWl0IHRoZSBzdWJwcm9jZXNzLgogICAqLwogIGtpbGwoKSB7CiAgICBfX3ByaXZhdGVHZXQodGhpcywgX3Byb2Nlc3MpLmZvcmNlX2V4aXQoKTsKICB9CiAgLyoqCiAgICogU2VuZCBhIHNpZ25hbCB0byB0aGUgc3VicHJvY2Vzcy4KICAgKgogICAqIEBwYXJhbSBzaWduYWwgU2lnbmFsIG51bWJlciB0byBiZSBzZW50CiAgICovCiAgc2lnbmFsKHNpZ25hbDIpIHsKICAgIF9fcHJpdmF0ZUdldCh0aGlzLCBfcHJvY2Vzcykuc2VuZF9zaWduYWwoc2lnbmFsMik7CiAgfQogIC8qKgogICAqIFdyaXRlIGEgbGluZSB0byB0aGUgc3VicHJvY2Vzcycgc3RkaW4gc3luY2hyb25vdXNseS4KICAgKiBTZWUge0BsaW5rIEdpby5EYXRhT3V0cHV0U3RyZWFtLnByb3RvdHlwZS53cml0ZV9ieXRlc19hc3luY30KICAgKgogICAqIEBwYXJhbSBzdHIgU3RyaW5nIHRvIGJlIHdyaXR0ZW4gdG8gc3RkaW4KICAgKi8KICB3cml0ZShzdHIpIHsKICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAgIF9fcHJpdmF0ZUdldCh0aGlzLCBfaW5TdHJlYW0pLndyaXRlX2J5dGVzX2FzeW5jKAogICAgICAgIGVuY29kZXIuZW5jb2RlKHN0ciksCiAgICAgICAgR0xpYjUuUFJJT1JJVFlfREVGQVVMVCwKICAgICAgICBudWxsLAogICAgICAgIChfLCByZXMpID0+IHsKICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgIHJlc29sdmUoX19wcml2YXRlR2V0KHRoaXMsIF9pblN0cmVhbSkud3JpdGVfYWxsX2ZpbmlzaChyZXMpKTsKICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICApOwogICAgfSk7CiAgfQogIC8qKgogICAqIFdyaXRlIGEgbGluZSB0byB0aGUgc3VicHJvY2Vzcycgc3RkaW4gYXN5bmNocm9ub3VzbHkuCiAgICoKICAgKiBAcGFyYW0gc3RyIFN0cmluZyB0byBiZSB3cml0dGVuIHRvIHN0ZGluCiAgICovCiAgYXN5bmMgd3JpdGVBc3luYyhzdHIpIHsKICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAgIF9fcHJpdmF0ZUdldCh0aGlzLCBfaW5TdHJlYW0pLndyaXRlX2FsbF9hc3luYygKICAgICAgICBfX3ByaXZhdGVHZXQodGhpcywgX2VuY29kZXIpLmVuY29kZShzdHIpLAogICAgICAgIEdMaWI1LlBSSU9SSVRZX0RFRkFVTFQsCiAgICAgICAgbnVsbCwKICAgICAgICAoXywgcmVzKSA9PiB7CiAgICAgICAgICB0cnkgewogICAgICAgICAgICByZXNvbHZlKHZvaWQgX19wcml2YXRlR2V0KHRoaXMsIF9pblN0cmVhbSkud3JpdGVfYWxsX2ZpbmlzaChyZXMpKTsKICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICApOwogICAgfSk7CiAgfQogIC8qKgogICAqIFN0YXJ0IGEgbmV3IHN1YnByb2Nlc3Mgd2l0aCB0aGUgZ2l2ZW4gY29tbWFuZC4KICAgKiBUaGUgZmlyc3QgZWxlbWVudCBvZiB0aGUgdmVjdG9yIGlzIGV4ZWN1dGVkIHdpdGggdGhlIHJlbWFpbmluZwogICAqIGVsZW1lbnRzIGFzIHRoZSBhcmd1bWVudCBsaXN0LgogICAqLwogIHN0YXRpYyBzdWJwcm9jZXNzdihjbWQpIHsKICAgIHJldHVybiBuZXcgX1Byb2Nlc3MoeyBhcmd2OiBjbWQgfSk7CiAgfQogIC8qKgogICAqIFN0YXJ0IGEgbmV3IHN1YnByb2Nlc3Mgd2l0aCB0aGUgZ2l2ZW4gY29tbWFuZAogICAqIHdoaWNoIGlzIHBhcnNlZCB1c2luZyB7QGxpbmsgR0xpYi5zaGVsbF9wYXJzZV9hcmd2fS4KICAgKi8KICBzdGF0aWMgc3VicHJvY2VzcyhjbWQpIHsKICAgIGNvbnN0IFssIGFyZ3ZdID0gR0xpYjUuc2hlbGxfcGFyc2VfYXJndihjbWQpOwogICAgcmV0dXJuIF9Qcm9jZXNzLnN1YnByb2Nlc3N2KGFyZ3YpOwogIH0KICAvKioKICAgKiBFeGVjdXRlIGEgY29tbWFuZCBzeW5jaHJvbm91c2x5LgogICAqIFRoZSBmaXJzdCBlbGVtZW50IG9mIHRoZSB2ZWN0b3IgaXMgZXhlY3V0ZWQgd2l0aCB0aGUgcmVtYWluaW5nCiAgICogZWxlbWVudHMgYXMgdGhlIGFyZ3VtZW50IGxpc3QuCiAgICoKICAgKiBAdGhyb3dzIHN0ZGVycgogICAqIEByZXR1cm4gc3Rkb3V0IG9mIHRoZSBzdWJwcm9jZXNzCiAgICovCiAgc3RhdGljIGV4ZWN2KGNtZCkgewogICAgY29uc3QgcHJvY2VzcyA9IEdpbzQuU3VicHJvY2Vzcy5uZXcoCiAgICAgIGNtZCwKICAgICAgR2lvNC5TdWJwcm9jZXNzRmxhZ3MuU1RERVJSX1BJUEUgfCBHaW80LlN1YnByb2Nlc3NGbGFncy5TVERPVVRfUElQRQogICAgKTsKICAgIGNvbnN0IFssIG91dCwgZXJyXSA9IHByb2Nlc3MuY29tbXVuaWNhdGVfdXRmOChudWxsLCBudWxsKTsKICAgIGlmIChwcm9jZXNzLmdldF9zdWNjZXNzZnVsKCkpIHsKICAgICAgcmV0dXJuIG91dC50cmltKCk7CiAgICB9IGVsc2UgewogICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyKTsKICAgIH0KICB9CiAgLyoqCiAgICogRXhlY3V0ZSBhIGNvbW1hbmQgc3luY2hyb25vdXNseS4KICAgKiBUaGUgY29tbWFuZCBpcyBwYXJzZWQgdXNpbmcge0BsaW5rIEdMaWIuc2hlbGxfcGFyc2VfYXJndn0uCiAgICoKICAgKiBAdGhyb3dzIHN0ZGVycgogICAqIEByZXR1cm4gc3Rkb3V0IG9mIHRoZSBzdWJwcm9jZXNzCiAgICovCiAgc3RhdGljIGV4ZWMoY21kKSB7CiAgICBjb25zdCBbLCBhcmd2XSA9IEdMaWI1LnNoZWxsX3BhcnNlX2FyZ3YoY21kKTsKICAgIHJldHVybiBfUHJvY2Vzcy5leGVjdihhcmd2KTsKICB9CiAgLyoqCiAgICogRXhlY3V0ZSBhIGNvbW1hbmQgYXN5bmNocm9ub3VzbHkuCiAgICogVGhlIGZpcnN0IGVsZW1lbnQgb2YgdGhlIHZlY3RvciBpcyBleGVjdXRlZCB3aXRoIHRoZSByZW1haW5pbmcKICAgKiBlbGVtZW50cyBhcyB0aGUgYXJndW1lbnQgbGlzdC4KICAgKgogICAqIEB0aHJvd3Mgc3RkZXJyCiAgICogQHJldHVybiBzdGRvdXQgb2YgdGhlIHN1YnByb2Nlc3MKICAgKi8KICBzdGF0aWMgZXhlY0FzeW5jdihjbWQpIHsKICAgIGNvbnN0IHByb2Nlc3MgPSBHaW80LlN1YnByb2Nlc3MubmV3KAogICAgICBjbWQsCiAgICAgIEdpbzQuU3VicHJvY2Vzc0ZsYWdzLlNUREVSUl9QSVBFIHwgR2lvNC5TdWJwcm9jZXNzRmxhZ3MuU1RET1VUX1BJUEUKICAgICk7CiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgICBwcm9jZXNzLmNvbW11bmljYXRlX3V0ZjhfYXN5bmMobnVsbCwgbnVsbCwgKF8sIHJlcykgPT4gewogICAgICAgIHRyeSB7CiAgICAgICAgICBjb25zdCBbLCBvdXQsIGVycl0gPSBwcm9jZXNzLmNvbW11bmljYXRlX3V0ZjhfZmluaXNoKHJlcyk7CiAgICAgICAgICBpZiAocHJvY2Vzcy5nZXRfc3VjY2Vzc2Z1bCgpKSB7CiAgICAgICAgICAgIHJldHVybiByZXNvbHZlKG91dC50cmltKCkpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihlcnIudHJpbSgpKSk7CiAgICAgICAgICB9CiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0pOwogIH0KICAvKioKICAgKiBFeGVjdXRlIGEgY29tbWFuZCBhc3luY2hyb25vdXNseS4KICAgKiBUaGUgY29tbWFuZCBpcyBwYXJzZWQgdXNpbmcge0BsaW5rIEdMaWIuc2hlbGxfcGFyc2VfYXJndn0uCiAgICoKICAgKiBAdGhyb3dzIHN0ZGVycgogICAqIEByZXR1cm4gc3Rkb3V0IG9mIHRoZSBzdWJwcm9jZXNzCiAgICovCiAgc3RhdGljIGV4ZWNBc3luYyhjbWQpIHsKICAgIGNvbnN0IFssIGFyZ3ZdID0gR0xpYjUuc2hlbGxfcGFyc2VfYXJndihjbWQpOwogICAgcmV0dXJuIF9Qcm9jZXNzLmV4ZWNBc3luY3YoYXJndik7CiAgfQp9OwpfaW5pdDMgPSBfX2RlY29yYXRvclN0YXJ0KF9hNSk7Cl9lbmNvZGVyID0gbmV3IFdlYWtNYXAoKTsKX291dFN0cmVhbSA9IG5ldyBXZWFrTWFwKCk7Cl9lcnJTdHJlYW0gPSBuZXcgV2Vha01hcCgpOwpfaW5TdHJlYW0gPSBuZXcgV2Vha01hcCgpOwpfcHJvY2VzcyA9IG5ldyBXZWFrTWFwKCk7Cl9Qcm9jZXNzX2luc3RhbmNlcyA9IG5ldyBXZWFrU2V0KCk7CnJlYWRTdHJlYW1fZm4gPSBmdW5jdGlvbihzdHJlYW0pIHsKICBzdHJlYW0ucmVhZF9saW5lX2FzeW5jKEdMaWI1LlBSSU9SSVRZX0RFRkFVTFQsIG51bGwsIChfLCByZXMpID0+IHsKICAgIHRyeSB7CiAgICAgIGNvbnN0IFtvdXRwdXRdID0gc3RyZWFtLnJlYWRfbGluZV9maW5pc2hfdXRmOChyZXMpOwogICAgICBpZiAob3V0cHV0ICE9PSBudWxsKSB7CiAgICAgICAgaWYgKHN0cmVhbSA9PT0gX19wcml2YXRlR2V0KHRoaXMsIF9lcnJTdHJlYW0pKSB7CiAgICAgICAgICB0aGlzLnN0ZGVycihvdXRwdXQudHJpbSgpKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5zdGRvdXQob3V0cHV0LnRyaW0oKSk7CiAgICAgICAgfQogICAgICAgIF9fcHJpdmF0ZU1ldGhvZCh0aGlzLCBfUHJvY2Vzc19pbnN0YW5jZXMsIHJlYWRTdHJlYW1fZm4pLmNhbGwodGhpcywgc3RyZWFtKTsKICAgICAgfQogICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICB9CiAgfSk7Cn07Cl9fZGVjb3JhdGVFbGVtZW50KF9pbml0MywgMSwgInN0ZG91dCIsIF9zdGRvdXRfZGVjLCBfUHJvY2Vzcyk7Cl9fZGVjb3JhdGVFbGVtZW50KF9pbml0MywgMSwgInN0ZGVyciIsIF9zdGRlcnJfZGVjLCBfUHJvY2Vzcyk7Cl9fZGVjb3JhdGVFbGVtZW50KF9pbml0MywgMSwgImV4aXQiLCBfZXhpdF9kZWMsIF9Qcm9jZXNzKTsKX1Byb2Nlc3MgPSBfX2RlY29yYXRlRWxlbWVudChfaW5pdDMsIDAsICJQcm9jZXNzIiwgX1Byb2Nlc3NfZGVjb3JhdG9ycywgX1Byb2Nlc3MpOwpfX3J1bkluaXRpYWxpemVycyhfaW5pdDMsIDEsIF9Qcm9jZXNzKTsKdmFyIFByb2Nlc3MgPSBfUHJvY2VzczsKZnVuY3Rpb24gZXhlY0FzeW5jKGNtZCkgewogIGlmIChBcnJheS5pc0FycmF5KGNtZCkpIHsKICAgIHJldHVybiBQcm9jZXNzLmV4ZWNBc3luY3YoY21kKTsKICB9IGVsc2UgewogICAgcmV0dXJuIFByb2Nlc3MuZXhlY0FzeW5jKGNtZCk7CiAgfQp9CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi90aW1lLnRzCnZhciBfY2FuY2VsbGVkX2RlYywgX25vd19kZWMsIF9hNiwgX1RpbWVyX2RlY29yYXRvcnMsIF9pbml0NDsKX1RpbWVyX2RlY29yYXRvcnMgPSBbcmVnaXN0ZXIoKV07CnZhciBfVGltZXIgPSBjbGFzcyBfVGltZXIgZXh0ZW5kcyAoX2E2ID0gR09iamVjdC5PYmplY3QsIF9ub3dfZGVjID0gW3NpZ25hbCgpXSwgX2NhbmNlbGxlZF9kZWMgPSBbc2lnbmFsKCldLCBfYTYpIHsKICBjb25zdHJ1Y3RvcigpIHsKICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7CiAgICBfX3J1bkluaXRpYWxpemVycyhfaW5pdDQsIDUsIHRoaXMpOwogIH0KICBub3coKSB7CiAgfQogIGNhbmNlbGxlZCgpIHsKICB9CiAgc3RhdGljIGludGVydmFsKGludGVydmFsMiwgY2FsbGJhY2spIHsKICAgIGNvbnN0IHsgdGltZXIsIG5vdyB9ID0gX1RpbWVyLm5ldyhjYWxsYmFjaywgKCkgPT4gewogICAgICBpZiAoaW1tZWRpYXRlLmlzX2Rlc3Ryb3llZCgpKSBpbW1lZGlhdGUuZGVzdHJveSgpOwogICAgICBpZiAoc291cmNlLmlzX2Rlc3Ryb3llZCgpKSBzb3VyY2UuZGVzdHJveSgpOwogICAgfSk7CiAgICBjb25zdCBpbW1lZGlhdGUgPSBzZXRUaW1lb3V0KG5vdyk7CiAgICBjb25zdCBzb3VyY2UgPSBzZXRJbnRlcnZhbChub3csIGludGVydmFsMik7CiAgICByZXR1cm4gdGltZXI7CiAgfQogIHN0YXRpYyB0aW1lb3V0KGludGVydmFsMiwgY2FsbGJhY2spIHsKICAgIGNvbnN0IHsgdGltZXIsIG5vdyB9ID0gX1RpbWVyLm5ldyhjYWxsYmFjaywgKCkgPT4gewogICAgICBpZiAoc291cmNlLmlzX2Rlc3Ryb3llZCgpKSBzb3VyY2UuZGVzdHJveSgpOwogICAgfSk7CiAgICBjb25zdCBzb3VyY2UgPSBzZXRUaW1lb3V0KG5vdywgaW50ZXJ2YWwyKTsKICAgIHJldHVybiB0aW1lcjsKICB9CiAgc3RhdGljIGlkbGUoY2FsbGJhY2spIHsKICAgIGNvbnN0IHsgdGltZXIsIG5vdyB9ID0gX1RpbWVyLm5ldyhjYWxsYmFjaywgKCkgPT4gewogICAgICBpZiAoc291cmNlLmlzX2Rlc3Ryb3llZCgpKSBzb3VyY2UuZGVzdHJveSgpOwogICAgfSk7CiAgICBjb25zdCBzb3VyY2UgPSBzZXRUaW1lb3V0KG5vdyk7CiAgICByZXR1cm4gdGltZXI7CiAgfQogIHN0YXRpYyBuZXcob25Ob3csIG9uQ2FuY2VsbGVkKSB7CiAgICBjb25zdCB0aW1lciA9IG5ldyBfVGltZXIoKTsKICAgIGNvbnN0IG5vdyA9IHRpbWVyLmNvbm5lY3QoIm5vdyIsICgpID0+IHZvaWQgb25Ob3c/LigpKTsKICAgIGNvbnN0IGNhbmNlbGxlZCA9IHRpbWVyLmNvbm5lY3QoImNhbmNlbGxlZCIsICgpID0+IHsKICAgICAgdGltZXIuZGlzY29ubmVjdChub3cpOwogICAgICB0aW1lci5kaXNjb25uZWN0KGNhbmNlbGxlZCk7CiAgICAgIG9uQ2FuY2VsbGVkPy4oKTsKICAgIH0pOwogICAgcmV0dXJuIHsgdGltZXIsIG5vdzogKCkgPT4gdGltZXIubm93KCkgfTsKICB9CiAgY29ubmVjdChzaWduYWwyLCBjYWxsYmFjaykgewogICAgcmV0dXJuIHN1cGVyLmNvbm5lY3Qoc2lnbmFsMiwgY2FsbGJhY2spOwogIH0KICBjYW5jZWwoKSB7CiAgICB0aGlzLmNhbmNlbGxlZCgpOwogIH0KfTsKX2luaXQ0ID0gX19kZWNvcmF0b3JTdGFydChfYTYpOwpfX2RlY29yYXRlRWxlbWVudChfaW5pdDQsIDEsICJub3ciLCBfbm93X2RlYywgX1RpbWVyKTsKX19kZWNvcmF0ZUVsZW1lbnQoX2luaXQ0LCAxLCAiY2FuY2VsbGVkIiwgX2NhbmNlbGxlZF9kZWMsIF9UaW1lcik7Cl9UaW1lciA9IF9fZGVjb3JhdGVFbGVtZW50KF9pbml0NCwgMCwgIlRpbWVyIiwgX1RpbWVyX2RlY29yYXRvcnMsIF9UaW1lcik7Cl9fcnVuSW5pdGlhbGl6ZXJzKF9pbml0NCwgMSwgX1RpbWVyKTsKdmFyIFRpbWVyID0gX1RpbWVyOwp2YXIgeyBpbnRlcnZhbCwgdGltZW91dCwgaWRsZSB9ID0gVGltZXI7CmZ1bmN0aW9uIGNyZWF0ZVBvbGwoaW5pdCwgaXZhbCwgZXhlY09yRm4sIHRyYW5zZm9ybSkgewogIGxldCBjdXJyZW50VmFsdWUgPSBpbml0OwogIGxldCB0aW1lciA9IG51bGw7CiAgY29uc3Qgc3Vic2NyaWJlcnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpOwogIGZ1bmN0aW9uIHNldDIodmFsdWUpIHsKICAgIGlmICh2YWx1ZSAhPT0gY3VycmVudFZhbHVlKSB7CiAgICAgIGN1cnJlbnRWYWx1ZSA9IHZhbHVlOwogICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSk7CiAgICB9CiAgfQogIGZ1bmN0aW9uIGNvbXB1dGUoKSB7CiAgICBpZiAodHlwZW9mIGV4ZWNPckZuID09PSAiZnVuY3Rpb24iKSB7CiAgICAgIGNvbnN0IHZhbHVlID0gZXhlY09yRm4oY3VycmVudFZhbHVlKTsKICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgUHJvbWlzZSkgewogICAgICAgIHZhbHVlLnRoZW4oc2V0Mik7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgc2V0Mih2YWx1ZSk7CiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIGV4ZWNBc3luYyhleGVjT3JGbikudGhlbigoc3Rkb3V0KSA9PiB7CiAgICAgICAgc2V0Mih0cmFuc2Zvcm0gPyB0cmFuc2Zvcm0oc3Rkb3V0LCBjdXJyZW50VmFsdWUpIDogc3Rkb3V0KTsKICAgICAgfSk7CiAgICB9CiAgfQogIGZ1bmN0aW9uIHN1YnNjcmliZShjYWxsYmFjaykgewogICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHsKICAgICAgc2V0VGltZW91dChjb21wdXRlKTsKICAgICAgdGltZXIgPSBzZXRJbnRlcnZhbChjb21wdXRlLCBpdmFsKTsKICAgIH0KICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjayk7CiAgICByZXR1cm4gKCkgPT4gewogICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spOwogICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCAmJiB0aW1lcikgewogICAgICAgIGNsZWFySW50ZXJ2YWwodGltZXIpOwogICAgICAgIHRpbWVyID0gbnVsbDsKICAgICAgfQogICAgfTsKICB9CiAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiBjdXJyZW50VmFsdWUsIHN1YnNjcmliZSk7Cn0KCi8vIHdpZGdldC9CYXIudHN4CmltcG9ydCBHTGliNyBmcm9tICJnaTovL0dMaWIiOwoKLy8gd2lkZ2V0L1N5c3RlbVRyYXkvU3lzVHJheS50c3gKaW1wb3J0IEFzdGFsVHJheSBmcm9tICJnaTovL0FzdGFsVHJheSI7CmZ1bmN0aW9uIFN5c1RyYXkoeyBpY29uU2l6ZSA9IDE2LCBzcGFjaW5nID0gMTAgfSkgewogIGNvbnN0IHRyYXkgPSBBc3RhbFRyYXkuVHJheS5nZXRfZGVmYXVsdCgpOwogIGNvbnN0IHRyYXlCb3ggPSBuZXcgR3RrMi5Cb3goeyBvcmllbnRhdGlvbjogR3RrMi5PcmllbnRhdGlvbi5IT1JJWk9OVEFMLCBzcGFjaW5nIH0pOwogIGNvbnN0IHRyYXlJY29ucyA9IFtdOwogIGZ1bmN0aW9uIHVwZGF0ZVRyYXlJdGVtcygpIHsKICAgIGZvciAoY29uc3QgaWNvbiBvZiB0cmF5SWNvbnMpIHsKICAgICAgdHJheUJveC5yZW1vdmUoaWNvbik7CiAgICB9CiAgICB0cmF5SWNvbnMubGVuZ3RoID0gMDsKICAgIGNvbnN0IGl0ZW1zID0gdHJheS5nZXRfaXRlbXMoKTsKICAgIGZvciAoY29uc3QgaXRlbSBvZiBpdGVtcykgewogICAgICBjb25zdCBpY29uID0gaXRlbS5nZXRfZ2ljb24oKTsKICAgICAgaWYgKCFpY29uKSBjb250aW51ZTsKICAgICAgY29uc3QgaW1hZ2UgPSBuZXcgR3RrMi5JbWFnZSh7IGdpY29uOiBpY29uLCBwaXhlbF9zaXplOiBpY29uU2l6ZSB9KTsKICAgICAgY29uc3QgZ2VzdHVyZSA9IG5ldyBHdGsyLkdlc3R1cmVDbGljayh7IGJ1dHRvbjogMyB9KTsKICAgICAgZ2VzdHVyZS5jb25uZWN0KCJwcmVzc2VkIiwgKCkgPT4gewogICAgICAgIGNvbnN0IG1lbnVNb2RlbCA9IGl0ZW0uZ2V0X21lbnVfbW9kZWwoKTsKICAgICAgICBpZiAobWVudU1vZGVsKSB7CiAgICAgICAgICBjb25zdCBwb3BvdmVyTWVudSA9IG5ldyBHdGsyLlBvcG92ZXJNZW51KHsgbWVudV9tb2RlbDogbWVudU1vZGVsLCBoYXNfYXJyb3c6IGZhbHNlIH0pOwogICAgICAgICAgcG9wb3Zlck1lbnUuc2V0X3BhcmVudChpbWFnZSk7CiAgICAgICAgICBwb3BvdmVyTWVudS5pbnNlcnRfYWN0aW9uX2dyb3VwKCJkYnVzbWVudSIsIGl0ZW0uZ2V0X2FjdGlvbl9ncm91cCgpKTsKICAgICAgICAgIHBvcG92ZXJNZW51LnBvcHVwKCk7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgaW1hZ2UuYWRkX2NvbnRyb2xsZXIoZ2VzdHVyZSk7CiAgICAgIHRyYXlCb3guYXBwZW5kKGltYWdlKTsKICAgICAgdHJheUljb25zLnB1c2goaW1hZ2UpOwogICAgfQogIH0KICB1cGRhdGVUcmF5SXRlbXMoKTsKICB0cmF5LmNvbm5lY3QoIml0ZW0tYWRkZWQiLCB1cGRhdGVUcmF5SXRlbXMpOwogIHRyYXkuY29ubmVjdCgiaXRlbS1yZW1vdmVkIiwgdXBkYXRlVHJheUl0ZW1zKTsKICByZXR1cm4gdHJheUJveDsKfQoKLy8gLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvZ3RrNC9qc3gtcnVudGltZS50cwppbXBvcnQgR3RrNCBmcm9tICJnaTovL0d0az92ZXJzaW9uPTQuMCI7CmltcG9ydCBBc3RhbDIgZnJvbSAiZ2k6Ly9Bc3RhbD92ZXJzaW9uPTQuMCI7CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvZ3RrNC9qc3gtcnVudGltZS50cwppbXBvcnQgR3RrMyBmcm9tICJnaTovL0d0az92ZXJzaW9uPTQuMCI7CmltcG9ydCBHaW81IGZyb20gImdpOi8vR2lvP3ZlcnNpb249Mi4wIjsKdmFyIGFkdyA9IGF3YWl0IGltcG9ydCgiZ2k6Ly9BZHciKS50aGVuKChtKSA9PiBtLmRlZmF1bHQpLmNhdGNoKCgpID0+IG51bGwpOwp2YXIgZHVtbXlCdWlsZGVyID0gbmV3IEd0azMuQnVpbGRlcigpOwp2YXIgeyBpbnRyaW5zaWNFbGVtZW50cyB9ID0gY29uZmlndWUoewogIGluaXRQcm9wcyhjdG9yKSB7CiAgICBpZiAoY3RvciA9PT0gR3RrMy5TdGFjaykgewogICAgICBjb25zdCBrZXlzID0gWwogICAgICAgICJ2aXNpYmxlQ2hpbGROYW1lIiwKICAgICAgICAidmlzaWJsZV9jaGlsZF9uYW1lIgogICAgICBdOwogICAgICByZXR1cm4ga2V5czsKICAgIH0KICAgIGlmIChhZHcgJiYgY3RvciA9PT0gYWR3LlRvZ2dsZUdyb3VwKSB7CiAgICAgIGNvbnN0IGtleXMgPSBbCiAgICAgICAgImFjdGl2ZSIsCiAgICAgICAgImFjdGl2ZU5hbWUiLAogICAgICAgICJhY3RpdmVfbmFtZSIKICAgICAgXTsKICAgICAgcmV0dXJuIGtleXM7CiAgICB9CiAgfSwKICBzZXRDc3Mob2JqZWN0LCBjc3MpIHsKICAgIGlmICghKG9iamVjdCBpbnN0YW5jZW9mIEd0azMuV2lkZ2V0KSkgewogICAgICByZXR1cm4gY29uc29sZS53YXJuKEVycm9yKGBjYW5ub3Qgc2V0IGNzcyBvbiAke29iamVjdH1gKSk7CiAgICB9CiAgICBjb25zdCBjdHggPSBvYmplY3QuZ2V0X3N0eWxlX2NvbnRleHQoKTsKICAgIGxldCBwcm92aWRlcjsKICAgIGNvbnN0IHNldHRlcjIgPSAoY3NzMikgPT4gewogICAgICBpZiAoIWNzczIuaW5jbHVkZXMoInsiKSB8fCAhY3NzMi5pbmNsdWRlcygifSIpKSB7CiAgICAgICAgY3NzMiA9IGAqIHsgJHtjc3MyfSB9YDsKICAgICAgfQogICAgICBpZiAocHJvdmlkZXIpIGN0eC5yZW1vdmVfcHJvdmlkZXIocHJvdmlkZXIpOwogICAgICBwcm92aWRlciA9IG5ldyBHdGszLkNzc1Byb3ZpZGVyKCk7CiAgICAgIHByb3ZpZGVyLmxvYWRfZnJvbV9zdHJpbmcoY3NzMik7CiAgICAgIGN0eC5hZGRfcHJvdmlkZXIocHJvdmlkZXIsIEd0azMuU1RZTEVfUFJPVklERVJfUFJJT1JJVFlfVVNFUik7CiAgICB9OwogICAgaWYgKGNzcyBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7CiAgICAgIHNldHRlcjIoY3NzLmdldCgpKTsKICAgICAgY29uc3QgZGlzcG9zZSA9IGNzcy5zdWJzY3JpYmUoKCkgPT4gc2V0dGVyMihjc3MuZ2V0KCkpKTsKICAgICAgb25DbGVhbnVwKGRpc3Bvc2UpOwogICAgfSBlbHNlIHsKICAgICAgc2V0dGVyMihjc3MpOwogICAgfQogIH0sCiAgc2V0Q2xhc3Mob2JqZWN0LCBjbGFzc05hbWUpIHsKICAgIGlmICghKG9iamVjdCBpbnN0YW5jZW9mIEd0azMuV2lkZ2V0KSkgewogICAgICByZXR1cm4gY29uc29sZS53YXJuKEVycm9yKGBjYW5ub3Qgc2V0IGNsYXNzTmFtZSBvbiAke29iamVjdH1gKSk7CiAgICB9CiAgICBpZiAoY2xhc3NOYW1lIGluc3RhbmNlb2YgQWNjZXNzb3IpIHsKICAgICAgb2JqZWN0LmNzc0NsYXNzZXMgPSBjbGFzc05hbWUuZ2V0KCkuc3BsaXQoL1xzKy8pOwogICAgICBjb25zdCBkaXNwb3NlID0gY2xhc3NOYW1lLnN1YnNjcmliZSgKICAgICAgICAoKSA9PiBvYmplY3QuY3NzQ2xhc3NlcyA9IGNsYXNzTmFtZS5nZXQoKS5zcGxpdCgvXHMrLykKICAgICAgKTsKICAgICAgb25DbGVhbnVwKGRpc3Bvc2UpOwogICAgfSBlbHNlIHsKICAgICAgb2JqZWN0LnNldF9jc3NfY2xhc3NlcyhjbGFzc05hbWUuc3BsaXQoL1xzKy8pKTsKICAgIH0KICB9LAogIHRleHROb2RlKHRleHQpIHsKICAgIHJldHVybiBHdGszLkxhYmVsLm5ldyh0ZXh0LnRvU3RyaW5nKCkpOwogIH0sCiAgLy8gYHNldF9jaGlsZGAgYW5kIGVzcGVjaWFsbHkgYHJlbW92ZWAgbWlnaHQgYmUgd2F5IHRvbyBnZW5lcmljIGFuZCB0aGVyZSBtaWdodAogIC8vIGJlIGNhc2VzIHdoZXJlIGl0IGRvZXMgbm90IGFjdHVhbGx5IGRvIHdoYXQgd2Ugd2FudCBpdCB0byBkbwogIC8vCiAgLy8gaWYgdGhlcmUgaXMgYSB1c2VjYXNlIGZvciBlaXRoZXIgb2YgdGhlc2UgdHdvIHRoYXQgZG9lcyBzb21ldGhpbmcgZWxzZSB0aGFuCiAgLy8gd2UgZXhwZWN0IGl0IHRvIGRvIGhlcmUgaW4gYSBKU1ggY29udGV4dCB3ZSBoYXZlIHRvIGNoZWNrIGZvciBrbm93biBpbnN0YW5jZXMKICByZW1vdmVDaGlsZChwYXJlbnQsIGNoaWxkKSB7CiAgICBpZiAocGFyZW50IGluc3RhbmNlb2YgR3RrMy5XaWRnZXQgJiYgY2hpbGQgaW5zdGFuY2VvZiBHdGszLkV2ZW50Q29udHJvbGxlcikgewogICAgICByZXR1cm4gcGFyZW50LnJlbW92ZV9jb250cm9sbGVyKGNoaWxkKTsKICAgIH0KICAgIGlmICgic2V0X2NoaWxkIiBpbiBwYXJlbnQgJiYgdHlwZW9mIHBhcmVudC5zZXRfY2hpbGQgPT0gImZ1bmN0aW9uIikgewogICAgICByZXR1cm4gcGFyZW50LnNldF9jaGlsZChudWxsKTsKICAgIH0KICAgIGlmICgicmVtb3ZlIiBpbiBwYXJlbnQgJiYgdHlwZW9mIHBhcmVudC5yZW1vdmUgPT0gImZ1bmN0aW9uIikgewogICAgICByZXR1cm4gcGFyZW50LnJlbW92ZShjaGlsZCk7CiAgICB9CiAgICB0aHJvdyBFcnJvcihgY2Fubm90IHJlbW92ZSAke2NoaWxkfSBmcm9tICR7cGFyZW50fWApOwogIH0sCiAgYXBwZW5kQ2hpbGQocGFyZW50LCBjaGlsZCkgewogICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrMy5BZGp1c3RtZW50ICYmICJzZXRfYWRqdXN0bWVudCIgaW4gcGFyZW50ICYmIHR5cGVvZiBwYXJlbnQuc2V0X2FkanVzdG1lbnQgPT09ICJmdW5jdGlvbiIpIHsKICAgICAgcmV0dXJuIHBhcmVudC5zZXRfYWRqdXN0bWVudChjaGlsZCk7CiAgICB9CiAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHdGszLldpZGdldCAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHdGszLlN0YWNrICYmIGNoaWxkLm5hbWUgIT09ICIiICYmIGNoaWxkLm5hbWUgIT09IG51bGwgJiYgZ2V0VHlwZShjaGlsZCkgPT09ICJuYW1lZCIpIHsKICAgICAgcmV0dXJuIHBhcmVudC5hZGRfbmFtZWQoY2hpbGQsIGNoaWxkLm5hbWUpOwogICAgfQogICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrMy5Qb3BvdmVyICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0azMuTWVudUJ1dHRvbikgewogICAgICByZXR1cm4gcGFyZW50LnNldF9wb3BvdmVyKGNoaWxkKTsKICAgIH0KICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEdpbzUuTWVudU1vZGVsICYmIChwYXJlbnQgaW5zdGFuY2VvZiBHdGszLk1lbnVCdXR0b24gfHwgcGFyZW50IGluc3RhbmNlb2YgR3RrMy5Qb3BvdmVyTWVudSkpIHsKICAgICAgcmV0dXJuIHBhcmVudC5zZXRfbWVudV9tb2RlbChjaGlsZCk7CiAgICB9CiAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHaW81Lk1lbnVJdGVtICYmIHBhcmVudCBpbnN0YW5jZW9mIEdpbzUuTWVudSkgewogICAgfQogICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrMy5XaW5kb3cgJiYgcGFyZW50IGluc3RhbmNlb2YgR3RrMy5BcHBsaWNhdGlvbikgewogICAgICByZXR1cm4gcGFyZW50LmFkZF93aW5kb3coY2hpbGQpOwogICAgfQogICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrMy5UZXh0QnVmZmVyICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0azMuVGV4dFZpZXcpIHsKICAgICAgcmV0dXJuIHBhcmVudC5zZXRfYnVmZmVyKGNoaWxkKTsKICAgIH0KICAgIGlmIChwYXJlbnQgaW5zdGFuY2VvZiBHdGszLkJ1aWxkYWJsZSkgewogICAgICByZXR1cm4gcGFyZW50LnZmdW5jX2FkZF9jaGlsZChkdW1teUJ1aWxkZXIsIGNoaWxkLCBnZXRUeXBlKGNoaWxkKSk7CiAgICB9CiAgICB0aHJvdyBFcnJvcihgY2Fubm90IGFkZCAke2NoaWxkfSB0byAke3BhcmVudH1gKTsKICB9Cn0pOwoKLy8gLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvZ3RrNC9qc3gtcnVudGltZS50cwpPYmplY3QuYXNzaWduKGludHJpbnNpY0VsZW1lbnRzLCB7CiAgYm94OiBHdGs0LkJveCwKICBidXR0b246IEd0azQuQnV0dG9uLAogIGNlbnRlcmJveDogR3RrNC5DZW50ZXJCb3gsCiAgLy8gY2lyY3VsYXJwcm9ncmVzczogQXN0YWwuQ2lyY3VsYXJQcm9ncmVzcywKICBkcmF3aW5nYXJlYTogR3RrNC5EcmF3aW5nQXJlYSwKICBlbnRyeTogR3RrNC5FbnRyeSwKICBpbWFnZTogR3RrNC5JbWFnZSwKICBsYWJlbDogR3RrNC5MYWJlbCwKICBsZXZlbGJhcjogR3RrNC5MZXZlbEJhciwKICBtZW51YnV0dG9uOiBHdGs0Lk1lbnVCdXR0b24sCiAgb3ZlcmxheTogR3RrNC5PdmVybGF5LAogIHBvcG92ZXI6IEd0azQuUG9wb3ZlciwKICByZXZlYWxlcjogR3RrNC5SZXZlYWxlciwKICBzY3JvbGxlZHdpbmRvdzogR3RrNC5TY3JvbGxlZFdpbmRvdywKICBzbGlkZXI6IEFzdGFsMi5TbGlkZXIsCiAgc3RhY2s6IEd0azQuU3RhY2ssCiAgc3dpdGNoOiBHdGs0LlN3aXRjaCwKICB0b2dnbGVidXR0b246IEd0azQuVG9nZ2xlQnV0dG9uLAogIHdpbmRvdzogQXN0YWwyLldpbmRvdwp9KTsKCi8vIHdpZGdldC9TeXN0ZW1UcmF5L1N5c1RyYXlCdXR0b24udHN4CmZ1bmN0aW9uIFN5c1RyYXlCdXR0b24oKSB7CiAgY29uc3QgcG9wb3ZlciA9IC8qIEBfX1BVUkVfXyAqLyBqc3goInBvcG92ZXIiLCB7IGNsYXNzOiAic3lzdHJheW1lbnUiLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeChTeXNUcmF5LCB7fSkgfSk7CiAgY29uc3QgYnV0dG9uID0gLyogQF9fUFVSRV9fICovIGpzeCgKICAgICJtZW51YnV0dG9uIiwKICAgIHsKICAgICAgY2xhc3M6ICJzeXN0cmF5YnV0dG9uIiwKICAgICAgZGlyZWN0aW9uOiBHdGsyLkFycm93VHlwZS5VUCwKICAgICAgY2hpbGRyZW46IHBvcG92ZXIKICAgIH0KICApOwogIHBvcG92ZXIuY29ubmVjdCgic2hvdyIsICgpID0+IHsKICAgIGJ1dHRvbi5kaXJlY3Rpb24gPSBHdGsyLkFycm93VHlwZS5ET1dOOwogIH0pOwogIHBvcG92ZXIuY29ubmVjdCgiaGlkZSIsICgpID0+IHsKICAgIGJ1dHRvbi5kaXJlY3Rpb24gPSBHdGsyLkFycm93VHlwZS5VUDsKICB9KTsKICByZXR1cm4gYnV0dG9uOwp9CgovLyB3aWRnZXQvVXRpbGl0aWVzL3ZvbHVtZWluZGljYXRvci50c3gKaW1wb3J0IFdwIGZyb20gImdpOi8vQXN0YWxXcCI7CmZ1bmN0aW9uIFZvbHVtZUluZGljYXRvcigpIHsKICBjb25zdCBhdWRpbyA9IFdwLmdldF9kZWZhdWx0KCk7CiAgY29uc3QgbGFiZWwgPSBuZXcgR3RrMi5MYWJlbCh7CiAgICBoYWxpZ246IEd0azIuQWxpZ24uRU5ECiAgfSk7CiAgY29uc3QgdXBkYXRlSWNvbiA9ICgpID0+IHsKICAgIGNvbnN0IHNwZWFrZXIgPSBhdWRpby5nZXRfZGVmYXVsdF9zcGVha2VyKCk7CiAgICBpZiAoIXNwZWFrZXIpIHJldHVybjsKICAgIGlmIChzcGVha2VyLm11dGUpIHsKICAgICAgbGFiZWwubGFiZWwgPSAiXHVFRUU4IjsKICAgIH0gZWxzZSBpZiAoc3BlYWtlci52b2x1bWUgPD0gMC4zMykgewogICAgICBsYWJlbC5sYWJlbCA9ICJcdUYwMjYiOwogICAgfSBlbHNlIGlmIChzcGVha2VyLnZvbHVtZSA8PSAwLjY2KSB7CiAgICAgIGxhYmVsLmxhYmVsID0gIlx1RjAyNyI7CiAgICB9IGVsc2UgewogICAgICBsYWJlbC5sYWJlbCA9ICJcdUYwMjgiOwogICAgfQogIH07CiAgdXBkYXRlSWNvbigpOwogIGF1ZGlvLmdldF9kZWZhdWx0X3NwZWFrZXIoKS5jb25uZWN0KCJub3RpZnk6OnZvbHVtZSIsIHVwZGF0ZUljb24pOwogIGF1ZGlvLmdldF9kZWZhdWx0X3NwZWFrZXIoKS5jb25uZWN0KCJub3RpZnk6Om11dGUiLCB1cGRhdGVJY29uKTsKICByZXR1cm4gbGFiZWw7Cn0KCi8vIHdpZGdldC9IaWRlV2luZG93c0J1dHRvbi50c3gKaW1wb3J0IEh5cHJsYW5kIGZyb20gImdpOi8vQXN0YWxIeXBybGFuZCI7CmZ1bmN0aW9uIEhpZGVXaW5kb3dzQnV0dG9uKCkgewogIGNvbnN0IGh5cHIgPSBIeXBybGFuZC5nZXRfZGVmYXVsdCgpOwogIGxldCBhcmVIaWRkZW4gPSBmYWxzZTsKICBjb25zdCB3aW5kb3dXb3Jrc3BhY2VNYXAgPSB7fTsKICBjb25zdCBpY29uID0gbmV3IEd0azIuTGFiZWwoewogICAgbGFiZWw6ICJcdUYwNkUiCiAgICAvLyBvcGVuIGV5ZQogIH0pOwogIGNvbnN0IGJ1dHRvbiA9IG5ldyBHdGsyLkJ1dHRvbih7CiAgICBoYWxpZ246IEd0azIuQWxpZ24uRU5ELAogICAgY2hpbGQ6IGljb24KICB9KTsKICBidXR0b24uYWRkX2Nzc19jbGFzcygiaGlkZXdpbmRvd3NidXR0b24iKTsKICBidXR0b24uY29ubmVjdCgiY2xpY2tlZCIsICgpID0+IHsKICAgIGxldCBjbGllbnRzID0gaHlwci5nZXRfY2xpZW50cygpOwogICAgZm9yIChjb25zdCBjbGllbnQgb2YgY2xpZW50cykgewogICAgICBpZiAoYXJlSGlkZGVuKSB7CiAgICAgICAgY29uc3Qgd3MgPSB3aW5kb3dXb3Jrc3BhY2VNYXBbY2xpZW50LmFkZHJlc3NdOwogICAgICAgIGh5cHIubWVzc2FnZShgZGlzcGF0Y2ggbW92ZXRvd29ya3NwYWNlc2lsZW50ICR7d3N9LGFkZHJlc3M6MHgke2NsaWVudC5hZGRyZXNzfWApOwogICAgICAgIGRlbGV0ZSB3aW5kb3dXb3Jrc3BhY2VNYXBbY2xpZW50LmFkZHJlc3NdOwogICAgICB9IGVsc2UgewogICAgICAgIHdpbmRvd1dvcmtzcGFjZU1hcFtjbGllbnQuYWRkcmVzc10gPSBjbGllbnQud29ya3NwYWNlLmlkOwogICAgICAgIGh5cHIubWVzc2FnZShgZGlzcGF0Y2ggbW92ZXRvd29ya3NwYWNlc2lsZW50IHNwZWNpYWwsYWRkcmVzczoweCR7Y2xpZW50LmFkZHJlc3N9YCk7CiAgICAgIH0KICAgIH0KICAgIGFyZUhpZGRlbiA9ICFhcmVIaWRkZW47CiAgICBpY29uLmxhYmVsID0gYXJlSGlkZGVuID8gIlx1RjA3MCIgOiAiXHVGMDZFIjsKICB9KTsKICByZXR1cm4gYnV0dG9uOwp9CgovLyB3aWRnZXQvVXRpbGl0aWVzL25ldHdvcmtpbmRpY2F0b3IudHN4CmltcG9ydCBOZXR3b3JrIGZyb20gImdpOi8vQXN0YWxOZXR3b3JrIjsKaW1wb3J0IEdMaWI2IGZyb20gImdpOi8vR0xpYiI7CmZ1bmN0aW9uIE5ldHdvcmtJbmRpY2F0b3IoKSB7CiAgY29uc3QgbmV0d29yayA9IE5ldHdvcmsuZ2V0X2RlZmF1bHQoKTsKICBjb25zdCBsYWJlbCA9IG5ldyBHdGsyLkxhYmVsKHsKICAgIGhhbGlnbjogR3RrMi5BbGlnbi5FTkQKICB9KTsKICBjb25zdCB1cGRhdGVJY29uID0gKCkgPT4gewogICAgc3dpdGNoIChuZXR3b3JrLmdldF9wcmltYXJ5KCkpIHsKICAgICAgLy8gV2lyZWQgY29ubmVjdGlvbgogICAgICBjYXNlIDE6CiAgICAgICAgbGFiZWwubGFiZWwgPSAiXHV7RjAwMDJ9IjsKICAgICAgICBicmVhazsKICAgICAgLy8gV2lmaSBjb25uZWN0aW9uCiAgICAgIGNhc2UgMjoKICAgICAgICBsZXQgc3RyZW5ndGggPSBuZXR3b3JrLndpZmkuc3RyZW5ndGg7CiAgICAgICAgaWYgKHN0cmVuZ3RoID4gODApIHsKICAgICAgICAgIGxhYmVsLmxhYmVsID0gIlx1e0YwOTI4fSI7CiAgICAgICAgfSBlbHNlIGlmIChzdHJlbmd0aCA+IDYwKSB7CiAgICAgICAgICBsYWJlbC5sYWJlbCA9ICJcdXtGMDkyNX0iOwogICAgICAgIH0gZWxzZSBpZiAoc3RyZW5ndGggPiA0MCkgewogICAgICAgICAgbGFiZWwubGFiZWwgPSAiXHV7RjA5MjJ9IjsKICAgICAgICB9IGVsc2UgaWYgKHN0cmVuZ3RoID4gMjApIHsKICAgICAgICAgIGxhYmVsLmxhYmVsID0gIlx1e0YwOTFGfSI7CiAgICAgICAgfSBlbHNlIGlmIChzdHJlbmd0aCA+IDApIHsKICAgICAgICAgIGxhYmVsLmxhYmVsID0gIlx1e0YwOTJGfSI7CiAgICAgICAgfQogICAgICAgIGJyZWFrOwogICAgICAvLyBObyBjb25uZWN0aW9uIGRlZmF1bHQKICAgICAgZGVmYXVsdDoKICAgICAgICBsYWJlbC5sYWJlbCA9ICJcdXtGMDkyRX0iOwogICAgICAgIGJyZWFrOwogICAgfQogIH07CiAgdXBkYXRlSWNvbigpOwogIG5ldHdvcmsuY29ubmVjdCgibm90aWZ5OjpwcmltYXJ5IiwgdXBkYXRlSWNvbik7CiAgbmV0d29yay5jb25uZWN0KCJub3RpZnk6OnN0YXRlIiwgdXBkYXRlSWNvbik7CiAgbmV0d29yay5jb25uZWN0KCJub3RpZnk6OmRldmljZXMiLCB1cGRhdGVJY29uKTsKICBHTGliNi50aW1lb3V0X2FkZChHTGliNi5QUklPUklUWV9ERUZBVUxULCAxZTMsICgpID0+IHsKICAgIGlmIChuZXR3b3JrLmdldF9wcmltYXJ5KCkgPT09IDIpIHsKICAgICAgdXBkYXRlSWNvbigpOwogICAgfQogICAgcmV0dXJuIHRydWU7CiAgfSk7CiAgcmV0dXJuIGxhYmVsOwp9CgovLyB3aWRnZXQvVXRpbGl0aWVzL0JsdWV0b290aC9ibHVldG9vdGhtZW51LnRzeAppbXBvcnQgQmx1ZXRvb3RoIGZyb20gImdpOi8vQXN0YWxCbHVldG9vdGgiOwoKLy8gd2lkZ2V0L1V0aWxpdGllcy9CbHVldG9vdGgvZGV2aWNlcm93LnRzeApmdW5jdGlvbiBEZXZpY2VSb3coZGV2aWNlLCByZWZyZXNoRGV2aWNlcykgewogIGNvbnN0IGRldmljZU5hbWUgPSBkZXZpY2UuZ2V0X25hbWUoKSB8fCAiVW5rbm93biBEZXZpY2UiOwogIGNvbnN0IHN0YXR1c0xhYmVsID0gbmV3IEd0azIuTGFiZWwoewogICAgbGFiZWw6IGRldmljZS5nZXRfY29ubmVjdGVkKCkgPyAiQ29ubmVjdGVkIiA6ICJEaXNjb25uZWN0ZWQiLAogICAgaGFsaWduOiBHdGsyLkFsaWduLlNUQVJULAogICAgeGFsaWduOiAwCiAgfSk7CiAgc3RhdHVzTGFiZWwuYWRkX2Nzc19jbGFzcygic3RhdHVzTGFiZWwiKTsKICBjb25zdCBhY3Rpb25CdXR0b24gPSBuZXcgR3RrMi5CdXR0b24oewogICAgbGFiZWw6IGRldmljZS5nZXRfY29ubmVjdGVkKCkgPyAiRGlzY29ubmVjdCIgOiAiQ29ubmVjdCIsCiAgICBoYWxpZ246IEd0azIuQWxpZ24uRU5ECiAgfSk7CiAgbGV0IHRpbWVyID0gbnVsbDsKICBhY3Rpb25CdXR0b24uY29ubmVjdCgiY2xpY2tlZCIsICgpID0+IHsKICAgIGlmIChkZXZpY2UuZ2V0X2Nvbm5lY3RlZCgpKSB7CiAgICAgIHRyeSB7CiAgICAgICAgZGV2aWNlLmRpc2Nvbm5lY3RfZGV2aWNlKG51bGwpOwogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBwcmludChgRmFpbGVkIHRvIGNvbm5lY3Q6ICR7ZXJyfWApOwogICAgICB9CiAgICB9IGVsc2UgewogICAgICB0cnkgewogICAgICAgIGRldmljZS5jb25uZWN0X2RldmljZShudWxsKTsKICAgICAgICBzdGF0dXNMYWJlbC5sYWJlbCA9ICJDb25lY3RpbmcuLi4iOwogICAgICAgIHRpbWVyID0gdGltZW91dCgxZTQsICgpID0+IHsKICAgICAgICAgIGlmICghZGV2aWNlLmdldF9jb25uZWN0ZWQoKSkgewogICAgICAgICAgICBzdGF0dXNMYWJlbC5sYWJlbCA9ICJDb25uZWN0aW9uIGZhaWxlZCI7CiAgICAgICAgICB9CiAgICAgICAgICB0aW1lciA9IG51bGw7CiAgICAgICAgfSk7CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIHByaW50KGBGYWlsZWQgdG8gY29ubmVjdDogJHtlcnJ9YCk7CiAgICAgIH0KICAgIH0KICB9KTsKICBkZXZpY2UuY29ubmVjdCgibm90aWZ5Ojpjb25uZWN0ZWQiLCAoKSA9PiB7CiAgICBpZiAoZGV2aWNlLmdldF9jb25uZWN0ZWQoKSkgewogICAgICBpZiAodGltZXIpIHsKICAgICAgICB0aW1lci5jYW5jZWwoKTsKICAgICAgICB0aW1lciA9IG51bGw7CiAgICAgIH0KICAgICAgaWYgKHJlZnJlc2hEZXZpY2VzKSByZWZyZXNoRGV2aWNlcygpOwogICAgfQogIH0pOwogIGNvbnN0IHJldmVhbGVyID0gbmV3IEd0azIuUmV2ZWFsZXIoewogICAgcmV2ZWFsX2NoaWxkOiBmYWxzZSwKICAgIHRyYW5zaXRpb25fdHlwZTogR3RrMi5SZXZlYWxlclRyYW5zaXRpb25UeXBlLlNMSURFX0RPV04sCiAgICB0cmFuc2l0aW9uX2R1cmF0aW9uOiAxMDAKICAgIC8vIG1zCiAgfSk7CiAgcmV2ZWFsZXIuc2V0X2NoaWxkKGFjdGlvbkJ1dHRvbik7CiAgY29uc3QgdGl0bGVMYWJlbCA9IG5ldyBHdGsyLkxhYmVsKHsKICAgIGxhYmVsOiBkZXZpY2VOYW1lLAogICAgaGFsaWduOiBHdGsyLkFsaWduLlNUQVJULAogICAgeGFsaWduOiAwCiAgfSk7CiAgY29uc3QgY29udGVudEJveCA9IG5ldyBHdGsyLkJveCh7CiAgICBvcmllbnRhdGlvbjogR3RrMi5PcmllbnRhdGlvbi5WRVJUSUNBTCwKICAgIHNwYWNpbmc6IDIKICB9KTsKICBjb250ZW50Qm94LmFwcGVuZCh0aXRsZUxhYmVsKTsKICBjb250ZW50Qm94LmFwcGVuZChzdGF0dXNMYWJlbCk7CiAgY29uc3QgaGVhZGVyID0gbmV3IEd0azIuQnV0dG9uKHsKICAgIGNoaWxkOiBjb250ZW50Qm94LAogICAgaGFsaWduOiBHdGsyLkFsaWduLkZJTEwKICB9KTsKICBoZWFkZXIuY29ubmVjdCgiY2xpY2tlZCIsICgpID0+IHsKICAgIHJldmVhbGVyLnJldmVhbF9jaGlsZCA9ICFyZXZlYWxlci5yZXZlYWxfY2hpbGQ7CiAgfSk7CiAgY29uc3QgZGV2aWNlQm94ID0gbmV3IEd0azIuQm94KHsKICAgIG9yaWVudGF0aW9uOiBHdGsyLk9yaWVudGF0aW9uLlZFUlRJQ0FMLAogICAgc3BhY2luZzogNAogIH0pOwogIGRldmljZUJveC5hcHBlbmQoaGVhZGVyKTsKICBkZXZpY2VCb3guYXBwZW5kKHJldmVhbGVyKTsKICBkZXZpY2VCb3guYWRkX2Nzc19jbGFzcygiZGV2aWNlcm93Iik7CiAgcmV0dXJuIGRldmljZUJveDsKfQoKLy8gd2lkZ2V0L1V0aWxpdGllcy9CbHVldG9vdGgvYmx1ZXRvb3RobWVudS50c3gKZnVuY3Rpb24gQmx1ZXRvb3RoTWVudShiYWNrQnV0dG9uKSB7CiAgY29uc3QgYmx1ZXRvb3RoID0gQmx1ZXRvb3RoLmdldF9kZWZhdWx0KCk7CiAgY29uc3QgYWRhcHRlciA9IGJsdWV0b290aC5nZXRfYWRhcHRlcigpOwogIGNvbnN0IGNvbm5lY3RlZERldmljZXMgPSBbXTsKICBjb25zdCBwYWlyZWREZXZpY2VzID0gW107CiAgY29uc3QgZGlzY292ZXJlZERldmljZXMgPSBbXTsKICBjb25zdCBtYWluQm94ID0gbmV3IEd0azIuQm94KHsgb3JpZW50YXRpb246IEd0azIuT3JpZW50YXRpb24uVkVSVElDQUwsIHNwYWNpbmc6IDYgfSk7CiAgY29uc3QgdGl0bGVCb3ggPSBuZXcgR3RrMi5Cb3goeyBvcmllbnRhdGlvbjogR3RrMi5PcmllbnRhdGlvbi5IT1JJWk9OVEFMLCBzcGFjaW5nOiA2IH0pOwogIHRpdGxlQm94LmFwcGVuZChiYWNrQnV0dG9uKTsKICB0aXRsZUJveC5hcHBlbmQobmV3IEd0azIuTGFiZWwoeyBsYWJlbDogIkJsdWV0b290aCIsIGhhbGlnbjogR3RrMi5BbGlnbi5TVEFSVCB9KSk7CiAgY29uc3QgcGFyaWVkRGV2aWNlc0JveCA9IG5ldyBHdGsyLkJveCh7IG9yaWVudGF0aW9uOiBHdGsyLk9yaWVudGF0aW9uLlZFUlRJQ0FMLCBzcGFjaW5nOiA2IH0pOwogIHBhcmllZERldmljZXNCb3guYXBwZW5kKG5ldyBHdGsyLkxhYmVsKHsgbGFiZWw6ICJQYWlyZWQgZGV2aWNlcyIsIGhhbGlnbjogR3RrMi5BbGlnbi5TVEFSVCwgY3NzQ2xhc3NlczogWyJzdWJoZWFkaW5nIl0gfSkpOwogIGNvbnN0IGRpc2NvdmVyZWREZXZpY2VzQm94ID0gbmV3IEd0azIuQm94KHsgb3JpZW50YXRpb246IEd0azIuT3JpZW50YXRpb24uVkVSVElDQUwsIHNwYWNpbmc6IDYgfSk7CiAgZGlzY292ZXJlZERldmljZXNCb3guYXBwZW5kKG5ldyBHdGsyLkxhYmVsKHsgbGFiZWw6ICJOb3QgcGFpcmVkIiwgaGFsaWduOiBHdGsyLkFsaWduLlNUQVJULCBjc3NDbGFzc2VzOiBbInN1YmhlYWRpbmciXSB9KSk7CiAgdHJ5IHsKICAgIGFkYXB0ZXI/LnN0YXJ0X2Rpc2NvdmVyeSgpOwogIH0gY2F0Y2ggKGVycikgewogICAgcHJpbnQoYEZhaWxlZCB0byBzdGFydCBkaXNjb3Zlcnk6ICR7ZXJyfWApOwogIH0KICBmdW5jdGlvbiBnZXRQYWlyZWREZXZpY2VzKCkgewogICAgY29ubmVjdGVkRGV2aWNlcy5sZW5ndGggPSAwOwogICAgcGFpcmVkRGV2aWNlcy5sZW5ndGggPSAwOwogICAgZm9yIChjb25zdCBkZXZpY2Ugb2YgYmx1ZXRvb3RoLmdldF9kZXZpY2VzKCkpIHsKICAgICAgaWYgKGRldmljZS5nZXRfcGFpcmVkKCkpIHsKICAgICAgICBpZiAoZGV2aWNlLmdldF9jb25uZWN0ZWQoKSkgewogICAgICAgICAgY29ubmVjdGVkRGV2aWNlcy5wdXNoKGRldmljZSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHBhaXJlZERldmljZXMucHVzaChkZXZpY2UpOwogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KICBmdW5jdGlvbiBnZXREaXNjb3ZlcmVkRGV2aWNlcygpIHsKICAgIGRpc2NvdmVyZWREZXZpY2VzLmxlbmd0aCA9IDA7CiAgICBmb3IgKGNvbnN0IGRldmljZSBvZiBibHVldG9vdGguZ2V0X2RldmljZXMoKSkgewogICAgICBpZiAoIWRldmljZS5nZXRfcGFpcmVkKCkpIHsKICAgICAgICBkaXNjb3ZlcmVkRGV2aWNlcy5wdXNoKGRldmljZSk7CiAgICAgIH0KICAgIH0KICB9CiAgZnVuY3Rpb24gcmVmcmVzaFBhaXJlZERldmljZXMoKSB7CiAgICBnZXRQYWlyZWREZXZpY2VzKCk7CiAgICBjb25zdCB0aXRsZSA9IHBhcmllZERldmljZXNCb3guZ2V0X2ZpcnN0X2NoaWxkKCk7CiAgICBsZXQgY2hpbGQgPSB0aXRsZT8uZ2V0X25leHRfc2libGluZygpIHx8IG51bGw7CiAgICB3aGlsZSAoY2hpbGQpIHsKICAgICAgY29uc3QgbmV4dCA9IGNoaWxkLmdldF9uZXh0X3NpYmxpbmcoKTsKICAgICAgcGFyaWVkRGV2aWNlc0JveC5yZW1vdmUoY2hpbGQpOwogICAgICBjaGlsZCA9IG5leHQ7CiAgICB9CiAgICBmb3IgKGNvbnN0IGRldmljZSBvZiBjb25uZWN0ZWREZXZpY2VzKSB7CiAgICAgIGNvbnN0IGRldmljZVJvdyA9IERldmljZVJvdyhkZXZpY2UsIHJlZnJlc2hQYWlyZWREZXZpY2VzKTsKICAgICAgcGFyaWVkRGV2aWNlc0JveC5hcHBlbmQoZGV2aWNlUm93KTsKICAgIH0KICAgIGZvciAoY29uc3QgZGV2aWNlIG9mIHBhaXJlZERldmljZXMpIHsKICAgICAgY29uc3QgZGV2aWNlUm93ID0gRGV2aWNlUm93KGRldmljZSwgcmVmcmVzaFBhaXJlZERldmljZXMpOwogICAgICBwYXJpZWREZXZpY2VzQm94LmFwcGVuZChkZXZpY2VSb3cpOwogICAgfQogIH0KICBmdW5jdGlvbiByZWZyZXNoRGlzY292ZXJlZERldmljZXMoKSB7CiAgICBjb25zdCB0aXRsZSA9IGRpc2NvdmVyZWREZXZpY2VzQm94LmdldF9maXJzdF9jaGlsZCgpOwogICAgbGV0IGNoaWxkID0gdGl0bGU/LmdldF9uZXh0X3NpYmxpbmcoKSB8fCBudWxsOwogICAgd2hpbGUgKGNoaWxkKSB7CiAgICAgIGNvbnN0IG5leHQgPSBjaGlsZC5nZXRfbmV4dF9zaWJsaW5nKCk7CiAgICAgIGRpc2NvdmVyZWREZXZpY2VzQm94LnJlbW92ZShjaGlsZCk7CiAgICAgIGNoaWxkID0gbmV4dDsKICAgIH0KICAgIGdldERpc2NvdmVyZWREZXZpY2VzKCk7CiAgICBmb3IgKGNvbnN0IGRldmljZSBvZiBkaXNjb3ZlcmVkRGV2aWNlcykgewogICAgICBjb25zdCBkZXZpY2VSb3cgPSBEZXZpY2VSb3coZGV2aWNlLCByZWZyZXNoQWxsRGV2aWNlcyk7CiAgICAgIGRpc2NvdmVyZWREZXZpY2VzQm94LmFwcGVuZChkZXZpY2VSb3cpOwogICAgfQogIH0KICBmdW5jdGlvbiByZWZyZXNoQWxsRGV2aWNlcygpIHsKICAgIHJlZnJlc2hQYWlyZWREZXZpY2VzKCk7CiAgICByZWZyZXNoRGlzY292ZXJlZERldmljZXMoKTsKICB9CiAgcmVmcmVzaFBhaXJlZERldmljZXMoKTsKICByZWZyZXNoRGlzY292ZXJlZERldmljZXMoKTsKICBtYWluQm94LmFwcGVuZCh0aXRsZUJveCk7CiAgbWFpbkJveC5hcHBlbmQocGFyaWVkRGV2aWNlc0JveCk7CiAgbWFpbkJveC5hcHBlbmQobmV3IEd0azIuU2VwYXJhdG9yKHsgb3JpZW50YXRpb246IEd0azIuT3JpZW50YXRpb24uSE9SSVpPTlRBTCwgY3NzQ2xhc3NlczogWyJzZXBlcmF0b3IiXSB9KSk7CiAgbWFpbkJveC5hcHBlbmQoZGlzY292ZXJlZERldmljZXNCb3gpOwogIGNvbnN0IHNjcm9sbGVyID0gbmV3IEd0azIuU2Nyb2xsZWRXaW5kb3coewogICAgdmV4cGFuZDogdHJ1ZSwKICAgIC8vIGxldCBpdCBleHBhbmQgdmVydGljYWxseSBpZiB0aGUgY29udGFpbmVyIGFsbG93cwogICAgaGV4cGFuZDogZmFsc2UsCiAgICAvLyB3aWR0aCB3aWxsIGJlIGZpeGVkCiAgICBvdmVybGF5X3Njcm9sbGluZzogdHJ1ZQogICAgLy8gb3B0aW9uYWw6IG5pY2Ugb3ZlcmxheSBzY3JvbGxiYXJzCiAgfSk7CiAgc2Nyb2xsZXIuYWRkX2Nzc19jbGFzcygiYmx1ZXRvb3RobWVudSIpOwogIHNjcm9sbGVyLnNldF9jaGlsZChtYWluQm94KTsKICBzY3JvbGxlci5zZXRfc2l6ZV9yZXF1ZXN0KC0xLCA0MDApOwogIGFkYXB0ZXI/LmNvbm5lY3QoIm5vdGlmeTo6ZGlzY292ZXJpbmciLCAoKSA9PiB7CiAgICByZWZyZXNoRGlzY292ZXJlZERldmljZXMoKTsKICB9KTsKICByZXR1cm4gc2Nyb2xsZXI7Cn0KCi8vIHdpZGdldC9VdGlsaXRpZXMvdXRpbGl0aWVzcG9wb3Zlci50c3gKZnVuY3Rpb24gVXRpbHNQb3BvdmVyKCkgewogIGNvbnN0IHBvcG92ZXJNZW51ID0gbmV3IEd0azIuUG9wb3ZlcigpOwogIHBvcG92ZXJNZW51LmFkZF9jc3NfY2xhc3MoInN5c3RyYXltZW51Iik7CiAgY29uc3Qgc3RhY2sgPSBuZXcgR3RrMi5TdGFjayh7CiAgICB0cmFuc2l0aW9uX3R5cGU6IEd0azIuU3RhY2tUcmFuc2l0aW9uVHlwZS5TTElERV9MRUZULAogICAgdHJhbnNpdGlvbl9kdXJhdGlvbjogMjAwCiAgICAvLyBtcwogIH0pOwogIHN0YWNrLnNldF92aG9tb2dlbmVvdXMoZmFsc2UpOwogIHN0YWNrLnNldF9oZXhwYW5kKGZhbHNlKTsKICBzdGFjay5hZGRfY3NzX2NsYXNzKCJwb3BvdmVybWVudXN0YWNrIik7CiAgcG9wb3Zlck1lbnUuc2V0X2NoaWxkKHN0YWNrKTsKICBjb25zdCBidXR0b25Cb3ggPSBuZXcgR3RrMi5Cb3goeyBvcmllbnRhdGlvbjogR3RrMi5PcmllbnRhdGlvbi5IT1JJWk9OVEFMLCBzcGFjaW5nOiA2IH0pOwogIGJ1dHRvbkJveC5zZXRfdmFsaWduKEd0azIuQWxpZ24uU1RBUlQpOwogIGNvbnN0IGJhY2tCdXR0b24gPSBuZXcgR3RrMi5CdXR0b24oeyBsYWJlbDogIjwtIiB9KTsKICBiYWNrQnV0dG9uLmNvbm5lY3QoImNsaWNrZWQiLCAoKSA9PiB7CiAgICBzdGFjay50cmFuc2l0aW9uX3R5cGUgPSBHdGsyLlN0YWNrVHJhbnNpdGlvblR5cGUuU0xJREVfUklHSFQ7CiAgICBzdGFjay5zZXRfdmlzaWJsZV9jaGlsZChidXR0b25Cb3gpOwogIH0pOwogIGNvbnN0IGJsdWV0b290aE1lbnUgPSBCbHVldG9vdGhNZW51KGJhY2tCdXR0b24pOwogIHN0YWNrLmFkZF9uYW1lZChidXR0b25Cb3gsICJtYWluIik7CiAgc3RhY2suYWRkX25hbWVkKGJsdWV0b290aE1lbnUsICJibHVldG9vdGgiKTsKICBjb25zdCBibHVldG9vdGhXaWRnZXQgPSBuZXcgR3RrMi5CdXR0b24oeyBsYWJlbDogIlx1RjI5NCIgfSk7CiAgY29uc3QgbmV0d29ya1dpZGdldCA9IG5ldyBHdGsyLkJ1dHRvbih7IGxhYmVsOiAiXHV7RjAwMDJ9IiB9KTsKICBjb25zdCB2b2x1bWVXaWRnZXQgPSBuZXcgR3RrMi5CdXR0b24oeyBsYWJlbDogIlx1RjAyOCIgfSk7CiAgY29uc3Qgc3lzdGVtV2lkZ2V0ID0gbmV3IEd0azIuQnV0dG9uKHsgbGFiZWw6ICJcdXtGMDM1Qn0iIH0pOwogIGJsdWV0b290aFdpZGdldC5jb25uZWN0KCJjbGlja2VkIiwgKCkgPT4gewogICAgc3RhY2sudHJhbnNpdGlvbl90eXBlID0gR3RrMi5TdGFja1RyYW5zaXRpb25UeXBlLlNMSURFX0xFRlQ7CiAgICBzdGFjay5zZXRfdmlzaWJsZV9jaGlsZChibHVldG9vdGhNZW51KTsKICB9KTsKICBuZXR3b3JrV2lkZ2V0LmNvbm5lY3QoImNsaWNrZWQiLCAoKSA9PiB7CiAgICBleGVjQXN5bmMoWyJubS1jb25uZWN0aW9uLWVkaXRvciJdKS50aGVuKChvdXQpID0+IGNvbnNvbGUubG9nKG91dCkpLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSk7CiAgfSk7CiAgdm9sdW1lV2lkZ2V0LmNvbm5lY3QoImNsaWNrZWQiLCAoKSA9PiB7CiAgICBleGVjQXN5bmMoWyJraXR0eSIsICItLWNsYXNzPVdpcmVtaXgiLCAiLWUiLCAid2lyZW1peCJdKS50aGVuKChvdXQpID0+IGNvbnNvbGUubG9nKG91dCkpLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSk7CiAgfSk7CiAgc3lzdGVtV2lkZ2V0LmNvbm5lY3QoImNsaWNrZWQiLCAoKSA9PiB7CiAgICBleGVjQXN5bmMoWyJtaXNzaW9uY2VudGVyIl0pLnRoZW4oKG91dCkgPT4gY29uc29sZS5sb2cob3V0KSkuY2F0Y2goKGVycikgPT4gY29uc29sZS5lcnJvcihlcnIpKTsKICB9KTsKICBidXR0b25Cb3guYXBwZW5kKGJsdWV0b290aFdpZGdldCk7CiAgYnV0dG9uQm94LmFwcGVuZChuZXR3b3JrV2lkZ2V0KTsKICBidXR0b25Cb3guYXBwZW5kKHZvbHVtZVdpZGdldCk7CiAgYnV0dG9uQm94LmFwcGVuZChzeXN0ZW1XaWRnZXQpOwogIHBvcG92ZXJNZW51LmNvbm5lY3QoImNsb3NlZCIsICgpID0+IHsKICAgIHN0YWNrLnNldF92aXNpYmxlX2NoaWxkKGJ1dHRvbkJveCk7CiAgfSk7CiAgcmV0dXJuIHBvcG92ZXJNZW51Owp9CgovLyB3aWRnZXQvQmFyLnRzeApmdW5jdGlvbiBCYXIoZ2RrbW9uaXRvcikgewogIGNvbnN0IHRpbWUgPSBjcmVhdGVQb2xsKCIiLCAxZTMsICdkYXRlICIrJWw6JU0gJXAiJyk7CiAgY29uc3QgZGF0ZSA9IGNyZWF0ZVBvbGwoIiIsIDFlMywgJ2RhdGUgIislbS8lZC8lWSInKTsKICBjb25zdCB7IEJPVFRPTSwgTEVGVCwgUklHSFQgfSA9IEFzdGFsLldpbmRvd0FuY2hvcjsKICBjb25zdCBBU1NFVFNfUEFUSCA9IGAke0dMaWI3LmdldF9jdXJyZW50X2RpcigpfS9hc3NldHNgOwogIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KAogICAgIndpbmRvdyIsCiAgICB7CiAgICAgIHZpc2libGU6IHRydWUsCiAgICAgIG5hbWU6ICJiYXIiLAogICAgICBjbGFzczogIkJhciIsCiAgICAgIGdka21vbml0b3IsCiAgICAgIGV4Y2x1c2l2aXR5OiBBc3RhbC5FeGNsdXNpdml0eS5FWENMVVNJVkUsCiAgICAgIGFuY2hvcjogQk9UVE9NIHwgTEVGVCB8IFJJR0hULAogICAgICBhcHBsaWNhdGlvbjogYXBwX2RlZmF1bHQsCiAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4cygiY2VudGVyYm94IiwgeyBjc3NOYW1lOiAiY2VudGVyYm94IiwgY2hpbGRyZW46IFsKICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KAogICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICB7CiAgICAgICAgICAgIGNsYXNzOiAic3RhcnRidXR0b24iLAogICAgICAgICAgICAkdHlwZTogInN0YXJ0IiwKICAgICAgICAgICAgb25DbGlja2VkOiAoKSA9PiBleGVjQXN5bmMoIndhbGtlciIpLAogICAgICAgICAgICBoZXhwYW5kOiB0cnVlLAogICAgICAgICAgICBoYWxpZ246IEd0azIuQWxpZ24uU1RBUlQsCiAgICAgICAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KAogICAgICAgICAgICAgICJpbWFnZSIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZmlsZTogYCR7QVNTRVRTX1BBVEh9L2FyY2hfYmx1ZS5wbmdgLAogICAgICAgICAgICAgICAgcGl4ZWxTaXplOiAyMAogICAgICAgICAgICAgIH0KICAgICAgICAgICAgKQogICAgICAgICAgfQogICAgICAgICksCiAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeCgiYm94IiwgeyAkdHlwZTogImNlbnRlciIgfSksCiAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeHMoImJveCIsIHsgJHR5cGU6ICJlbmQiLCBoYWxpZ246IEd0azIuQWxpZ24uRU5ELCBjaGlsZHJlbjogWwogICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeChTeXNUcmF5QnV0dG9uLCB7fSksCiAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4cygKICAgICAgICAgICAgIm1lbnVidXR0b24iLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgY2xhc3M6ICJ1dGlsaXRpZXMiLAogICAgICAgICAgICAgIGRpcmVjdGlvbjogR3RrMi5BcnJvd1R5cGUuTk9ORSwKICAgICAgICAgICAgICBjaGlsZHJlbjogWwogICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeHMoImJveCIsIHsgb3JpZW50YXRpb246IEd0azIuT3JpZW50YXRpb24uSE9SSVpPTlRBTCwgc3BhY2luZzogNiwgY2hpbGRyZW46IFsKICAgICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeChOZXR3b3JrSW5kaWNhdG9yLCB7fSksCiAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goVm9sdW1lSW5kaWNhdG9yLCB7fSkKICAgICAgICAgICAgICAgIF0gfSksCiAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KFV0aWxzUG9wb3Zlciwge30pCiAgICAgICAgICAgICAgXQogICAgICAgICAgICB9CiAgICAgICAgICApLAogICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeHMoIm1lbnVidXR0b24iLCB7IGNsYXNzOiAiZGF0ZXRpbWUiLCBjaGlsZHJlbjogWwogICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4cygiYm94IiwgeyBvcmllbnRhdGlvbjogR3RrMi5PcmllbnRhdGlvbi5WRVJUSUNBTCwgY2hpbGRyZW46IFsKICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KCJsYWJlbCIsIHsgbGFiZWw6IHRpbWUsIGhhbGlnbjogR3RrMi5BbGlnbi5FTkQgfSksCiAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeCgibGFiZWwiLCB7IGxhYmVsOiBkYXRlLCBoYWxpZ246IEd0azIuQWxpZ24uRU5EIH0pCiAgICAgICAgICAgIF0gfSksCiAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goInBvcG92ZXIiLCB7IGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KEd0azIuQ2FsZW5kYXIsIHt9KSB9KQogICAgICAgICAgXSB9KSwKICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goSGlkZVdpbmRvd3NCdXR0b24sIHt9KQogICAgICAgIF0gfSkKICAgICAgXSB9KQogICAgfQogICk7Cn0KCi8vIHdpZGdldC9Ob3RpZmljYXRpb24udHN4CmltcG9ydCBOb3RpZmQgZnJvbSAiZ2k6Ly9Bc3RhbE5vdGlmZCI7CmZ1bmN0aW9uIE5vdGlmZFdpZGdldChnZGttb25pdG9yKSB7CiAgY29uc3QgeyBSSUdIVCwgVE9QIH0gPSBBc3RhbC5XaW5kb3dBbmNob3I7CiAgY29uc3Qgbm90aWZkID0gTm90aWZkLmdldF9kZWZhdWx0KCk7CiAgY29uc3QgYWN0aXZlTm90aWZpY2F0aW9ucyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7CiAgbm90aWZkLmNvbm5lY3QoIm5vdGlmaWVkIiwgKF8sIGlkKSA9PiB7CiAgICBjb25zdCBuID0gbm90aWZkLmdldF9ub3RpZmljYXRpb24oaWQpOwogICAgaWYgKCFuKSByZXR1cm47CiAgICBjb25zdCBoaW50cyA9IG4uZ2V0X2hpbnRzKCkucmVjdXJzaXZlVW5wYWNrKCk7CiAgICBsZXQgaW1hZ2VQYXRoID0gaGludHNbImltYWdlLXBhdGgiXSB8fCBudWxsOwogICAgbGV0IGFwcEljb24gPSBoaW50c1siZGVza3RvcC1lbnRyeSJdIHx8IG51bGw7CiAgICBjb25zdCBub3RpZldpbmRvdyA9IC8qIEBfX1BVUkVfXyAqLyBqc3goCiAgICAgICJ3aW5kb3ciLAogICAgICB7CiAgICAgICAgbmFtZTogYG5vdGlmaWNhdGlvbi0ke2lkfWAsCiAgICAgICAgY2xhc3M6ICJOb3RpZmljYXRpb24iLAogICAgICAgIGdka21vbml0b3IsCiAgICAgICAgYW5jaG9yOiBUT1AgfCBSSUdIVCwKICAgICAgICBleGNsdXNpdml0eTogQXN0YWwuRXhjbHVzaXZpdHkuSUdOT1JFLAogICAgICAgIGFwcGxpY2F0aW9uOiBhcHBfZGVmYXVsdCwKICAgICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeHMoImJveCIsIHsgb3JpZW50YXRpb246IEd0azIuT3JpZW50YXRpb24uVkVSVElDQUwsIGNoaWxkcmVuOiBbCiAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4cygiYm94IiwgeyBvcmllbnRhdGlvbjogR3RrMi5PcmllbnRhdGlvbi5IT1JJWk9OVEFMLCBjaGlsZHJlbjogWwogICAgICAgICAgICBhcHBJY29uICYmIC8qIEBfX1BVUkVfXyAqLyBqc3goCiAgICAgICAgICAgICAgImltYWdlIiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uTmFtZTogYXBwSWNvbgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgKSwKICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeCgibGFiZWwiLCB7IGxhYmVsOiBuLmFwcE5hbWUgfSkKICAgICAgICAgIF0gfSksCiAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4cygiYm94IiwgeyBvcmllbnRhdGlvbjogR3RrMi5PcmllbnRhdGlvbi5IT1JJWk9OVEFMLCBjaGlsZHJlbjogWwogICAgICAgICAgICBpbWFnZVBhdGggJiYgLyogQF9fUFVSRV9fICovIGpzeCgKICAgICAgICAgICAgICAiaW1hZ2UiLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGZpbGU6IGltYWdlUGF0aAogICAgICAgICAgICAgIH0KICAgICAgICAgICAgKSwKICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeHMoImJveCIsIHsgb3JpZW50YXRpb246IEd0azIuT3JpZW50YXRpb24uVkVSVElDQUwsIGNoaWxkcmVuOiBbCiAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeCgibGFiZWwiLCB7IGxhYmVsOiBuLnN1bW1hcnksIGNsYXNzOiAic3VtbWFyeSIsIGhhbGlnbjogR3RrMi5BbGlnbi5FTkQgfSksCiAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeCgibGFiZWwiLCB7IGxhYmVsOiBuLmJvZHksIGNsYXNzOiAiYm9keSIsIGhhbGlnbjogR3RrMi5BbGlnbi5FTkQgfSkKICAgICAgICAgICAgXSB9KQogICAgICAgICAgXSB9KQogICAgICAgIF0gfSkKICAgICAgfQogICAgKTsKICAgIG5vdGlmV2luZG93LnNob3coKTsKICAgIGFjdGl2ZU5vdGlmaWNhdGlvbnMuc2V0KGlkLCBub3RpZldpbmRvdyk7CiAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgbm90aWZXaW5kb3cuZGVzdHJveSgpOwogICAgICBhY3RpdmVOb3RpZmljYXRpb25zLmRlbGV0ZShpZCk7CiAgICB9LCA1ZTMpOwogIH0pOwogIG5vdGlmZC5jb25uZWN0KCJyZXNvbHZlZCIsIChfLCBpZCkgPT4gewogICAgY29uc3Qgbm90aWZXaW5kb3cgPSBhY3RpdmVOb3RpZmljYXRpb25zLmdldChpZCk7CiAgICBpZiAobm90aWZXaW5kb3cpIHsKICAgICAgbm90aWZXaW5kb3cuZGVzdHJveSgpOwogICAgICBhY3RpdmVOb3RpZmljYXRpb25zLmRlbGV0ZShpZCk7CiAgICB9CiAgfSk7CiAgcmV0dXJuIG51bGw7Cn0KCi8vIGFwcC50cwphcHBfZGVmYXVsdC5zdGFydCh7CiAgY3NzOiBzdHlsZV9kZWZhdWx0LAogIG1haW4oKSB7CiAgICBjb25zdCBtb25pdG9ycyA9IGFwcF9kZWZhdWx0LmdldF9tb25pdG9ycygpOwogICAgbW9uaXRvcnMubWFwKChtb25pdG9yKSA9PiB7CiAgICAgIEJhcihtb25pdG9yKTsKICAgIH0pOwogICAgTm90aWZkV2lkZ2V0KG1vbml0b3JzWzBdKTsKICB9Cn0pOwovLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV3b2dJQ0oyWlhKemFXOXVJam9nTXl3S0lDQWljMjkxY21ObGN5STZJRnNpTGk0dkxpNHZMaTR2TGk0dmRYTnlMM05vWVhKbEwyRm5jeTlxY3k5c2FXSXZiM1psY25KcFpHVnpMblJ6SWl3Z0lpNHVMeTR1THk0dUx5NHVMM1Z6Y2k5emFHRnlaUzloWjNNdmFuTXZibTlrWlY5dGIyUjFiR1Z6TDJkdWFXMHZaR2x6ZEM5bmIySnFaV04wTG5Seklpd2dJaTR1THk0dUx5NHVMeTR1TDNWemNpOXphR0Z5WlM5aFozTXZhbk12Ym05a1pWOXRiMlIxYkdWekwyZHVhVzB2WkdsemRDOTFkR2xzTG5Seklpd2dJaTR1THk0dUx5NHVMeTR1TDNWemNpOXphR0Z5WlM5aFozTXZhbk12YkdsaUwyZDBhelF2WVhCd0xuUnpJaXdnSWk0dUx5NHVMeTR1THk0dUwzVnpjaTl6YUdGeVpTOWhaM012YW5NdmJtOWtaVjl0YjJSMWJHVnpMMmR1YVcwdlpHbHpkQzlrWW5WekxuUnpJaXdnSWk0dUx5NHVMeTR1THk0dUwzVnpjaTl6YUdGeVpTOWhaM012YW5NdmJHbGlMMkZ3Y0M5a1luVnpMblJ6SWl3Z0lpNHVMeTR1THk0dUx5NHVMM1Z6Y2k5emFHRnlaUzloWjNNdmFuTXZibTlrWlY5dGIyUjFiR1Z6TDJkdWFXMHZaR2x6ZEM5cWMzZ3Zhbk40TG5Seklpd2dJaTR1THk0dUx5NHVMeTR1TDNWemNpOXphR0Z5WlM5aFozTXZhbk12Ym05a1pWOXRiMlIxYkdWekwyZHVhVzB2WkdsemRDOXFjM2d2Um5KaFoyMWxiblF1ZEhNaUxDQWlMaTR2TGk0dkxpNHZMaTR2ZFhOeUwzTm9ZWEpsTDJGbmN5OXFjeTl1YjJSbFgyMXZaSFZzWlhNdloyNXBiUzlrYVhOMEwycHplQzl6ZEdGMFpTNTBjeUlzSUNJdUxpOHVMaTh1TGk4dUxpOTFjM0l2YzJoaGNtVXZZV2R6TDJwekwyNXZaR1ZmYlc5a2RXeGxjeTluYm1sdEwyUnBjM1F2YW5ONEwyVnVkaTUwY3lJc0lDSXVMaTh1TGk4dUxpOHVMaTkxYzNJdmMyaGhjbVV2WVdkekwycHpMMjV2WkdWZmJXOWtkV3hsY3k5bmJtbHRMMlJwYzNRdmFuTjRMM05qYjNCbExuUnpJaXdnSWk0dUx5NHVMeTR1THk0dUwzVnpjaTl6YUdGeVpTOWhaM012YW5NdmJtOWtaVjl0YjJSMWJHVnpMMmR1YVcwdlpHbHpkQzlxYzNndlZHaHBjeTUwY3lJc0lDSnpZWE56T2k5b2IyMWxMMlI1YkdGdUwxQnliMnBsWTNSekwyaDVjSEowWVhOclltRnlWMmx1Wkc5M2N5OXpkSGxzWlM1elkzTnpJaXdnSWk0dUx5NHVMeTR1THk0dUwzVnpjaTl6YUdGeVpTOWhaM012YW5NdmJHbGlMMmQwYXpRdmFXNWtaWGd1ZEhNaUxDQWlMaTR2TGk0dkxpNHZMaTR2ZFhOeUwzTm9ZWEpsTDJGbmN5OXFjeTlzYVdJdmNISnZZMlZ6Y3k1MGN5SXNJQ0l1TGk4dUxpOHVMaTh1TGk5MWMzSXZjMmhoY21VdllXZHpMMnB6TDJ4cFlpOTBhVzFsTG5Seklpd2dJbmRwWkdkbGRDOUNZWEl1ZEhONElpd2dJbmRwWkdkbGRDOVRlWE4wWlcxVWNtRjVMMU41YzFSeVlYa3VkSE40SWl3Z0lpNHVMeTR1THk0dUx5NHVMM1Z6Y2k5emFHRnlaUzloWjNNdmFuTXZiR2xpTDJkMGF6UXZhbk40TFhKMWJuUnBiV1V1ZEhNaUxDQWlMaTR2TGk0dkxpNHZMaTR2ZFhOeUwzTm9ZWEpsTDJGbmN5OXFjeTl1YjJSbFgyMXZaSFZzWlhNdloyNXBiUzlrYVhOMEwyZDBhelF2YW5ONExYSjFiblJwYldVdWRITWlMQ0FpZDJsa1oyVjBMMU41YzNSbGJWUnlZWGt2VTNselZISmhlVUoxZEhSdmJpNTBjM2dpTENBaWQybGtaMlYwTDFWMGFXeHBkR2xsY3k5MmIyeDFiV1ZwYm1ScFkyRjBiM0l1ZEhONElpd2dJbmRwWkdkbGRDOUlhV1JsVjJsdVpHOTNjMEoxZEhSdmJpNTBjM2dpTENBaWQybGtaMlYwTDFWMGFXeHBkR2xsY3k5dVpYUjNiM0pyYVc1a2FXTmhkRzl5TG5SemVDSXNJQ0ozYVdSblpYUXZWWFJwYkdsMGFXVnpMMEpzZFdWMGIyOTBhQzlpYkhWbGRHOXZkR2h0Wlc1MUxuUnplQ0lzSUNKM2FXUm5aWFF2VlhScGJHbDBhV1Z6TDBKc2RXVjBiMjkwYUM5a1pYWnBZMlZ5YjNjdWRITjRJaXdnSW5kcFpHZGxkQzlWZEdsc2FYUnBaWE12ZFhScGJHbDBhV1Z6Y0c5d2IzWmxjaTUwYzNnaUxDQWlkMmxrWjJWMEwwNXZkR2xtYVdOaGRHbHZiaTUwYzNnaUxDQWlZWEJ3TG5SeklsMHNDaUFnSW5OdmRYSmpaWE5EYjI1MFpXNTBJam9nV3lJdktpcGNiaUFxSUZkdmNtdGhjbTkxYm1RZ1ptOXlJRndpUTJGdUozUWdZMjl1ZG1WeWRDQnViMjR0Ym5Wc2JDQndiMmx1ZEdWeUlIUnZJRXBUSUhaaGJIVmxJRndpWEc0Z0tpOWNibHh1Wlhod2IzSjBJSHQ5WEc1Y2JtWjFibU4wYVc5dUlITnVZV3RsYVdaNUtITjBjam9nYzNSeWFXNW5LU0I3WEc0Z0lDQWdjbVYwZFhKdUlITjBjbHh1SUNBZ0lDQWdJQ0F1Y21Wd2JHRmpaU2d2S0Z0aExYcGRLU2hiUVMxYVhTa3ZaeXdnWENJa01WOGtNbHdpS1Z4dUlDQWdJQ0FnSUNBdWNtVndiR0ZqWlVGc2JDaGNJaTFjSWl3Z1hDSmZYQ0lwWEc0Z0lDQWdJQ0FnSUM1MGIweHZkMlZ5UTJGelpTZ3BYRzU5WEc1Y2JtRnplVzVqSUdaMWJtTjBhVzl1SUhOMWNIQnlaWE56UEZRK0tHMXZaRG9nVUhKdmJXbHpaVHg3SUdSbFptRjFiSFE2SUZRZ2ZUNHNJSEJoZEdOb09pQW9iVG9nVkNrZ1BUNGdkbTlwWkNrZ2UxeHVJQ0FnSUhKbGRIVnliaUJ0YjJRdWRHaGxiaWdvYlNrZ1BUNGdjR0YwWTJnb2JTNWtaV1poZFd4MEtTa3VZMkYwWTJnb0tDa2dQVDRnZG05cFpDQXdLVnh1ZlZ4dVhHNW1kVzVqZEdsdmJpQndZWFJqYUR4UUlHVjRkR1Z1WkhNZ2IySnFaV04wUGlod2NtOTBiem9nVUN3Z2NISnZjRG9nUlhoMGNtRmpkRHhyWlhsdlppQlFMQ0J6ZEhKcGJtYytLU0I3WEc0Z0lDQWdUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblI1S0hCeWIzUnZMQ0J3Y205d0xDQjdYRzRnSUNBZ0lDQWdJR2RsZENncElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdselcyQm5aWFJmSkh0emJtRnJaV2xtZVNod2NtOXdLWDFnWFNncFhHNGdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ2ZTbGNibjFjYmx4dVlYZGhhWFFnYzNWd2NISmxjM01vYVcxd2IzSjBLRndpWjJrNkx5OUJjM1JoYkVGd2NITmNJaWtzSUNoN0lFRndjSE1zSUVGd2NHeHBZMkYwYVc5dUlIMHBJRDArSUh0Y2JpQWdJQ0J3WVhSamFDaEJjSEJ6TG5CeWIzUnZkSGx3WlN3Z1hDSnNhWE4wWENJcFhHNGdJQ0FnY0dGMFkyZ29RWEJ3YkdsallYUnBiMjR1Y0hKdmRHOTBlWEJsTENCY0ltdGxlWGR2Y21SelhDSXBYRzRnSUNBZ2NHRjBZMmdvUVhCd2JHbGpZWFJwYjI0dWNISnZkRzkwZVhCbExDQmNJbU5oZEdWbmIzSnBaWE5jSWlsY2JuMHBYRzVjYm1GM1lXbDBJSE4xY0hCeVpYTnpLR2x0Y0c5eWRDaGNJbWRwT2k4dlFYTjBZV3hDWVhSMFpYSjVYQ0lwTENBb2V5QlZVRzkzWlhJZ2ZTa2dQVDRnZTF4dUlDQWdJSEJoZEdOb0tGVlFiM2RsY2k1d2NtOTBiM1I1Y0dVc0lGd2laR1YyYVdObGMxd2lLVnh1ZlNsY2JseHVZWGRoYVhRZ2MzVndjSEpsYzNNb2FXMXdiM0owS0Z3aVoyazZMeTlCYzNSaGJFSnNkV1YwYjI5MGFGd2lLU3dnS0hzZ1FXUmhjSFJsY2l3Z1FteDFaWFJ2YjNSb0xDQkVaWFpwWTJVZ2ZTa2dQVDRnZTF4dUlDQWdJSEJoZEdOb0tFRmtZWEIwWlhJdWNISnZkRzkwZVhCbExDQmNJblYxYVdSelhDSXBYRzRnSUNBZ2NHRjBZMmdvUW14MVpYUnZiM1JvTG5CeWIzUnZkSGx3WlN3Z1hDSmhaR0Z3ZEdWeWMxd2lLVnh1SUNBZ0lIQmhkR05vS0VKc2RXVjBiMjkwYUM1d2NtOTBiM1I1Y0dVc0lGd2laR1YyYVdObGMxd2lLVnh1SUNBZ0lIQmhkR05vS0VSbGRtbGpaUzV3Y205MGIzUjVjR1VzSUZ3aWRYVnBaSE5jSWlsY2JuMHBYRzVjYm1GM1lXbDBJSE4xY0hCeVpYTnpLR2x0Y0c5eWRDaGNJbWRwT2k4dlFYTjBZV3hJZVhCeWJHRnVaRndpS1N3Z0tIc2dTSGx3Y214aGJtUXNJRTF2Ym1sMGIzSXNJRmR2Y210emNHRmpaU0I5S1NBOVBpQjdYRzRnSUNBZ2NHRjBZMmdvU0hsd2NteGhibVF1Y0hKdmRHOTBlWEJsTENCY0ltSnBibVJ6WENJcFhHNGdJQ0FnY0dGMFkyZ29TSGx3Y214aGJtUXVjSEp2ZEc5MGVYQmxMQ0JjSW0xdmJtbDBiM0p6WENJcFhHNGdJQ0FnY0dGMFkyZ29TSGx3Y214aGJtUXVjSEp2ZEc5MGVYQmxMQ0JjSW5kdmNtdHpjR0ZqWlhOY0lpbGNiaUFnSUNCd1lYUmphQ2hJZVhCeWJHRnVaQzV3Y205MGIzUjVjR1VzSUZ3aVkyeHBaVzUwYzF3aUtWeHVJQ0FnSUhCaGRHTm9LRTF2Ym1sMGIzSXVjSEp2ZEc5MGVYQmxMQ0JjSW1GMllXbHNZV0pzWlUxdlpHVnpYQ0lwWEc0Z0lDQWdjR0YwWTJnb1RXOXVhWFJ2Y2k1d2NtOTBiM1I1Y0dVc0lGd2lZWFpoYVd4aFlteGxYMjF2WkdWelhDSXBYRzRnSUNBZ2NHRjBZMmdvVjI5eWEzTndZV05sTG5CeWIzUnZkSGx3WlN3Z1hDSmpiR2xsYm5SelhDSXBYRzU5S1Z4dVhHNWhkMkZwZENCemRYQndjbVZ6Y3locGJYQnZjblFvWENKbmFUb3ZMMEZ6ZEdGc1RYQnlhWE5jSWlrc0lDaDdJRTF3Y21sekxDQlFiR0Y1WlhJZ2ZTa2dQVDRnZTF4dUlDQWdJSEJoZEdOb0tFMXdjbWx6TG5CeWIzUnZkSGx3WlN3Z1hDSndiR0Y1WlhKelhDSXBYRzRnSUNBZ2NHRjBZMmdvVUd4aGVXVnlMbkJ5YjNSdmRIbHdaU3dnWENKemRYQndiM0owWldSZmRYSnBYM05qYUdWdFpYTmNJaWxjYmlBZ0lDQndZWFJqYUNoUWJHRjVaWEl1Y0hKdmRHOTBlWEJsTENCY0luTjFjSEJ2Y25SbFpGVnlhVk5qYUdWdFpYTmNJaWxjYmlBZ0lDQndZWFJqYUNoUWJHRjVaWEl1Y0hKdmRHOTBlWEJsTENCY0luTjFjSEJ2Y25SbFpGOXRhVzFsWDNSNWNHVnpYQ0lwWEc0Z0lDQWdjR0YwWTJnb1VHeGhlV1Z5TG5CeWIzUnZkSGx3WlN3Z1hDSnpkWEJ3YjNKMFpXUk5hVzFsVkhsd1pYTmNJaWxjYmlBZ0lDQndZWFJqYUNoUWJHRjVaWEl1Y0hKdmRHOTBlWEJsTENCY0ltTnZiVzFsYm5SelhDSXBYRzU5S1Z4dVhHNWhkMkZwZENCemRYQndjbVZ6Y3locGJYQnZjblFvWENKbmFUb3ZMMEZ6ZEdGc1RtVjBkMjl5YTF3aUtTd2dLSHNnVjJsbWFTQjlLU0E5UGlCN1hHNGdJQ0FnY0dGMFkyZ29WMmxtYVM1d2NtOTBiM1I1Y0dVc0lGd2lZV05qWlhOelgzQnZhVzUwYzF3aUtWeHVJQ0FnSUhCaGRHTm9LRmRwWm1rdWNISnZkRzkwZVhCbExDQmNJbUZqWTJWemMxQnZhVzUwYzF3aUtWeHVmU2xjYmx4dVlYZGhhWFFnYzNWd2NISmxjM01vYVcxd2IzSjBLRndpWjJrNkx5OUJjM1JoYkU1dmRHbG1aRndpS1N3Z0tIc2dUbTkwYVdaa0xDQk9iM1JwWm1sallYUnBiMjRnZlNrZ1BUNGdlMXh1SUNBZ0lIQmhkR05vS0U1dmRHbG1aQzV3Y205MGIzUjVjR1VzSUZ3aWJtOTBhV1pwWTJGMGFXOXVjMXdpS1Z4dUlDQWdJSEJoZEdOb0tFNXZkR2xtYVdOaGRHbHZiaTV3Y205MGIzUjVjR1VzSUZ3aVlXTjBhVzl1YzF3aUtWeHVmU2xjYmx4dVlYZGhhWFFnYzNWd2NISmxjM01vYVcxd2IzSjBLRndpWjJrNkx5OUJjM1JoYkZCdmQyVnlVSEp2Wm1sc1pYTmNJaWtzSUNoN0lGQnZkMlZ5VUhKdlptbHNaWE1nZlNrZ1BUNGdlMXh1SUNBZ0lIQmhkR05vS0ZCdmQyVnlVSEp2Wm1sc1pYTXVjSEp2ZEc5MGVYQmxMQ0JjSW1GamRHbHZibk5jSWlsY2JuMHBYRzVjYm1GM1lXbDBJSE4xY0hCeVpYTnpLR2x0Y0c5eWRDaGNJbWRwT2k4dlFYTjBZV3hYY0Z3aUtTd2dLSHNnVjNBc0lFRjFaR2x2TENCV2FXUmxieUI5S1NBOVBpQjdYRzRnSUNBZ2NHRjBZMmdvVjNBdWNISnZkRzkwZVhCbExDQmNJbVJsZG1salpYTmNJaWxjYmlBZ0lDQndZWFJqYUNoQmRXUnBieTV3Y205MGIzUjVjR1VzSUZ3aWMzUnlaV0Z0YzF3aUtWeHVJQ0FnSUhCaGRHTm9LRUYxWkdsdkxuQnliM1J2ZEhsd1pTd2dYQ0p5WldOdmNtUmxjbk5jSWlsY2JpQWdJQ0J3WVhSamFDaEJkV1JwYnk1d2NtOTBiM1I1Y0dVc0lGd2liV2xqY205d2FHOXVaWE5jSWlsY2JpQWdJQ0J3WVhSamFDaEJkV1JwYnk1d2NtOTBiM1I1Y0dVc0lGd2ljM0JsWVd0bGNuTmNJaWxjYmlBZ0lDQndZWFJqYUNoQmRXUnBieTV3Y205MGIzUjVjR1VzSUZ3aVpHVjJhV05sYzF3aUtWeHVJQ0FnSUhCaGRHTm9LRlpwWkdWdkxuQnliM1J2ZEhsd1pTd2dYQ0p6ZEhKbFlXMXpYQ0lwWEc0Z0lDQWdjR0YwWTJnb1ZtbGtaVzh1Y0hKdmRHOTBlWEJsTENCY0luSmxZMjl5WkdWeWMxd2lLVnh1SUNBZ0lIQmhkR05vS0ZacFpHVnZMbkJ5YjNSdmRIbHdaU3dnWENKemFXNXJjMXdpS1Z4dUlDQWdJSEJoZEdOb0tGWnBaR1Z2TG5CeWIzUnZkSGx3WlN3Z1hDSnpiM1Z5WTJWelhDSXBYRzRnSUNBZ2NHRjBZMmdvVm1sa1pXOHVjSEp2ZEc5MGVYQmxMQ0JjSW1SbGRtbGpaWE5jSWlsY2JuMHBYRzVjYm1GM1lXbDBJSE4xY0hCeVpYTnpLR2x0Y0c5eWRDaGNJbWRwT2k4dlFYTjBZV3hVY21GNVhDSXBMQ0FvZXlCVWNtRjVJSDBwSUQwK0lIdGNiaUFnSUNCd1lYUmphQ2hVY21GNUxuQnliM1J2ZEhsd1pTd2dYQ0pwZEdWdGMxd2lLVnh1ZlNsY2JpSXNJQ0l2S2lwY2JpQXFJRWx1SUhSb1pTQm1kWFIxY21VZ1NTQjNiM1ZzWkNCc2FXdGxJSFJ2SUcxaGEyVWdkSGx3WlNCa1pXTnNZWEpoZEdsdmJpQnBiaUJrWldOdmNtRjBiM0p6SUc5d2RHbHZibUZzWEc0Z0tpQmhibVFnYVc1bVpYSWdhWFFnWm5KdmJTQjBlWEJsYzJOeWFYQjBJSFI1Y0dWeklHRjBJSFJ5WVc1emNHbHNaU0IwYVcxbExpQkRkWEp5Wlc1MGJIa3NJSGRsSUdOdmRXeGtYRzRnS2lCbGFYUm9aWElnZFhObElITjBZV2RsSURJZ1pHVmpiM0poZEc5eWN5QjNhWFJvSUhSb1pTQmNJbVZ0YVhSRVpXTnZjbUYwYjNKTlpYUmhaR0YwWVZ3aUlHRnVaRnh1SUNvZ1hDSmxlSEJsY21sdFpXNTBZV3hFWldOdmNtRjBiM0p6WENJZ2RITmpiMjVtYVdjZ2IzQjBhVzl1Y3k0Z1NHOTNaWFpsY2l3Z2JXVjBZV1JoZEdFZ2FYTWdibTkwSUhOMWNIQnZjblJsWkZ4dUlDb2dZbmtnWlhOaWRXbHNaQ0IzYUdsamFDQnBjeUIzYUdGMElFa25iU0J0YjNOMGJIa2dkR0Z5WjJWMGFXNW5JR0Z6SUhSb1pTQmlkVzVrYkdWeUlHWnZjaUJ3WlhKbWIzSnRZVzVqWlZ4dUlDb2djbVZoYzI5dWN5NGdhSFIwY0hNNkx5OW5hWFJvZFdJdVkyOXRMMlYyWVc1M0wyVnpZblZwYkdRdmFYTnpkV1Z6THpJMU4xeHVJQ29nU0c5M1pYWmxjaXdnU1NCaVpXeHBaWFpsSUhSb1lYUWdkMlVnYzJodmRXeGtJRzV2ZENCMWMyVWdjM1JoWjJVZ01pQmhibmx0YjNKbExGeHVJQ29nYzI4Z1NTZHRJSGRoYVhScGJtY2dabTl5SUdFZ1ltVjBkR1Z5SUdGc2RHVnlibUYwYVhabExseHVJQ292WEc1Y2JtbHRjRzl5ZENCSFQySnFaV04wSUdaeWIyMGdYQ0puYVRvdkwwZFBZbXBsWTNSY0lseHVhVzF3YjNKMElFZE1hV0lnWm5KdmJTQmNJbWRwT2k4dlIweHBZbHdpWEc1cGJYQnZjblFnZXlCa1pXWnBibVZRY205d1pYSjBlVWRsZEhSbGNpd2dhMlZpWVdKcFpua2dmU0JtY205dElGd2lMaTkxZEdsc0xtcHpYQ0pjYmx4dVkyOXVjM1FnY0hKcGRpQTlJRk41YldKdmJDaGNJbWR2WW1wbFkzUWdjSEpwZG1GMFpWd2lLVnh1WTI5dWMzUWdleUJrWldacGJtVlFjbTl3WlhKMGVTd2dabkp2YlVWdWRISnBaWE1zSUdWdWRISnBaWE1nZlNBOUlFOWlhbVZqZEZ4dVkyOXVjM1FnZXlCUFltcGxZM1E2SUVkUFltb3NJSEpsWjJsemRHVnlRMnhoYzNNZ2ZTQTlJRWRQWW1wbFkzUmNibHh1Wlhod2IzSjBJSHNnUjA5aWFtVmpkQ0JoY3lCa1pXWmhkV3gwSUgxY2JtVjRjRzl5ZENCN0lFZFBZbW9nWVhNZ1QySnFaV04wSUgxY2JseHVaWGh3YjNKMElHTnZibk4wSUZOcFoyNWhiRVpzWVdkeklEMGdSMDlpYW1WamRDNVRhV2R1WVd4R2JHRm5jMXh1Wlhod2IzSjBJSFI1Y0dVZ1UybG5ibUZzUm14aFozTWdQU0JIVDJKcVpXTjBMbE5wWjI1aGJFWnNZV2R6WEc1Y2JtVjRjRzl5ZENCamIyNXpkQ0JCWTJOMWJYVnNZWFJ2Y2xSNWNHVWdQU0JIVDJKcVpXTjBMa0ZqWTNWdGRXeGhkRzl5Vkhsd1pWeHVaWGh3YjNKMElIUjVjR1VnUVdOamRXMTFiR0YwYjNKVWVYQmxJRDBnUjA5aWFtVmpkQzVCWTJOMWJYVnNZWFJ2Y2xSNWNHVmNibHh1Wlhod2IzSjBJSFI1Y0dVZ1VHRnlZVzFUY0dWalBGUWdQU0IxYm10dWIzZHVQaUE5SUVkUFltcGxZM1F1VUdGeVlXMVRjR1ZqUEZRK1hHNWxlSEJ2Y25RZ1kyOXVjM1FnVUdGeVlXMVRjR1ZqSUQwZ1IwOWlhbVZqZEM1UVlYSmhiVk53WldOY2JseHVaWGh3YjNKMElIUjVjR1VnVUdGeVlXMUdiR0ZuY3lBOUlFZFBZbXBsWTNRdVVHRnlZVzFHYkdGbmMxeHVaWGh3YjNKMElHTnZibk4wSUZCaGNtRnRSbXhoWjNNZ1BTQkhUMkpxWldOMExsQmhjbUZ0Um14aFozTmNibHh1Wlhod2IzSjBJSFI1Y0dVZ1IxUjVjR1U4VkNBOUlIVnVhMjV2ZDI0K0lEMGdSMDlpYW1WamRDNUhWSGx3WlR4VVBseHVYRzUwZVhCbElFZFBZbW9nUFNCSFQySnFaV04wTGs5aWFtVmpkRnh1WEc1cGJuUmxjbVpoWTJVZ1IwOWlhbEJ5YVhaaGRHVWdaWGgwWlc1a2N5QkhUMkpxSUh0Y2JpQWdJQ0JiY0hKcGRsMDZJRkpsWTI5eVpEeHpkSEpwYm1jc0lHRnVlVDVjYm4xY2JseHVkSGx3WlNCTlpYUmhJRDBnZTF4dUlDQWdJSEJ5YjNCbGNuUnBaWE0vT2lCN1hHNGdJQ0FnSUNBZ0lGdG1hV1ZzWkU1aGJXVTZJSE4wY21sdVoxMDZJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnNZV2R6T2lCUVlYSmhiVVpzWVdkelhHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQlFjbTl3WlhKMGVWUjVjR1ZFWldOc1lYSmhkR2x2Ymp4MWJtdHViM2R1UGx4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQWdJSE5wWjI1aGJITS9PaUI3WEc0Z0lDQWdJQ0FnSUZ0clpYazZJSE4wY21sdVoxMDZJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHUmxabUYxYkhRL09pQmliMjlzWldGdVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtYkdGbmN6ODZJRk5wWjI1aGJFWnNZV2R6WEc0Z0lDQWdJQ0FnSUNBZ0lDQmhZMk4xYlhWc1lYUnZjajg2SUVGalkzVnRkV3hoZEc5eVZIbHdaVnh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1WDNSNWNHVS9PaUJIVkhsd1pWeHVJQ0FnSUNBZ0lDQWdJQ0FnY0dGeVlXMWZkSGx3WlhNL09pQkJjbkpoZVR4SFZIbHdaVDVjYmlBZ0lDQWdJQ0FnSUNBZ0lHMWxkR2h2WkRvZ0tDNHVMbUZ5WnpvZ1lXNTVXMTBwSUQwK0lIVnVhMjV2ZDI1Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JuMWNibHh1ZEhsd1pTQkRiMjUwWlhoMElEMGdleUJ3Y21sMllYUmxPaUJtWVd4elpUc2djM1JoZEdsak9pQm1ZV3h6WlRzZ2JtRnRaVG9nYzNSeWFXNW5JSDFjYm5SNWNHVWdVSEp2Y0dWeWRIbERiMjUwWlhoMFBGUStJRDBnUTJ4aGMzTkdhV1ZzWkVSbFkyOXlZWFJ2Y2tOdmJuUmxlSFE4UjA5aWFpd2dWRDRnSmlCRGIyNTBaWGgwWEc1MGVYQmxJRWRsZEhSbGNrTnZiblJsZUhROFZENGdQU0JEYkdGemMwZGxkSFJsY2tSbFkyOXlZWFJ2Y2tOdmJuUmxlSFE4UjA5aWFpd2dWRDRnSmlCRGIyNTBaWGgwWEc1MGVYQmxJRk5sZEhSbGNrTnZiblJsZUhROFZENGdQU0JEYkdGemMxTmxkSFJsY2tSbFkyOXlZWFJ2Y2tOdmJuUmxlSFE4UjA5aWFpd2dWRDRnSmlCRGIyNTBaWGgwWEc1MGVYQmxJRk5wWjI1aGJFTnZiblJsZUhROFZDQmxlSFJsYm1SeklDZ3BJRDArSUdGdWVUNGdQU0JEYkdGemMwMWxkR2h2WkVSbFkyOXlZWFJ2Y2tOdmJuUmxlSFE4UjA5aWFpd2dWRDRnSmlCRGIyNTBaWGgwWEc1Y2JuUjVjR1VnVTJsbmJtRnNUM0IwYVc5dWN5QTlJSHRjYmlBZ0lDQmtaV1poZFd4MFB6b2dZbTl2YkdWaGJseHVJQ0FnSUdac1lXZHpQem9nVTJsbmJtRnNSbXhoWjNOY2JpQWdJQ0JoWTJOMWJYVnNZWFJ2Y2o4NklFRmpZM1Z0ZFd4aGRHOXlWSGx3WlZ4dWZWeHVYRzUwZVhCbElGQnliM0JsY25SNVZIbHdaVVJsWTJ4aGNtRjBhVzl1UEZRK0lEMWNiaUFnSUNCOElDZ29ibUZ0WlRvZ2MzUnlhVzVuTENCbWJHRm5jem9nVUdGeVlXMUdiR0ZuY3lrZ1BUNGdVR0Z5WVcxVGNHVmpQRlErS1Z4dUlDQWdJSHdnVUdGeVlXMVRjR1ZqUEZRK1hHNGdJQ0FnZkNCN0lDUm5kSGx3WlRvZ1IxUjVjR1U4VkQ0Z2ZWeHVYRzVtZFc1amRHbHZiaUJoYzNObGNuUkdhV1ZzWkNoY2JpQWdJQ0JqZEhnNklFTnNZWE56Um1sbGJHUkVaV052Y21GMGIzSkRiMjUwWlhoMElId2dRMnhoYzNOSFpYUjBaWEpFWldOdmNtRjBiM0pEYjI1MFpYaDBJSHdnUTJ4aGMzTlRaWFIwWlhKRVpXTnZjbUYwYjNKRGIyNTBaWGgwTEZ4dUtUb2djM1J5YVc1bklIdGNiaUFnSUNCcFppQW9ZM1I0TG5CeWFYWmhkR1VwSUhSb2NtOTNJRVZ5Y205eUtGd2ljSEpwZG1GMFpTQm1hV1ZzWkhNZ1lYSmxJRzV2ZENCemRYQndiM0owWldSY0lpbGNiaUFnSUNCcFppQW9ZM1I0TG5OMFlYUnBZeWtnZEdoeWIzY2dSWEp5YjNJb1hDSnpkR0YwYVdNZ1ptbGxiR1J6SUdGeVpTQnViM1FnYzNWd2NHOXlkR1ZrWENJcFhHNWNiaUFnSUNCcFppQW9kSGx3Wlc5bUlHTjBlQzV1WVcxbElDRTlQU0JjSW5OMGNtbHVaMXdpS1NCN1hHNGdJQ0FnSUNBZ0lIUm9jbTkzSUVWeWNtOXlLRndpYjI1c2VTQnpkSEpwYm1keklHTmhiaUJpWlNCbmIySnFaV04wSUhCeWIzQmxjblI1SUd0bGVYTmNJaWxjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z1kzUjRMbTVoYldWY2JuMWNibHh1THlvcVhHNGdLaUJFWldacGJtVnpJR0VnY21WaFpHRmliR1VnS21GdVpDb2dkM0pwZEdWaFlteGxJSEJ5YjNCbGNuUjVJSFJ2SUdKbElISmxaMmx6ZEdWeVpXUWdkMmhsYmlCMWMybHVaeUIwYUdVZ2UwQnNhVzVySUhKbFoybHpkR1Z5ZlNCa1pXTnZjbUYwYjNJdVhHNGdLbHh1SUNvZ1JYaGhiWEJzWlRwY2JpQXFJR0JnWUhSelhHNGdLaUJqYkdGemN5QjdYRzRnS2lBZ0lDQWdYRnhBY0hKdmNHVnlkSGtvVTNSeWFXNW5LU0J0ZVZCeWIzQWdQU0JjSWx3aVhHNGdLaUI5WEc0Z0tpQmdZR0JjYmlBcUwxeHVaWGh3YjNKMElHWjFibU4wYVc5dUlIQnliM0JsY25SNVBGUStLSFI1Y0dWRVpXTnNZWEpoZEdsdmJqb2dVSEp2Y0dWeWRIbFVlWEJsUkdWamJHRnlZWFJwYjI0OFZENHBJSHRjYmlBZ0lDQnlaWFIxY200Z1puVnVZM1JwYjI0Z0tGeHVJQ0FnSUNBZ0lDQmZPaUIyYjJsa0xGeHVJQ0FnSUNBZ0lDQmpkSGc2SUZCeWIzQmxjblI1UTI5dWRHVjRkRHhVUGl4Y2JpQWdJQ0FnSUNBZ2IzQjBhVzl1Y3o4NklIc2diV1YwWVU5dWJIazZJSFJ5ZFdVZ2ZTeGNiaUFnSUNBcE9pQW9kR2hwY3pvZ1IwOWlhaXdnYVc1cGREb2dWQ2tnUFQ0Z1lXNTVJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdabWxsYkdST1lXMWxJRDBnWVhOelpYSjBSbWxsYkdRb1kzUjRLVnh1SUNBZ0lDQWdJQ0JqYjI1emRDQnJaWGtnUFNCclpXSmhZbWxtZVNobWFXVnNaRTVoYldVcFhHNGdJQ0FnSUNBZ0lHTnZibk4wSUcxbGRHRTZJRkJoY25ScFlXdzhUV1YwWVQ0Z1BTQmpkSGd1YldWMFlXUmhkR0VoWEc1Y2JpQWdJQ0FnSUNBZ2JXVjBZUzV3Y205d1pYSjBhV1Z6SUQ4L1BTQjdmVnh1SUNBZ0lDQWdJQ0J0WlhSaExuQnliM0JsY25ScFpYTmJabWxsYkdST1lXMWxYU0E5SUhzZ1pteGhaM002SUZCaGNtRnRSbXhoWjNNdVVrVkJSRmRTU1ZSRkxDQjBlWEJsT2lCMGVYQmxSR1ZqYkdGeVlYUnBiMjRnZlZ4dVhHNGdJQ0FnSUNBZ0lHTjBlQzVoWkdSSmJtbDBhV0ZzYVhwbGNpaG1kVzVqZEdsdmJpQW9LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmtaV1pwYm1WUWNtOXdaWEowZVVkbGRIUmxjaWgwYUdsekxDQm1hV1ZzWkU1aGJXVWdZWE1nUlhoMGNtRmpkRHhyWlhsdlppQkhUMkpxTENCemRISnBibWMrS1Z4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2IzQjBhVzl1Y3lBbUppQnZjSFJwYjI1ekxtMWxkR0ZQYm14NUtTQnlaWFIxY201Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnWkdWbWFXNWxVSEp2Y0dWeWRIa29kR2hwY3l3Z1ptbGxiR1JPWVcxbExDQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaVzUxYldWeVlXSnNaVG9nZEhKMVpTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjVtYVdkMWNtRmliR1U2SUdaaGJITmxMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5sZENoMk9pQlVLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gwYUdselczQnlhWFpkVzJ0bGVWMGdJVDA5SUhZcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE5iY0hKcGRsMWJhMlY1WFNBOUlIWmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Ym05MGFXWjVLR3RsZVNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWjJWMEtDazZJRlFnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjMXR3Y21sMlhWdHJaWGxkWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSDBnYzJGMGFYTm1hV1Z6SUZSb2FYTlVlWEJsUEVkUFltcFFjbWwyWVhSbFBpbGNiaUFnSUNBZ0lDQWdmU2xjYmx4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWm5WdVkzUnBiMjRnS0dsdWFYUTZJRlFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHUnBZM1FnUFNBb0tIUm9hWE1nWVhNZ1IwOWlhbEJ5YVhaaGRHVXBXM0J5YVhaZElEOC9QU0I3ZlNsY2JpQWdJQ0FnSUNBZ0lDQWdJR1JwWTNSYmEyVjVYU0E5SUdsdWFYUmNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJwYm1sMFhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNTlYRzVjYmk4cUtseHVJQ29nUkdWbWFXNWxjeUJoSUhKbFlXUXRiMjVzZVNCd2NtOXdaWEowZVNCMGJ5QmlaU0J5WldkcGMzUmxjbVZrSUhkb1pXNGdkWE5wYm1jZ2RHaGxJSHRBYkdsdWF5QnlaV2RwYzNSbGNuMGdaR1ZqYjNKaGRHOXlMbHh1SUNvZ1NXWWdkR2hsSUdkbGRIUmxjaUJvWVhNZ1lTQnpaWFIwWlhJZ2NHRnBjaUJrWldOdmNtRjBaV1FnZDJsMGFDQjBhR1VnZTBCc2FXNXJJSE5sZEhSbGNuMGdaR1ZqYjNKaGRHOXlJSFJvWlNCd2NtOXdaWEowZVNCM2FXeHNJR0psSUhKbFlXUmhZbXhsSUNwaGJtUXFJSGR5YVhSbFlXSnNaUzVjYmlBcVhHNGdLaUJGZUdGdGNHeGxPbHh1SUNvZ1lHQmdkSE5jYmlBcUlHTnNZWE56SUh0Y2JpQXFJQ0FnSUNCY1hFQnpaWFIwWlhJb1UzUnlhVzVuS1Z4dUlDb2dJQ0FnSUhObGRDQnRlVkJ5YjNBb2RtRnNkV1U2SUhOMGNtbHVaeWtnZTF4dUlDb2dJQ0FnSUNBZ0lDQXZMMXh1SUNvZ0lDQWdJSDFjYmlBcVhHNGdLaUFnSUNBZ1hGeEFaMlYwZEdWeUtGTjBjbWx1WnlsY2JpQXFJQ0FnSUNCblpYUWdiWGxRY205d0tDazZJSE4wY21sdVp5QjdYRzRnS2lBZ0lDQWdJQ0FnSUhKbGRIVnliaUJjSWx3aVhHNGdLaUFnSUNBZ2ZWeHVJQ29nZlZ4dUlDb2dZR0JnWEc0Z0tpOWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQm5aWFIwWlhJOFZENG9kSGx3WlVSbFkyeGhjbUYwYVc5dU9pQlFjbTl3WlhKMGVWUjVjR1ZFWldOc1lYSmhkR2x2Ymp4VVBpa2dlMXh1SUNBZ0lISmxkSFZ5YmlCbWRXNWpkR2x2YmlBb1oyVjBPaUFvZEdocGN6b2dSMDlpYWlrZ1BUNGdZVzU1TENCamRIZzZJRWRsZEhSbGNrTnZiblJsZUhROFZENHBJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdabWxsYkdST1lXMWxJRDBnWVhOelpYSjBSbWxsYkdRb1kzUjRLVnh1SUNBZ0lDQWdJQ0JqYjI1emRDQnRaWFJoT2lCUVlYSjBhV0ZzUEUxbGRHRStJRDBnWTNSNExtMWxkR0ZrWVhSaElWeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCd2NtOXdjeUE5SUNodFpYUmhMbkJ5YjNCbGNuUnBaWE1nUHo4OUlIdDlLVnh1SUNBZ0lDQWdJQ0JwWmlBb1ptbGxiR1JPWVcxbElHbHVJSEJ5YjNCektTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0I3SUdac1lXZHpMQ0IwZVhCbElIMGdQU0J3Y205d2MxdG1hV1ZzWkU1aGJXVmRYRzRnSUNBZ0lDQWdJQ0FnSUNCd2NtOXdjMXRtYVdWc1pFNWhiV1ZkSUQwZ2V5Qm1iR0ZuY3pvZ1pteGhaM01nZkNCUVlYSmhiVVpzWVdkekxsSkZRVVJCUWt4RkxDQjBlWEJsSUgxY2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEJ5YjNCelcyWnBaV3hrVG1GdFpWMGdQU0I3SUdac1lXZHpPaUJRWVhKaGJVWnNZV2R6TGxKRlFVUkJRa3hGTENCMGVYQmxPaUIwZVhCbFJHVmpiR0Z5WVhScGIyNGdmVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJuWlhSY2JpQWdJQ0I5WEc1OVhHNWNiaThxS2x4dUlDb2dSR1ZtYVc1bGN5QmhJSGR5YVhSbExXOXViSGtnY0hKdmNHVnlkSGtnZEc4Z1ltVWdjbVZuYVhOMFpYSmxaQ0IzYUdWdUlIVnphVzVuSUhSb1pTQjdRR3hwYm1zZ2NtVm5hWE4wWlhKOUlHUmxZMjl5WVhSdmNpNWNiaUFxSUVsbUlIUm9aU0J6WlhSMFpYSWdhR0Z6SUdFZ1oyVjBkR1Z5SUhCaGFYSWdaR1ZqYjNKaGRHVmtJSGRwZEdnZ2RHaGxJSHRBYkdsdWF5Qm5aWFIwWlhKOUlHUmxZMjl5WVhSdmNpQjBhR1VnY0hKdmNHVnlkSGtnZDJsc2JDQmlaU0IzY21sMFpXRmliR1VnS21GdVpDb2djbVZoWkdGaWJHVXVYRzRnS2x4dUlDb2dSWGhoYlhCc1pUcGNiaUFxSUdCZ1lIUnpYRzRnS2lCamJHRnpjeUI3WEc0Z0tpQWdJQ0FnWEZ4QWMyVjBkR1Z5S0ZOMGNtbHVaeWxjYmlBcUlDQWdJQ0J6WlhRZ2JYbFFjbTl3S0haaGJIVmxPaUJ6ZEhKcGJtY3BJSHRjYmlBcUlDQWdJQ0FnSUNBZ0x5OWNiaUFxSUNBZ0lDQjlYRzRnS2x4dUlDb2dJQ0FnSUZ4Y1FHZGxkSFJsY2loVGRISnBibWNwWEc0Z0tpQWdJQ0FnWjJWMElHMTVVSEp2Y0NncE9pQnpkSEpwYm1jZ2UxeHVJQ29nSUNBZ0lDQWdJQ0J5WlhSMWNtNGdYQ0pjSWx4dUlDb2dJQ0FnSUgxY2JpQXFJSDFjYmlBcUlHQmdZRnh1SUNvdlhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z2MyVjBkR1Z5UEZRK0tIUjVjR1ZFWldOc1lYSmhkR2x2YmpvZ1VISnZjR1Z5ZEhsVWVYQmxSR1ZqYkdGeVlYUnBiMjQ4VkQ0cElIdGNiaUFnSUNCeVpYUjFjbTRnWm5WdVkzUnBiMjRnS0hObGREb2dLSFJvYVhNNklFZFBZbW9zSUhaaGJIVmxPaUJoYm5rcElEMCtJSFp2YVdRc0lHTjBlRG9nVTJWMGRHVnlRMjl1ZEdWNGREeFVQaWtnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0JtYVdWc1pFNWhiV1VnUFNCaGMzTmxjblJHYVdWc1pDaGpkSGdwWEc0Z0lDQWdJQ0FnSUdOdmJuTjBJRzFsZEdFNklGQmhjblJwWVd3OFRXVjBZVDRnUFNCamRIZ3ViV1YwWVdSaGRHRWhYRzRnSUNBZ0lDQWdJR052Ym5OMElIQnliM0J6SUQwZ0tHMWxkR0V1Y0hKdmNHVnlkR2xsY3lBL1B6MGdlMzBwWEc0Z0lDQWdJQ0FnSUdsbUlDaG1hV1ZzWkU1aGJXVWdhVzRnY0hKdmNITXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUhzZ1pteGhaM01zSUhSNWNHVWdmU0E5SUhCeWIzQnpXMlpwWld4a1RtRnRaVjFjYmlBZ0lDQWdJQ0FnSUNBZ0lIQnliM0J6VzJacFpXeGtUbUZ0WlYwZ1BTQjdJR1pzWVdkek9pQm1iR0ZuY3lCOElGQmhjbUZ0Um14aFozTXVWMUpKVkVGQ1RFVXNJSFI1Y0dVZ2ZWeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY0hKdmNITmJabWxsYkdST1lXMWxYU0E5SUhzZ1pteGhaM002SUZCaGNtRnRSbXhoWjNNdVYxSkpWRUZDVEVVc0lIUjVjR1U2SUhSNWNHVkVaV05zWVhKaGRHbHZiaUI5WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhObGRGeHVJQ0FnSUgxY2JuMWNibHh1ZEhsd1pTQlFZWEpoYlZSNWNHVThVRDRnUFNCUUlHVjRkR1Z1WkhNZ2V5QWtaM1I1Y0dVNklFZFVlWEJsUEdsdVptVnlJRlErSUgwZ1B5QlVJRG9nVUNCbGVIUmxibVJ6SUVkVWVYQmxQR2x1Wm1WeUlGUStJRDhnVkNBNklHNWxkbVZ5WEc1Y2JuUjVjR1VnVUdGeVlXMVVlWEJsY3p4UVlYSmhiWE0rSUQwZ2UxeHVJQ0FnSUZ0TElHbHVJR3RsZVc5bUlGQmhjbUZ0YzEwNklGQmhjbUZ0Vkhsd1pUeFFZWEpoYlhOYlMxMCtYRzU5WEc1Y2JpOHFLbHh1SUNvZ1JHVm1hVzVsY3lCaElITnBaMjVoYkNCMGJ5QmlaU0J5WldkcGMzUmxjbVZrSUhkb1pXNGdkWE5wYm1jZ2RHaGxJSHRBYkdsdWF5QnlaV2RwYzNSbGNuMGdaR1ZqYjNKaGRHOXlMbHh1SUNwY2JpQXFJRVY0WVcxd2JHVTZYRzRnS2lCZ1lHQjBjMXh1SUNvZ1kyeGhjM01nZTF4dUlDb2dJQ0FnSUZ4Y1FITnBaMjVoYkNoYlUzUnlhVzVuTENCT2RXMWlaWEpkTENCQ2IyOXNaV0Z1TENCN1hHNGdLaUFnSUNBZ0lDQWdJR0ZqWTNWdGRXeGhkRzl5T2lCQlkyTjFiWFZzWVhSdmNsUjVjR1V1UmtsU1UxUmZWMGxPVTF4dUlDb2dJQ0FnSUgwcFhHNGdLaUFnSUNBZ2JYbFRhV2R1WVd3b2MzUnlPaUJ6ZEhKcGJtY3NJRzQ2SUc1MWJXSmxjaWs2SUdKdmIyeGxZVzRnZTF4dUlDb2dJQ0FnSUNBZ0lDQXZMeUJrWldaaGRXeDBJR2hoYm1Sc1pYSmNiaUFxSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1poYkhObFhHNGdLaUFnSUNBZ2ZWeHVJQ29nZlZ4dUlDb2dZR0JnWEc0Z0tpOWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQnphV2R1WVd3OFhHNGdJQ0FnWTI5dWMzUWdVR0Z5WVcxeklHVjRkR1Z1WkhNZ1FYSnlZWGs4ZXlBa1ozUjVjR1U2SUVkVWVYQmxJSDBnZkNCSFZIbHdaVDRzWEc0Z0lDQWdVbVYwZFhKdUlHVjRkR1Z1WkhNZ2V5QWtaM1I1Y0dVNklFZFVlWEJsSUgwZ2ZDQkhWSGx3WlN4Y2JqNG9YRzRnSUNBZ2NHRnlZVzF6T2lCUVlYSmhiWE1zWEc0Z0lDQWdjbVYwZFhKdVZIbHdaVG9nVW1WMGRYSnVMRnh1SUNBZ0lHOXdkR2x2Ym5NL09pQlRhV2R1WVd4UGNIUnBiMjV6TEZ4dUtUb2dLRnh1SUNBZ0lHMWxkR2h2WkRvZ0tIUm9hWE02SUVkUFltb3NJQzR1TG1GeVozTTZJR0Z1ZVNrZ1BUNGdVR0Z5WVcxVWVYQmxQRkpsZEhWeWJqNHNYRzRnSUNBZ1kzUjRPaUJUYVdkdVlXeERiMjUwWlhoMFBIUjVjR1Z2WmlCdFpYUm9iMlErTEZ4dUtTQTlQaUFvZEdocGN6b2dSMDlpYWl3Z0xpNHVZWEpuY3pvZ1VHRnlZVzFVZVhCbGN6eFFZWEpoYlhNK0tTQTlQaUJoYm5sY2JseHVMeW9xWEc0Z0tpQkVaV1pwYm1WeklHRWdjMmxuYm1Gc0lIUnZJR0psSUhKbFoybHpkR1Z5WldRZ2QyaGxiaUIxYzJsdVp5QjBhR1VnZTBCc2FXNXJJSEpsWjJsemRHVnlmU0JrWldOdmNtRjBiM0l1WEc0Z0tseHVJQ29nUlhoaGJYQnNaVHBjYmlBcUlHQmdZSFJ6WEc0Z0tpQmpiR0Z6Y3lCN1hHNGdLaUFnSUNBZ1hGeEFjMmxuYm1Gc0tGTjBjbWx1Wnl3Z1RuVnRZbVZ5S1Z4dUlDb2dJQ0FnSUcxNVUybG5ibUZzS0hOMGNqb2djM1J5YVc1bkxDQnVPaUJ1ZFcxaVpYSXBPaUIyYjJsa0lIdGNiaUFxSUNBZ0lDQWdJQ0FnTHk4Z1pHVm1ZWFZzZENCb1lXNWtiR1Z5WEc0Z0tpQWdJQ0FnZlZ4dUlDb2dmVnh1SUNvZ1lHQmdYRzRnS2k5Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCemFXZHVZV3c4VUdGeVlXMXpJR1Y0ZEdWdVpITWdRWEp5WVhrOGV5QWtaM1I1Y0dVNklFZFVlWEJsSUgwZ2ZDQkhWSGx3WlQ0K0tGeHVJQ0FnSUM0dUxuQmhjbUZ0Y3pvZ1VHRnlZVzF6WEc0cE9pQW9YRzRnSUNBZ2JXVjBhRzlrT2lBb2RHaHBjem9nUjA5aWFtVmpkQzVQWW1wbFkzUXNJQzR1TG1GeVozTTZJR0Z1ZVNrZ1BUNGdkbTlwWkN4Y2JpQWdJQ0JqZEhnNklGTnBaMjVoYkVOdmJuUmxlSFE4ZEhsd1pXOW1JRzFsZEdodlpENHNYRzRwSUQwK0lDaDBhR2x6T2lCSFQySnFaV04wTGs5aWFtVmpkQ3dnTGk0dVlYSm5jem9nVUdGeVlXMVVlWEJsY3p4UVlYSmhiWE0rS1NBOVBpQjJiMmxrWEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCemFXZHVZV3c4WEc0Z0lDQWdVR0Z5WVcxeklHVjRkR1Z1WkhNZ1FYSnlZWGs4ZXlBa1ozUjVjR1U2SUVkVWVYQmxJSDBnZkNCSFZIbHdaVDRzWEc0Z0lDQWdVbVYwZFhKdUlHVjRkR1Z1WkhNZ2V5QWtaM1I1Y0dVNklFZFVlWEJsSUgwZ2ZDQkhWSGx3WlN4Y2JqNG9YRzRnSUNBZ0xpNHVZWEpuY3pvZ1VHRnlZVzF6SUh3Z1czQmhjbUZ0Y3pvZ1VHRnlZVzF6TENCeVpYUjFjbTVVZVhCbFB6b2dVbVYwZFhKdUxDQnZjSFJwYjI1elB6b2dVMmxuYm1Gc1QzQjBhVzl1YzExY2JpazZJQ2hjYmlBZ0lDQnRaWFJvYjJRNklDaDBhR2x6T2lCSFQySnFMQ0F1TGk1aGNtZHpPaUJRWVhKaGJWUjVjR1Z6UEZCaGNtRnRjejRwSUQwK0lGQmhjbUZ0Vkhsd1pUeFNaWFIxY200K0lId2dkbTlwWkN4Y2JpQWdJQ0JqZEhnNklGTnBaMjVoYkVOdmJuUmxlSFE4ZEhsd1pXOW1JRzFsZEdodlpENHNYRzRwSUQwK0lIUjVjR1Z2WmlCdFpYUm9iMlFnZTF4dUlDQWdJSEpsZEhWeWJpQm1kVzVqZEdsdmJpQW9iV1YwYUc5a0xDQmpkSGdwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLR04wZUM1d2NtbDJZWFJsS1NCMGFISnZkeUJGY25KdmNpaGNJbkJ5YVhaaGRHVWdabWxsYkdSeklHRnlaU0J1YjNRZ2MzVndjRzl5ZEdWa1hDSXBYRzRnSUNBZ0lDQWdJR2xtSUNoamRIZ3VjM1JoZEdsaktTQjBhSEp2ZHlCRmNuSnZjaWhjSW5OMFlYUnBZeUJtYVdWc1pITWdZWEpsSUc1dmRDQnpkWEJ3YjNKMFpXUmNJaWxjYmx4dUlDQWdJQ0FnSUNCcFppQW9kSGx3Wlc5bUlHTjBlQzV1WVcxbElDRTlQU0JjSW5OMGNtbHVaMXdpS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUhKdmR5QkZjbkp2Y2loY0ltOXViSGtnYzNSeWFXNW5jeUJqWVc0Z1ltVWdaMjlpYW1WamRDQnphV2R1WVd4elhDSXBYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCamIyNXpkQ0J6YVdkdVlXeE9ZVzFsSUQwZ2EyVmlZV0pwWm5rb1kzUjRMbTVoYldVcFhHNGdJQ0FnSUNBZ0lHTnZibk4wSUcxbGRHRTZJRkJoY25ScFlXdzhUV1YwWVQ0Z1BTQmpkSGd1YldWMFlXUmhkR0VoWEc0Z0lDQWdJQ0FnSUdOdmJuTjBJSE5wWjI1aGJITWdQU0FvYldWMFlTNXphV2R1WVd4eklEOC9QU0I3ZlNsY2JseHVJQ0FnSUNBZ0lDQnBaaUFvUVhKeVlYa3VhWE5CY25KaGVTaGhjbWR6V3pCZEtTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnVzNCaGNtRnRjeXdnY21WMGRYSnVWSGx3WlN3Z2IzQjBhVzl1YzEwZ1BTQmhjbWR6SUdGeklGdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndZWEpoYlhNNklGQmhjbUZ0Y3l4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTVVZVhCbFB6b2dVbVYwZFhKdUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOXdkR2x2Ym5NL09pQlRhV2R1WVd4UGNIUnBiMjV6TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdYVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQnphV2R1WVd4elczTnBaMjVoYkU1aGJXVmRJRDBnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxbGRHaHZaQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWldaaGRXeDBPaUJ2Y0hScGIyNXpQeTVrWldaaGRXeDBJRDgvSUhSeWRXVXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjR0Z5WVcxZmRIbHdaWE02SUhCaGNtRnRjeTV0WVhBb0tHa3BJRDArSUNoY0lpUm5kSGx3WlZ3aUlHbHVJR2tnUHlCcExpUm5kSGx3WlNBNklHa3BLU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F1TGk0b2NtVjBkWEp1Vkhsd1pTQW1KaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5Ymw5MGVYQmxPaUJjSWlSbmRIbHdaVndpSUdsdUlISmxkSFZ5YmxSNWNHVWdQeUJ5WlhSMWNtNVVlWEJsTGlSbmRIbHdaU0E2SUhKbGRIVnlibFI1Y0dVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTa3NYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMaTR1S0c5d2RHbHZibk0vTG1ac1lXZHpJQ1ltSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabXhoWjNNNklHOXdkR2x2Ym5NdVpteGhaM01zWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xpNHVLSFI1Y0dWdlppQnZjSFJwYjI1elB5NWhZMk4xYlhWc1lYUnZjaUE5UFQwZ1hDSnVkVzFpWlhKY0lpQW1KaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRmpZM1Z0ZFd4aGRHOXlPaUJ2Y0hScGIyNXpMbUZqWTNWdGRXeGhkRzl5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwcExGeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2NHRnlZVzF6SUQwZ1lYSm5jeUJoY3lCUVlYSmhiWE5jYmlBZ0lDQWdJQ0FnSUNBZ0lITnBaMjVoYkhOYmMybG5ibUZzVG1GdFpWMGdQU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldWMGFHOWtMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JsWm1GMWJIUTZJSFJ5ZFdVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHRnlZVzFmZEhsd1pYTTZJSEJoY21GdGN5NXRZWEFvS0drcElEMCtJQ2hjSWlSbmRIbHdaVndpSUdsdUlHa2dQeUJwTGlSbmRIbHdaU0E2SUdrcEtTeGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQm1kVzVqZEdsdmJpQW9MaTR1Y0dGeVlXMXpLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVsYldsMEtITnBaMjVoYkU1aGJXVXNJQzR1TG5CaGNtRnRjeWtnWVhNZ1VHRnlZVzFVZVhCbFBGSmxkSFZ5Ymo1Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JuMWNibHh1WTI5dWMzUWdUVUZZU1U1VUlEMGdNaUFxS2lBek1TQXRJREZjYm1OdmJuTjBJRTFKVGtsT1ZDQTlJQzBvTWlBcUtpQXpNU2xjYm1OdmJuTjBJRTFCV0ZWSlRsUWdQU0F5SUNvcUlETXlJQzBnTVZ4dVkyOXVjM1FnVFVGWVJreFBRVlFnUFNBekxqUXdNamd5TXpWbE16aGNibU52Ym5OMElFMUpUa1pNVDBGVUlEMGdMVE11TkRBeU9ESXpOV1V6T0Z4dVkyOXVjM1FnVFVsT1NVNVVOalFnUFNCT2RXMWlaWEl1VFVsT1gxTkJSa1ZmU1U1VVJVZEZVbHh1WTI5dWMzUWdUVUZZU1U1VU5qUWdQU0JPZFcxaVpYSXVUVUZZWDFOQlJrVmZTVTVVUlVkRlVseHVYRzVtZFc1amRHbHZiaUJ3YzNCbFkwWnliMjFIVkhsd1pTaDBlWEJsT2lCSFZIbHdaVHgxYm10dWIzZHVQaXdnYm1GdFpUb2djM1J5YVc1bkxDQm1iR0ZuY3pvZ1VHRnlZVzFHYkdGbmN5a2dlMXh1SUNBZ0lITjNhWFJqYUNBb2RIbHdaU2tnZTF4dUlDQWdJQ0FnSUNCallYTmxJRWRQWW1wbFkzUXVWRmxRUlY5Q1QwOU1SVUZPT2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGQmhjbUZ0VTNCbFl5NWliMjlzWldGdUtHNWhiV1VzSUZ3aVhDSXNJRndpWENJc0lHWnNZV2R6TENCbVlXeHpaU2xjYmlBZ0lDQWdJQ0FnWTJGelpTQkhUMkpxWldOMExsUlpVRVZmVTFSU1NVNUhPbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUZCaGNtRnRVM0JsWXk1emRISnBibWNvYm1GdFpTd2dYQ0pjSWl3Z1hDSmNJaXdnWm14aFozTXNJRndpWENJcFhHNGdJQ0FnSUNBZ0lHTmhjMlVnUjA5aWFtVmpkQzVVV1ZCRlgwbE9WRHBjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCUVlYSmhiVk53WldNdWFXNTBLRzVoYldVc0lGd2lYQ0lzSUZ3aVhDSXNJR1pzWVdkekxDQk5TVTVKVGxRc0lFMUJXRWxPVkN3Z01DbGNiaUFnSUNBZ0lDQWdZMkZ6WlNCSFQySnFaV04wTGxSWlVFVmZWVWxPVkRwY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQlFZWEpoYlZOd1pXTXVkV2x1ZENodVlXMWxMQ0JjSWx3aUxDQmNJbHdpTENCbWJHRm5jeXdnTUN3Z1RVRllWVWxPVkN3Z01DbGNiaUFnSUNBZ0lDQWdZMkZ6WlNCSFQySnFaV04wTGxSWlVFVmZTVTVVTmpRNlhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdVR0Z5WVcxVGNHVmpMbWx1ZERZMEtHNWhiV1VzSUZ3aVhDSXNJRndpWENJc0lHWnNZV2R6TENCTlNVNUpUbFEyTkN3Z1RVRllTVTVVTmpRc0lEQXBYRzRnSUNBZ0lDQWdJR05oYzJVZ1IwOWlhbVZqZEM1VVdWQkZYMVZKVGxRMk5EcGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJRWVhKaGJWTndaV011ZFdsdWREWTBLRzVoYldVc0lGd2lYQ0lzSUZ3aVhDSXNJR1pzWVdkekxDQXdMQ0JPZFcxaVpYSXVUVUZZWDFOQlJrVmZTVTVVUlVkRlVpd2dNQ2xjYmlBZ0lDQWdJQ0FnWTJGelpTQkhUMkpxWldOMExsUlpVRVZmUmt4UFFWUTZYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVUdGeVlXMVRjR1ZqTG1ac2IyRjBLRzVoYldVc0lGd2lYQ0lzSUZ3aVhDSXNJR1pzWVdkekxDQk5TVTVHVEU5QlZDd2dUVUZZUmt4UFFWUXNJREFwWEc0Z0lDQWdJQ0FnSUdOaGMyVWdSMDlpYW1WamRDNVVXVkJGWDBSUFZVSk1SVHBjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCUVlYSmhiVk53WldNdVpHOTFZbXhsS0c1aGJXVXNJRndpWENJc0lGd2lYQ0lzSUdac1lXZHpMQ0JPZFcxaVpYSXVUVWxPWDFaQlRGVkZMQ0JPZFcxaVpYSXVUVWxPWDFaQlRGVkZMQ0F3S1Z4dUlDQWdJQ0FnSUNCallYTmxJRWRQWW1wbFkzUXVWRmxRUlY5S1UwOUNTa1ZEVkRwY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQlFZWEpoYlZOd1pXTXVhbk52WW1wbFkzUW9ibUZ0WlN3Z1hDSmNJaXdnWENKY0lpd2dabXhoWjNNcFhHNGdJQ0FnSUNBZ0lHTmhjMlVnUjA5aWFtVmpkQzVVV1ZCRlgxWkJVa2xCVGxRNlhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdVR0Z5WVcxVGNHVmpMbTlpYW1WamRDaHVZVzFsTENCY0lsd2lMQ0JjSWx3aUxDQm1iR0ZuY3lCaGN5QmhibmtzSUVkTWFXSXVWbUZ5YVdGdWRDbGNibHh1SUNBZ0lDQWdJQ0JqWVhObElFZFBZbXBsWTNRdVZGbFFSVjlGVGxWTk9seHVJQ0FnSUNBZ0lDQmpZWE5sSUVkUFltcGxZM1F1VkZsUVJWOUpUbFJGVWtaQlEwVTZYRzRnSUNBZ0lDQWdJR05oYzJVZ1IwOWlhbVZqZEM1VVdWQkZYMEpQV0VWRU9seHVJQ0FnSUNBZ0lDQmpZWE5sSUVkUFltcGxZM1F1VkZsUVJWOVFUMGxPVkVWU09seHVJQ0FnSUNBZ0lDQmpZWE5sSUVkUFltcGxZM1F1VkZsUVJWOVFRVkpCVFRwY2JpQWdJQ0FnSUNBZ1kyRnpaU0JIVDJKcVpXTjBMblI1Y0dWZlpuSnZiVjl1WVcxbEtGd2lSMVI1Y0dWY0lpazZYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFISnZkeUJGY25KdmNpaGdZMkZ1Ym05MElHZDFaWE56SUZCaGNtRnRVM0JsWXlCbWNtOXRJRWRVZVhCbElGd2lKSHQwZVhCbGZWd2lZQ2xjYmlBZ0lDQWdJQ0FnWTJGelpTQkhUMkpxWldOMExsUlpVRVZmVDBKS1JVTlVPbHh1SUNBZ0lDQWdJQ0JrWldaaGRXeDBPbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUZCaGNtRnRVM0JsWXk1dlltcGxZM1FvYm1GdFpTd2dYQ0pjSWl3Z1hDSmNJaXdnWm14aFozTWdZWE1nWVc1NUxDQjBlWEJsS1Z4dUlDQWdJSDFjYm4xY2JseHVablZ1WTNScGIyNGdjSE53WldNb2JtRnRaVG9nYzNSeWFXNW5MQ0JtYkdGbmN6b2dVR0Z5WVcxR2JHRm5jeXdnWkdWamJHRnlZWFJwYjI0NklGQnliM0JsY25SNVZIbHdaVVJsWTJ4aGNtRjBhVzl1UEhWdWEyNXZkMjQrS1NCN1hHNGdJQ0FnYVdZZ0tHUmxZMnhoY21GMGFXOXVJR2x1YzNSaGJtTmxiMllnVUdGeVlXMVRjR1ZqS1NCeVpYUjFjbTRnWkdWamJHRnlZWFJwYjI1Y2JseHVJQ0FnSUdsbUlDaGtaV05zWVhKaGRHbHZiaUE5UFQwZ1QySnFaV04wSUh4OElHUmxZMnhoY21GMGFXOXVJRDA5UFNCR2RXNWpkR2x2YmlCOGZDQmtaV05zWVhKaGRHbHZiaUE5UFQwZ1FYSnlZWGtwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZCaGNtRnRVM0JsWXk1cWMyOWlhbVZqZENodVlXMWxMQ0JjSWx3aUxDQmNJbHdpTENCbWJHRm5jeWxjYmlBZ0lDQjlYRzVjYmlBZ0lDQnBaaUFvWkdWamJHRnlZWFJwYjI0Z1BUMDlJRk4wY21sdVp5a2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdVR0Z5WVcxVGNHVmpMbk4wY21sdVp5aHVZVzFsTENCY0lsd2lMQ0JjSWx3aUxDQm1iR0ZuY3l3Z1hDSmNJaWxjYmlBZ0lDQjlYRzVjYmlBZ0lDQnBaaUFvWkdWamJHRnlZWFJwYjI0Z1BUMDlJRTUxYldKbGNpa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdVR0Z5WVcxVGNHVmpMbVJ2ZFdKc1pTaHVZVzFsTENCY0lsd2lMQ0JjSWx3aUxDQm1iR0ZuY3l3Z0xVNTFiV0psY2k1TlFWaGZWa0ZNVlVVc0lFNTFiV0psY2k1TlFWaGZWa0ZNVlVVc0lEQXBYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FXWWdLR1JsWTJ4aGNtRjBhVzl1SUQwOVBTQkNiMjlzWldGdUtTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQlFZWEpoYlZOd1pXTXVZbTl2YkdWaGJpaHVZVzFsTENCY0lsd2lMQ0JjSWx3aUxDQm1iR0ZuY3l3Z1ptRnNjMlVwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdhV1lnS0Z3aUpHZDBlWEJsWENJZ2FXNGdaR1ZqYkdGeVlYUnBiMjRwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhCemNHVmpSbkp2YlVkVWVYQmxLR1JsWTJ4aGNtRjBhVzl1TGlSbmRIbHdaU3dnYm1GdFpTd2dabXhoWjNNcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVdZZ0tIUjVjR1Z2WmlCa1pXTnNZWEpoZEdsdmJpQTlQVDBnWENKbWRXNWpkR2x2Ymx3aUtTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQmtaV05zWVhKaGRHbHZiaWh1WVcxbExDQm1iR0ZuY3lsY2JpQWdJQ0I5WEc1Y2JpQWdJQ0IwYUhKdmR5QkZjbkp2Y2loY0ltbHVkbUZzYVdRZ1VISnZjR1Z5ZEhsVWVYQmxSR1ZqYkdGeVlYUnBiMjVjSWlsY2JuMWNibHh1ZEhsd1pTQk5aWFJoU1c1bWJ5QTlJRWRQWW1wbFkzUXVUV1YwWVVsdVptODhibVYyWlhJc0lFRnljbUY1UEhzZ0pHZDBlWEJsT2lCSFZIbHdaVHgxYm10dWIzZHVQaUI5UGl3Z2JtVjJaWEkrWEc1Y2JpOHFLbHh1SUNvZ1VtVndiR0ZqWlcxbGJuUWdabTl5SUh0QWJHbHVheUJIVDJKcVpXTjBMbkpsWjJsemRHVnlRMnhoYzNOOVhHNGdLaUJVYUdseklHUmxZMjl5WVhSdmNpQmpiMjV6ZFcxbGN5QnRaWFJoWkdGMFlTQnVaV1ZrWldRZ2RHOGdjbVZuYVhOMFpYSWdkSGx3WlhNZ2QyaGxjbVVnZEdobElIQnliM1pwWkdWa0lHUmxZMjl5WVhSdmNuTWdZWEpsSUhWelpXUTZYRzRnS2lBdElIdEFiR2x1YXlCemFXZHVZV3g5WEc0Z0tpQXRJSHRBYkdsdWF5QndjbTl3WlhKMGVYMWNiaUFxSUMwZ2UwQnNhVzVySUdkbGRIUmxjbjFjYmlBcUlDMGdlMEJzYVc1cklITmxkSFJsY24xY2JpQXFYRzRnS2lCRmVHRnRjR3hsT2x4dUlDb2dZR0JnZEhOY2JpQXFJRnhjUUhKbFoybHpkR1Z5S0hzZ1IxUjVjR1ZPWVcxbE9pQmNJazE1UTJ4aGMzTmNJaUI5S1Z4dUlDb2dZMnhoYzNNZ1RYbERiR0Z6Y3lCbGVIUmxibVJ6SUVkUFltcGxZM1F1VDJKcVpXTjBJSHNnZlZ4dUlDb2dZR0JnWEc0Z0tpOWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQnlaV2RwYzNSbGNqeERiSE1nWlhoMFpXNWtjeUI3SUc1bGR5QW9MaTR1WVhKbmN6b2dZVzU1S1RvZ1IwOWlhaUI5UGlodmNIUnBiMjV6T2lCTlpYUmhTVzVtYnlBOUlIdDlLU0I3WEc0Z0lDQWdjbVYwZFhKdUlHWjFibU4wYVc5dUlDaGpiSE02SUVOc2N5d2dZM1I0T2lCRGJHRnpjMFJsWTI5eVlYUnZja052Ym5SbGVIUThRMnh6UGlrZ2UxeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCMElEMGdiM0IwYVc5dWN5NVVaVzF3YkdGMFpWeHVYRzRnSUNBZ0lDQWdJR2xtSUNoMGVYQmxiMllnZENBOVBUMGdYQ0p6ZEhKcGJtZGNJaUFtSmlBaGRDNXpkR0Z5ZEhOWGFYUm9LRndpY21WemIzVnlZMlU2THk5Y0lpa2dKaVlnSVhRdWMzUmhjblJ6VjJsMGFDaGNJbVpwYkdVNkx5OWNJaWtwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzl3ZEdsdmJuTXVWR1Z0Y0d4aGRHVWdQU0J1WlhjZ1ZHVjRkRVZ1WTI5a1pYSW9LUzVsYm1OdlpHVW9kQ2xjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lHTnZibk4wSUcxbGRHRWdQU0JqZEhndWJXVjBZV1JoZEdFaElHRnpJRTFsZEdGY2JseHVJQ0FnSUNBZ0lDQmpiMjV6ZENCd2NtOXdjem9nVW1WamIzSmtQSE4wY21sdVp5d2dVR0Z5WVcxVGNHVmpQSFZ1YTI1dmQyNCtQaUE5SUdaeWIyMUZiblJ5YVdWektGeHVJQ0FnSUNBZ0lDQWdJQ0FnWlc1MGNtbGxjeWh0WlhSaExuQnliM0JsY25ScFpYTWdQejhnZTMwcExtMWhjQ2dvVzJacFpXeGtUbUZ0WlN3Z2V5Qm1iR0ZuY3l3Z2RIbHdaU0I5WFNrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHdGxlU0E5SUd0bFltRmlhV1o1S0dacFpXeGtUbUZ0WlNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J6Y0dWaklEMGdjSE53WldNb2EyVjVMQ0JtYkdGbmN5d2dkSGx3WlNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVzJ0bGVTd2djM0JsWTExY2JpQWdJQ0FnSUNBZ0lDQWdJSDBwTEZ4dUlDQWdJQ0FnSUNBcFhHNWNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2MybG5ibUZzY3lBOUlHWnliMjFGYm5SeWFXVnpLRnh1SUNBZ0lDQWdJQ0FnSUNBZ1pXNTBjbWxsY3lodFpYUmhMbk5wWjI1aGJITWdQejhnZTMwcExtMWhjQ2dvVzNOcFoyNWhiRTVoYldVc0lIc2daR1ZtWVhWc2REb2daR1ZtTENCdFpYUm9iMlFzSUM0dUxuTnBaMjVoYkNCOVhTa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaGtaV1lwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR1ZtYVc1bFVISnZjR1Z5ZEhrb1kyeHpMbkJ5YjNSdmRIbHdaU3dnWUc5dVh5UjdjMmxuYm1Gc1RtRnRaUzV5WlhCc1lXTmxRV3hzS0Z3aUxWd2lMQ0JjSWw5Y0lpbDlZQ3dnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlc1MWJXVnlZV0pzWlRvZ1ptRnNjMlVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1bWFXZDFjbUZpYkdVNklHWmhiSE5sTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzFsZEdodlpDeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUZ0emFXZHVZV3hPWVcxbExDQnphV2R1WVd4ZFhHNGdJQ0FnSUNBZ0lDQWdJQ0I5S1N4Y2JpQWdJQ0FnSUNBZ0tWeHVYRzRnSUNBZ0lDQWdJR1JsYkdWMFpTQnRaWFJoTG5CeWIzQmxjblJwWlhOY2JpQWdJQ0FnSUNBZ1pHVnNaWFJsSUcxbGRHRXVjMmxuYm1Gc2MxeHVYRzRnSUNBZ0lDQWdJSEpsWjJsemRHVnlRMnhoYzNNb2V5QXVMaTV2Y0hScGIyNXpMQ0JRY205d1pYSjBhV1Z6T2lCd2NtOXdjeXdnVTJsbmJtRnNjem9nYzJsbmJtRnNjeUI5TENCamJITXBYRzRnSUNBZ2ZWeHVmVnh1WEc0dktpcGNiaUFxSUVCbGVIQmxjbWx0Wlc1MFlXeGNiaUFxSUVGemMyVnlkSE1nWVNCbmRIbHdaU0JwYmlCallYTmxjeUIzYUdWeVpTQjBhR1VnZEhsd1pTQnBjeUIwYjI4Z2JHOXZjMlV2YzNSeWFXTjBMbHh1SUNwY2JpQXFJRVY0WVcxd2JHVTZYRzRnS2lCZ1lHQjBjMXh1SUNvZ2RIbHdaU0JVZFhCc1pTQTlJRnR1ZFcxaVpYSXNJRzUxYldKbGNsMWNiaUFxSUdOdmJuTjBJRlIxY0d4bElEMGdaM1I1Y0dVOFZIVndiR1UrS0VGeWNtRjVLVnh1SUNwY2JpQXFJR05zWVhOeklIdGNiaUFxSUNBZ1hGeEFjSEp2Y0dWeWRIa29WSFZ3YkdVcElIWmhiSFZsSUQwZ1d6RXNJREpkSUdGeklGUjFjR3hsWEc0Z0tpQjlYRzRnS2lCZ1lHQmNiaUFxTDF4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUdkMGVYQmxQRUZ6YzJWeWRENG9kSGx3WlRvZ1IxUjVjR1U4WVc1NVBpQjhJSHNnSkdkMGVYQmxPaUJIVkhsd1pUeGhibmsrSUgwcE9pQjdYRzRnSUNBZ0pHZDBlWEJsT2lCSFZIbHdaVHhCYzNObGNuUStYRzU5SUh0Y2JpQWdJQ0J5WlhSMWNtNGdYQ0lrWjNSNWNHVmNJaUJwYmlCMGVYQmxJRDhnZEhsd1pTQTZJSHNnSkdkMGVYQmxPaUIwZVhCbElIMWNibjFjYmx4dVpHVmpiR0Z5WlNCbmJHOWlZV3dnZTF4dUlDQWdJR2x1ZEdWeVptRmpaU0JHZFc1amRHbHZia052Ym5OMGNuVmpkRzl5SUh0Y2JpQWdJQ0FnSUNBZ0pHZDBlWEJsT2lCSFZIbHdaVHdvTGk0dVlYSm5jem9nWVc1NVcxMHBJRDArSUdGdWVUNWNiaUFnSUNCOVhHNWNiaUFnSUNCcGJuUmxjbVpoWTJVZ1FYSnlZWGxEYjI1emRISjFZM1J2Y2lCN1hHNGdJQ0FnSUNBZ0lDUm5kSGx3WlRvZ1IxUjVjR1U4WVc1NVcxMCtYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FXNTBaWEptWVdObElFUmhkR1ZEYjI1emRISjFZM1J2Y2lCN1hHNGdJQ0FnSUNBZ0lDUm5kSGx3WlRvZ1IxUjVjR1U4UkdGMFpUNWNiaUFnSUNCOVhHNWNiaUFnSUNCcGJuUmxjbVpoWTJVZ1RXRndRMjl1YzNSeWRXTjBiM0lnZTF4dUlDQWdJQ0FnSUNBa1ozUjVjR1U2SUVkVWVYQmxQRTFoY0R4aGJua3NJR0Z1ZVQ0K1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVc1MFpYSm1ZV05sSUZObGRFTnZibk4wY25WamRHOXlJSHRjYmlBZ0lDQWdJQ0FnSkdkMGVYQmxPaUJIVkhsd1pUeFRaWFE4WVc1NVBqNWNiaUFnSUNCOVhHNTlYRzVjYmtaMWJtTjBhVzl1TGlSbmRIbHdaU0E5SUU5aWFtVmpkQzRrWjNSNWNHVWdZWE1nUm5WdVkzUnBiMjVEYjI1emRISjFZM1J2Y2x0Y0lpUm5kSGx3WlZ3aVhWeHVRWEp5WVhrdUpHZDBlWEJsSUQwZ1QySnFaV04wTGlSbmRIbHdaU0JoY3lCQmNuSmhlVU52Ym5OMGNuVmpkRzl5VzF3aUpHZDBlWEJsWENKZFhHNUVZWFJsTGlSbmRIbHdaU0E5SUU5aWFtVmpkQzRrWjNSNWNHVWdZWE1nUkdGMFpVTnZibk4wY25WamRHOXlXMXdpSkdkMGVYQmxYQ0pkWEc1TllYQXVKR2QwZVhCbElEMGdUMkpxWldOMExpUm5kSGx3WlNCaGN5Qk5ZWEJEYjI1emRISjFZM1J2Y2x0Y0lpUm5kSGx3WlZ3aVhWeHVVMlYwTGlSbmRIbHdaU0E5SUU5aWFtVmpkQzRrWjNSNWNHVWdZWE1nVTJWMFEyOXVjM1J5ZFdOMGIzSmJYQ0lrWjNSNWNHVmNJbDFjYmlJc0lDSnBiWEJ2Y25RZ2RIbHdaU0JIVDJKcVpXTjBJR1p5YjIwZ1hDSm5hVG92TDBkUFltcGxZM1JjSWx4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z2EyVmlZV0pwWm5rb2MzUnlPaUJ6ZEhKcGJtY3BJSHRjYmlBZ0lDQnlaWFIxY200Z2MzUnlYRzRnSUNBZ0lDQWdJQzV5WlhCc1lXTmxLQzhvVzJFdGVsMHBLRnRCTFZwZEtTOW5MQ0JjSWlReExTUXlYQ0lwWEc0Z0lDQWdJQ0FnSUM1eVpYQnNZV05sUVd4c0tGd2lYMXdpTENCY0lpMWNJaWxjYmlBZ0lDQWdJQ0FnTG5SdlRHOTNaWEpEWVhObEtDbGNibjFjYmx4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUhOdVlXdGxhV1o1S0hOMGNqb2djM1J5YVc1bktTQjdYRzRnSUNBZ2NtVjBkWEp1SUhOMGNseHVJQ0FnSUNBZ0lDQXVjbVZ3YkdGalpTZ3ZLRnRoTFhwZEtTaGJRUzFhWFNrdlp5d2dYQ0lrTVMwa01sd2lLVnh1SUNBZ0lDQWdJQ0F1Y21Wd2JHRmpaVUZzYkNoY0lpMWNJaXdnWENKZlhDSXBYRzRnSUNBZ0lDQWdJQzUwYjB4dmQyVnlRMkZ6WlNncFhHNTlYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJqWVcxbGJHbG1lU2h6ZEhJNklITjBjbWx1WnlrZ2UxeHVJQ0FnSUhKbGRIVnliaUJ6ZEhJdWNtVndiR0ZqWlNndld5MWZYU2d1S1M5bkxDQW9YeXdnWTJoaGNpa2dQVDRnWTJoaGNpNTBiMVZ3Y0dWeVEyRnpaU2dwS1Z4dWZWeHVYRzVsZUhCdmNuUWdkSGx3WlNCUVlYTmpZV3hwWm5rOFV6NGdQU0JUSUdWNGRHVnVaSE1nWUNSN2FXNW1aWElnU0dWaFpIMGtlMXdpTFZ3aUlId2dYQ0pmWENKOUpIdHBibVpsY2lCVVlXbHNmV0JjYmlBZ0lDQS9JR0FrZTBOaGNHbDBZV3hwZW1VOFNHVmhaRDU5Skh0UVlYTmpZV3hwWm5rOFZHRnBiRDU5WUZ4dUlDQWdJRG9nVXlCbGVIUmxibVJ6SUhOMGNtbHVaMXh1SUNBZ0lDQWdQeUJEWVhCcGRHRnNhWHBsUEZNK1hHNGdJQ0FnSUNBNklHNWxkbVZ5WEc1Y2JtVjRjRzl5ZENCMGVYQmxJRmh0YkU1dlpHVWdQU0I3WEc0Z0lDQWdibUZ0WlRvZ2MzUnlhVzVuWEc0Z0lDQWdZWFIwY21saWRYUmxjejg2SUZKbFkyOXlaRHh6ZEhKcGJtY3NJSE4wY21sdVp6NWNiaUFnSUNCamFHbHNaSEpsYmo4NklFRnljbUY1UEZodGJFNXZaR1UrWEc1OVhHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQjRiV3dvZXlCdVlXMWxMQ0JoZEhSeWFXSjFkR1Z6TENCamFHbHNaSEpsYmlCOU9pQlliV3hPYjJSbEtTQjdYRzRnSUNBZ2JHVjBJR0oxYVd4a1pYSWdQU0JnUENSN2JtRnRaWDFnWEc1Y2JpQWdJQ0JqYjI1emRDQmhkSFJ5Y3lBOUlFOWlhbVZqZEM1bGJuUnlhV1Z6S0dGMGRISnBZblYwWlhNZ1B6OGdXMTBwWEc1Y2JpQWdJQ0JwWmlBb1lYUjBjbk11YkdWdVozUm9JRDRnTUNrZ2UxeHVJQ0FnSUNBZ0lDQm1iM0lnS0dOdmJuTjBJRnRyWlhrc0lIWmhiSFZsWFNCdlppQmhkSFJ5Y3lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWW5WcGJHUmxjaUFyUFNCZ0lDUjdhMlY1ZlQxY0lpUjdkbUZzZFdWOVhDSmdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQnBaaUFvWTJocGJHUnlaVzRnSmlZZ1kyaHBiR1J5Wlc0dWJHVnVaM1JvSUQ0Z01Da2dlMXh1SUNBZ0lDQWdJQ0JpZFdsc1pHVnlJQ3M5SUZ3aVBsd2lYRzRnSUNBZ0lDQWdJR1p2Y2lBb1kyOXVjM1FnYm05a1pTQnZaaUJqYUdsc1pISmxiaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZblZwYkdSbGNpQXJQU0I0Yld3b2JtOWtaU2xjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCaWRXbHNaR1Z5SUNzOUlHQThMeVI3Ym1GdFpYMCtZRnh1SUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lHSjFhV3hrWlhJZ0t6MGdYQ0lnTHo1Y0lseHVJQ0FnSUgxY2JseHVJQ0FnSUhKbGRIVnliaUJpZFdsc1pHVnlYRzU5WEc1Y2JpOHZJRUpwYm1ScGJtZHpJSGR2Y21zZ2IzWmxjaUJ3Y205d1pYSjBhV1Z6SUdsdUlHdGxZbUZpTFdOaGMyVWdZbVZqWVhWelpTQjBhR0YwY3lCMGFHVWdZMjl1ZG1WdWRHbHZiaUJ2WmlCbmIySnFaV04wWEc0dkx5Qm9iM2RsZG1WeUlHbHVJR3B6SUdsMGN5QmxhWFJvWlhJZ2MyNWhhMlZmWTJGelpTQnZjaUJqWVcxbGJFTmhjMlZjYmk4dklHRnNjMjhnYjI0Z1JFSjFjeUJwYm5SbGNtWmhZMlZ6SUdsMGN5QlFZWE5qWVd4RFlYTmxJR0o1SUdOdmJuWmxiblJwYjI1Y2JpOHZJSE52SUdGeklHRWdkMjl5YTJGeWIzVnVaQ0IzWlNCMWMyVWdaMlYwWDNCeWIzQmxjblI1WDI1aGJXVWdZVzVrSUc5dWJIa2dkWE5sSUhSb1pTQndjbTl3WlhKMGVTQm1hV1ZzWkNCaGN5QmhJR1poYkd4aVlXTnJYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdaR1ZtYVc1bFVISnZjR1Z5ZEhsSFpYUjBaWEk4VkNCbGVIUmxibVJ6SUc5aWFtVmpkRDRvYjJKcVpXTjBPaUJVTENCd2NtOXdPaUJGZUhSeVlXTjBQR3RsZVc5bUlGUXNJSE4wY21sdVp6NHBJSHRjYmlBZ0lDQlBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkSGtvYjJKcVpXTjBMQ0JnWjJWMFh5UjdhMlZpWVdKcFpua29jSEp2Y0NrdWNtVndiR0ZqWlVGc2JDaGNJaTFjSWl3Z1hDSmZYQ0lwZldBc0lIdGNiaUFnSUNBZ0lDQWdZMjl1Wm1sbmRYSmhZbXhsT2lCbVlXeHpaU3hjYmlBZ0lDQWdJQ0FnWlc1MWJXVnlZV0pzWlRvZ2RISjFaU3hjYmlBZ0lDQWdJQ0FnZG1Gc2RXVTZJQ2dwSUQwK0lHOWlhbVZqZEZ0d2NtOXdYU3hjYmlBZ0lDQjlLVnh1ZlZ4dVhHNHZMeUJoZEhSbGJYQjBJSE5sZEhScGJtY2dZU0J3Y205d1pYSjBlU0J2WmlCSFQySnFaV04wTGs5aWFtVmpkRnh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJSE5sZENodlltbzZJRWRQWW1wbFkzUXVUMkpxWldOMExDQndjbTl3T2lCemRISnBibWNzSUhaaGJIVmxPaUJoYm5rcElIdGNiaUFnSUNCamIyNXpkQ0JyWlhrZ1BTQnpibUZyWldsbWVTaHdjbTl3S1Z4dUlDQWdJR052Ym5OMElHZGxkSFJsY2lBOUlHQm5aWFJmSkh0clpYbDlZQ0JoY3lCclpYbHZaaUIwZVhCbGIyWWdiMkpxWEc0Z0lDQWdZMjl1YzNRZ2MyVjBkR1Z5SUQwZ1lITmxkRjhrZTJ0bGVYMWdJR0Z6SUd0bGVXOW1JSFI1Y0dWdlppQnZZbXBjYmx4dUlDQWdJR3hsZENCamRYSnlaVzUwT2lCMWJtdHViM2R1WEc1Y2JpQWdJQ0JwWmlBb1oyVjBkR1Z5SUdsdUlHOWlhaUFtSmlCMGVYQmxiMllnYjJKcVcyZGxkSFJsY2wwZ1BUMDlJRndpWm5WdVkzUnBiMjVjSWlrZ2UxeHVJQ0FnSUNBZ0lDQmpkWEp5Wlc1MElEMGdLRzlpYWx0blpYUjBaWEpkSUdGeklDZ3BJRDArSUhWdWEyNXZkMjRwS0NsY2JpQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0JqZFhKeVpXNTBJRDBnYjJKcVczQnliM0FnWVhNZ2EyVjViMllnZEhsd1pXOW1JRzlpYWwxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb1kzVnljbVZ1ZENBaFBUMGdkbUZzZFdVcElIdGNiaUFnSUNBZ0lDQWdhV1lnS0hObGRIUmxjaUJwYmlCdlltb2dKaVlnZEhsd1pXOW1JRzlpYWx0elpYUjBaWEpkSUQwOVBTQmNJbVoxYm1OMGFXOXVYQ0lwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRHNvYjJKcVczTmxkSFJsY2wwZ1lYTWdLSFk2SUdGdWVTa2dQVDRnZG05cFpDa29kbUZzZFdVcFhHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JQWW1wbFkzUXVZWE56YVdkdUtHOWlhaXdnZXlCYmNISnZjRjA2SUhaaGJIVmxJSDBwWEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1OVhHNGlMQ0FpYVcxd2IzSjBJRndpTGk0dmIzWmxjbkpwWkdWekxtcHpYQ0pjYm1sdGNHOXlkQ0JIVDJKcVpXTjBMQ0I3SUhKbFoybHpkR1Z5TENCemFXZHVZV3dzSUhObGRIUmxjaUI5SUdaeWIyMGdYQ0puYm1sdEwyZHZZbXBsWTNSY0lseHVhVzF3YjNKMElFZE1hV0lnWm5KdmJTQmNJbWRwT2k4dlIweHBZajkyWlhKemFXOXVQVEl1TUZ3aVhHNXBiWEJ2Y25RZ1IzUnJJR1p5YjIwZ1hDSm5hVG92TDBkMGF6OTJaWEp6YVc5dVBUUXVNRndpWEc1cGJYQnZjblFnUjJScklHWnliMjBnWENKbmFUb3ZMMGRrYXo5MlpYSnphVzl1UFRRdU1Gd2lYRzVwYlhCdmNuUWdSMmx2SUdaeWIyMGdYQ0puYVRvdkwwZHBiejkyWlhKemFXOXVQVEl1TUZ3aVhHNXBiWEJ2Y25RZ2V5Qm5aWFIwWlhJZ2ZTQm1jbTl0SUZ3aVoyNXBiUzluYjJKcVpXTjBYQ0pjYm1sdGNHOXlkQ0I3SUVGd2NFUkNkWE1nZlNCbWNtOXRJRndpTGk0dllYQndMMlJpZFhNdWFuTmNJbHh1YVcxd2IzSjBJSHNnYzJWMFEyOXVjMjlzWlV4dlowUnZiV0ZwYmlCOUlHWnliMjBnWENKamIyNXpiMnhsWENKY2JtbHRjRzl5ZENCN0lHVjRhWFFzSUhCeWIyZHlZVzFCY21keklIMGdabkp2YlNCY0luTjVjM1JsYlZ3aVhHNXBiWEJ2Y25RZ2V5QmpjbVZoZEdWU2IyOTBJSDBnWm5KdmJTQmNJbWR1YVcxY0lseHVYRzVIZEdzdWFXNXBkQ2dwWEc1Y2JpOHZJSE4wYjNBZ2RHaHBjeUJtY205dElHeGxZV3RwYm1jZ2FXNTBieUJ6ZFdKd2NtOWpaWE56WlhOY2JpOHZJR0Z1WkNCbmFXOGdiR0YxYm1Ob0lHbHVkbTlqWVhScGIyNXpYRzVIVEdsaUxuVnVjMlYwWlc1MktGd2lURVJmVUZKRlRFOUJSRndpS1Z4dVhHNHZMeUIxYzJWeWN5QnRhV2RvZENCM1lXNTBJSFJ2SUhWelpTQkJaSGRoYVhSaElHbHVJSGRvYVdOb0lHTmhjMlVnYVhRZ2FHRnpJSFJ2SUdKbElHbHVhWFJwWVd4cGVtVmtYRzR2THlCcGRDQnRhV2RvZENCaVpTQmpiMjF0YjI0Z2NHbDBabUZzYkNCMGJ5Qm1iM0puWlhRZ2FYUWdZbVZqWVhWelpTQmdRWEJ3WUNCcGN5QnViM1FnWUVGa2R5NUJjSEJzYVdOaGRHbHZibUJjYm1GM1lXbDBJR2x0Y0c5eWRDaGNJbWRwT2k4dlFXUjNQM1psY25OcGIyNDlNVndpS1M1MGFHVnVLQ2g3SUdSbFptRjFiSFE2SUVGa2R5QjlLU0E5UGlCQlpIY3VhVzVwZENncEtTNWpZWFJqYUNnb0tTQTlQaUIyYjJsa0lEQXBYRzVjYm5SNWNHVWdVM1JoY25SRGIyNW1hV2NnUFNCUVlYSjBhV0ZzUEh0Y2JpQWdJQ0JwYm5OMFlXNWpaVTVoYldVNklITjBjbWx1WjF4dUlDQWdJR056Y3pvZ2MzUnlhVzVuWEc0Z0lDQWdhV052Ym5NNklITjBjbWx1WjF4dUlDQWdJR2QwYTFSb1pXMWxPaUJ6ZEhKcGJtZGNiaUFnSUNCcFkyOXVWR2hsYldVNklITjBjbWx1WjF4dUlDQWdJR04xY25OdmNsUm9aVzFsT2lCemRISnBibWRjYmlBZ0lDQnRZV2x1S0M0dUxtRnlaM1k2SUhOMGNtbHVaMXRkS1RvZ2RtOXBaRnh1SUNBZ0lISmxjWFZsYzNSSVlXNWtiR1Z5S0dGeVozWTZJSE4wY21sdVoxdGRMQ0J5WlhNNklDaHlaWE53YjI1elpUb2dZVzU1S1NBOVBpQjJiMmxrS1RvZ2RtOXBaRnh1ZlQ1Y2JseHVhVzUwWlhKbVlXTmxJRUZ3Y0ZOcFoyNWhiSE1nWlhoMFpXNWtjeUJIZEdzdVFYQndiR2xqWVhScGIyNHVVMmxuYm1Gc1UybG5ibUYwZFhKbGN5QjdYRzRnSUNBZ1hDSnlaWEYxWlhOMFhDSTZJRUZ3Y0Z0Y0luSmxjWFZsYzNSY0lsMWNiaUFnSUNCY0luZHBibVJ2ZHkxMGIyZG5iR1ZrWENJNklFRndjRnRjSW5kcGJtUnZkMVJ2WjJkc1pXUmNJbDFjYm4xY2JseHVRSEpsWjJsemRHVnlLQ2xjYm1Oc1lYTnpJRUZ3Y0NCbGVIUmxibVJ6SUVkMGF5NUJjSEJzYVdOaGRHbHZiaUI3WEc0Z0lDQWdaR1ZqYkdGeVpTQWtjMmxuYm1Gc2N6b2dRWEJ3VTJsbmJtRnNjMXh1WEc0Z0lDQWdJMmx1YzNSaGJtTmxUbUZ0WlNBOUlGd2lZV2R6WENKY2JpQWdJQ0FqYldGcGJqODZJQ2d1TGk1aGNtZDJPaUJ6ZEhKcGJtZGJYU2tnUFQ0Z2RtOXBaRnh1SUNBZ0lDTnlaWEYxWlhOMFNHRnVaR3hsY25NZ1BTQXdYRzRnSUNBZ0kyUmlkWE5UWlhKMmFXTmxPaUJCY0hCRVFuVnpYRzRnSUNBZ0kyTnpjMUJ5YjNacFpHVnljeUE5SUc1bGR5QkJjbkpoZVR4SGRHc3VRM056VUhKdmRtbGtaWEkrS0NsY2JseHVJQ0FnSUdkbGRDQWpjMlYwZEdsdVozTW9LVG9nUjNSckxsTmxkSFJwYm1keklIdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2MyVjBkR2x1WjNNZ1BTQkhkR3N1VTJWMGRHbHVaM011WjJWMFgyUmxabUYxYkhRb0tWeHVJQ0FnSUNBZ0lDQnBaaUFvSVhObGRIUnBibWR6S1NCMGFISnZkeUJGY25KdmNpaGNJbU52ZFd4a0lHNXZkQ0JuWlhRZ2MyVjBkR2x1WjNOY0lpbGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlITmxkSFJwYm1kelhHNGdJQ0FnZlZ4dVhHNGdJQ0FnWjJWMElDTmthWE53YkdGNUtDazZJRWRrYXk1RWFYTndiR0Y1SUh0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnWkdsemNHeGhlU0E5SUVka2F5NUVhWE53YkdGNUxtZGxkRjlrWldaaGRXeDBLQ2xjYmlBZ0lDQWdJQ0FnYVdZZ0tDRmthWE53YkdGNUtTQjBhSEp2ZHlCRmNuSnZjaWhjSW1OdmRXeGtJRzV2ZENCblpYUWdaR2x6Y0d4aGVWd2lLVnh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdaR2x6Y0d4aGVWeHVJQ0FnSUgxY2JseHVJQ0FnSUdkbGRDQnBibk4wWVc1alpVNWhiV1VvS1NCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMaU5wYm5OMFlXNWpaVTVoYldWY2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCSFpYUWdZV3hzSUcxdmJtbDBiM0p6SUdaeWIyMGdlMEJzYVc1cklFZGtheTVFYVhOd2JHRjVmUzVjYmlBZ0lDQWdLaTljYmlBZ0lDQm5aWFJmYlc5dWFYUnZjbk1vS1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUcxdmJuTWdQU0IwYUdsekxpTmthWE53YkdGNUxtZGxkRjl0YjI1cGRHOXljeWdwSUdGeklFZHBieTVNYVhOMFRXOWtaV3c4UjJSckxrMXZibWwwYjNJK1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUd4cGMzUWdQU0J1WlhjZ1FYSnlZWGs4UjJSckxrMXZibWwwYjNJK0tDbGNibHh1SUNBZ0lDQWdJQ0JzWlhRZ2JXOXVhWFJ2Y2pvZ1IyUnJMazF2Ym1sMGIzSWdmQ0J1ZFd4c0lEMGdiblZzYkZ4dUlDQWdJQ0FnSUNCc1pYUWdhU0E5SURCY2JseHVJQ0FnSUNBZ0lDQjNhR2xzWlNBb0tHMXZibWwwYjNJZ1BTQnRiMjV6TG1kbGRGOXBkR1Z0S0drckt5a3BJQ0U5UFNCdWRXeHNLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnNhWE4wTG5CMWMyZ29iVzl1YVhSdmNpbGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJzYVhOMFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnUUhOcFoyNWhiQ2hIZEdzdVYybHVaRzkzS1Z4dUlDQWdJSEJ5YVhaaGRHVWdkMmx1Wkc5M1ZHOW5aMnhsWkNoM2FXNWtiM2M2SUVkMGF5NVhhVzVrYjNjcElIdGNiaUFnSUNBZ0lDQWdkbTlwWkNCM2FXNWtiM2RjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUJIWlhRZ1lXeHNJRzF2Ym1sMGIzSnpJR1p5YjIwZ2UwQnNhVzVySUVka2F5NUVhWE53YkdGNWZTNWNiaUFnSUNBZ0tpOWNiaUFnSUNCQVoyVjBkR1Z5S0VGeWNtRjVLVnh1SUNBZ0lHZGxkQ0J0YjI1cGRHOXljeWdwT2lCQmNuSmhlVHhIWkdzdVRXOXVhWFJ2Y2o0Z2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVuWlhSZmJXOXVhWFJ2Y25Nb0tWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlGZHBibVJ2ZDNNZ2RHaGhkQ0JvWVhNZ1ltVmxiaUJoWkdSbFpDQjBieUIwYUdseklHRndjRnh1SUNBZ0lDQXFJSFZ6YVc1bklIdEFiR2x1YXlCSGRHc3VRWEJ3YkdsallYUnBiMjR1Y0hKdmRHOTBlWEJsTG1Ga1pGOTNhVzVrYjNkOUxseHVJQ0FnSUNBcUwxeHVJQ0FnSUVCblpYUjBaWElvUVhKeVlYa3BYRzRnSUNBZ1oyVjBJSGRwYm1SdmQzTW9LVG9nUVhKeVlYazhSM1JyTGxkcGJtUnZkejRnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW5aWFJmZDJsdVpHOTNjeWdwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nVTJodmNuUmpkWFFnWm05eUlIdEFiR2x1YXlCSGRHc3VVMlYwZEdsdVozTXVjSEp2ZEc5MGVYQmxMbWQwYTFSb1pXMWxUbUZ0WlgxY2JpQWdJQ0FnS2k5Y2JpQWdJQ0JBYzJWMGRHVnlLRk4wY21sdVp5bGNiaUFnSUNCelpYUWdaM1JyVkdobGJXVW9ibUZ0WlRvZ2MzUnlhVzVuS1NCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11STNObGRIUnBibWR6TG1kMGExUm9aVzFsVG1GdFpTQTlJRzVoYldWY2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCVGFHOXlkR04xZENCbWIzSWdlMEJzYVc1cklFZDBheTVUWlhSMGFXNW5jeTV3Y205MGIzUjVjR1V1WjNSclZHaGxiV1ZPWVcxbGZWeHVJQ0FnSUNBcUwxeHVJQ0FnSUVCblpYUjBaWElvVTNSeWFXNW5LVnh1SUNBZ0lHZGxkQ0JuZEd0VWFHVnRaU2dwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVJM05sZEhScGJtZHpMbWQwYTFSb1pXMWxUbUZ0WlZ4dUlDQWdJSDFjYmx4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUZOb2IzSjBZM1YwSUdadmNpQjdRR3hwYm1zZ1IzUnJMbE5sZEhScGJtZHpMbkJ5YjNSdmRIbHdaUzVuZEd0SlkyOXVWR2hsYldWT1lXMWxmVnh1SUNBZ0lDQXFMMXh1SUNBZ0lFQnpaWFIwWlhJb1UzUnlhVzVuS1Z4dUlDQWdJSE5sZENCcFkyOXVWR2hsYldVb2JtRnRaVG9nYzNSeWFXNW5LU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVJM05sZEhScGJtZHpMbWQwYTBsamIyNVVhR1Z0WlU1aGJXVWdQU0J1WVcxbFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ1UyaHZjblJqZFhRZ1ptOXlJSHRBYkdsdWF5QkhkR3N1VTJWMGRHbHVaM011Y0hKdmRHOTBlWEJsTG1kMGEwbGpiMjVVYUdWdFpVNWhiV1Y5WEc0Z0lDQWdJQ292WEc0Z0lDQWdRR2RsZEhSbGNpaFRkSEpwYm1jcFhHNGdJQ0FnWjJWMElHbGpiMjVVYUdWdFpTZ3BJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdUkzTmxkSFJwYm1kekxtZDBhMGxqYjI1VWFHVnRaVTVoYldWY2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCVGFHOXlkR04xZENCbWIzSWdlMEJzYVc1cklFZDBheTVUWlhSMGFXNW5jeTV3Y205MGIzUjVjR1V1WjNSclEzVnljMjl5VkdobGJXVk9ZVzFsZlZ4dUlDQWdJQ0FxTDF4dUlDQWdJRUJ6WlhSMFpYSW9VM1J5YVc1bktWeHVJQ0FnSUhObGRDQmpkWEp6YjNKVWFHVnRaU2h1WVcxbE9pQnpkSEpwYm1jcElIdGNiaUFnSUNBZ0lDQWdkR2hwY3k0amMyVjBkR2x1WjNNdVozUnJRM1Z5YzI5eVZHaGxiV1ZPWVcxbElEMGdibUZ0WlZ4dUlDQWdJSDFjYmx4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUZOb2IzSjBZM1YwSUdadmNpQjdRR3hwYm1zZ1IzUnJMbE5sZEhScGJtZHpMbkJ5YjNSdmRIbHdaUzVuZEd0RGRYSnpiM0pVYUdWdFpVNWhiV1Y5WEc0Z0lDQWdJQ292WEc0Z0lDQWdRR2RsZEhSbGNpaFRkSEpwYm1jcFhHNGdJQ0FnWjJWMElHTjFjbk52Y2xSb1pXMWxLQ2tnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NGpjMlYwZEdsdVozTXVaM1JyUTNWeWMyOXlWR2hsYldWT1lXMWxYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dSMlYwSUdFZ2QybHVaRzkzSUdKNUlHbDBjeUI3UUd4cGJtc2dSM1JyTGxkcFpHZGxkQzV3Y205MGIzUjVjR1V1Ym1GdFpYMGdkR2hoZENCb1lYTWdZbVZsYmlCaFpHUmxaQ0IwYnlCMGFHbHpJR0Z3Y0Z4dUlDQWdJQ0FxSUhWemFXNW5JSHRBYkdsdWF5QkhkR3N1UVhCd2JHbGpZWFJwYjI0dWNISnZkRzkwZVhCbExtRmtaRjkzYVc1a2IzZDlMbHh1SUNBZ0lDQXFMMXh1SUNBZ0lHZGxkRjkzYVc1a2IzY29ibUZ0WlRvZ2MzUnlhVzVuS1NCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmRwYm1SdmQzTXVabWx1WkNnb2R5a2dQVDRnZHk1dVlXMWxJRDA5UFNCdVlXMWxLVnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJRlJ2WjJkc1pTQjBhR1VnZG1semFXSnBiR2wwZVNCdlppQmhJSGRwYm1SdmR5QmllU0JwZEhNZ2UwQnNhVzVySUVkMGF5NVhhV1JuWlhRdWNISnZkRzkwZVhCbExtNWhiV1Y5WEc0Z0lDQWdJQ29nZEdoaGRDQm9ZWE1nWW1WbGJpQmhaR1JsWkNCMGJ5QjBhR2x6SUdGd2NDQjFjMmx1WnlCN1FHeHBibXNnUjNSckxrRndjR3hwWTJGMGFXOXVMbkJ5YjNSdmRIbHdaUzVoWkdSZmQybHVaRzkzZlM1Y2JpQWdJQ0FnS2k5Y2JpQWdJQ0IwYjJkbmJHVmZkMmx1Wkc5M0tHNWhiV1U2SUhOMGNtbHVaeWtnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0IzYVc0Z1BTQjBhR2x6TG1kbGRGOTNhVzVrYjNjb2JtRnRaU2xjYmlBZ0lDQWdJQ0FnYVdZZ0tDRjNhVzRwSUhSb2NtOTNJRVZ5Y205eUtHQnVieUIzYVc1a2IzY2djbVZuYVhOMFpYSmxaQ0IzYVhSb0lHNWhiV1VnWENJa2UyNWhiV1Y5WENKZ0tWeHVJQ0FnSUNBZ0lDQjNhVzR1ZG1semFXSnNaU0E5SUNGM2FXNHVkbWx6YVdKc1pWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlGSmxjMlYwSUhCeVpYWnBiM1Z6YkhrZ2MyVjBJR056Y3lCd2NtOTJhV1JsY25NZ2QybDBhQ0I3UUd4cGJtc2dRWEJ3TG5CeWIzUnZkSGx3WlM1aGNIQnNlVjlqYzNOOUxseHVJQ0FnSUNBcUwxeHVJQ0FnSUhKbGMyVjBYMk56Y3lncElIdGNiaUFnSUNBZ0lDQWdabTl5SUNoamIyNXpkQ0J3Y205MmFXUmxjaUJ2WmlCMGFHbHpMaU5qYzNOUWNtOTJhV1JsY25NcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUVkMGF5NVRkSGxzWlVOdmJuUmxlSFF1Y21WdGIzWmxYM0J5YjNacFpHVnlYMlp2Y2w5a2FYTndiR0Y1S0hSb2FYTXVJMlJwYzNCc1lYa3NJSEJ5YjNacFpHVnlLVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nUVdSa0lHRWdibVYzSUh0QWJHbHVheUJIZEdzdVEzTnpVSEp2ZG1sa1pYSjlMbHh1SUNBZ0lDQXFJRUJ3WVhKaGJTQnpkSGxzWlNCRGMzTWdjM1J5YVc1bklHOXlJR0VnY0dGMGFDQjBieUJoSUdOemN5Qm1hV3hsTGx4dUlDQWdJQ0FxTDF4dUlDQWdJR0Z3Y0d4NVgyTnpjeWh6ZEhsc1pUb2djM1J5YVc1bkxDQnlaWE5sZENBOUlHWmhiSE5sS1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUhCeWIzWnBaR1Z5SUQwZ2JtVjNJRWQwYXk1RGMzTlFjbTkyYVdSbGNpZ3BYRzVjYmlBZ0lDQWdJQ0FnY0hKdmRtbGtaWEl1WTI5dWJtVmpkQ2hjSW5CaGNuTnBibWN0WlhKeWIzSmNJaXdnS0Y4c0lITmxZM1JwYjI0c0lHVnljbTl5S1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J1WVcxbElEMGdjMlZqZEdsdmJpNW5aWFJmWm1sc1pTZ3BQeTVuWlhSZlltRnpaVzVoYldVb0tTQS9QeUJjSWx3aVhHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnNhVzVsSUQwZ2MyVmpkR2x2Ymk1blpYUmZjM1JoY25SZmJHOWpZWFJwYjI0b0tTNXNhVzVsY3lBcklERmNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR05vWVhKeklEMGdjMlZqZEdsdmJpNW5aWFJmYzNSaGNuUmZiRzlqWVhScGIyNG9LUzVzYVc1bFgyTm9ZWEp6SUNzZ01WeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpaGdRMU5USUVWeWNtOXlJQ1I3Ym1GdFpYMDZKSHRzYVc1bGZUb2tlMk5vWVhKemZTQWtlMlZ5Y205eUxtMWxjM05oWjJWOVlDbGNiaUFnSUNBZ0lDQWdmU2xjYmx4dUlDQWdJQ0FnSUNCcFppQW9jbVZ6WlhRcElIUm9hWE11Y21WelpYUmZZM056S0NsY2JseHVJQ0FnSUNBZ0lDQnBaaUFvUjB4cFlpNW1hV3hsWDNSbGMzUW9jM1I1YkdVc0lFZE1hV0l1Um1sc1pWUmxjM1F1UlZoSlUxUlRLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjSEp2ZG1sa1pYSXViRzloWkY5bWNtOXRYM0JoZEdnb2MzUjViR1VwWEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb2MzUjViR1V1YzNSaGNuUnpWMmwwYUNoY0luSmxjMjkxY21ObE9pOHZYQ0lwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J3Y205MmFXUmxjaTVzYjJGa1gyWnliMjFmY21WemIzVnlZMlVvYzNSNWJHVXVjbVZ3YkdGalpTaGNJbkpsYzI5MWNtTmxPaTh2WENJc0lGd2lYQ0lwS1Z4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjSEp2ZG1sa1pYSXViRzloWkY5bWNtOXRYM04wY21sdVp5aHpkSGxzWlNsY2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJRWQwYXk1VGRIbHNaVU52Ym5SbGVIUXVZV1JrWDNCeWIzWnBaR1Z5WDJadmNsOWthWE53YkdGNUtGeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NGpaR2x6Y0d4aGVTeGNiaUFnSUNBZ0lDQWdJQ0FnSUhCeWIzWnBaR1Z5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdSM1JyTGxOVVdVeEZYMUJTVDFaSlJFVlNYMUJTU1U5U1NWUlpYMVZUUlZJc1hHNGdJQ0FnSUNBZ0lDbGNibHh1SUNBZ0lDQWdJQ0IwYUdsekxpTmpjM05RY205MmFXUmxjbk11Y0hWemFDaHdjbTkyYVdSbGNpbGNiaUFnSUNCOVhHNWNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQlRhRzl5ZEdOMWRDQm1iM0lnZTBCc2FXNXJJRWQwYXk1SlkyOXVWR2hsYldVdWNISnZkRzkwZVhCbExtRmtaRjl6WldGeVkyaGZjR0YwYUgwdVhHNGdJQ0FnSUNvdlhHNGdJQ0FnWVdSa1gybGpiMjV6S0hCaGRHZzZJSE4wY21sdVp5a2dlMXh1SUNBZ0lDQWdJQ0JIZEdzdVNXTnZibFJvWlcxbExtZGxkRjltYjNKZlpHbHpjR3hoZVNoMGFHbHpMaU5rYVhOd2JHRjVLUzVoWkdSZmMyVmhjbU5vWDNCaGRHZ29jR0YwYUNsY2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCUmRXbDBJR0Z1WkNCbGVHbDBJSFJvWlNCaGNIQnNhV05oZEdsdmJpNWNiaUFnSUNBZ0tpOWNiaUFnSUNCeGRXbDBLR052WkdVZ1BTQXdLU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVJMlJpZFhOVFpYSjJhV05sTG5OMGIzQW9LVnh1SUNBZ0lDQWdJQ0J6ZFhCbGNpNXhkV2wwS0NsY2JpQWdJQ0FnSUNBZ1pYaHBkQ2hqYjJSbEtWeHVJQ0FnSUgxY2JseHVJQ0FnSUdOdmJuTjBjblZqZEc5eUtDa2dlMXh1SUNBZ0lDQWdJQ0J6ZFhCbGNpaDdJR1pzWVdkek9pQkhhVzh1UVhCd2JHbGpZWFJwYjI1R2JHRm5jeTVJUVU1RVRFVlRYME5QVFUxQlRrUmZURWxPUlNCOUtWeHVYRzRnSUNBZ0lDQWdJSFJvYVhNdUkyUmlkWE5UWlhKMmFXTmxJRDBnYm1WM0lFRndjRVJDZFhNb2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEc5bloyeGxWMmx1Wkc5M09pQjBhR2x6TG5SdloyZHNaVjkzYVc1a2IzY3VZbWx1WkNoMGFHbHpLU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIRjFhWFE2SUhSb2FYTXVjWFZwZEM1aWFXNWtLSFJvYVhNcExGeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WeGRXVnpkRG9nS0dGeVozWXBJRDArSUc1bGR5QlFjbTl0YVhObEtDaHlaWE52YkhabEtTQTlQaUIwYUdsekxuSmxjWFZsYzNRb1lYSm5kaXdnY21WemIyeDJaU2twTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdhVzV6WldOMGIzSTZJQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkhkR3N1VjJsdVpHOTNMbk5sZEY5cGJuUmxjbUZqZEdsMlpWOWtaV0oxWjJkcGJtY29kSEoxWlNsY2JpQWdJQ0FnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUgwcFhHNWNiaUFnSUNBZ0lDQWdkR2hwY3k0alpHbHpjR3hoZVM1blpYUmZiVzl1YVhSdmNuTW9LUzVqYjI1dVpXTjBLRndpYVhSbGJYTXRZMmhoYm1kbFpGd2lMQ0FvS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbTV2ZEdsbWVTaGNJbTF2Ym1sMGIzSnpYQ0lwWEc0Z0lDQWdJQ0FnSUgwcFhHNWNiaUFnSUNBZ0lDQWdkR2hwY3k1amIyNXVaV04wS0Z3aWQybHVaRzkzTFdGa1pHVmtYQ0lzSUNoZkxDQjNhVzVrYjNjcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdsa01TQTlJSGRwYm1SdmR5NWpiMjV1WldOMEtGd2libTkwYVdaNU9qcDJhWE5wWW14bFhDSXNJQ2dwSUQwK0lIUm9hWE11ZDJsdVpHOTNWRzluWjJ4bFpDaDNhVzVrYjNjcEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdhV1F5SUQwZ2RHaHBjeTVqYjI1dVpXTjBLRndpZDJsdVpHOTNMWEpsYlc5MlpXUmNJaXdnS0Y4c0lISmxiVzkyWldRcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NtVnRiM1psWkNBOVBTQjNhVzVrYjNjcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZDJsdVpHOTNMbVJwYzJOdmJtNWxZM1FvYVdReEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtUnBjMk52Ym01bFkzUW9hV1F5S1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJSDBwWEc0Z0lDQWdJQ0FnSUgwcFhHNWNiaUFnSUNBZ0lDQWdkR2hwY3k0amMyVjBkR2x1WjNNdVkyOXVibVZqZENoY0ltNXZkR2xtZVZ3aUxDQW9YeXdnZXlCdVlXMWxJSDBwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhOM2FYUmphQ0FvYm1GdFpTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ1hDSm5kR3N0ZEdobGJXVXRibUZ0WlZ3aU9seHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtNXZkR2xtZVNoY0ltZDBheTEwYUdWdFpWd2lLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ1hDSm5kR3N0YVdOdmJpMTBhR1Z0WlMxdVlXMWxYQ0k2WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Ym05MGFXWjVLRndpYVdOdmJpMTBhR1Z0WlZ3aUtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGExeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnWENKbmRHc3RZM1Z5YzI5eUxYUm9aVzFsTFc1aGJXVmNJanBjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV1YjNScFpua29YQ0pqZFhKemIzSXRkR2hsYldWY0lpbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtaV1poZFd4ME9seHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGExeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOUtWeHVJQ0FnSUgxY2JseHVJQ0FnSUVCemFXZHVZV3dvUVhKeVlYa3NJRVoxYm1OMGFXOXVLVnh1SUNBZ0lIQnlhWFpoZEdVZ2NtVnhkV1Z6ZENoaGNtZHpPaUJ6ZEhKcGJtZGJYU3dnY21WemNHOXVjMlU2SUNoeVpYTndiMjV6WlRvZ2MzUnlhVzVuS1NBOVBpQjJiMmxrS1NCN1hHNGdJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxpTnlaWEYxWlhOMFNHRnVaR3hsY25NZ1BUMDlJREFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsYzNCdmJuTmxLR0JwYm5OMFlXNWpaU0JjSWlSN2RHaHBjeTVwYm5OMFlXNWpaVTVoYldWOVhDSWdhR0Z6SUc1dklISmxjWFZsYzNRZ2FHRnVaR3hsY2lCcGJYQnNaVzFsYm5SbFpHQXBYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZG05cFpDQmhjbWR6WEc0Z0lDQWdmVnh1WEc0Z0lDQWdkbVoxYm1OZlkyOXRiV0Z1WkY5c2FXNWxLR050WkRvZ1IybHZMa0Z3Y0d4cFkyRjBhVzl1UTI5dGJXRnVaRXhwYm1VcE9pQnVkVzFpWlhJZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvWTIxa0xtbHpVbVZ0YjNSbEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbkpsY1hWbGMzUW9ZMjFrTG1kbGRGOWhjbWQxYldWdWRITW9LU3dnS0hOMGNpa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdFpDNXdjbWx1ZEY5c2FYUmxjbUZzS0hOMGNpQXJJRndpWEZ4dVhDSXBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjFrTG1SdmJtVW9LVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTbGNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVhRzlzWkNncFhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxpTmtZblZ6VTJWeWRtbGpaUzV6WlhKMlpTaDdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ2RHaHBjeTVoY0hCc2FXTmhkR2x2Ymtsa0xGeHVJQ0FnSUNBZ0lDQWdJQ0FnZlNsY2JpQWdJQ0FnSUNBZ0lDQWdJR055WldGMFpWSnZiM1FvS0dScGMzQnZjMlVwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1OdmJtNWxZM1FvWENKemFIVjBaRzkzYmx3aUxDQmthWE53YjNObEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11STIxaGFXNC9MaWd1TGk1d2NtOW5jbUZ0UVhKbmN5bGNiaUFnSUNBZ0lDQWdJQ0FnSUgwcFhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdNRnh1SUNBZ0lIMWNibHh1SUNBZ0lITjBZWEowS0dOdmJtWnBaem9nVTNSaGNuUkRiMjVtYVdjcElIdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2V5QnRZV2x1TENCeVpYRjFaWE4wU0dGdVpHeGxjaXdnYVc1emRHRnVZMlZPWVcxbExDQmpjM01zSUdsamIyNXpMQ0F1TGk1alptY2dmU0E5SUdOdmJtWnBaMXh1WEc0Z0lDQWdJQ0FnSUhSb2FYTXVJMjFoYVc0Z1BTQnRZV2x1WEc0Z0lDQWdJQ0FnSUU5aWFtVmpkQzVoYzNOcFoyNG9kR2hwY3l3Z1kyWm5LVnh1WEc0Z0lDQWdJQ0FnSUdsbUlDaHlaWEYxWlhOMFNHRnVaR3hsY2lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWpiMjV1WldOMEtGd2ljbVZ4ZFdWemRGd2lMQ0FvWHl3Z1lYSm5jeXdnY21WemNHOXVjMlVwSUQwK0lISmxjWFZsYzNSSVlXNWtiR1Z5S0dGeVozTXNJSEpsYzNCdmJuTmxLU2xjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lHbG1JQ2hwYm5OMFlXNWpaVTVoYldVcElIUm9hWE11STJsdWMzUmhibU5sVG1GdFpTQTlJR2x1YzNSaGJtTmxUbUZ0WlZ4dUlDQWdJQ0FnSUNCcFppQW9ZM056S1NCMGFHbHpMbUZ3Y0d4NVgyTnpjeWhqYzNNc0lHWmhiSE5sS1Z4dUlDQWdJQ0FnSUNCcFppQW9hV052Ym5NcElHRndjQzVoWkdSZmFXTnZibk1vYVdOdmJuTXBYRzVjYmlBZ0lDQWdJQ0FnZEdocGN5NWhjSEJzYVdOaGRHbHZia2xrSUQwZ1hDSnBieTVCYzNSaGJDNWNJaUFySUhSb2FYTXVhVzV6ZEdGdVkyVk9ZVzFsWEc0Z0lDQWdJQ0FnSUhObGRFTnZibk52YkdWTWIyZEViMjFoYVc0b2RHaHBjeTVwYm5OMFlXNWpaVTVoYldVcFhHNGdJQ0FnSUNBZ0lIUm9hWE11Y25WdVFYTjVibU1vY0hKdlozSmhiVUZ5WjNNcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnWTI5dWJtVmpkRHhUSUdWNGRHVnVaSE1nYTJWNWIyWWdRWEJ3VTJsbmJtRnNjejRvWEc0Z0lDQWdJQ0FnSUhOcFoyNWhiRG9nVXl4Y2JpQWdJQ0FnSUNBZ1kyRnNiR0poWTJzNklFZFBZbXBsWTNRdVUybG5ibUZzUTJGc2JHSmhZMnM4ZEdocGN5d2dRWEJ3VTJsbmJtRnNjMXRUWFQ0c1hHNGdJQ0FnS1RvZ2JuVnRZbVZ5SUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLSE5wWjI1aGJDQTlQVDBnWENKeVpYRjFaWE4wWENJcElIUm9hWE11STNKbGNYVmxjM1JJWVc1a2JHVnljeUFyUFNBeFhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjI1dVpXTjBLSE5wWjI1aGJDd2dZMkZzYkdKaFkyc3BYRzRnSUNBZ2ZWeHVmVnh1WEc1amIyNXpkQ0JoY0hBZ1BTQnVaWGNnUVhCd0tDbGNibVY0Y0c5eWRDQmtaV1poZFd4MElHRndjRnh1SWl3Z0lpOHFLbHh1SUNvZ1FTQjdRR3hwYm1zZ1UyVnlkbWxqWlgwZ1kzVnljbVZ1ZEd4NUlHOXViSGtnWVd4c2IzZHpJR2x1ZEdWeVptRmphVzVuSUhkcGRHZ2dZU0J6YVc1bmJHVWdhVzUwWlhKbVlXTmxJRzltSUdFZ2NtVnRiM1JsSUc5aWFtVmpkQzVjYmlBcUlFbHVJSFJvWlNCbWRYUjFjbVVnU1NCM1lXNTBJSFJ2SUdOdmJXVWdkWEFnZDJsMGFDQmhiaUJCVUVrZ2RHOGdZbVVnWVdKc1pTQjBieUJqY21WaGRHVWdVMlZ5ZG1salpTQnZZbXBsWTNSeklHWnZjaUJ0ZFd4MGFYQnNaVnh1SUNvZ2FXNTBaWEptWVdObGN5QnZaaUJoYmlCdlltcGxZM1FnWVhRZ2RHaGxJSE5oYldVZ2RHbHRaUzRnUlhoaGJYQnNaU0IxYzJGblpTQjNiM1ZzWkNCaVpTQm1iM0lnWlhoaGJYQnNaU0JqYjIxaWFXNXBibWRjYmlBcUlGd2liM0puTG0xd2NtbHpMazFsWkdsaFVHeGhlV1Z5TWx3aUlHRnVaQ0JjSW05eVp5NXRjSEpwY3k1TlpXUnBZVkJzWVhsbGNqSXVVR3hoZVdWeVhDSWdhVzUwYnlCaElITnBibWRzWlNCdlltcGxZM1F1WEc0Z0tpOWNibWx0Y0c5eWRDQkhhVzhnWm5KdmJTQmNJbWRwT2k4dlIybHZYQ0pjYm1sdGNHOXlkQ0JIVEdsaUlHWnliMjBnWENKbmFUb3ZMMGRNYVdKY0lseHVhVzF3YjNKMElFZFBZbXBsWTNRZ1puSnZiU0JjSW1kcE9pOHZSMDlpYW1WamRGd2lYRzVwYlhCdmNuUWdleUJrWldacGJtVlFjbTl3WlhKMGVVZGxkSFJsY2l3Z2EyVmlZV0pwWm5rc0lIaHRiQ0I5SUdaeWIyMGdYQ0l1TDNWMGFXd3Vhbk5jSWx4dWFXMXdiM0owSUhSNWNHVWdleUJFWldWd1NXNW1aWElnZlNCbWNtOXRJRndpTGk5MllYSnBZVzUwTG1welhDSmNibWx0Y0c5eWRDQjdYRzRnSUNBZ2NtVm5hWE4wWlhJc1hHNGdJQ0FnY0hKdmNHVnlkSGtnWVhNZ1ozQnliM0JsY25SNUxGeHVJQ0FnSUhOcFoyNWhiQ0JoY3lCbmMybG5ibUZzTEZ4dUlDQWdJR2RsZEhSbGNpQmhjeUJuWjJWMGRHVnlMRnh1SUNBZ0lITmxkSFJsY2lCaGN5Qm5jMlYwZEdWeUxGeHVmU0JtY205dElGd2lMaTluYjJKcVpXTjBMbXB6WENKY2JseHVZMjl1YzNRZ1JFVkdRVlZNVkY5VVNVMUZUMVZVSUQwZ01UQmZNREF3WEc1Y2JtVjRjRzl5ZENCamIyNXpkQ0JXWVhKcFlXNTBJRDBnUjB4cFlpNVdZWEpwWVc1MFhHNWxlSEJ2Y25RZ2RIbHdaU0JXWVhKcFlXNTBQRlFnWlhoMFpXNWtjeUJ6ZEhKcGJtYytJRDBnUjB4cFlpNVdZWEpwWVc1MFBGUStYRzVjYm1OdmJuTjBJR2x1Wm04Z1BTQlRlVzFpYjJ3b1hDSmtZblZ6SUdsdWRHVnlabUZqWlNCcGJtWnZYQ0lwWEc1amIyNXpkQ0JwYm5SbGNtNWhiSE1nUFNCVGVXMWliMndvWENKa1luVnpJR2x1ZEdWeVptRmpaU0JwYm5SbGNtNWhiSE5jSWlsY2JtTnZibk4wSUhKbGJXOTBaVTFsZEdodlpDQTlJRk41YldKdmJDaGNJbkJ5YjNoNUlISmxiVzkwWlUxbGRHaHZaRndpS1Z4dVkyOXVjM1FnY21WdGIzUmxUV1YwYUc5a1FYTjVibU1nUFNCVGVXMWliMndvWENKd2NtOTRlU0J5WlcxdmRHVk5aWFJvYjJSQmMzbHVZMXdpS1Z4dVkyOXVjM1FnY21WdGIzUmxVSEp2Y0dWeWRIbFRaWFFnUFNCVGVXMWliMndvWENKd2NtOTRlU0J5WlcxdmRHVlFjbTl3WlhKMGVWTmxkRndpS1Z4dVhHNTBlWEJsSUVOMGVDQTlJSHNnY0hKcGRtRjBaVG9nWm1Gc2MyVTdJSE4wWVhScFl6b2dabUZzYzJVN0lHNWhiV1U2SUhOMGNtbHVaeUI5WEc1Y2JpOHFLbHh1SUNvZ1FtRnpaU0IwZVhCbElHWnZjaUJFUW5WeklITmxjblpwWTJWeklHRnVaQ0J3Y205NGFXVnpMaUJKYm5SbGNtWmhZMlVnYm1GdFpTQnBjeUJ6WlhRZ2QybDBhRnh1SUNvZ2RHaGxJSHRBYkdsdWF5QnBabUZqWlgwZ1pHVmpiM0poZEc5eUlIZG9hV05vSUdGc2MyOGdjbVZuYVhOMFpYSWdhWFFnWVhNZ1lTQkhUMkpxWldOMElIUjVjR1V1WEc0Z0tpOWNibVY0Y0c5eWRDQmpiR0Z6Y3lCVFpYSjJhV05sSUdWNGRHVnVaSE1nUjA5aWFtVmpkQzVQWW1wbFkzUWdlMXh1SUNBZ0lITjBZWFJwWXlCYmFXNW1iMTAvT2lCSGFXOHVSRUoxYzBsdWRHVnlabUZqWlVsdVptOWNibHh1SUNBZ0lITjBZWFJwWXlCN1hHNGdJQ0FnSUNBZ0lFZFBZbXBsWTNRdWNtVm5hWE4wWlhKRGJHRnpjeWgwYUdsektWeHVJQ0FnSUgxY2JseHVJQ0FnSUZ0cGJuUmxjbTVoYkhOZE9pQjdYRzRnSUNBZ0lDQWdJR1JpZFhOUFltcGxZM1EvT2lCSGFXOHVSRUoxYzBWNGNHOXlkR1ZrVDJKcVpXTjBYRzRnSUNBZ0lDQWdJSEJ5YjNoNVB6b2dSMmx2TGtSQ2RYTlFjbTk0ZVZ4dUlDQWdJQ0FnSUNCd2NtbDJPaUJTWldOdmNtUThjM1J5YVc1bklId2djM2x0WW05c0xDQjFibXR1YjNkdVBseHVJQ0FnSUNBZ0lDQnZibE4wYjNBNklGTmxkRHdvS1NBOVBpQjJiMmxrUGx4dUlDQWdJSDBnUFNCN1hHNGdJQ0FnSUNBZ0lIQnlhWFk2SUh0OUxGeHVJQ0FnSUNBZ0lDQnZibE4wYjNBNklHNWxkeUJUWlhROEtDa2dQVDRnZG05cFpENG9LU3hjYmlBZ0lDQjlYRzVjYmlBZ0lDQWphVzVtYnpvZ1IybHZMa1JDZFhOSmJuUmxjbVpoWTJWSmJtWnZYRzVjYmlBZ0lDQmpiMjV6ZEhKMVkzUnZjaWdwSUh0Y2JpQWdJQ0FnSUNBZ2MzVndaWElvS1Z4dUlDQWdJQ0FnSUNCamIyNXpkQ0J6WlhKMmFXTmxJRDBnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaUJoY3lCMWJtdHViM2R1SUdGeklIUjVjR1Z2WmlCVFpYSjJhV05sWEc0Z0lDQWdJQ0FnSUdsbUlDZ2hjMlZ5ZG1salpWdHBibVp2WFNrZ2RHaHliM2NnUlhKeWIzSW9YQ0p0YVhOemFXNW5JR2x1ZEdWeVptRmpaU0JwYm1adlhDSXBYRzRnSUNBZ0lDQWdJSFJvYVhNdUkybHVabThnUFNCelpYSjJhV05sVzJsdVptOWRYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2JtOTBhV1o1S0hCeWIzQmxjblI1VG1GdFpUb2dSWGgwY21GamREeHJaWGx2WmlCMGFHbHpMQ0J6ZEhKcGJtYytJSHdnS0hOMGNtbHVaeUFtSUh0OUtTazZJSFp2YVdRZ2UxeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCd2NtOXdJRDBnZEdocGN5NGphVzVtYnk1c2IyOXJkWEJmY0hKdmNHVnlkSGtvY0hKdmNHVnlkSGxPWVcxbEtWeHVYRzRnSUNBZ0lDQWdJR2xtSUNod2NtOXdJQ1ltSUhSb2FYTmJhVzUwWlhKdVlXeHpYUzVrWW5WelQySnFaV04wS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdselcybHVkR1Z5Ym1Gc2MxMHVaR0oxYzA5aWFtVmpkQzVsYldsMFgzQnliM0JsY25SNVgyTm9ZVzVuWldRb1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NISnZjR1Z5ZEhsT1lXMWxMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzVsZHlCSFRHbGlMbFpoY21saGJuUW9jSEp2Y0M1emFXZHVZWFIxY21Vc0lIUm9hWE5iY0hKdmNHVnlkSGxPWVcxbElHRnpJR3RsZVc5bUlIUm9hWE5kS1N4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ2xjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lITjFjR1Z5TG01dmRHbG1lU2h3Y205d0lEOGdhMlZpWVdKcFpua29jSEp2Y0dWeWRIbE9ZVzFsS1NBNklIQnliM0JsY25SNVRtRnRaU2xjYmlBZ0lDQjlYRzVjYmlBZ0lDQmxiV2wwS0c1aGJXVTZJSE4wY21sdVp5d2dMaTR1Y0dGeVlXMXpPaUIxYm10dWIzZHVXMTBwT2lCMmIybGtJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdjMmxuYm1Gc0lEMGdkR2hwY3k0amFXNW1ieTVzYjI5cmRYQmZjMmxuYm1Gc0tHNWhiV1VwWEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLSE5wWjI1aGJDQW1KaUIwYUdselcybHVkR1Z5Ym1Gc2MxMHVaR0oxYzA5aWFtVmpkQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2MybG5ibUYwZFhKbElEMGdZQ2drZTNOcFoyNWhiQzVoY21kekxtMWhjQ2dvWVNrZ1BUNGdZUzV6YVdkdVlYUjFjbVVwTG1wdmFXNG9YQ0pjSWlsOUtXQmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTmJhVzUwWlhKdVlXeHpYUzVrWW5WelQySnFaV04wTG1WdGFYUmZjMmxuYm1Gc0tHNWhiV1VzSUc1bGR5QkhUR2xpTGxaaGNtbGhiblFvYzJsbmJtRjBkWEpsTENCd1lYSmhiWE1wS1Z4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1WdGFYUW9jMmxuYm1Gc0lEOGdhMlZpWVdKcFpua29ibUZ0WlNrZ09pQnVZVzFsTENBdUxpNXdZWEpoYlhNcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHk4Z2MyVnlkbVZ5WEc0Z0lDQWdJMmhoYm1Sc1pWQnliM0JsY25SNVIyVjBLRjg2SUVkcGJ5NUVRblZ6Ulhod2IzSjBaV1JQWW1wbFkzUXNJSEJ5YjNCbGNuUjVUbUZ0WlRvZ1JYaDBjbUZqZER4clpYbHZaaUIwYUdsekxDQnpkSEpwYm1jK0tTQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElIQnliM0FnUFNCMGFHbHpMaU5wYm1adkxteHZiMnQxY0Y5d2NtOXdaWEowZVNod2NtOXdaWEowZVU1aGJXVXBYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tDRndjbTl3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUhKdmR5QkZjbkp2Y2loZ0pIdDBhR2x6TG1OdmJuTjBjblZqZEc5eUxtNWhiV1Y5SUdoaGN5QnVieUJsZUhCdmNuUmxaQ0J3Y205d1pYSjBlVG9nWENJa2UzQnliM0JsY25SNVRtRnRaWDFjSW1BcFhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JqYjI1emRDQjJZV3gxWlNBOUlIUm9hWE5iY0hKdmNHVnlkSGxPWVcxbFhWeHVJQ0FnSUNBZ0lDQnBaaUFvZEhsd1pXOW1JSFpoYkhWbElDRTlQU0JjSW5WdVpHVm1hVzVsWkZ3aUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lFZE1hV0l1Vm1GeWFXRnVkQ2h3Y205d0xuTnBaMjVoZEhWeVpTd2dkbUZzZFdVcFhHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiblZzYkZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHk4Z2MyVnlkbVZ5WEc0Z0lDQWdJMmhoYm1Sc1pWQnliM0JsY25SNVUyVjBLRnh1SUNBZ0lDQWdJQ0JmT2lCSGFXOHVSRUoxYzBWNGNHOXlkR1ZrVDJKcVpXTjBMRnh1SUNBZ0lDQWdJQ0J3Y205d1pYSjBlVTVoYldVNklFVjRkSEpoWTNROGEyVjViMllnZEdocGN5d2djM1J5YVc1blBpeGNiaUFnSUNBZ0lDQWdkbUZzZFdVNklFZE1hV0l1Vm1GeWFXRnVkQ3hjYmlBZ0lDQXBJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdibVYzVm1Gc2RXVWdQU0IyWVd4MVpTNWtaV1Z3Vlc1d1lXTnJLQ2xjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdjSEp2Y0NBOUlIUm9hWE11STJsdVptOHViRzl2YTNWd1gzQnliM0JsY25SNUtIQnliM0JsY25SNVRtRnRaU2xjYmx4dUlDQWdJQ0FnSUNCcFppQW9JWEJ5YjNBcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2NtOTNJRVZ5Y205eUtHQWtlM1JvYVhNdVkyOXVjM1J5ZFdOMGIzSXVibUZ0WlgwZ2FHRnpJRzV2SUhCeWIzQmxjblI1T2lCY0lpUjdjSEp2Y0dWeWRIbE9ZVzFsZlZ3aVlDbGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUdsbUlDaDBhR2x6VzNCeWIzQmxjblI1VG1GdFpWMGdJVDA5SUc1bGQxWmhiSFZsS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdselczQnliM0JsY25SNVRtRnRaVjBnUFNCMllXeDFaUzVrWldWd1ZXNXdZV05yUEdGdWVUNG9LVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeThnYzJWeWRtVnlYRzRnSUNBZ0kzSmxkSFZ5YmtWeWNtOXlLR1Z5Y205eU9pQjFibXR1YjNkdUxDQnBiblp2WTJGMGFXOXVPaUJIYVc4dVJFSjFjMDFsZEdodlpFbHVkbTlqWVhScGIyNHBJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpaGxjbkp2Y2lsY2JpQWdJQ0FnSUNBZ2FXWWdLR1Z5Y205eUlHbHVjM1JoYm1ObGIyWWdSMHhwWWk1RmNuSnZjaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHbHVkbTlqWVhScGIyNHVjbVYwZFhKdVgyZGxjbkp2Y2lobGNuSnZjaWxjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCcFppQW9aWEp5YjNJZ2FXNXpkR0Z1WTJWdlppQkZjbkp2Y2lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR2x1ZG05allYUnBiMjR1Y21WMGRYSnVYMlJpZFhOZlpYSnliM0lvWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlhKeWIzSXVibUZ0WlM1cGJtTnNkV1JsY3loY0lpNWNJaWtnUHlCbGNuSnZjaTV1WVcxbElEb2dZR2RxY3k1S1UwVnljbTl5TGlSN1pYSnliM0l1Ym1GdFpYMWdMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1Z5Y205eUxtMWxjM05oWjJVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FwWEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2FXNTJiMk5oZEdsdmJpNXlaWFIxY201ZlpHSjFjMTlsY25KdmNpaGNJbWRxY3k1RVFuVnpVMlZ5ZG1salpTNVZibXR1YjNkdVJYSnliM0pjSWl3Z1lDUjdaWEp5YjNKOVlDbGNiaUFnSUNCOVhHNWNiaUFnSUNBdkx5QnpaWEoyWlhKY2JpQWdJQ0FqY21WMGRYSnVWbUZzZFdVb2RtRnNkV1U2SUhWdWEyNXZkMjRzSUcxbGRHaHZaRTVoYldVNklITjBjbWx1Wnl3Z2FXNTJiMk5oZEdsdmJqb2dSMmx2TGtSQ2RYTk5aWFJvYjJSSmJuWnZZMkYwYVc5dUtTQjdYRzRnSUNBZ0lDQWdJR2xtSUNoMllXeDFaU0E5UFQwZ2JuVnNiQ0I4ZkNCMllXeDFaU0E5UFQwZ2RXNWtaV1pwYm1Wa0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYVc1MmIyTmhkR2x2Ymk1eVpYUjFjbTVmZG1Gc2RXVW9ibVYzSUVkTWFXSXVWbUZ5YVdGdWRDaGNJaWdwWENJc0lGdGRLU2xjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lHTnZibk4wSUdGeVozTWdQU0IwYUdsekxpTnBibVp2TG14dmIydDFjRjl0WlhSb2IyUW9iV1YwYUc5a1RtRnRaU2svTG05MWRGOWhjbWR6SUQ4L0lGdGRYRzRnSUNBZ0lDQWdJR052Ym5OMElITnBaMjVoZEhWeVpTQTlJR0FvSkh0aGNtZHpMbTFoY0Nnb1lYSm5LU0E5UGlCaGNtY3VjMmxuYm1GMGRYSmxLUzVxYjJsdUtGd2lYQ0lwZlNsZ1hHNGdJQ0FnSUNBZ0lHbG1JQ2doUVhKeVlYa3VhWE5CY25KaGVTaDJZV3gxWlNrcElIUm9jbTkzSUVWeWNtOXlLRndpZG1Gc2RXVWdhR0Z6SUhSdklHSmxJR0VnZEhWd2JHVmNJaWxjYmlBZ0lDQWdJQ0FnYVc1MmIyTmhkR2x2Ymk1eVpYUjFjbTVmZG1Gc2RXVW9ibVYzSUVkTWFXSXVWbUZ5YVdGdWRDaHphV2R1WVhSMWNtVXNJSFpoYkhWbEtTbGNiaUFnSUNCOVhHNWNiaUFnSUNBdkx5QnpaWEoyWlhKY2JpQWdJQ0FqYUdGdVpHeGxUV1YwYUc5a1EyRnNiQ2hjYmlBZ0lDQWdJQ0FnWHpvZ1IybHZMa1JDZFhORmVIQnZjblJsWkU5aWFtVmpkQ3hjYmlBZ0lDQWdJQ0FnYldWMGFHOWtUbUZ0WlRvZ1JYaDBjbUZqZER4clpYbHZaaUIwYUdsekxDQnpkSEpwYm1jK0xGeHVJQ0FnSUNBZ0lDQndZWEpoYldWMFpYSnpPaUJIVEdsaUxsWmhjbWxoYm5Rc1hHNGdJQ0FnSUNBZ0lHbHVkbTlqWVhScGIyNDZJRWRwYnk1RVFuVnpUV1YwYUc5a1NXNTJiMk5oZEdsdmJpeGNiaUFnSUNBcE9pQjJiMmxrSUh0Y2JpQWdJQ0FnSUNBZ2RISjVJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUhaaGJIVmxJRDBnS0hSb2FYTmJiV1YwYUc5a1RtRnRaVjBnWVhNZ0tDNHVMbUZ5WjNNNklIVnVhMjV2ZDI1YlhTa2dQVDRnZFc1cmJtOTNiaWtvWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTGk0dWNHRnlZVzFsZEdWeWN5NWtaV1Z3Vlc1d1lXTnJQRUZ5Y21GNVBIVnVhMjV2ZDI0K1BpZ3BMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0tWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kbUZzZFdVZ2FXNXpkR0Z1WTJWdlppQkhUR2xpTGxaaGNtbGhiblFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcGJuWnZZMkYwYVc5dUxuSmxkSFZ5Ymw5MllXeDFaU2gyWVd4MVpTbGNiaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb2RtRnNkV1VnYVc1emRHRnVZMlZ2WmlCUWNtOXRhWE5sS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1ZjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xuUm9aVzRvS0haaGJIVmxLU0E5UGlCMGFHbHpMaU55WlhSMWNtNVdZV3gxWlNoMllXeDFaU3dnYldWMGFHOWtUbUZ0WlN3Z2FXNTJiMk5oZEdsdmJpa3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM1allYUmphQ2dvWlhKeWIzSXBJRDArSUhSb2FYTXVJM0psZEhWeWJrVnljbTl5S0dWeWNtOXlMQ0JwYm5adlkyRjBhVzl1S1NsY2JpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k0amNtVjBkWEp1Vm1Gc2RXVW9kbUZzZFdVc0lHMWxkR2h2WkU1aGJXVXNJR2x1ZG05allYUnBiMjRwWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDBnWTJGMFkyZ2dLR1Z5Y205eUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMaU55WlhSMWNtNUZjbkp2Y2lobGNuSnZjaXdnYVc1MmIyTmhkR2x2YmlsY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4dklITmxjblpsY2x4dUlDQWdJR0Z6ZVc1aklITmxjblpsS0h0Y2JpQWdJQ0FnSUNBZ1luVnpWSGx3WlNBOUlFZHBieTVDZFhOVWVYQmxMbE5GVTFOSlQwNHNYRzRnSUNBZ0lDQWdJRzVoYldVZ1BTQjBhR2x6TGlOcGJtWnZMbTVoYldVc1hHNGdJQ0FnSUNBZ0lHOWlhbVZqZEZCaGRHZ2dQU0JjSWk5Y0lpQXJJSFJvYVhNdUkybHVabTh1Ym1GdFpTNXpjR3hwZENoY0lpNWNJaWt1YW05cGJpaGNJaTljSWlrc1hHNGdJQ0FnSUNBZ0lHWnNZV2R6SUQwZ1IybHZMa0oxYzA1aGJXVlBkMjVsY2tac1lXZHpMazVQVGtVc1hHNGdJQ0FnSUNBZ0lIUnBiV1Z2ZFhRZ1BTQkVSVVpCVlV4VVgxUkpUVVZQVlZRc1hHNGdJQ0FnZlRvZ2UxeHVJQ0FnSUNBZ0lDQmlkWE5VZVhCbFB6b2dSMmx2TGtKMWMxUjVjR1ZjYmlBZ0lDQWdJQ0FnYm1GdFpUODZJSE4wY21sdVoxeHVJQ0FnSUNBZ0lDQnZZbXBsWTNSUVlYUm9Qem9nYzNSeWFXNW5YRzRnSUNBZ0lDQWdJR1pzWVdkelB6b2dSMmx2TGtKMWMwNWhiV1ZQZDI1bGNrWnNZV2R6WEc0Z0lDQWdJQ0FnSUhScGJXVnZkWFEvT2lCdWRXMWlaWEpjYmlBZ0lDQjlJRDBnZTMwcE9pQlFjbTl0YVhObFBIUm9hWE0rSUh0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYVcxd2JDQTlJRzVsZHlCSGFXOHVSRUoxYzBWNGNHOXlkR1ZrVDJKcVpXTjBLRnh1SUNBZ0lDQWdJQ0FnSUNBZ0x5OGdRSFJ6TFdWNGNHVmpkQzFsY25KdmNpQnRhWE56YVc1bklHTnZibk4wY25WamRHOXlJSFI1Y0dWY2JpQWdJQ0FnSUNBZ0lDQWdJSHNnWjE5cGJuUmxjbVpoWTJWZmFXNW1iem9nZEdocGN5NGphVzVtYnlCOUxGeHVJQ0FnSUNBZ0lDQXBYRzVjYmlBZ0lDQWdJQ0FnYVcxd2JDNWpiMjV1WldOMEtGd2lhR0Z1Wkd4bExXMWxkR2h2WkMxallXeHNYQ0lzSUhSb2FYTXVJMmhoYm1Sc1pVMWxkR2h2WkVOaGJHd3VZbWx1WkNoMGFHbHpLU2xjYmlBZ0lDQWdJQ0FnYVcxd2JDNWpiMjV1WldOMEtGd2lhR0Z1Wkd4bExYQnliM0JsY25SNUxXZGxkRndpTENCMGFHbHpMaU5vWVc1a2JHVlFjbTl3WlhKMGVVZGxkQzVpYVc1a0tIUm9hWE1wS1Z4dUlDQWdJQ0FnSUNCcGJYQnNMbU52Ym01bFkzUW9YQ0pvWVc1a2JHVXRjSEp2Y0dWeWRIa3RjMlYwWENJc0lIUm9hWE11STJoaGJtUnNaVkJ5YjNCbGNuUjVVMlYwTG1KcGJtUW9kR2hwY3lrcFhHNWNiaUFnSUNBZ0lDQWdkR2hwY3k0amFXNW1ieTVqWVdOb1pWOWlkV2xzWkNncFhHNWNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJRY205dGFYTmxLQ2h5WlhOdmJIWmxMQ0J5WldwbFkzUXBJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCemIzVnlZMlVnUFZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhScGJXVnZkWFFnUGlBd1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRDhnYzJWMFZHbHRaVzkxZENnb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGFtVmpkQ2hGY25KdmNpaGdjMlZ5ZG1VZ2RHbHRaV1FnYjNWMFlDa3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE52ZFhKalpTQTlJRzUxYkd4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5TENCMGFXMWxiM1YwS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQTZJRzUxYkd4Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdZMnhsWVhJZ1BTQW9LU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSE52ZFhKalpTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamJHVmhjbFJwYldWdmRYUW9jMjkxY21ObEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YjNWeVkyVWdQU0J1ZFd4c1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmlkWE5KWkNBOUlFZHBieTVpZFhOZmIzZHVYMjVoYldVb1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luVnpWSGx3WlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1pzWVdkekxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDaGpiMjV1T2lCSGFXOHVSRUoxYzBOdmJtNWxZM1JwYjI0cElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RISjVJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2x0Y0d3dVpYaHdiM0owS0dOdmJtNHNJRzlpYW1WamRGQmhkR2dwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdselcybHVkR1Z5Ym1Gc2MxMHVaR0oxYzA5aWFtVmpkQ0E5SUdsdGNHeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE5iYVc1MFpYSnVZV3h6WFM1dmJsTjBiM0F1WVdSa0tDZ3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkhhVzh1WW5WelgzVnViM2R1WDI1aGJXVW9ZblZ6U1dRcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhVzF3YkM1MWJtVjRjRzl5ZENncFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k0amFXNW1ieTVqWVdOb1pWOXlaV3hsWVhObEtDbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWld4bGRHVWdkR2hwYzF0cGJuUmxjbTVoYkhOZExtUmlkWE5QWW1wbFkzUmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsYzI5c2RtVW9kR2hwY3lsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JqWVhSamFDQW9aWEp5YjNJcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxhbVZqZENobGNuSnZjaWxjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMnhsWVhJc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyeGxZWElzWEc0Z0lDQWdJQ0FnSUNBZ0lDQXBYRzRnSUNBZ0lDQWdJSDBwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeThnY0hKdmVIbGNiaUFnSUNBamFHRnVaR3hsVUhKdmNHVnlkR2xsYzBOb1lXNW5aV1FvWEc0Z0lDQWdJQ0FnSUY4NklFZHBieTVFUW5WelVISnZlSGtzWEc0Z0lDQWdJQ0FnSUdOb1lXNW5aV1E2SUVkTWFXSXVWbUZ5YVdGdWREeGNJbUY3YzNaOVhDSStMRnh1SUNBZ0lDQWdJQ0JwYm5aaGJHbGtZWFJsWkRvZ2MzUnlhVzVuVzEwc1hHNGdJQ0FnS1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUhObGRDQTlJRzVsZHlCVFpYUW9XeTR1TGs5aWFtVmpkQzVyWlhsektHTm9ZVzVuWldRdVpHVmxjRlZ1Y0dGamF5Z3BLU3dnTGk0dWFXNTJZV3hwWkdGMFpXUmRLVnh1SUNBZ0lDQWdJQ0JtYjNJZ0tHTnZibk4wSUhCeWIzQWdiMllnYzJWMExuWmhiSFZsY3lncEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbTV2ZEdsbWVTaHdjbTl3SUdGeklFVjRkSEpoWTNROGEyVjViMllnZEdocGN5d2djM1J5YVc1blBpbGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHZJSEJ5YjNoNVhHNGdJQ0FnSTJoaGJtUnNaVk5wWjI1aGJDaGNiaUFnSUNBZ0lDQWdYem9nUjJsdkxrUkNkWE5RY205NGVTeGNiaUFnSUNBZ0lDQWdYM05sYm1SbGNqb2djM1J5YVc1bklId2diblZzYkN4Y2JpQWdJQ0FnSUNBZ2MybG5ibUZzT2lCemRISnBibWNzWEc0Z0lDQWdJQ0FnSUhCaGNtRnRaWFJsY25NNklFZE1hV0l1Vm1GeWFXRnVkQ3hjYmlBZ0lDQXBJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NWxiV2wwS0d0bFltRmlhV1o1S0hOcFoyNWhiQ2tzSUM0dUxuQmhjbUZ0WlhSbGNuTXVaR1ZsY0ZWdWNHRmphenhCY25KaGVUeDFibXR1YjNkdVBqNG9LU2xjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZMeUJ3Y205NGVWeHVJQ0FnSUNOeVpXMXZkR1ZOWlhSb2IyUlFZWEpoYlhNb1hHNGdJQ0FnSUNBZ0lHMWxkR2h2WkU1aGJXVTZJSE4wY21sdVp5eGNiaUFnSUNBZ0lDQWdZWEpuY3pvZ2RXNXJibTkzYmx0ZExGeHVJQ0FnSUNrNklGQmhjbUZ0WlhSbGNuTThSMmx2TGtSQ2RYTlFjbTk0ZVZ0Y0ltTmhiR3hmYzNsdVkxd2lYVDRnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0I3SUhCeWIzaDVJSDBnUFNCMGFHbHpXMmx1ZEdWeWJtRnNjMTFjYmlBZ0lDQWdJQ0FnYVdZZ0tDRndjbTk0ZVNrZ2RHaHliM2NnUlhKeWIzSW9YQ0pwYm5aaGJHbGtJSEpsYlc5MFpVMWxkR2h2WkNCcGJuWnZZMkYwYVc5dU9pQnViM1FnWVNCd2NtOTRlVndpS1Z4dVhHNGdJQ0FnSUNBZ0lHTnZibk4wSUcxbGRHaHZaQ0E5SUhSb2FYTXVJMmx1Wm04dWJHOXZhM1Z3WDIxbGRHaHZaQ2h0WlhSb2IyUk9ZVzFsS1Z4dUlDQWdJQ0FnSUNCcFppQW9JVzFsZEdodlpDa2dkR2h5YjNjZ1JYSnliM0lvWENKdFpYUm9iMlFnYm05MElHWnZkVzVrWENJcFhHNWNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2MybG5ibUYwZFhKbElEMGdZQ2drZTIxbGRHaHZaQzVwYmw5aGNtZHpMbTFoY0Nnb1lTa2dQVDRnWVM1emFXZHVZWFIxY21VcExtcHZhVzRvWENKY0lpbDlLV0JjYmx4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnVzF4dUlDQWdJQ0FnSUNBZ0lDQWdiV1YwYUc5a1RtRnRaU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWxkeUJIVEdsaUxsWmhjbWxoYm5Rb2MybG5ibUYwZFhKbExDQmhjbWR6S1N4Y2JpQWdJQ0FnSUNBZ0lDQWdJRWRwYnk1RVFuVnpRMkZzYkVac1lXZHpMazVQVGtVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JFUlVaQlZVeFVYMVJKVFVWUFZWUXNYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXeHNMRnh1SUNBZ0lDQWdJQ0JkWEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeThnY0hKdmVIbGNiaUFnSUNCYmNtVnRiM1JsVFdWMGFHOWtYU2h0WlhSb2IyUk9ZVzFsT2lCemRISnBibWNzSUdGeVozTTZJSFZ1YTI1dmQyNWJYU2s2SUVkTWFXSXVWbUZ5YVdGdWRDQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElIQmhjbUZ0Y3lBOUlIUm9hWE11STNKbGJXOTBaVTFsZEdodlpGQmhjbUZ0Y3lodFpYUm9iMlJPWVcxbExDQmhjbWR6S1Z4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGMxdHBiblJsY201aGJITmRMbkJ5YjNoNUlTNWpZV3hzWDNONWJtTW9MaTR1Y0dGeVlXMXpLVnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHZJSEJ5YjNoNVhHNGdJQ0FnVzNKbGJXOTBaVTFsZEdodlpFRnplVzVqWFNodFpYUm9iMlJPWVcxbE9pQnpkSEpwYm1jc0lHRnlaM002SUhWdWEyNXZkMjViWFNrNklGQnliMjFwYzJVOFIweHBZaTVXWVhKcFlXNTBQaUI3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1VISnZiV2x6WlNnb2NtVnpiMngyWlN3Z2NtVnFaV04wS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGNua2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElIQmhjbUZ0Y3lBOUlIUm9hWE11STNKbGJXOTBaVTFsZEdodlpGQmhjbUZ0Y3lodFpYUm9iMlJPWVcxbExDQmhjbWR6S1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTmJhVzUwWlhKdVlXeHpYUzV3Y205NGVTRXVZMkZzYkNndUxpNXdZWEpoYlhNc0lDaGZMQ0J5WlhNcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RISjVJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsYzI5c2RtVW9kR2hwYzF0cGJuUmxjbTVoYkhOZExuQnliM2g1SVM1allXeHNYMlpwYm1semFDaHlaWE1wS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR05oZEdOb0lDaGxjbkp2Y2lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVnFaV04wS0dWeWNtOXlLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTbGNiaUFnSUNBZ0lDQWdJQ0FnSUgwZ1kyRjBZMmdnS0dWeWNtOXlLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WcVpXTjBLR1Z5Y205eUtWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOUtWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4dklIQnliM2g1WEc0Z0lDQWdXM0psYlc5MFpWQnliM0JsY25SNVUyVjBYU2h1WVcxbE9pQnpkSEpwYm1jc0lIWmhiSFZsT2lCMWJtdHViM2R1S1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUhCeWIzaDVJRDBnZEdocGMxdHBiblJsY201aGJITmRMbkJ5YjNoNUlWeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCd2NtOXdJRDBnZEdocGN5NGphVzVtYnk1c2IyOXJkWEJmY0hKdmNHVnlkSGtvYm1GdFpTa2hYRzVjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdkbUZ5YVdGdWRDQTlJRzVsZHlCSFRHbGlMbFpoY21saGJuUW9jSEp2Y0M1emFXZHVZWFIxY21Vc0lIWmhiSFZsS1Z4dUlDQWdJQ0FnSUNCd2NtOTRlUzV6WlhSZlkyRmphR1ZrWDNCeWIzQmxjblI1S0c1aGJXVXNJSFpoY21saGJuUXBYRzVjYmlBZ0lDQWdJQ0FnY0hKdmVIa3VZMkZzYkNoY2JpQWdJQ0FnSUNBZ0lDQWdJRndpYjNKbkxtWnlaV1ZrWlhOcmRHOXdMa1JDZFhNdVVISnZjR1Z5ZEdsbGN5NVRaWFJjSWl4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVsZHlCSFRHbGlMbFpoY21saGJuUW9YQ0lvYzNOMktWd2lMQ0JiY0hKdmVIa3VaMGx1ZEdWeVptRmpaVTVoYldVc0lHNWhiV1VzSUhaaGNtbGhiblJkS1N4Y2JpQWdJQ0FnSUNBZ0lDQWdJRWRwYnk1RVFuVnpRMkZzYkVac1lXZHpMazVQVGtVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0F0TVN4Y2JpQWdJQ0FnSUNBZ0lDQWdJRzUxYkd3c1hHNGdJQ0FnSUNBZ0lDQWdJQ0FvWHl3Z2NtVnpLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RISjVJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NISnZlSGt1WTJGc2JGOW1hVzVwYzJnb2NtVnpLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWTJGMFkyZ2dLR1VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lobEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lDbGNiaUFnSUNCOVhHNWNiaUFnSUNBdkx5QndjbTk0ZVZ4dUlDQWdJR0Z6ZVc1aklIQnliM2g1S0h0Y2JpQWdJQ0FnSUNBZ1luVnpJRDBnUjJsdkxrUkNkWE11YzJWemMybHZiaXhjYmlBZ0lDQWdJQ0FnYm1GdFpTQTlJSFJvYVhNdUkybHVabTh1Ym1GdFpTeGNiaUFnSUNBZ0lDQWdiMkpxWldOMFVHRjBhQ0E5SUZ3aUwxd2lJQ3NnZEdocGN5NGphVzVtYnk1dVlXMWxMbk53YkdsMEtGd2lMbHdpS1M1cWIybHVLRndpTDF3aUtTeGNiaUFnSUNBZ0lDQWdabXhoWjNNZ1BTQkhhVzh1UkVKMWMxQnliM2g1Um14aFozTXVUazlPUlN4Y2JpQWdJQ0FnSUNBZ2RHbHRaVzkxZENBOUlFUkZSa0ZWVEZSZlZFbE5SVTlWVkN4Y2JpQWdJQ0I5T2lCN1hHNGdJQ0FnSUNBZ0lHSjFjejg2SUVkcGJ5NUVRblZ6UTI5dWJtVmpkR2x2Ymx4dUlDQWdJQ0FnSUNCdVlXMWxQem9nYzNSeWFXNW5YRzRnSUNBZ0lDQWdJRzlpYW1WamRGQmhkR2cvT2lCemRISnBibWRjYmlBZ0lDQWdJQ0FnWm14aFozTS9PaUJIYVc4dVJFSjFjMUJ5YjNoNVJteGhaM05jYmlBZ0lDQWdJQ0FnZEdsdFpXOTFkRDg2SUc1MWJXSmxjbHh1SUNBZ0lIMGdQU0I3ZlNrNklGQnliMjFwYzJVOGRHaHBjejRnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0J3Y205NGVTQTlJRzVsZHlCSGFXOHVSRUoxYzFCeWIzaDVLSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHZERiMjV1WldOMGFXOXVPaUJpZFhNc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JuU1c1MFpYSm1ZV05sVG1GdFpUb2dkR2hwY3k0amFXNW1ieTV1WVcxbExGeHVJQ0FnSUNBZ0lDQWdJQ0FnWjBsdWRHVnlabUZqWlVsdVptODZJSFJvYVhNdUkybHVabThzWEc0Z0lDQWdJQ0FnSUNBZ0lDQm5UbUZ0WlRvZ2JtRnRaU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lHZEdiR0ZuY3pvZ1pteGhaM01zWEc0Z0lDQWdJQ0FnSUNBZ0lDQm5UMkpxWldOMFVHRjBhRG9nYjJKcVpXTjBVR0YwYUN4Y2JpQWdJQ0FnSUNBZ2ZTbGNibHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUZCeWIyMXBjMlVvS0hKbGMyOXNkbVVzSUhKbGFtVmpkQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdZMkZ1WTJGc2JHRmliR1VnUFNCdVpYY2dSMmx2TGtOaGJtTmxiR3hoWW14bEtDbGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSE52ZFhKalpTQTlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2x0Wlc5MWRDQStJREJjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1B5QnpaWFJVYVcxbGIzVjBLQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVZxWldOMEtFVnljbTl5S0dCd2NtOTRlU0IwYVcxbFpDQnZkWFJnS1NsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyOTFjbU5sSUQwZ2JuVnNiRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVc1allXeHNZV0pzWlM1allXNWpaV3dvS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBzSUhScGJXVnZkWFFwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEb2diblZzYkZ4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0J3Y205NGVTNXBibWwwWDJGemVXNWpLRWRNYVdJdVVGSkpUMUpKVkZsZlJFVkdRVlZNVkN3Z1kyRnVZMkZzYkdGaWJHVXNJQ2hmTENCeVpYTXBJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGNua2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9jMjkxY21ObEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiR1ZoY2xScGJXVnZkWFFvYzI5MWNtTmxLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMjkxY21ObElEMGdiblZzYkZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NISnZlSGt1YVc1cGRGOW1hVzVwYzJnb2NtVnpLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpXMmx1ZEdWeWJtRnNjMTB1Y0hKdmVIa2dQU0J3Y205NGVWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR2xrY3lBOUlGdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQnliM2g1TG1OdmJtNWxZM1FvWENKbkxYTnBaMjVoYkZ3aUxDQjBhR2x6TGlOb1lXNWtiR1ZUYVdkdVlXd3VZbWx1WkNoMGFHbHpLU2tzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3Y205NGVTNWpiMjV1WldOMEtGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpWnkxd2NtOXdaWEowYVdWekxXTm9ZVzVuWldSY0lpeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxpTm9ZVzVrYkdWUWNtOXdaWEowYVdWelEyaGhibWRsWkM1aWFXNWtLSFJvYVhNcExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0tTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWFZ4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhOYmFXNTBaWEp1WVd4elhTNXZibE4wYjNBdVlXUmtLQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbGtjeTVtYjNKRllXTm9LQ2hwWkNrZ1BUNGdjSEp2ZUhrdVpHbHpZMjl1Ym1WamRDaHBaQ2twWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWld4bGRHVWdkR2hwYzF0cGJuUmxjbTVoYkhOZExuQnliM2g1WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVnpiMngyWlNoMGFHbHpLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWTJGMFkyZ2dLR1Z5Y205eUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGFtVmpkQ2hsY25KdmNpbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtWeHVJQ0FnSUNBZ0lDQjlLVnh1SUNBZ0lIMWNibHh1SUNBZ0lITjBiM0FvS1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUhzZ2IyNVRkRzl3SUgwZ1BTQjBhR2x6VzJsdWRHVnlibUZzYzExY2JpQWdJQ0FnSUNBZ1ptOXlJQ2hqYjI1emRDQmpZaUJ2WmlCdmJsTjBiM0F1ZG1Gc2RXVnpLQ2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzl1VTNSdmNDNWtaV3hsZEdVb1kySXBYRzRnSUNBZ0lDQWdJQ0FnSUNCallpZ3BYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzU5WEc1Y2JuUjVjR1VnU1c1MFpYSm1ZV05sVFdWMFlTQTlJSHRjYmlBZ0lDQmtZblZ6VFdWMGFHOWtjejg2SUZKbFkyOXlaRHhjYmlBZ0lDQWdJQ0FnYzNSeWFXNW5MRnh1SUNBZ0lDQWdJQ0JCY25KaGVUeDdYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxQem9nYzNSeWFXNW5YRzRnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUJ6ZEhKcGJtZGNiaUFnSUNBZ0lDQWdJQ0FnSUdScGNtVmpkR2x2YmpvZ1hDSnBibHdpSUh3Z1hDSnZkWFJjSWx4dUlDQWdJQ0FnSUNCOVBseHVJQ0FnSUQ1Y2JpQWdJQ0JrWW5WelUybG5ibUZzY3o4NklGSmxZMjl5WkR4Y2JpQWdJQ0FnSUNBZ2MzUnlhVzVuTEZ4dUlDQWdJQ0FnSUNCQmNuSmhlVHg3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsUHpvZ2MzUnlhVzVuWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lCemRISnBibWRjYmlBZ0lDQWdJQ0FnZlQ1Y2JpQWdJQ0ErWEc0Z0lDQWdaR0oxYzFCeWIzQmxjblJwWlhNL09pQlNaV052Y21ROFhHNGdJQ0FnSUNBZ0lITjBjbWx1Wnl4Y2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2djM1J5YVc1blhHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQnpkSEpwYm1kY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsWVdRL09pQjBjblZsWEc0Z0lDQWdJQ0FnSUNBZ0lDQjNjbWwwWlQ4NklIUnlkV1ZjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJRDVjYm4xY2JseHVMeW9xWEc0Z0tpQlNaV2RwYzNSbGNuTWdZU0I3UUd4cGJtc2dVMlZ5ZG1salpYMGdZWE1nWVNCa1luVnpJR2x1ZEdWeVptRmpaUzVjYmlBcVhHNGdLaUJBY0dGeVlXMGdibUZ0WlNCSmJuUmxjbVpoWTJVZ2JtRnRaU0J2WmlCMGFHVWdiMkpxWldOMExpQkdiM0lnWlhoaGJYQnNaU0JjSW05eVp5NW5ibTl0WlM1VGFHVnNiQzVUWldGeVkyaFFjbTkyYVdSbGNqSmNJbHh1SUNvZ1FIQmhjbUZ0SUc5d2RHbHZibk1nYjNCMGFXOXVZV3dnY0hKdmNHVnlkR2xsY3lCMGJ5QndZWE56SUhSdklIdEFiR2x1YXlCeVpXZHBjM1JsY24xY2JpQXFMMXh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJR2xtWVdObEtHNWhiV1U2SUhOMGNtbHVaeXdnYjNCMGFXOXVjejg2SUZCaGNtRnRaWFJsY25NOGRIbHdaVzltSUhKbFoybHpkR1Z5UGxzd1hTa2dlMXh1SUNBZ0lISmxkSFZ5YmlCbWRXNWpkR2x2YmlBb1kyeHpPaUI3SUc1bGR5QW9MaTR1WVhKbmN6b2dZVzU1VzEwcE9pQlRaWEoyYVdObElIMHNJR04wZURvZ1EyeGhjM05FWldOdmNtRjBiM0pEYjI1MFpYaDBLU0I3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJRzFsZEdFZ1BTQmpkSGd1YldWMFlXUmhkR0ZjYmlBZ0lDQWdJQ0FnYVdZZ0tDRnRaWFJoS1NCMGFISnZkeUJGY25KdmNpaGdKSHRqYkhNdWJtRnRaWDBnYVhNZ2JtOTBJR0Z1SUdsdWRHVnlabUZqWldBcFhHNWNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2V5QmtZblZ6VFdWMGFHOWtjeUE5SUh0OUxDQmtZblZ6VTJsbmJtRnNjeUE5SUh0OUxDQmtZblZ6VUhKdmNHVnlkR2xsY3lBOUlIdDlJSDBnUFNCdFpYUmhJR0Z6SUVsdWRHVnlabUZqWlUxbGRHRmNibHh1SUNBZ0lDQWdJQ0JqYjI1emRDQnBibVp2V0cxc0lEMGdlRzFzS0h0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklGd2libTlrWlZ3aUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnWTJocGJHUnlaVzQ2SUZ0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklGd2lhVzUwWlhKbVlXTmxYQ0lzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRjBkSEpwWW5WMFpYTTZJSHNnYm1GdFpTQjlMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamFHbHNaSEpsYmpvZ1cxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xpNHVUMkpxWldOMExtVnVkSEpwWlhNb1pHSjFjMDFsZEdodlpITXBMbTFoY0Nnb1cyNWhiV1VzSUdGeVozTmRLU0E5UGlBb2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklGd2liV1YwYUc5a1hDSXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVhSMGNtbGlkWFJsY3pvZ2V5QnVZVzFsSUgwc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMmhwYkdSeVpXNDZJR0Z5WjNNdWJXRndLQ2hoY21jcElEMCtJQ2g3SUc1aGJXVTZJRndpWVhKblhDSXNJR0YwZEhKcFluVjBaWE02SUdGeVp5QjlLU2tzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1Nrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdUxpNVBZbXBsWTNRdVpXNTBjbWxsY3loa1luVnpVMmxuYm1Gc2N5a3ViV0Z3S0NoYmJtRnRaU3dnWVhKbmMxMHBJRDArSUNoN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ1hDSnphV2R1WVd4Y0lpeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoZEhSeWFXSjFkR1Z6T2lCN0lHNWhiV1VnZlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmphR2xzWkhKbGJqb2dZWEpuY3k1dFlYQW9LR0Z5WnlrZ1BUNGdLSHNnYm1GdFpUb2dYQ0poY21kY0lpd2dZWFIwY21saWRYUmxjem9nWVhKbklIMHBLU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwS1N4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM0dUxrOWlhbVZqZEM1MllXeDFaWE1vWkdKMWMxQnliM0JsY25ScFpYTXBMbTFoY0Nnb2V5QnVZVzFsTENCMGVYQmxMQ0J5WldGa0xDQjNjbWwwWlNCOUtTQTlQaUFvZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUZ3aWNISnZjR1Z5ZEhsY0lpeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoZEhSeWFXSjFkR1Z6T2lCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM0dUxpaHVZVzFsSUNZbUlIc2dibUZ0WlNCOUtTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZV05qWlhOek9pQW9jbVZoWkNBL0lGd2ljbVZoWkZ3aUlEb2dYQ0pjSWlrZ0t5QW9kM0pwZEdVZ1B5QmNJbmR5YVhSbFhDSWdPaUJjSWx3aUtTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrcExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JkTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JkTEZ4dUlDQWdJQ0FnSUNCOUtWeHVYRzRnSUNBZ0lDQWdJRTlpYW1WamRDNWhjM05wWjI0b1kyeHpMQ0I3SUZ0cGJtWnZYVG9nUjJsdkxrUkNkWE5KYm5SbGNtWmhZMlZKYm1adkxtNWxkMTltYjNKZmVHMXNLR2x1Wm05WWJXd3BJSDBwWEc0Z0lDQWdJQ0FnSUhKbFoybHpkR1Z5S0c5d2RHbHZibk1wS0dOc2N5d2dZM1I0S1Z4dUlDQWdJSDFjYm4xY2JseHVkSGx3WlNCRVFuVnpWSGx3WlNBOUlITjBjbWx1WnlCOElIc2dkSGx3WlRvZ2MzUnlhVzVuT3lCdVlXMWxPaUJ6ZEhKcGJtY2dmVnh1WEc1MGVYQmxJRWx1Wm1WeVZtRnlhV0Z1ZEZSNWNHVnpQRlFnWlhoMFpXNWtjeUJCY25KaGVUeEVRblZ6Vkhsd1pUNCtJRDBnZTF4dUlDQWdJRnRMSUdsdUlHdGxlVzltSUZSZE9pQlVXMHRkSUdWNGRHVnVaSE1nYzNSeWFXNW5YRzRnSUNBZ0lDQWdJRDhnUkdWbGNFbHVabVZ5UEZSYlMxMCtYRzRnSUNBZ0lDQWdJRG9nVkZ0TFhTQmxlSFJsYm1SeklIc2dkSGx3WlRvZ2FXNW1aWElnVXlCOVhHNGdJQ0FnSUNBZ0lDQWdQeUJUSUdWNGRHVnVaSE1nYzNSeWFXNW5YRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lEOGdSR1ZsY0VsdVptVnlQRk0rWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJRG9nYm1WMlpYSmNiaUFnSUNBZ0lDQWdJQ0E2SUhWdWEyNXZkMjVjYm4xY2JseHVablZ1WTNScGIyNGdhVzV6ZEdGc2JFMWxkR2h2WkR4QmNtZHpJR1Y0ZEdWdVpITWdRWEp5WVhrOFJFSjFjMVI1Y0dVK1BpaGNiaUFnSUNCaGNtZHpPaUJCY21keklId2dXMEZ5WjNNc0lFRnlaM00vWFN4Y2JpQWdJQ0J0WlhSb2IyUTZJQ2d1TGk1aGNtZHpPaUJoYm5sYlhTa2dQVDRnZFc1cmJtOTNiaXhjYmlBZ0lDQmpkSGc2SUVOc1lYTnpUV1YwYUc5a1JHVmpiM0poZEc5eVEyOXVkR1Y0ZER4VFpYSjJhV05sTENCMGVYQmxiMllnYldWMGFHOWtQaXhjYmlrZ2UxeHVJQ0FnSUdOdmJuTjBJRzVoYldVZ1BTQmpkSGd1Ym1GdFpWeHVJQ0FnSUdOdmJuTjBJRzFsZEdFZ1BTQmpkSGd1YldWMFlXUmhkR0VoSUdGeklFbHVkR1Z5Wm1GalpVMWxkR0ZjYmlBZ0lDQmpiMjV6ZENCdFpYUm9iMlJ6SUQwZ0tHMWxkR0V1WkdKMWMwMWxkR2h2WkhNZ1B6ODlJSHQ5S1Z4dVhHNGdJQ0FnYVdZZ0tIUjVjR1Z2WmlCdVlXMWxJQ0U5UFNCY0luTjBjbWx1WjF3aUtTQjdYRzRnSUNBZ0lDQWdJSFJvY205M0lFVnljbTl5S0Z3aWIyNXNlU0J6ZEhKcGJtY2dibUZ0WldRZ2JXVjBhRzlrY3lCaGNtVWdZV3hzYjNkbFpGd2lLVnh1SUNBZ0lIMWNibHh1SUNBZ0lHTnZibk4wSUZ0cGJrRnlaM01zSUc5MWRFRnlaM01nUFNCYlhWMGdQU0FvUVhKeVlYa3VhWE5CY25KaGVTaGhjbWR6V3pCZEtTQS9JR0Z5WjNNZ09pQmJZWEpuYzEwcElHRnpJRnRCY21kekxDQkJjbWR6WFZ4dVhHNGdJQ0FnYldWMGFHOWtjMXR1WVcxbFhTQTlJRnRjYmlBZ0lDQWdJQ0FnTGk0dWFXNUJjbWR6TG0xaGNDZ29ZWEpuS1NBOVBpQW9lMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pHbHlaV04wYVc5dU9pQmNJbWx1WENJZ1lYTWdZMjl1YzNRc1hHNGdJQ0FnSUNBZ0lDQWdJQ0F1TGk0b2RIbHdaVzltSUdGeVp5QTlQVDBnWENKemRISnBibWRjSWlBL0lIc2dkSGx3WlRvZ1lYSm5JSDBnT2lCaGNtY3BMRnh1SUNBZ0lDQWdJQ0I5S1Nrc1hHNGdJQ0FnSUNBZ0lDNHVMbTkxZEVGeVozTXViV0Z3S0NoaGNtY3BJRDArSUNoN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhKbFkzUnBiMjQ2SUZ3aWIzVjBYQ0lnWVhNZ1kyOXVjM1FzWEc0Z0lDQWdJQ0FnSUNBZ0lDQXVMaTRvZEhsd1pXOW1JR0Z5WnlBOVBUMGdYQ0p6ZEhKcGJtZGNJaUEvSUhzZ2RIbHdaVG9nWVhKbklIMGdPaUJoY21jcExGeHVJQ0FnSUNBZ0lDQjlLU2tzWEc0Z0lDQWdYVnh1WEc0Z0lDQWdjbVYwZFhKdUlHNWhiV1ZjYm4xY2JseHVablZ1WTNScGIyNGdhVzV6ZEdGc2JGQnliM0JsY25SNVBGUWdaWGgwWlc1a2N5QnpkSEpwYm1jK0tGeHVJQ0FnSUhSNWNHVTZJRlFzWEc0Z0lDQWdZM1I0T2lCRGJHRnpjMFpwWld4a1JHVmpiM0poZEc5eVEyOXVkR1Y0ZENCOElFTnNZWE56UjJWMGRHVnlSR1ZqYjNKaGRHOXlRMjl1ZEdWNGRDQjhJRU5zWVhOelUyVjBkR1Z5UkdWamIzSmhkRzl5UTI5dWRHVjRkQ3hjYmlrZ2UxeHVJQ0FnSUdOdmJuTjBJR3RwYm1RZ1BTQmpkSGd1YTJsdVpGeHVJQ0FnSUdOdmJuTjBJRzVoYldVZ1BTQmpkSGd1Ym1GdFpWeHVJQ0FnSUdOdmJuTjBJRzFsZEdFZ1BTQmpkSGd1YldWMFlXUmhkR0VoSUdGeklFbHVkR1Z5Wm1GalpVMWxkR0ZjYmlBZ0lDQmpiMjV6ZENCd2NtOXdaWEowYVdWeklEMGdLRzFsZEdFdVpHSjFjMUJ5YjNCbGNuUnBaWE1nUHo4OUlIdDlLVnh1WEc0Z0lDQWdhV1lnS0hSNWNHVnZaaUJ1WVcxbElDRTlQU0JjSW5OMGNtbHVaMXdpS1NCN1hHNGdJQ0FnSUNBZ0lIUm9jbTkzSUVWeWNtOXlLRndpYjI1c2VTQnpkSEpwYm1jZ2JtRnRaV1FnY0hKdmNHVnlkR2xsY3lCaGNtVWdZV3hzYjNkbFpGd2lLVnh1SUNBZ0lIMWNibHh1SUNBZ0lHTnZibk4wSUhKbFlXUWdQU0JyYVc1a0lEMDlQU0JjSW1acFpXeGtYQ0lnZkh3Z2EybHVaQ0E5UFQwZ1hDSm5aWFIwWlhKY0lseHVJQ0FnSUdOdmJuTjBJSGR5YVhSbElEMGdhMmx1WkNBOVBUMGdYQ0ptYVdWc1pGd2lJSHg4SUd0cGJtUWdQVDA5SUZ3aWMyVjBkR1Z5WENKY2JseHVJQ0FnSUdsbUlDaHVZVzFsSUdsdUlIQnliM0JsY25ScFpYTXBJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tIZHlhWFJsS1NCd2NtOXdaWEowYVdWelcyNWhiV1ZkTG5keWFYUmxJRDBnZEhKMVpWeHVJQ0FnSUNBZ0lDQnBaaUFvY21WaFpDa2djSEp2Y0dWeWRHbGxjMXR1WVcxbFhTNXlaV0ZrSUQwZ2RISjFaVnh1SUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lIQnliM0JsY25ScFpYTmJibUZ0WlYwZ1BTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDNHVMaWh5WldGa0lDWW1JSHNnY21WaFpDQjlLU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDNHVMaWgzY21sMFpTQW1KaUI3SUhkeWFYUmxJSDBwTEZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnY21WMGRYSnVJRzVoYldWY2JuMWNibHh1Wm5WdVkzUnBiMjRnYVc1emRHRnNiRk5wWjI1aGJEeFFZWEpoYlhNZ1pYaDBaVzVrY3lCQmNuSmhlVHhFUW5WelZIbHdaVDQrS0Z4dUlDQWdJSEJoY21GdGN6b2dVR0Z5WVcxekxGeHVJQ0FnSUdOMGVEb2dRMnhoYzNOTlpYUm9iMlJFWldOdmNtRjBiM0pEYjI1MFpYaDBQRk5sY25acFkyVStMRnh1S1NCN1hHNGdJQ0FnWTI5dWMzUWdibUZ0WlNBOUlHTjBlQzV1WVcxbFhHNGdJQ0FnWTI5dWMzUWdiV1YwWVNBOUlHTjBlQzV0WlhSaFpHRjBZU0VnWVhNZ1NXNTBaWEptWVdObFRXVjBZVnh1SUNBZ0lHTnZibk4wSUhOcFoyNWhiSE1nUFNBb2JXVjBZUzVrWW5WelUybG5ibUZzY3lBL1B6MGdlMzBwWEc1Y2JpQWdJQ0JwWmlBb2RIbHdaVzltSUc1aGJXVWdQVDA5SUZ3aWMzbHRZbTlzWENJcElIdGNiaUFnSUNBZ0lDQWdkR2h5YjNjZ1JYSnliM0lvWENKemVXMWliMnh6SUdGeVpTQnViM1FnZG1Gc2FXUWdjMmxuYm1Gc2Mxd2lLVnh1SUNBZ0lIMWNibHh1SUNBZ0lITnBaMjVoYkhOYmJtRnRaVjBnUFNCd1lYSmhiWE11YldGd0tDaGhjbWNwSUQwK0lDaDBlWEJsYjJZZ1lYSm5JRDA5UFNCY0luTjBjbWx1WjF3aUlEOGdleUIwZVhCbE9pQmhjbWNnZlNBNklHRnlaeWtwWEc1Y2JpQWdJQ0J5WlhSMWNtNGdibUZ0WlZ4dWZWeHVYRzVtZFc1amRHbHZiaUJwYm1abGNrZFVlWEJsUm5KdmJWWmhjbWxoYm5Rb2RIbHdaVG9nUkVKMWMxUjVjR1VwT2lCSFQySnFaV04wTGtkVWVYQmxQR0Z1ZVQ0Z2UxeHVJQ0FnSUdsbUlDaDBlWEJsYjJZZ2RIbHdaU0FoUFQwZ1hDSnpkSEpwYm1kY0lpa2djbVYwZFhKdUlHbHVabVZ5UjFSNWNHVkdjbTl0Vm1GeWFXRnVkQ2gwZVhCbExuUjVjR1VwWEc1Y2JpQWdJQ0JwWmlBb2RIbHdaUzV6ZEdGeWRITlhhWFJvS0Z3aVlWd2lLU0I4ZkNCMGVYQmxMbk4wWVhKMGMxZHBkR2dvWENJb1hDSXBLU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJIVDJKcVpXTjBMbFJaVUVWZlNsTlBRa3BGUTFSY2JpQWdJQ0I5WEc1Y2JpQWdJQ0J6ZDJsMFkyZ2dLSFI1Y0dVcElIdGNiaUFnSUNBZ0lDQWdZMkZ6WlNCY0luWmNJanBjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCSFQySnFaV04wTGxSWlVFVmZWa0ZTU1VGT1ZGeHVJQ0FnSUNBZ0lDQmpZWE5sSUZ3aVlsd2lPbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUVkUFltcGxZM1F1VkZsUVJWOUNUMDlNUlVGT1hHNGdJQ0FnSUNBZ0lHTmhjMlVnWENKNVhDSTZYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnUjA5aWFtVmpkQzVVV1ZCRlgxVkpUbFJjYmlBZ0lDQWdJQ0FnWTJGelpTQmNJbTVjSWpwY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQkhUMkpxWldOMExsUlpVRVZmU1U1VVhHNGdJQ0FnSUNBZ0lHTmhjMlVnWENKeFhDSTZYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnUjA5aWFtVmpkQzVVV1ZCRlgxVkpUbFJjYmlBZ0lDQWdJQ0FnWTJGelpTQmNJbWxjSWpwY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQkhUMkpxWldOMExsUlpVRVZmU1U1VVhHNGdJQ0FnSUNBZ0lHTmhjMlVnWENKMVhDSTZYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnUjA5aWFtVmpkQzVVV1ZCRlgxVkpUbFJjYmlBZ0lDQWdJQ0FnWTJGelpTQmNJbmhjSWpwY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQkhUMkpxWldOMExsUlpVRVZmU1U1VU5qUmNiaUFnSUNBZ0lDQWdZMkZ6WlNCY0luUmNJanBjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCSFQySnFaV04wTGxSWlVFVmZWVWxPVkRZMFhHNGdJQ0FnSUNBZ0lHTmhjMlVnWENKb1hDSTZYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnUjA5aWFtVmpkQzVVV1ZCRlgwbE9WRnh1SUNBZ0lDQWdJQ0JqWVhObElGd2laRndpT2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFZFBZbXBsWTNRdVZGbFFSVjlFVDFWQ1RFVmNiaUFnSUNBZ0lDQWdZMkZ6WlNCY0luTmNJanBjYmlBZ0lDQWdJQ0FnWTJGelpTQmNJbWRjSWpwY2JpQWdJQ0FnSUNBZ1kyRnpaU0JjSW05Y0lqcGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJIVDJKcVpXTjBMbFJaVUVWZlUxUlNTVTVIWEc0Z0lDQWdJQ0FnSUdSbFptRjFiSFE2WEc0Z0lDQWdJQ0FnSUNBZ0lDQmljbVZoYTF4dUlDQWdJSDFjYmx4dUlDQWdJSFJvY205M0lFVnljbTl5S0dCallXNXViM1FnYVc1bVpYSWdSMVI1Y0dVZ1puSnZiU0IyWVhKcFlXNTBJRndpSkh0MGVYQmxmVndpWUNsY2JuMWNibHh1THlvcVhHNGdLaUJTWldkcGMzUmxjbk1nWVNCdFpYUm9iMlF1WEc0Z0tpQlpiM1VnYzJodmRXeGtJSEJ5WldabGNpQjFjMmx1WnlCN1FHeHBibXNnYldWMGFHOWtRWE41Ym1OOUlIZG9aVzRnY0hKdmVIbHBibWNzSUdSMVpTQjBieUJKVHlCaWJHOWphMmx1Wnk1Y2JpQXFJRTV2ZEdVZ2RHaGhkQ0IwYUdseklHbHpJR1oxYm1OMGFXOXVZV3hzZVNCMGFHVWdjMkZ0WlNCaGN5QjdRR3hwYm1zZ2JXVjBhRzlrUVhONWJtTjlJRzl1SUdWNGNHOXlkR1ZrSUc5aWFtVmpkSE11WEc0Z0tpQmdZR0JjYmlBcUwxeHVaWGh3YjNKMElHWjFibU4wYVc5dUlHMWxkR2h2WkR4amIyNXpkQ0JKYmtGeVozTWdaWGgwWlc1a2N5QkJjbkpoZVR4RVFuVnpWSGx3WlQ0c0lHTnZibk4wSUU5MWRFRnlaM01nWlhoMFpXNWtjeUJCY25KaGVUeEVRblZ6Vkhsd1pUNCtLRnh1SUNBZ0lHbHVRWEpuY3pvZ1NXNUJjbWR6TEZ4dUlDQWdJRzkxZEVGeVozTTZJRTkxZEVGeVozTXNYRzRwT2lBb1hHNGdJQ0FnYldWMGFHOWtPaUFvZEdocGN6b2dVMlZ5ZG1salpTd2dMaTR1WVhKbmN6b2dZVzU1VzEwcElEMCtJRWx1Wm1WeVZtRnlhV0Z1ZEZSNWNHVnpQRTkxZEVGeVozTStMRnh1SUNBZ0lHTjBlRG9nUTJ4aGMzTk5aWFJvYjJSRVpXTnZjbUYwYjNKRGIyNTBaWGgwUEZObGNuWnBZMlVzSUhSNWNHVnZaaUJ0WlhSb2IyUStMRnh1S1NBOVBpQW9kR2hwY3pvZ1UyVnlkbWxqWlN3Z0xpNHVZWEpuY3pvZ1NXNW1aWEpXWVhKcFlXNTBWSGx3WlhNOFNXNUJjbWR6UGlrZ1BUNGdZVzU1WEc1Y2JpOHFLbHh1SUNvZ1VtVm5hWE4wWlhKeklHRWdiV1YwYUc5a0xseHVJQ29nV1c5MUlITm9iM1ZzWkNCd2NtVm1aWElnZFhOcGJtY2dlMEJzYVc1cklHMWxkR2h2WkVGemVXNWpmU0IzYUdWdUlIQnliM2g1YVc1bkxDQmtkV1VnZEc4Z1NVOGdZbXh2WTJ0cGJtY3VYRzRnS2lCT2IzUmxJSFJvWVhRZ2RHaHBjeUJwY3lCbWRXNWpkR2x2Ym1Gc2JIa2dkR2hsSUhOaGJXVWdZWE1nZTBCc2FXNXJJRzFsZEdodlpFRnplVzVqZlNCdmJpQmxlSEJ2Y25SbFpDQnZZbXBsWTNSekxseHVJQ29nWUdCZ1hHNGdLaTljYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJ0WlhSb2IyUThZMjl1YzNRZ1NXNUJjbWR6SUdWNGRHVnVaSE1nUVhKeVlYazhSRUoxYzFSNWNHVStQaWhjYmlBZ0lDQXVMaTVwYmtGeVozTTZJRWx1UVhKbmMxeHVLVG9nS0Z4dUlDQWdJRzFsZEdodlpEb2dLSFJvYVhNNklGTmxjblpwWTJVc0lDNHVMbUZ5WjNNNklHRnVlVnRkS1NBOVBpQjJiMmxrTEZ4dUlDQWdJR04wZURvZ1EyeGhjM05OWlhSb2IyUkVaV052Y21GMGIzSkRiMjUwWlhoMFBGTmxjblpwWTJVc0lIUjVjR1Z2WmlCdFpYUm9iMlErTEZ4dUtTQTlQaUFvZEdocGN6b2dVMlZ5ZG1salpTd2dMaTR1WVhKbmN6b2dTVzVtWlhKV1lYSnBZVzUwVkhsd1pYTThTVzVCY21kelBpa2dQVDRnZG05cFpGeHVYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdiV1YwYUc5a1BHTnZibk4wSUVsdVFYSm5jeUJsZUhSbGJtUnpJRUZ5Y21GNVBFUkNkWE5VZVhCbFBpd2dZMjl1YzNRZ1QzVjBRWEpuY3lCbGVIUmxibVJ6SUVGeWNtRjVQRVJDZFhOVWVYQmxQajRvWEc0Z0lDQWdMaTR1WVhKbmN6b2dTVzVCY21keklId2dXMmx1UVhKbmN6b2dTVzVCY21kekxDQnZkWFJCY21kelB6b2dUM1YwUVhKbmMxMWNiaWtnZTF4dUlDQWdJSEpsZEhWeWJpQm1kVzVqZEdsdmJpQW9YRzRnSUNBZ0lDQWdJRzFsZEdodlpEb2dLRnh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjem9nVTJWeWRtbGpaU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDNHVMbUZ5WjNNNklFbHVabVZ5Vm1GeWFXRnVkRlI1Y0dWelBFbHVRWEpuY3o1Y2JpQWdJQ0FnSUNBZ0tTQTlQaUJKYm1abGNsWmhjbWxoYm5SVWVYQmxjenhQZFhSQmNtZHpQaUI4SUhadmFXUXNYRzRnSUNBZ0lDQWdJR04wZURvZ1EyeGhjM05OWlhSb2IyUkVaV052Y21GMGIzSkRiMjUwWlhoMFBGTmxjblpwWTJVc0lIUjVjR1Z2WmlCdFpYUm9iMlErTEZ4dUlDQWdJQ2s2SUNoMGFHbHpPaUJUWlhKMmFXTmxMQ0F1TGk1aGNtZHpPaUJKYm1abGNsWmhjbWxoYm5SVWVYQmxjenhKYmtGeVozTStLU0E5UGlCaGJua2dlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQnVZVzFsSUQwZ2FXNXpkR0ZzYkUxbGRHaHZaQ2hoY21kekxDQnRaWFJvYjJRc0lHTjBlQ2xjYmx4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWm5WdVkzUnBiMjRnS0M0dUxtRnlaM01wSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMGFHbHpXMmx1ZEdWeWJtRnNjMTB1Y0hKdmVIa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQjJZV3gxWlNBOUlIUm9hWE5iY21WdGIzUmxUV1YwYUc5a1hTaHVZVzFsTENCaGNtZHpLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjJZV3gxWlM1a1pXVndWVzV3WVdOclBFbHVabVZ5Vm1GeWFXRnVkRlI1Y0dWelBFOTFkRUZ5WjNNK1BpZ3BYRzRnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ0WlhSb2IyUXVZWEJ3Ykhrb2RHaHBjeXdnWVhKbmN5bGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JuMWNibHh1THlvcVhHNGdLaUJTWldkcGMzUmxjbk1nWVNCdFpYUm9iMlF1WEc0Z0tpQlpiM1VnYzJodmRXeGtJSEJ5WldabGNpQjFjMmx1WnlCMGFHbHpJRzkyWlhJZ2UwQnNhVzVySUcxbGRHaHZaSDBnZDJobGJpQndjbTk0ZVdsdVp5d2djMmx1WTJVZ2RHaHBjeUJrYjJWeklHNXZkQ0JpYkc5amF5QkpUeTVjYmlBcUlFNXZkR1VnZEdoaGRDQjBhR2x6SUdseklHWjFibU4wYVc5dVlXeHNlU0IwYUdVZ2MyRnRaU0JoY3lCN1FHeHBibXNnYldWMGFHOWtmU0J2YmlCbGVIQnZjblJsWkNCdlltcGxZM1J6TGx4dUlDb2dZR0JnWEc0Z0tpOWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQnRaWFJvYjJSQmMzbHVZenhjYmlBZ0lDQmpiMjV6ZENCSmJrRnlaM01nWlhoMFpXNWtjeUJCY25KaGVUeEVRblZ6Vkhsd1pUNHNYRzRnSUNBZ1kyOXVjM1FnVDNWMFFYSm5jeUJsZUhSbGJtUnpJRUZ5Y21GNVBFUkNkWE5VZVhCbFBpeGNiajRvWEc0Z0lDQWdhVzVCY21kek9pQkpia0Z5WjNNc1hHNGdJQ0FnYjNWMFFYSm5jem9nVDNWMFFYSm5jeXhjYmlrNklDaGNiaUFnSUNCdFpYUm9iMlE2SUNoMGFHbHpPaUJUWlhKMmFXTmxMQ0F1TGk1aGNtZHpPaUJoYm5sYlhTa2dQVDRnVUhKdmJXbHpaVHhKYm1abGNsWmhjbWxoYm5SVWVYQmxjenhQZFhSQmNtZHpQajRzWEc0Z0lDQWdZM1I0T2lCRGJHRnpjMDFsZEdodlpFUmxZMjl5WVhSdmNrTnZiblJsZUhROFUyVnlkbWxqWlN3Z2RIbHdaVzltSUcxbGRHaHZaRDRzWEc0cElEMCtJQ2gwYUdsek9pQlRaWEoyYVdObExDQXVMaTVoY21kek9pQkpibVpsY2xaaGNtbGhiblJVZVhCbGN6eEpia0Z5WjNNK0tTQTlQaUJRY205dGFYTmxQR0Z1ZVQ1Y2JseHVMeW9xWEc0Z0tpQlNaV2RwYzNSbGNuTWdZU0J0WlhSb2IyUXVYRzRnS2lCWmIzVWdjMmh2ZFd4a0lIQnlaV1psY2lCMWMybHVaeUIwYUdseklHOTJaWElnZTBCc2FXNXJJRzFsZEdodlpIMGdkMmhsYmlCd2NtOTRlV2x1Wnl3Z2MybHVZMlVnZEdocGN5QmtiMlZ6SUc1dmRDQmliRzlqYXlCSlR5NWNiaUFxSUU1dmRHVWdkR2hoZENCMGFHbHpJR2x6SUdaMWJtTjBhVzl1WVd4c2VTQjBhR1VnYzJGdFpTQmhjeUI3UUd4cGJtc2diV1YwYUc5a2ZTQnZiaUJsZUhCdmNuUmxaQ0J2WW1wbFkzUnpMbHh1SUNvZ1lHQmdYRzRnS2k5Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCdFpYUm9iMlJCYzNsdVl6eGpiMjV6ZENCSmJrRnlaM01nWlhoMFpXNWtjeUJCY25KaGVUeEVRblZ6Vkhsd1pUNCtLRnh1SUNBZ0lDNHVMbWx1UVhKbmN6b2dTVzVCY21kelhHNHBPaUFvWEc0Z0lDQWdiV1YwYUc5a09pQW9kR2hwY3pvZ1UyVnlkbWxqWlN3Z0xpNHVZWEpuY3pvZ1lXNTVXMTBwSUQwK0lGQnliMjFwYzJVOGRtOXBaRDRzWEc0Z0lDQWdZM1I0T2lCRGJHRnpjMDFsZEdodlpFUmxZMjl5WVhSdmNrTnZiblJsZUhROFUyVnlkbWxqWlN3Z2RIbHdaVzltSUcxbGRHaHZaRDRzWEc0cElEMCtJQ2gwYUdsek9pQlRaWEoyYVdObExDQXVMaTVoY21kek9pQkpibVpsY2xaaGNtbGhiblJVZVhCbGN6eEpia0Z5WjNNK0tTQTlQaUJRY205dGFYTmxQSFp2YVdRK1hHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQnRaWFJvYjJSQmMzbHVZenhjYmlBZ0lDQmpiMjV6ZENCSmJrRnlaM01nWlhoMFpXNWtjeUJCY25KaGVUeEVRblZ6Vkhsd1pUNHNYRzRnSUNBZ1kyOXVjM1FnVDNWMFFYSm5jeUJsZUhSbGJtUnpJRUZ5Y21GNVBFUkNkWE5VZVhCbFBpeGNiajRvTGk0dVlYSm5jem9nU1c1QmNtZHpJSHdnVzJsdVFYSm5jem9nU1c1QmNtZHpMQ0J2ZFhSQmNtZHpQem9nVDNWMFFYSm5jMTBwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdablZ1WTNScGIyNGdLRnh1SUNBZ0lDQWdJQ0J0WlhSb2IyUTZJQ2hjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE02SUZObGNuWnBZMlVzWEc0Z0lDQWdJQ0FnSUNBZ0lDQXVMaTVoY21kek9pQkpibVpsY2xaaGNtbGhiblJVZVhCbGN6eEpia0Z5WjNNK1hHNGdJQ0FnSUNBZ0lDa2dQVDRnVUhKdmJXbHpaVHhKYm1abGNsWmhjbWxoYm5SVWVYQmxjenhQZFhSQmNtZHpQaUI4SUhadmFXUStMRnh1SUNBZ0lDQWdJQ0JqZEhnNklFTnNZWE56VFdWMGFHOWtSR1ZqYjNKaGRHOXlRMjl1ZEdWNGREeFRaWEoyYVdObExDQjBlWEJsYjJZZ2JXVjBhRzlrUGl4Y2JpQWdJQ0FwT2lBb2RHaHBjem9nVTJWeWRtbGpaU3dnTGk0dVlYSm5jem9nU1c1bVpYSldZWEpwWVc1MFZIbHdaWE04U1c1QmNtZHpQaWtnUFQ0Z1VISnZiV2x6WlR4aGJuaytJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdibUZ0WlNBOUlHbHVjM1JoYkd4TlpYUm9iMlFvWVhKbmN5d2diV1YwYUc5a0xDQmpkSGdwWEc1Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdGemVXNWpJR1oxYm1OMGFXOXVJQ2d1TGk1aGNtZHpLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZEdocGMxdHBiblJsY201aGJITmRMbkJ5YjNoNUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2RtRnNkV1VnUFNCaGQyRnBkQ0IwYUdselczSmxiVzkwWlUxbGRHaHZaRUZ6ZVc1alhTaHVZVzFsTENCaGNtZHpLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjJZV3gxWlM1a1pXVndWVzV3WVdOclBFbHVabVZ5Vm1GeWFXRnVkRlI1Y0dWelBFOTFkRUZ5WjNNK1BpZ3BYRzRnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ0WlhSb2IyUXVZWEJ3Ykhrb2RHaHBjeXdnWVhKbmN5bGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JuMWNibHh1THlvcVhHNGdLaUJTWldkcGMzUmxjbk1nWVNCeVpXRmtMWGR5YVhSbElIQnliM0JsY25SNUxpQlhhR1Z1SUdFZ2JtVjNJSFpoYkhWbElHbHpJR0Z6YzJsbmJtVmtJSFJvWlNCdWIzUnBabmtnYzJsbmJtRnNYRzRnS2lCcGN5QmhkWFJ2YldGMGFXTmhiR3g1SUdWdGFYUjBaV1FnYjI0Z2RHaGxJR3h2WTJGc0lHRnVaQ0JsZUhCdmNuUmxaQ0J2WW1wbFkzUXVYRzRnS2x4dUlDb2dUbTkwWlNCMGFHRjBJRzVsZHlCMllXeDFaWE1nWVhKbElHTm9aV05yWldRZ1lua2djbVZtWlhKbGJtTmxJSE52SUdGemMybG5ibWx1WnlCMGFHVWdjMkZ0WlNCdlltcGxZM1FnZDJsc2JGeHVJQ29nYm05MElHVnRhWFFnZEdobElHNXZkR2xtZVNCemFXZHVZV3d1WEc0Z0tpQmdZR0JjYmlBcUwxeHVaWGh3YjNKMElHWjFibU4wYVc5dUlIQnliM0JsY25SNVBGUWdaWGgwWlc1a2N5QnpkSEpwYm1jK0tIUjVjR1U2SUZRcElIdGNiaUFnSUNCeVpYUjFjbTRnWm5WdVkzUnBiMjRnS0Z4dUlDQWdJQ0FnSUNCZk9pQjJiMmxrTEZ4dUlDQWdJQ0FnSUNCamRIZzZJRU5zWVhOelJtbGxiR1JFWldOdmNtRjBiM0pEYjI1MFpYaDBQRk5sY25acFkyVXNJRVJsWlhCSmJtWmxjanhVUGo0c1hHNGdJQ0FnS1RvZ0tIUm9hWE02SUZObGNuWnBZMlVzSUdsdWFYUTZJRVJsWlhCSmJtWmxjanhVUGlrZ1BUNGdZVzU1SUh0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYm1GdFpTQTlJR2x1YzNSaGJHeFFjbTl3WlhKMGVTaDBlWEJsTENCamRIZ3BYRzVjYmlBZ0lDQWdJQ0FnZG05cFpDQm5jSEp2Y0dWeWRIa29leUFrWjNSNWNHVTZJR2x1Wm1WeVIxUjVjR1ZHY205dFZtRnlhV0Z1ZENoMGVYQmxLU0I5S1NoY2JpQWdJQ0FnSUNBZ0lDQWdJRjhzWEc0Z0lDQWdJQ0FnSUNBZ0lDQmpkSGdnWVhNZ1EyeGhjM05HYVdWc1pFUmxZMjl5WVhSdmNrTnZiblJsZUhROFIwOWlhbVZqZEM1UFltcGxZM1ErSUNZZ1EzUjRMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2V5QnRaWFJoVDI1c2VUb2dkSEoxWlNCOUxGeHVJQ0FnSUNBZ0lDQXBYRzVjYmlBZ0lDQWdJQ0FnWTNSNExtRmtaRWx1YVhScFlXeHBlbVZ5S0daMWJtTjBhVzl1SUNncElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUU5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGVTaDBhR2x6TENCdVlXMWxMQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dVptbG5kWEpoWW14bE9pQm1ZV3h6WlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJuVnRaWEpoWW14bE9pQjBjblZsTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhObGRDaDJZV3gxWlRvZ1JHVmxjRWx1Wm1WeVBGUStLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUhzZ2NISnZlSGtzSUhCeWFYWWdmU0E5SUhSb2FYTmJhVzUwWlhKdVlXeHpYVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h3Y205NGVTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwYzF0eVpXMXZkR1ZRY205d1pYSjBlVk5sZEYwb2JtRnRaU3dnZG1Gc2RXVXBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY201Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h3Y21sMlcyNWhiV1ZkSUNFOVBTQjJZV3gxWlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NISnBkbHR1WVcxbFhTQTlJSFpoYkhWbFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbTV2ZEdsbWVTaHVZVzFsSUdGeklFVjRkSEpoWTNROGEyVjViMllnVTJWeWRtbGpaU3dnYzNSeWFXNW5QaWxjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaMlYwS0NrNklFUmxaWEJKYm1abGNqeFVQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUhzZ2NISnZlSGtzSUhCeWFYWWdmU0E5SUhSb2FYTmJhVzUwWlhKdVlXeHpYVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCd2NtOTRlVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQeUJ3Y205NGVTNW5aWFJmWTJGamFHVmtYM0J5YjNCbGNuUjVLRzVoYldVcElTNWtaV1Z3Vlc1d1lXTnJQRVJsWlhCSmJtWmxjanhVUGo0b0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ09pQW9jSEpwZGx0dVlXMWxYU0JoY3lCRVpXVndTVzVtWlhJOFZENHBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIMGdjMkYwYVhObWFXVnpJRlJvYVhOVWVYQmxQRk5sY25acFkyVStLVnh1SUNBZ0lDQWdJQ0I5S1Z4dVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCbWRXNWpkR2x2YmlBb2FXNXBkQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2NISnBkaUE5SUhSb2FYTmJhVzUwWlhKdVlXeHpYUzV3Y21sMlhHNGdJQ0FnSUNBZ0lDQWdJQ0J3Y21sMlcyNWhiV1ZkSUQwZ2FXNXBkRnh1SUNBZ0lDQWdJQ0FnSUNBZ0x5OGdkMlVnWkc5dUozUWdibVZsWkNCMGJ5QnpkRzl5WlNCMGFHVWdkbUZzZFdVZ2IyNGdkR2hsSUc5aWFtVmpkQ0JwZEhObGJHWmNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibjFjYmx4dUx5b3FYRzRnS2lCU1pXZHBjM1JsY25NZ1lTQnlaV0ZrTFc5dWJIa2djSEp2Y0dWeWRIa3VJRU5oYmlCaVpTQjFjMlZrSUdsdUlHTnZibXAxWTNScGIyNGdkMmwwYUNCN1FHeHBibXNnYzJWMGRHVnlmU0IwYnlCa1pXWnBibVZjYmlBcUlISmxZV1F0ZDNKcGRHVWdjSEp2Y0dWeWRHbGxjeUJoY3lCaFkyTmxjM052Y25NdVhHNGdLbHh1SUNvZ1RtOTBaU0IwYUdGMElIbHZkU0IzYVd4c0lHNWxaV1FnZEc4Z1pYaHdiR2xqYVhSc2VTQmxiV2wwSUhSb1pTQnViM1JwWm5rZ2MybG5ibUZzTGx4dUlDb3ZYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdaMlYwZEdWeVBGUWdaWGgwWlc1a2N5QnpkSEpwYm1jK0tIUjVjR1U2SUZRcElIdGNiaUFnSUNCeVpYUjFjbTRnWm5WdVkzUnBiMjRnS0Z4dUlDQWdJQ0FnSUNCdFpYUm9iMlE2SUNoMGFHbHpPaUJUWlhKMmFXTmxLU0E5UGlCRVpXVndTVzVtWlhJOFZENHNYRzRnSUNBZ0lDQWdJR04wZURvZ1EyeGhjM05IWlhSMFpYSkVaV052Y21GMGIzSkRiMjUwWlhoMFBGTmxjblpwWTJVc0lFUmxaWEJKYm1abGNqeFVQajRzWEc0Z0lDQWdLVG9nS0hSb2FYTTZJRk5sY25acFkyVXBJRDArSUdGdWVTQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElHNWhiV1VnUFNCcGJuTjBZV3hzVUhKdmNHVnlkSGtvZEhsd1pTd2dZM1I0S1Z4dVhHNGdJQ0FnSUNBZ0lHTjBlQzVoWkdSSmJtbDBhV0ZzYVhwbGNpaG1kVzVqZEdsdmJpQW9LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmtaV1pwYm1WUWNtOXdaWEowZVVkbGRIUmxjaWgwYUdsekxDQnVZVzFsSUdGeklFVjRkSEpoWTNROGEyVjViMllnVTJWeWRtbGpaU3dnYzNSeWFXNW5QaWxjYmlBZ0lDQWdJQ0FnZlNsY2JseHVJQ0FnSUNBZ0lDQjJiMmxrSUdkblpYUjBaWElvZXlBa1ozUjVjR1U2SUdsdVptVnlSMVI1Y0dWR2NtOXRWbUZ5YVdGdWRDaDBlWEJsS1NCOUtTaGNiaUFnSUNBZ0lDQWdJQ0FnSUNncElEMCtJSHQ5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdZM1I0SUdGeklFTnNZWE56UjJWMGRHVnlSR1ZqYjNKaGRHOXlRMjl1ZEdWNGREeEhUMkpxWldOMExrOWlhbVZqZEQ0Z0ppQkRkSGdzWEc0Z0lDQWdJQ0FnSUNsY2JseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1puVnVZM1JwYjI0Z1oyVjBLQ2s2SUVSbFpYQkpibVpsY2p4VVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0I3SUhCeWIzaDVJSDBnUFNCMGFHbHpXMmx1ZEdWeWJtRnNjMTFjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCd2NtOTRlVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRDhnY0hKdmVIa3VaMlYwWDJOaFkyaGxaRjl3Y205d1pYSjBlU2h1WVcxbEtTRXVaR1ZsY0ZWdWNHRmphenhFWldWd1NXNW1aWEk4VkQ0K0tDbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQTZJRzFsZEdodlpDNWpZV3hzS0hSb2FYTXBYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzU5WEc1Y2JpOHFLbHh1SUNvZ1VtVm5hWE4wWlhKeklHRWdkM0pwZEdVdGIyNXNlU0J3Y205d1pYSjBlUzRnUTJGdUlHSmxJSFZ6WldRZ2FXNGdZMjl1YW5WamRHbHZiaUIzYVhSb0lIdEFiR2x1YXlCblpYUjBaWEo5SUhSdklHUmxabWx1WlZ4dUlDb2djbVZoWkMxM2NtbDBaU0J3Y205d1pYSjBhV1Z6SUdGeklHRmpZMlZ6YzI5eWN5NWNiaUFxWEc0Z0tpQk9iM1JsSUhSb1lYUWdlVzkxSUhkcGJHd2dibVZsWkNCMGJ5QmxlSEJzYVdOcGRHeDVJR1Z0YVhRZ2RHaGxJRzV2ZEdsbWVTQnphV2R1WVd3dVhHNGdLaTljYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJ6WlhSMFpYSThWQ0JsZUhSbGJtUnpJSE4wY21sdVp6NG9kSGx3WlRvZ1ZDa2dlMXh1SUNBZ0lISmxkSFZ5YmlCbWRXNWpkR2x2YmlBb1hHNGdJQ0FnSUNBZ0lITmxkSFJsY2pvZ0tIUm9hWE02SUZObGNuWnBZMlVzSUhaaGJIVmxPaUJoYm5rcElEMCtJSFp2YVdRc1hHNGdJQ0FnSUNBZ0lHTjBlRG9nUTJ4aGMzTlRaWFIwWlhKRVpXTnZjbUYwYjNKRGIyNTBaWGgwUEZObGNuWnBZMlVzSUVSbFpYQkpibVpsY2p4VVBqNHNYRzRnSUNBZ0tUb2dLSFJvYVhNNklGTmxjblpwWTJVc0lIWmhiSFZsT2lCRVpXVndTVzVtWlhJOFZENHBJRDArSUhadmFXUWdlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQnVZVzFsSUQwZ2FXNXpkR0ZzYkZCeWIzQmxjblI1S0hSNWNHVXNJR04wZUNsY2JseHVJQ0FnSUNBZ0lDQjJiMmxrSUdkelpYUjBaWElvZXlBa1ozUjVjR1U2SUdsdVptVnlSMVI1Y0dWR2NtOXRWbUZ5YVdGdWRDaDBlWEJsS1NCOUtTaGNiaUFnSUNBZ0lDQWdJQ0FnSUNncElEMCtJSHQ5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdZM1I0SUdGeklFTnNZWE56VTJWMGRHVnlSR1ZqYjNKaGRHOXlRMjl1ZEdWNGREeEhUMkpxWldOMExrOWlhbVZqZEQ0Z0ppQkRkSGdzWEc0Z0lDQWdJQ0FnSUNsY2JseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1puVnVZM1JwYjI0Z0tIWmhiSFZsT2lCRVpXVndTVzVtWlhJOFZENHBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUhzZ2NISnZlSGtnZlNBOUlIUm9hWE5iYVc1MFpYSnVZV3h6WFZ4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NISnZlSGtwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpXM0psYlc5MFpWQnliM0JsY25SNVUyVjBYU2h1WVcxbExDQjJZV3gxWlNsY2JpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMlYwZEdWeUxtTmhiR3dvZEdocGN5d2dkbUZzZFdVcFhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1OVhHNWNiaThxS2x4dUlDb2dVbVZuYVhOMFpYSnpJR0VnYzJsbmJtRnNJSGRvYVdOb0lIZG9aVzRnYVc1MmIydGxaQ0IzYVd4c0lHVnRhWFFnZEdobElITnBaMjVoYkZ4dUlDb2diMjRnZEdobElHeHZZMkZzSUc5aWFtVmpkQ0JoYm1RZ2RHaGxJR1Y0Y0c5eWRHVmtJRzlpYW1WamRDNWNiaUFxWEc0Z0tpQXFLazV2ZEdVcUtqb2dhWFJ6SUc1dmRDQndiM056YVdKc1pTQjBieUJsYldsMElITnBaMjVoYkhNZ2IyNGdjbVZ0YjNSbElHOWlhbVZqZEhNZ2RHaHliM1ZuYUNCd2NtOTRhV1Z6TGx4dUlDb3ZYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdjMmxuYm1Gc1BHTnZibk4wSUZCaGNtRnRjeUJsZUhSbGJtUnpJRUZ5Y21GNVBFUkNkWE5VZVhCbFBqNG9MaTR1Y0dGeVlXMXpPaUJRWVhKaGJYTXBJSHRjYmlBZ0lDQnlaWFIxY200Z1puVnVZM1JwYjI0Z0tGeHVJQ0FnSUNBZ0lDQnRaWFJvYjJRNklDaDBhR2x6T2lCVFpYSjJhV05sTENBdUxpNXdZWEpoYlhNNklHRnVlU2tnUFQ0Z2RtOXBaQ3hjYmlBZ0lDQWdJQ0FnWTNSNE9pQkRiR0Z6YzAxbGRHaHZaRVJsWTI5eVlYUnZja052Ym5SbGVIUThVMlZ5ZG1salpTd2dkSGx3Wlc5bUlHMWxkR2h2WkQ0c1hHNGdJQ0FnS1RvZ0tIUm9hWE02SUZObGNuWnBZMlVzSUM0dUxuQmhjbUZ0Y3pvZ1NXNW1aWEpXWVhKcFlXNTBWSGx3WlhNOFVHRnlZVzF6UGlrZ1BUNGdkbTlwWkNCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUc1aGJXVWdQU0JwYm5OMFlXeHNVMmxuYm1Gc0tIQmhjbUZ0Y3l3Z1kzUjRLVnh1WEc0Z0lDQWdJQ0FnSUhadmFXUWdaM05wWjI1aGJDZ3VMaTV3WVhKaGJYTXViV0Z3S0dsdVptVnlSMVI1Y0dWR2NtOXRWbUZ5YVdGdWRDa3BLRnh1SUNBZ0lDQWdJQ0FnSUNBZ0tDa2dQVDRnZTMwc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqZEhnZ1lYTWdRMnhoYzNOTlpYUm9iMlJFWldOdmNtRjBiM0pEYjI1MFpYaDBQRWRQWW1wbFkzUXVUMkpxWldOMFBpQW1JRU4wZUN4Y2JpQWdJQ0FnSUNBZ0tWeHVYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQm1kVzVqZEdsdmJpQW9MaTR1Y0dGeVlXMXpLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZEdocGMxdHBiblJsY201aGJITmRMbkJ5YjNoNUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0dCallXNXViM1FnWlcxcGRDQnphV2R1WVd3Z1hDSWtlMjVoYldWOVhDSWdiMjRnY21WdGIzUmxJRzlpYW1WamRHQXBYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6VzJsdWRHVnlibUZzYzEwdVpHSjFjMDlpYW1WamRDQjhmQ0FoZEdocGMxdHBiblJsY201aGJITmRMbkJ5YjNoNUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV1YwYUc5a0xtRndjR3g1S0hSb2FYTXNJSEJoY21GdGN5bGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVpXMXBkQ2h1WVcxbExDQXVMaTV3WVhKaGJYTXBYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzU5WEc0aUxDQWlhVzF3YjNKMElIc2dVMlZ5ZG1salpTd2dhV1poWTJVc0lHMWxkR2h2WkVGemVXNWpJSDBnWm5KdmJTQmNJbWR1YVcwdlpHSjFjMXdpWEc1Y2JtVjRjRzl5ZENCcGJuUmxjbVpoWTJVZ1FYQndSRUoxYzBsdGNHd2dlMXh1SUNBZ0lHbHVjMlZqZEc5eUtDazZJSFp2YVdSY2JpQWdJQ0IwYjJkbmJHVlhhVzVrYjNjb2JtRnRaVG9nYzNSeWFXNW5LVG9nZG05cFpGeHVJQ0FnSUhGMWFYUW9LVG9nZG05cFpGeHVJQ0FnSUhKbGNYVmxjM1FvWVhKbmRqb2djM1J5YVc1blcxMHBPaUJRY205dGFYTmxQSE4wY21sdVp6NWNibjFjYmx4dVFHbG1ZV05sS0Z3aWFXOHVRWE4wWVd3dVFYQndiR2xqWVhScGIyNWNJaWxjYm1WNGNHOXlkQ0JqYkdGemN5QkJjSEJFUW5WeklHVjRkR1Z1WkhNZ1UyVnlkbWxqWlNCN1hHNGdJQ0FnY0hKcGRtRjBaU0JwYlhCc09pQkJjSEJFUW5WelNXMXdiRnh1WEc0Z0lDQWdRRzFsZEdodlpFRnplVzVqS0NsY2JpQWdJQ0JoYzNsdVl5Qkpibk53WldOMGIzSW9LVG9nVUhKdmJXbHpaVHgyYjJsa1BpQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQlFjbTl0YVhObExuSmxjMjlzZG1Vb2RHaHBjeTVwYlhCc0xtbHVjMlZqZEc5eUtDa3BYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1FHMWxkR2h2WkVGemVXNWpLRndpYzF3aUtWeHVJQ0FnSUdGemVXNWpJRlJ2WjJkc1pWZHBibVJ2ZHlodVlXMWxPaUJ6ZEhKcGJtY3BPaUJRY205dGFYTmxQSFp2YVdRK0lIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlGQnliMjFwYzJVdWNtVnpiMngyWlNoMGFHbHpMbWx0Y0d3dWRHOW5aMnhsVjJsdVpHOTNLRzVoYldVcEtWeHVJQ0FnSUgxY2JseHVJQ0FnSUVCdFpYUm9iMlJCYzNsdVl5Z3BYRzRnSUNBZ1lYTjVibU1nVVhWcGRDZ3BPaUJRY205dGFYTmxQSFp2YVdRK0lIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlGQnliMjFwYzJVdWNtVnpiMngyWlNoMGFHbHpMbWx0Y0d3dWNYVnBkQ2dwS1Z4dUlDQWdJSDFjYmx4dUlDQWdJRUJ0WlhSb2IyUkJjM2x1WXloYlhDSmhjMXdpWFN3Z1cxd2ljMXdpWFNsY2JpQWdJQ0JoYzNsdVl5QlNaWEYxWlhOMEtHRnlaM1k2SUhOMGNtbHVaMXRkS1RvZ1VISnZiV2x6WlR4YmMzUnlhVzVuWFQ0Z2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVwYlhCc0xuSmxjWFZsYzNRb1lYSm5kaWt1ZEdobGJpZ29jbVZ6S1NBOVBpQmJjbVZ6WFNsY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JqYjI1emRISjFZM1J2Y2locGJYQnNPaUJCY0hCRVFuVnpTVzF3YkNrZ2UxeHVJQ0FnSUNBZ0lDQnpkWEJsY2lncFhHNGdJQ0FnSUNBZ0lIUm9hWE11YVcxd2JDQTlJR2x0Y0d4Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J6ZEdGMGFXTWdjSEp2ZUhrb2FXNXpkR0Z1WTJWT1lXMWxPaUJ6ZEhKcGJtY3BJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdZWEJ3SUQwZ2JtVjNJRUZ3Y0VSQ2RYTW9lMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXNXpaV04wYjNJb0tTQjdmU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIUnZaMmRzWlZkcGJtUnZkeWdwSUh0OUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnY1hWcGRDZ3BJSHQ5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdjbVZ4ZFdWemREb2dLQ2tnUFQ0Z1VISnZiV2x6WlM1eVpXcGxZM1FvS1N4Y2JpQWdJQ0FnSUNBZ2ZTbGNibHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdZWEJ3TG5CeWIzaDVLSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUZ3aWFXOHVRWE4wWVd3dVhDSWdLeUJwYm5OMFlXNWpaVTVoYldVc1hHNGdJQ0FnSUNBZ0lIMHBYRzRnSUNBZ2ZWeHVmVnh1SWl3Z0ltbHRjRzl5ZENCSFQySnFaV04wSUdaeWIyMGdYQ0puYVRvdkwwZFBZbXBsWTNSY0lseHVhVzF3YjNKMElIc2dSbkpoWjIxbGJuUWdmU0JtY205dElGd2lMaTlHY21GbmJXVnVkQzVxYzF3aVhHNXBiWEJ2Y25RZ2V5QkJZMk5sYzNOdmNpQjlJR1p5YjIwZ1hDSXVMM04wWVhSbExtcHpYQ0pjYm1sdGNHOXlkQ0I3SUhSNWNHVWdRME1zSUhSNWNHVWdSa01zSUdWdWRpQjlJR1p5YjIwZ1hDSXVMMlZ1ZGk1cWMxd2lYRzVwYlhCdmNuUWdleUJyWldKaFltbG1lU3dnZEhsd1pTQlFZWE5qWVd4cFpua3NJSE5sZENCOUlHWnliMjBnWENJdUxpOTFkR2xzTG1welhDSmNibWx0Y0c5eWRDQjdJRzl1UTJ4bFlXNTFjQ0I5SUdaeWIyMGdYQ0l1TDNOamIzQmxMbXB6WENKY2JseHVMeW9xWEc0Z0tpQlNaWEJ5WlhObGJuUnpJR0ZzYkNCdlppQjBhR1VnZEdocGJtZHpJSFJvWVhRZ1kyRnVJR0psSUhCaGMzTmxaQ0JoY3lCaElHTm9hV3hrSUhSdklHTnNZWE56SUdOdmJYQnZibVZ1ZEhNdVhHNGdLaTljYm1WNGNHOXlkQ0IwZVhCbElFNXZaR1VnUFZ4dUlDQWdJSHdnUVhKeVlYazhSMDlpYW1WamRDNVBZbXBsWTNRK1hHNGdJQ0FnZkNCSFQySnFaV04wTGs5aWFtVmpkRnh1SUNBZ0lId2diblZ0WW1WeVhHNGdJQ0FnZkNCemRISnBibWRjYmlBZ0lDQjhJR0p2YjJ4bFlXNWNiaUFnSUNCOElHNTFiR3hjYmlBZ0lDQjhJSFZ1WkdWbWFXNWxaRnh1WEc1bGVIQnZjblFnWTI5dWMzUWdaM1JyVkhsd1pTQTlJRk41YldKdmJDaGNJbWQwYXlCaWRXbHNaR1Z5SUhSNWNHVmNJaWxjYmx4dUx5b3FYRzRnS2lCVGNHVmphV0ZzSUhONWJXSnZiQ0IzYUdsamFDQnNaWFJ6SUhsdmRTQnBiWEJzWlcxbGJuUWdhRzkzSUhkcFpHZGxkSE1nWVhKbElHRndjR1Z1WkdWa0lHbHVJRXBUV0M1Y2JpQXFYRzRnS2lCRmVHRnRjR3hsT2x4dUlDcGNiaUFxSUdCZ1lIUnpYRzRnS2lCamJHRnpjeUJOZVVOdmJYQnZibVZ1ZENCbGVIUmxibVJ6SUVkUFltcGxZM1F1VDJKcVpXTjBJSHRjYmlBcUlDQWdXMkZ3Y0dWdVpFTm9hV3hrWFNoamFHbHNaRG9nUjA5aWFtVmpkQzVQWW1wbFkzUXNJSFI1Y0dVNklITjBjbWx1WnlCOElHNTFiR3dwSUh0Y2JpQXFJQ0FnSUNBdkx5QnBiWEJzWlcxbGJuUmNiaUFxSUNBZ2ZWeHVJQ29nZlZ4dUlDb2dZR0JnWEc0Z0tpOWNibVY0Y0c5eWRDQmpiMjV6ZENCaGNIQmxibVJEYUdsc1pDQTlJRk41YldKdmJDaGNJa3BUV0NCaFpHUWdZMmhwYkdRZ2JXVjBhRzlrWENJcFhHNWNiaThxS2x4dUlDb2dVM0JsWTJsaGJDQnplVzFpYjJ3Z2QyaHBZMmdnYkdWMGN5QjViM1VnYVcxd2JHVnRaVzUwSUdodmR5QjNhV1JuWlhSeklHRnlaU0J5WlcxdmRtVmtJR2x1SUVwVFdDNWNiaUFxWEc0Z0tpQkZlR0Z0Y0d4bE9seHVJQ3BjYmlBcUlHQmdZSFJ6WEc0Z0tpQmpiR0Z6Y3lCTmVVTnZiWEJ2Ym1WdWRDQmxlSFJsYm1SeklFZFBZbXBsWTNRdVQySnFaV04wSUh0Y2JpQXFJQ0FnVzNKbGJXOTJaVU5vYVd4a1hTaGphR2xzWkRvZ1IwOWlhbVZqZEM1UFltcGxZM1FwSUh0Y2JpQXFJQ0FnSUNBdkx5QnBiWEJzWlcxbGJuUmNiaUFxSUNBZ2ZWeHVJQ29nZlZ4dUlDb2dZR0JnWEc0Z0tpOWNibVY0Y0c5eWRDQmpiMjV6ZENCeVpXMXZkbVZEYUdsc1pDQTlJRk41YldKdmJDaGNJa3BUV0NCaFpHUWdjbVZ0YjNabElHMWxkR2h2WkZ3aUtWeHVYRzR2S2lwY2JpQXFJRWRsZENCMGFHVWdkSGx3WlNCdlppQjBhR1VnYjJKcVpXTjBJSE53WldOcFptbGxaQ0IwYUhKdmRXZG9JSFJvWlNCZ0pIUjVjR1ZnSUhCeWIzQmxjblI1WEc0Z0tpOWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQm5aWFJVZVhCbEtHOWlhbVZqZERvZ1IwOWlhbVZqZEM1UFltcGxZM1FwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdaM1JyVkhsd1pTQnBiaUJ2WW1wbFkzUWdQeUFvYjJKcVpXTjBXMmQwYTFSNWNHVmRJR0Z6SUhOMGNtbHVaeWtnT2lCdWRXeHNYRzU5WEc1Y2JpOHFLbHh1SUNvZ1JuVnVZM1JwYjI0Z1EyOXRjRzl1Wlc1MElGQnliM0JsY25ScFpYTmNiaUFxTDF4dVpYaHdiM0owSUhSNWNHVWdSa05RY205d2N6eFRaV3htTENCUWNtOXdjejRnUFNCUWNtOXdjeUFtSUh0Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCSGRHc3VRblZwYkdSbGNpQjBlWEJsWEc0Z0lDQWdJQ29nYVhSeklHTnZibk4xYldWa0lHbHVkR1Z5Ym1Gc2JIa2dZVzVrSUc1dmRDQmhZM1IxWVd4c2VTQndZWE56WldRZ1lYTWdZU0J3WVhKaGJXVjBaWEp6WEc0Z0lDQWdJQ292WEc0Z0lDQWdKSFI1Y0dVL09pQnpkSEpwYm1kY2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCelpYUjFjQ0JtZFc1amRHbHZibHh1SUNBZ0lDQXFJR2wwY3lCamIyNXpkVzFsWkNCcGJuUmxjbTVoYkd4NUlHRnVaQ0J1YjNRZ1lXTjBkV0ZzYkhrZ2NHRnpjMlZrSUdGeklHRWdjR0Z5WVcxbGRHVnljMXh1SUNBZ0lDQXFMMXh1SUNBZ0lDUS9LSE5sYkdZNklGTmxiR1lwT2lCMmIybGtYRzU5WEc1Y2JpOHFLbHh1SUNvZ1EyeGhjM01nUTI5dGNHOXVaVzUwSUZCeWIzQmxjblJwWlhOY2JpQXFMMXh1Wlhod2IzSjBJSFI1Y0dVZ1EwTlFjbTl3Y3p4VFpXeG1JR1Y0ZEdWdVpITWdSMDlpYW1WamRDNVBZbXBsWTNRc0lGQnliM0J6UGlBOUlIdGNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQkFhVzUwWlhKdVlXd2dZMmhwYkdSeVpXNGdaV3hsYldWdWRITmNiaUFnSUNBZ0tpQnBkSE1nWTI5dWMzVnRaV1FnYVc1MFpYSnVZV3hzZVNCaGJtUWdibTkwSUdGamRIVmhiR3g1SUhCaGMzTmxaQ0IwYnlCamJHRnpjeUJqYjIxd2IyNWxiblFnWTI5dWMzUnlkV04wYjNKelhHNGdJQ0FnSUNvdlhHNGdJQ0FnWTJocGJHUnlaVzQvT2lCQmNuSmhlVHhPYjJSbFBpQjhJRTV2WkdWY2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCSGRHc3VRblZwYkdSbGNpQjBlWEJsWEc0Z0lDQWdJQ29nYVhSeklHTnZibk4xYldWa0lHbHVkR1Z5Ym1Gc2JIa2dZVzVrSUc1dmRDQmhZM1IxWVd4c2VTQndZWE56WldRZ2RHOGdZMnhoYzNNZ1kyOXRjRzl1Wlc1MElHTnZibk4wY25WamRHOXljMXh1SUNBZ0lDQXFMMXh1SUNBZ0lDUjBlWEJsUHpvZ2MzUnlhVzVuWEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nWm5WdVkzUnBiMjRnZEc4Z2RYTmxJR0Z6SUdFZ1kyOXVjM1J5ZFdOMGIzSXNYRzRnSUNBZ0lDb2dhWFJ6SUdOdmJuTjFiV1ZrSUdsdWRHVnlibUZzYkhrZ1lXNWtJRzV2ZENCaFkzUjFZV3hzZVNCd1lYTnpaV1FnZEc4Z1kyeGhjM01nWTI5dGNHOXVaVzUwSUdOdmJuTjBjblZqZEc5eWMxeHVJQ0FnSUNBcUwxeHVJQ0FnSUNSamIyNXpkSEoxWTNSdmNqOG9jSEp2Y0hNNklGQmhjblJwWVd3OFVISnZjSE0rS1RvZ1UyVnNabHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJSE5sZEhWd0lHWjFibU4wYVc5dUxGeHVJQ0FnSUNBcUlHbDBjeUJqYjI1emRXMWxaQ0JwYm5SbGNtNWhiR3g1SUdGdVpDQnViM1FnWVdOMGRXRnNiSGtnY0dGemMyVmtJSFJ2SUdOc1lYTnpJR052YlhCdmJtVnVkQ0JqYjI1emRISjFZM1J2Y25OY2JpQWdJQ0FnS2k5Y2JpQWdJQ0FrUHloelpXeG1PaUJUWld4bUtUb2dkbTlwWkZ4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUVOVFV5QmpiR0Z6Y3lCdVlXMWxjMXh1SUNBZ0lDQXFMMXh1SUNBZ0lHTnNZWE56UHpvZ2MzUnlhVzVuSUh3Z1FXTmpaWE56YjNJOGMzUnlhVzVuUGx4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUdsdWJHbHVaU0JEVTFOY2JpQWdJQ0FnS2k5Y2JpQWdJQ0JqYzNNL09pQnpkSEpwYm1jZ2ZDQkJZMk5sYzNOdmNqeHpkSEpwYm1jK1hHNTlJQ1lnZTF4dUlDQWdJRnRMSUdsdUlHdGxlVzltSUZCeWIzQnpYVG9nUVdOalpYTnpiM0k4VG05dVRuVnNiR0ZpYkdVOFVISnZjSE5iUzEwK1BpQjhJRkJ5YjNCelcwdGRYRzU5SUNZZ2UxeHVJQ0FnSUZ0VElHbHVJR3RsZVc5bUlGTmxiR1piWENJa2MybG5ibUZzYzF3aVhTQmhjeUJUSUdWNGRHVnVaSE1nWUc1dmRHbG1lVG82Skh0cGJtWmxjaUJRZldCY2JpQWdJQ0FnSUNBZ1B5QmdiMjVPYjNScFpua2tlMUJoYzJOaGJHbG1lVHhRUG4xZ1hHNGdJQ0FnSUNBZ0lEb2dVeUJsZUhSbGJtUnpJR0FrZTJsdVptVnlJRVY5T2pva2UybHVabVZ5SUVSOVlGeHVJQ0FnSUNBZ0lDQWdJRDhnWUc5dUpIdFFZWE5qWVd4cFpuazhZQ1I3UlgwNkpIdEVmV0ErZldCY2JpQWdJQ0FnSUNBZ0lDQTZJRk1nWlhoMFpXNWtjeUJ6ZEhKcGJtZGNiaUFnSUNBZ0lDQWdJQ0FnSUQ4Z1lHOXVKSHRRWVhOallXeHBabms4VXo1OVlGeHVJQ0FnSUNBZ0lDQWdJQ0FnT2lCdVpYWmxjbDAvT2lCSFQySnFaV04wTGxOcFoyNWhiRU5oYkd4aVlXTnJQRk5sYkdZc0lGTmxiR1piWENJa2MybG5ibUZzYzF3aVhWdFRYVDVjYm4xY2JseHVMeThnY0hKbGRIUnBaWEl0YVdkdWIzSmxYRzUwZVhCbElFcHplRkJ5YjNCelBFTXNJRkJ5YjNCelBpQTlYRzRnSUNBZ1F5QmxlSFJsYm1SeklIUjVjR1Z2WmlCR2NtRm5iV1Z1ZENBL0lDaFFjbTl3Y3lBbUlIdDlLVnh1SUNBZ0lDOHZJR2x1ZEhKcGJuTnBZMFZzWlcxbGJuUnpJR0ZzZDJGNWN5QnlaWE52YkhabElHRnpJRVpEWEc0Z0lDQWdMeThnYzI4Z2QyVWdZMkZ1SjNRZ2JtRnljbTkzSUdsMElHUnZkMjRzSUdGdVpDQnBiaUJ6YjIxbElHTmhjMlZ6WEc0Z0lDQWdMeThnZEdobElITmxkSFZ3SUdaMWJtTjBhVzl1SUdseklIUjVjR1ZrSUdGeklHRWdkVzVwYjI0Z2IyWWdUMkpxWldOMElHRnVaQ0JoWTNSMVlXd2dkSGx3WlZ4dUlDQWdJQzh2SUdGeklHRWdabWw0SUhWelpYSnpJR05oYmlCaGJtUWdjMmh2ZFd4a0lIVnpaU0JHUTFCeWIzQnpYRzRnSUNBZ09pQkRJR1Y0ZEdWdVpITWdSa01nUHlCUWNtOXdjeUFtSUU5dGFYUThSa05RY205d2N6eFNaWFIxY201VWVYQmxQRU0rTENCUWNtOXdjejRzSUZ3aUpGd2lQbHh1SUNBZ0lEb2dReUJsZUhSbGJtUnpJRU5ESUQ4Z1EwTlFjbTl3Y3p4SmJuTjBZVzVqWlZSNWNHVThRejRzSUZCeWIzQnpQbHh1SUNBZ0lEb2dibVYyWlhKY2JseHVablZ1WTNScGIyNGdhWE5IVDJKcVpXTjBRM1J2Y2loamRHOXlPaUJoYm5rcE9pQmpkRzl5SUdseklFTkRJSHRjYmlBZ0lDQnlaWFIxY200Z1kzUnZjaTV3Y205MGIzUjVjR1VnYVc1emRHRnVZMlZ2WmlCSFQySnFaV04wTGs5aWFtVmpkRnh1ZlZ4dVhHNW1kVzVqZEdsdmJpQnBjMFoxYm1OMGFXOXVRM1J2Y2loamRHOXlPaUJoYm5rcE9pQmpkRzl5SUdseklFWkRJSHRjYmlBZ0lDQnlaWFIxY200Z2RIbHdaVzltSUdOMGIzSWdQVDA5SUZ3aVpuVnVZM1JwYjI1Y0lpQW1KaUFoYVhOSFQySnFaV04wUTNSdmNpaGpkRzl5S1Z4dWZWeHVYRzR2THlCdmJrNXZkR2xtZVZCeWIzQk9ZVzFsSUMwK0lHNXZkR2xtZVRvNmNISnZjQzF1WVcxbFhHNHZMeUJ2YmxCaGMyTmhiRTVoYldVNlpHVjBZV2xzVG1GdFpTQXRQaUJ3WVhOallXd3RibUZ0WlRvNlpHVjBZV2xzTFc1aGJXVmNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQnphV2R1WVd4T1lXMWxLR3RsZVRvZ2MzUnlhVzVuS1RvZ2MzUnlhVzVuSUh0Y2JpQWdJQ0JqYjI1emRDQmJjMmxuTENCa1pYUmhhV3hkSUQwZ2EyVmlZV0pwWm5rb2EyVjVMbk5zYVdObEtESXBLUzV6Y0d4cGRDaGNJanBjSWlsY2JseHVJQ0FnSUdsbUlDaHphV2N1YzNSaGNuUnpWMmwwYUNoY0ltNXZkR2xtZVMxY0lpa3BJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR0J1YjNScFpuazZPaVI3YzJsbkxuTnNhV05sS0RjcGZXQmNiaUFnSUNCOVhHNWNiaUFnSUNCeVpYUjFjbTRnWkdWMFlXbHNJRDhnWUNSN2MybG5mVG82Skh0a1pYUmhhV3g5WUNBNklITnBaMXh1ZlZ4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z2NtVnRiM1psS0hCaGNtVnVkRG9nUjA5aWFtVmpkQzVQWW1wbFkzUXNJR05vYVd4a09pQkhUMkpxWldOMExrOWlhbVZqZENrZ2UxeHVJQ0FnSUdsbUlDaHdZWEpsYm5RZ2FXNXpkR0Z1WTJWdlppQkdjbUZuYldWdWRDa2dlMXh1SUNBZ0lDQWdJQ0J3WVhKbGJuUXVjbVZ0YjNabEtHTm9hV3hrS1Z4dUlDQWdJQ0FnSUNCeVpYUjFjbTVjYmlBZ0lDQjlYRzVjYmlBZ0lDQnBaaUFvY21WdGIzWmxRMmhwYkdRZ2FXNGdjR0Z5Wlc1MElDWW1JSFI1Y0dWdlppQndZWEpsYm5SYmNtVnRiM1psUTJocGJHUmRJRDA5UFNCY0ltWjFibU4wYVc5dVhDSXBJSHRjYmlBZ0lDQWdJQ0FnY0dGeVpXNTBXM0psYlc5MlpVTm9hV3hrWFNoamFHbHNaQ2xjYmlBZ0lDQWdJQ0FnY21WMGRYSnVYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1pXNTJMbkpsYlc5MlpVTm9hV3hrS0hCaGNtVnVkQ3dnWTJocGJHUXBYRzU5WEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCaGNIQmxibVFvY0dGeVpXNTBPaUJIVDJKcVpXTjBMazlpYW1WamRDd2dZMmhwYkdRNklFZFBZbXBsWTNRdVQySnFaV04wS1NCN1hHNGdJQ0FnYVdZZ0tIQmhjbVZ1ZENCcGJuTjBZVzVqWlc5bUlFWnlZV2R0Wlc1MEtTQjdYRzRnSUNBZ0lDQWdJSEJoY21WdWRDNWhjSEJsYm1Rb1kyaHBiR1FwWEc0Z0lDQWdJQ0FnSUhKbGRIVnlibHh1SUNBZ0lIMWNibHh1SUNBZ0lHbG1JQ2hqYUdsc1pDQnBibk4wWVc1alpXOW1JRVp5WVdkdFpXNTBLU0I3WEc0Z0lDQWdJQ0FnSUdadmNpQW9ZMjl1YzNRZ1kyZ2diMllnWTJocGJHUXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHRndjR1Z1WkNod1lYSmxiblFzSUdOb0tWeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdZWEJ3Wlc1a1NHRnVaR3hsY2lBOUlHTm9hV3hrTG1OdmJtNWxZM1FvWENKaGNIQmxibVJjSWl3Z0tGOHNJR05vS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9JU2hqYUNCcGJuTjBZVzVqWlc5bUlFZFBZbXBsWTNRdVQySnFaV04wS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG1WeWNtOXlLRlI1Y0dWRmNuSnZjaWhnWTJGdWJtOTBJR0ZrWkNBa2UyTm9mU0IwYnlBa2UzQmhjbVZ1ZEgxZ0tTbGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJR0Z3Y0dWdVpDaHdZWEpsYm5Rc0lHTm9LVnh1SUNBZ0lDQWdJQ0I5S1Z4dVhHNGdJQ0FnSUNBZ0lHTnZibk4wSUhKbGJXOTJaVWhoYm1Sc1pYSWdQU0JqYUdsc1pDNWpiMjV1WldOMEtGd2ljbVZ0YjNabFhDSXNJQ2hmTENCamFDa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NFb1kyZ2dhVzV6ZEdGdVkyVnZaaUJIVDJKcVpXTjBMazlpYW1WamRDa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNWxjbkp2Y2loVWVYQmxSWEp5YjNJb1lHTmhibTV2ZENCeVpXMXZkbVVnSkh0amFIMGdabkp2YlNBa2UzQmhjbVZ1ZEgxZ0tTbGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsYlc5MlpTaHdZWEpsYm5Rc0lHTm9LVnh1SUNBZ0lDQWdJQ0I5S1Z4dVhHNGdJQ0FnSUNBZ0lHOXVRMnhsWVc1MWNDZ29LU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYUdsc1pDNWthWE5qYjI1dVpXTjBLR0Z3Y0dWdVpFaGhibVJzWlhJcFhHNGdJQ0FnSUNBZ0lDQWdJQ0JqYUdsc1pDNWthWE5qYjI1dVpXTjBLSEpsYlc5MlpVaGhibVJzWlhJcFhHNGdJQ0FnSUNBZ0lIMHBYRzVjYmlBZ0lDQWdJQ0FnY21WMGRYSnVYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FXWWdLR0Z3Y0dWdVpFTm9hV3hrSUdsdUlIQmhjbVZ1ZENBbUppQjBlWEJsYjJZZ2NHRnlaVzUwVzJGd2NHVnVaRU5vYVd4a1hTQTlQVDBnWENKbWRXNWpkR2x2Ymx3aUtTQjdYRzRnSUNBZ0lDQWdJSEJoY21WdWRGdGhjSEJsYm1SRGFHbHNaRjBvWTJocGJHUXNJR2RsZEZSNWNHVW9ZMmhwYkdRcEtWeHVJQ0FnSUNBZ0lDQnlaWFIxY201Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JsYm5ZdVlYQndaVzVrUTJocGJHUW9jR0Z5Wlc1MExDQmphR2xzWkNsY2JuMWNibHh1THlvcUlFQnBiblJsY201aGJDQXFMMXh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJSE5sZEZSNWNHVW9iMkpxWldOME9pQnZZbXBsWTNRc0lIUjVjR1U2SUhOMGNtbHVaeWtnZTF4dUlDQWdJR2xtSUNobmRHdFVlWEJsSUdsdUlHOWlhbVZqZENBbUppQnZZbXBsWTNSYlozUnJWSGx3WlYwZ0lUMDlJRndpWENJcElIdGNiaUFnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0dCMGVYQmxJRzkyWlhKeWFXUmxiaUJtY205dElDUjdiMkpxWldOMFcyZDBhMVI1Y0dWZGZTQjBieUFrZTNSNWNHVjlJRzl1SUNSN2IySnFaV04wZldBcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnVDJKcVpXTjBMbUZ6YzJsbmJpaHZZbXBsWTNRc0lIc2dXMmQwYTFSNWNHVmRPaUIwZVhCbElIMHBYRzU5WEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCcWMzZzhWQ0JsZUhSbGJtUnpJQ2h3Y205d2N6b2dZVzU1S1NBOVBpQkhUMkpxWldOMExrOWlhbVZqZEQ0b1hHNGdJQ0FnWTNSdmNqb2dWQ3hjYmlBZ0lDQndjbTl3Y3pvZ1NuTjRVSEp2Y0hNOFZDd2dVR0Z5WVcxbGRHVnljenhVUGxzd1hUNHNYRzRwT2lCU1pYUjFjbTVVZVhCbFBGUStYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJxYzNnOFZDQmxlSFJsYm1SeklHNWxkeUFvY0hKdmNITTZJR0Z1ZVNrZ1BUNGdSMDlpYW1WamRDNVBZbXBsWTNRK0tGeHVJQ0FnSUdOMGIzSTZJRlFzWEc0Z0lDQWdjSEp2Y0hNNklFcHplRkJ5YjNCelBGUXNJRU52Ym5OMGNuVmpkRzl5VUdGeVlXMWxkR1Z5Y3p4VVBsc3dYVDRzWEc0cE9pQkpibk4wWVc1alpWUjVjR1U4VkQ1Y2JseHVaWGh3YjNKMElHWjFibU4wYVc5dUlHcHplRHhVSUdWNGRHVnVaSE1nUjA5aWFtVmpkQzVQWW1wbFkzUStLRnh1SUNBZ0lHTjBiM0k2SUd0bGVXOW1JQ2gwZVhCbGIyWWdaVzUyS1Z0Y0ltbHVkSEpwYm5OcFkwVnNaVzFsYm5SelhDSmRJSHdnS0c1bGR5QW9jSEp2Y0hNNklHRnVlU2tnUFQ0Z1ZDa2dmQ0FvS0hCeWIzQnpPaUJoYm5rcElEMCtJRlFwTEZ4dUlDQWdJR2x1Y0hKdmNITTZJR0Z1ZVN4Y2JpQWdJQ0F2THlCclpYa2dhWE1nWVNCemNHVmphV0ZzSUhCeWIzQWdhVzRnYW5ONElIZG9hV05vSUdseklIQmhjM05sWkNCaGN5QmhJSFJvYVhKa0lHRnlaM1Z0Wlc1MElHRnVaQ0J1YjNRZ2FXNGdjSEp2Y0hOY2JpQWdJQ0JyWlhrL09pQnpkSEpwYm1jc1hHNHBPaUJVSUh0Y2JpQWdJQ0JqYjI1emRDQjdJQ1FzSUNSMGVYQmxMQ0FrWTI5dWMzUnlkV04wYjNJc0lHTm9hV3hrY21WdUxDQXVMaTV5WlhOMElIMGdQU0JwYm5CeWIzQnpJR0Z6SUVORFVISnZjSE04VkN3Z1lXNTVQbHh1SUNBZ0lHTnZibk4wSUhCeWIzQnpJRDBnY21WemRDQmhjeUJTWldOdmNtUThjM1J5YVc1bkxDQmhibmsrWEc1Y2JpQWdJQ0JwWmlBb2EyVjVLU0JQWW1wbFkzUXVZWE56YVdkdUtIQnliM0J6TENCN0lHdGxlU0I5S1Z4dVhHNGdJQ0FnWTI5dWMzUWdaR1ZtWlhKUWNtOXdjeUE5SUdWdWRpNXBibWwwVUhKdmNITW9ZM1J2Y2l3Z2NISnZjSE1wSUQ4L0lGdGRYRzRnSUNBZ1kyOXVjM1FnWkdWbVpYSnlaV1JRY205d2N6b2dVbVZqYjNKa1BITjBjbWx1Wnl3Z2RXNXJibTkzYmo0Z1BTQjdmVnh1WEc0Z0lDQWdabTl5SUNoamIyNXpkQ0JiYTJWNUxDQjJZV3gxWlYwZ2IyWWdUMkpxWldOMExtVnVkSEpwWlhNb2NISnZjSE1wS1NCN1hHNGdJQ0FnSUNBZ0lHbG1JQ2gyWVd4MVpTQTlQVDBnZFc1a1pXWnBibVZrS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JrWld4bGRHVWdjSEp2Y0hOYmEyVjVYVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLR1JsWm1WeVVISnZjSE11YVc1amJIVmtaWE1vYTJWNUtTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pHVm1aWEp5WldSUWNtOXdjMXRyWlhsZElEMGdjSEp2Y0hOYmEyVjVYVnh1SUNBZ0lDQWdJQ0FnSUNBZ1pHVnNaWFJsSUhCeWIzQnpXMnRsZVYxY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUdsbUlDaDBlWEJsYjJZZ1kzUnZjaUE5UFQwZ1hDSnpkSEpwYm1kY0lpa2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb1kzUnZjaUJwYmlCbGJuWXVhVzUwY21sdWMybGpSV3hsYldWdWRITXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTjBiM0lnUFNCbGJuWXVhVzUwY21sdWMybGpSV3hsYldWdWRITmJZM1J2Y2wwZ1lYTWdSa004VkQ0Z2ZDQkRRenhVUGx4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2h5YjNjZ1JYSnliM0lvWUhWdWEyNXZkMjRnYVc1MGNtbHVjMmxqSUdWc1pXMWxiblFnWENJa2UyTjBiM0o5WENKZ0tWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FXWWdLR2x6Um5WdVkzUnBiMjVEZEc5eUtHTjBiM0lwS1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUc5aWFtVmpkQ0E5SUdOMGIzSW9leUJqYUdsc1pISmxiaXdnTGk0dWNISnZjSE1nZlNsY2JpQWdJQ0FnSUNBZ2FXWWdLQ1IwZVhCbEtTQnpaWFJVZVhCbEtHOWlhbVZqZEN3Z0pIUjVjR1VwWEc0Z0lDQWdJQ0FnSUNRL0xpaHZZbXBsWTNRcFhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCdlltcGxZM1JjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZMeUJqYjJ4c1pXTjBJR056Y3lCaGJtUWdZMnhoYzNOT1lXMWxYRzRnSUNBZ1kyOXVjM1FnZXlCamMzTXNJR05zWVhOek9pQmpiR0Z6YzA1aGJXVWdmU0E5SUhCeWIzQnpYRzRnSUNBZ1pHVnNaWFJsSUhCeWIzQnpMbU56YzF4dUlDQWdJR1JsYkdWMFpTQndjbTl3Y3k1amJHRnpjMXh1WEc0Z0lDQWdZMjl1YzNRZ2MybG5ibUZzY3pvZ1FYSnlZWGs4VzNOMGNtbHVaeXdnS0M0dUxuQnliM0J6T2lCMWJtdHViM2R1VzEwcElEMCtJSFZ1YTI1dmQyNWRQaUE5SUZ0ZFhHNGdJQ0FnWTI5dWMzUWdZbWx1WkdsdVozTTZJRUZ5Y21GNVBGdHpkSEpwYm1jc0lFRmpZMlZ6YzI5eVBIVnVhMjV2ZDI0K1hUNGdQU0JiWFZ4dVhHNGdJQ0FnTHk4Z1kyOXNiR1ZqZENCemFXZHVZV3h6SUdGdVpDQmlhVzVrYVc1bmMxeHVJQ0FnSUdadmNpQW9ZMjl1YzNRZ1cydGxlU3dnZG1Gc2RXVmRJRzltSUU5aWFtVmpkQzVsYm5SeWFXVnpLSEJ5YjNCektTa2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb2EyVjVMbk4wWVhKMGMxZHBkR2dvWENKdmJsd2lLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjMmxuYm1Gc2N5NXdkWE5vS0Z0clpYa3NJSFpoYkhWbElHRnpJQ2dwSUQwK0lIVnVhMjV2ZDI1ZEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnWkdWc1pYUmxJSEJ5YjNCelcydGxlVjFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCcFppQW9kbUZzZFdVZ2FXNXpkR0Z1WTJWdlppQkJZMk5sYzNOdmNpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ltbHVaR2x1WjNNdWNIVnphQ2hiYTJWNUxDQjJZV3gxWlYwcFhHNGdJQ0FnSUNBZ0lDQWdJQ0J3Y205d2MxdHJaWGxkSUQwZ2RtRnNkV1V1WjJWMEtDbGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHZJR052Ym5OMGNuVmpkRnh1SUNBZ0lHTnZibk4wSUc5aWFtVmpkQ0E5SUNSamIyNXpkSEoxWTNSdmNpQS9JQ1JqYjI1emRISjFZM1J2Y2lod2NtOXdjeWtnT2lCdVpYY2dLR04wYjNJZ1lYTWdRME04VkQ0cEtIQnliM0J6S1Z4dUlDQWdJR2xtSUNna1kyOXVjM1J5ZFdOMGIzSXBJRTlpYW1WamRDNWhjM05wWjI0b2IySnFaV04wTENCd2NtOXdjeWxjYmlBZ0lDQnBaaUFvSkhSNWNHVXBJSE5sZEZSNWNHVW9iMkpxWldOMExDQWtkSGx3WlNsY2JseHVJQ0FnSUdsbUlDaGpjM01wSUdWdWRpNXpaWFJEYzNNb2IySnFaV04wTENCamMzTXBYRzRnSUNBZ2FXWWdLR05zWVhOelRtRnRaU2tnWlc1MkxuTmxkRU5zWVhOektHOWlhbVZqZEN3Z1kyeGhjM05PWVcxbEtWeHVYRzRnSUNBZ0x5OGdZV1JrSUdOb2FXeGtjbVZ1WEc0Z0lDQWdabTl5SUNoc1pYUWdZMmhwYkdRZ2IyWWdRWEp5WVhrdWFYTkJjbkpoZVNoamFHbHNaSEpsYmlrZ1B5QmphR2xzWkhKbGJpQTZJRnRqYUdsc1pISmxibDBwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLR05vYVd4a0lEMDlQU0IwY25WbEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9SWEp5YjNJb1hDSlVjbmxwYm1jZ2RHOGdZV1JrSUdKdmIyeGxZVzRnZG1Gc2RXVWdiMllnWUhSeWRXVmdJR0Z6SUdFZ1kyaHBiR1F1WENJcEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWRHbHVkV1ZjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lHbG1JQ2hCY25KaGVTNXBjMEZ5Y21GNUtHTm9hV3hrS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWm05eUlDaGpiMjV6ZENCamFDQnZaaUJqYUdsc1pDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0Z3Y0dWdVpDaHZZbXBsWTNRc0lHTm9LVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLR05vYVd4a0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9JU2hqYUdsc1pDQnBibk4wWVc1alpXOW1JRWRQWW1wbFkzUXVUMkpxWldOMEtTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05vYVd4a0lEMGdaVzUyTG5SbGVIUk9iMlJsS0dOb2FXeGtLVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnWVhCd1pXNWtLRzlpYW1WamRDd2dZMmhwYkdRcFhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNBdkx5Qm9ZVzVrYkdVZ2MybG5ibUZzYzF4dUlDQWdJR052Ym5OMElHUnBjM0J2YzJWSVlXNWtiR1Z5Y3lBOUlITnBaMjVoYkhNdWJXRndLQ2hiYzJsbkxDQm9ZVzVrYkdWeVhTa2dQVDRnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0JwWkNBOUlHOWlhbVZqZEM1amIyNXVaV04wS0hOcFoyNWhiRTVoYldVb2MybG5LU3dnYUdGdVpHeGxjaWxjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJQ2dwSUQwK0lHOWlhbVZqZEM1a2FYTmpiMjV1WldOMEtHbGtLVnh1SUNBZ0lIMHBYRzVjYmlBZ0lDQXZMeUJrWldabGNuSmxaQ0J3Y205d2MxeHVJQ0FnSUdadmNpQW9ZMjl1YzNRZ1cydGxlU3dnZG1Gc2RXVmRJRzltSUU5aWFtVmpkQzVsYm5SeWFXVnpLR1JsWm1WeWNtVmtVSEp2Y0hNcEtTQjdYRzRnSUNBZ0lDQWdJR2xtSUNoMllXeDFaU0JwYm5OMFlXNWpaVzltSUVGalkyVnpjMjl5S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JpYVc1a2FXNW5jeTV3ZFhOb0tGdHJaWGtzSUhaaGJIVmxYU2xjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lFOWlhbVZqZEM1aGMzTnBaMjRvYjJKcVpXTjBMQ0I3SUZ0clpYbGRPaUIyWVd4MVpTQjlLVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeThnYUdGdVpHeGxJR0pwYm1ScGJtZHpYRzRnSUNBZ1kyOXVjM1FnWkdsemNHOXpaVUpwYm1ScGJtZHpJRDBnWW1sdVpHbHVaM011YldGd0tDaGJjSEp2Y0N3Z1ltbHVaR2x1WjEwcElEMCtJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdaR2x6Y0c5elpTQTlJR0pwYm1ScGJtY3VjM1ZpYzJOeWFXSmxLQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhObGRDaHZZbXBsWTNRc0lIQnliM0FzSUdKcGJtUnBibWN1WjJWMEtDa3BYRzRnSUNBZ0lDQWdJSDBwWEc0Z0lDQWdJQ0FnSUhObGRDaHZZbXBsWTNRc0lIQnliM0FzSUdKcGJtUnBibWN1WjJWMEtDa3BYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQmthWE53YjNObFhHNGdJQ0FnZlNsY2JseHVJQ0FnSUM4dklHTnNaV0Z1ZFhCY2JpQWdJQ0JwWmlBb1pHbHpjRzl6WlVKcGJtUnBibWR6TG14bGJtZDBhQ0ErSURBZ2ZId2daR2x6Y0c5elpVaGhibVJzWlhKekxteGxibWQwYUNBK0lEQXBJSHRjYmlBZ0lDQWdJQ0FnYjI1RGJHVmhiblZ3S0NncElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0J2YzJWSVlXNWtiR1Z5Y3k1bWIzSkZZV05vS0Noallpa2dQVDRnWTJJb0tTbGNiaUFnSUNBZ0lDQWdJQ0FnSUdScGMzQnZjMlZDYVc1a2FXNW5jeTVtYjNKRllXTm9LQ2hqWWlrZ1BUNGdZMklvS1NsY2JpQWdJQ0FnSUNBZ2ZTbGNiaUFnSUNCOVhHNWNiaUFnSUNBa1B5NG9iMkpxWldOMEtWeHVJQ0FnSUhKbGRIVnliaUJ2WW1wbFkzUmNibjFjYmx4dUx5OGdWRTlFVHpvZ2JXRnJaU0IxYzJVZ2IyWWdhbk40YzF4dVpYaHdiM0owSUdOdmJuTjBJR3B6ZUhNZ1BTQnFjM2hjYmx4dVpHVmpiR0Z5WlNCbmJHOWlZV3dnZTF4dUlDQWdJQzh2SUdWemJHbHVkQzFrYVhOaFlteGxMVzVsZUhRdGJHbHVaU0JBZEhsd1pYTmpjbWx3ZEMxbGMyeHBiblF2Ym04dGJtRnRaWE53WVdObFhHNGdJQ0FnYm1GdFpYTndZV05sSUVwVFdDQjdYRzRnSUNBZ0lDQWdJSFI1Y0dVZ1JXeGxiV1Z1ZEZSNWNHVWdQU0JyWlhsdlppQkpiblJ5YVc1emFXTkZiR1Z0Wlc1MGN5QjhJRVpESUh3Z1EwTmNiaUFnSUNBZ0lDQWdkSGx3WlNCRmJHVnRaVzUwSUQwZ1IwOWlhbVZqZEM1UFltcGxZM1JjYmlBZ0lDQWdJQ0FnZEhsd1pTQkZiR1Z0Wlc1MFEyeGhjM01nUFNCSFQySnFaV04wTGs5aWFtVmpkRnh1WEc0Z0lDQWdJQ0FnSUhSNWNHVWdUR2xpY21GeWVVMWhibUZuWldSQmRIUnlhV0oxZEdWelBFTXNJRkJ5YjNCelBpQTlJRXB6ZUZCeWIzQnpQRU1zSUZCeWIzQnpQaUFtSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQzh2SUVaSldFMUZPaUIzYUhrZ1pHOWxjeUJoYmlCcGJuUnlhVzV6YVdNZ1pXeGxiV1Z1ZENCaGJIZGhlWE1nY21WemIyeDJaU0JoY3lCR1F6OWNiaUFnSUNBZ0lDQWdJQ0FnSUM4dklGOWZkSGx3WlQ4NklFTWdaWGgwWlc1a2N5QkRReUEvSUZ3aVEwTmNJaUE2SUVNZ1pYaDBaVzVrY3lCR1F5QS9JRndpUmtOY0lpQTZJRzVsZG1WeVhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0F2THlCbGMyeHBiblF0WkdsellXSnNaUzF1WlhoMExXeHBibVVnUUhSNWNHVnpZM0pwY0hRdFpYTnNhVzUwTDI1dkxXVnRjSFI1TFc5aWFtVmpkQzEwZVhCbFhHNGdJQ0FnSUNBZ0lHbHVkR1Z5Wm1GalpTQkpiblJ5YVc1emFXTkZiR1Z0Wlc1MGN5QjdYRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5QmpZem9nUTBOUWNtOXdjenhIZEdzdVFtOTRMQ0JIZEdzdVFtOTRMa052Ym5OMGNuVmpkRzl5VUhKdmNITXNJRWQwYXk1Q2IzZ3VVMmxuYm1Gc1UybG5ibUYwZFhKbGN6NWNiaUFnSUNBZ0lDQWdJQ0FnSUM4dklHWmpPaUJHUTFCeWIzQnpQRWQwYXk1WGFXUm5aWFFzSUVadVVISnZjSE0rWEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnBiblJsY21aaFkyVWdSV3hsYldWdWRFTm9hV3hrY21WdVFYUjBjbWxpZFhSbElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUM4dklHVnpiR2x1ZEMxa2FYTmhZbXhsTFc1bGVIUXRiR2x1WlNCQWRIbHdaWE5qY21sd2RDMWxjMnhwYm5RdmJtOHRaVzF3ZEhrdGIySnFaV04wTFhSNWNHVmNiaUFnSUNBZ0lDQWdJQ0FnSUdOb2FXeGtjbVZ1T2lCN2ZWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVmVnh1SWl3Z0ltbHRjRzl5ZENCSFQySnFaV04wSUdaeWIyMGdYQ0puYVRvdkwwZFBZbXBsWTNSY0lseHVYRzVwYm5SbGNtWmhZMlVnUm5KaFoyMWxiblJUYVdkdVlXeHpQRlErSUdWNGRHVnVaSE1nUjA5aWFtVmpkQzVQWW1wbFkzUXVVMmxuYm1Gc1UybG5ibUYwZFhKbGN5QjdYRzRnSUNBZ1lYQndaVzVrT2lBb1kyaHBiR1E2SUZRcElEMCtJSFp2YVdSY2JpQWdJQ0J5WlcxdmRtVTZJQ2hqYUdsc1pEb2dWQ2tnUFQ0Z2RtOXBaRnh1ZlZ4dVhHNWxlSEJ2Y25RZ1kyeGhjM01nUm5KaFoyMWxiblE4VkNBOUlHRnVlVDRnWlhoMFpXNWtjeUJIVDJKcVpXTjBMazlpYW1WamRDQjdYRzRnSUNBZ1pHVmpiR0Z5WlNBa2MybG5ibUZzY3pvZ1JuSmhaMjFsYm5SVGFXZHVZV3h6UEZRK1hHNWNiaUFnSUNCemRHRjBhV01nVzBkUFltcGxZM1F1YzJsbmJtRnNjMTBnUFNCN1hHNGdJQ0FnSUNBZ0lHRndjR1Z1WkRvZ2V5QndZWEpoYlY5MGVYQmxjem9nVzBkUFltcGxZM1F1VkZsUVJWOVBRa3BGUTFSZElIMHNYRzRnSUNBZ0lDQWdJSEpsYlc5MlpUb2dleUJ3WVhKaGJWOTBlWEJsY3pvZ1cwZFBZbXBsWTNRdVZGbFFSVjlQUWtwRlExUmRJSDBzWEc0Z0lDQWdmVnh1WEc0Z0lDQWdjM1JoZEdsaklGdEhUMkpxWldOMExuQnliM0JsY25ScFpYTmRJRDBnZTF4dUlDQWdJQ0FnSUNCamFHbHNaSEpsYmpvZ1IwOWlhbVZqZEM1UVlYSmhiVk53WldNdWFuTnZZbXBsWTNRb1hDSmphR2xzWkhKbGJsd2lMQ0JjSWx3aUxDQmNJbHdpTENCSFQySnFaV04wTGxCaGNtRnRSbXhoWjNNdVVrVkJSRUZDVEVVcExGeHVJQ0FnSUgxY2JseHVJQ0FnSUhOMFlYUnBZeUI3WEc0Z0lDQWdJQ0FnSUVkUFltcGxZM1F1Y21WbmFYTjBaWEpEYkdGemN5aDBhR2x6S1Z4dUlDQWdJSDFjYmx4dUlDQWdJQ3BiVTNsdFltOXNMbWwwWlhKaGRHOXlYU2dwSUh0Y2JpQWdJQ0FnSUNBZ2VXbGxiR1FxSUhSb2FYTXVYMk5vYVd4a2NtVnVYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NISnBkbUYwWlNCZlkyaHBiR1J5Wlc0NklFRnljbUY1UEZRK1hHNWNiaUFnSUNCaGNIQmxibVFvWTJocGJHUTZJRlFwT2lCMmIybGtJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tHTm9hV3hrSUdsdWMzUmhibU5sYjJZZ1JuSmhaMjFsYm5RcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2NtOTNJRVZ5Y205eUtHQnVaWE4wYVc1bklFWnlZV2R0Wlc1MGN5QmhjbVVnYm05MElIbGxkQ0J6ZFhCd2IzSjBaV1JnS1Z4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdkR2hwY3k1ZlkyaHBiR1J5Wlc0dWNIVnphQ2hqYUdsc1pDbGNiaUFnSUNBZ0lDQWdkR2hwY3k1bGJXbDBLRndpWVhCd1pXNWtYQ0lzSUdOb2FXeGtLVnh1SUNBZ0lDQWdJQ0IwYUdsekxtNXZkR2xtZVNoY0ltTm9hV3hrY21WdVhDSXBYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NtVnRiM1psS0dOb2FXeGtPaUJVS1RvZ2RtOXBaQ0I3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJR2x1WkdWNElEMGdkR2hwY3k1ZlkyaHBiR1J5Wlc0dVptbHVaRWx1WkdWNEtDaHBLU0E5UGlCcElEMDlQU0JqYUdsc1pDbGNiaUFnSUNBZ0lDQWdkR2hwY3k1ZlkyaHBiR1J5Wlc0dWMzQnNhV05sS0dsdVpHVjRMQ0F4S1Z4dVhHNGdJQ0FnSUNBZ0lIUm9hWE11WlcxcGRDaGNJbkpsYlc5MlpWd2lMQ0JqYUdsc1pDbGNiaUFnSUNBZ0lDQWdkR2hwY3k1dWIzUnBabmtvWENKamFHbHNaSEpsYmx3aUtWeHVJQ0FnSUgxY2JseHVJQ0FnSUdOdmJuTjBjblZqZEc5eUtIc2dZMmhwYkdSeVpXNGdQU0JiWFNCOU9pQlFZWEowYVdGc1BIc2dZMmhwYkdSeVpXNDZJRUZ5Y21GNVBGUStJSHdnVkNCOVBpQTlJSHQ5S1NCN1hHNGdJQ0FnSUNBZ0lITjFjR1Z5S0NsY2JpQWdJQ0FnSUNBZ2RHaHBjeTVmWTJocGJHUnlaVzRnUFNCQmNuSmhlUzVwYzBGeWNtRjVLR05vYVd4a2NtVnVLU0EvSUdOb2FXeGtjbVZ1SURvZ1cyTm9hV3hrY21WdVhWeHVJQ0FnSUgxY2JseHVJQ0FnSUdOdmJtNWxZM1E4VXlCbGVIUmxibVJ6SUd0bGVXOW1JRVp5WVdkdFpXNTBVMmxuYm1Gc2N6eFVQajRvWEc0Z0lDQWdJQ0FnSUhOcFoyNWhiRG9nVXl4Y2JpQWdJQ0FnSUNBZ1kyRnNiR0poWTJzNklFZFBZbXBsWTNRdVUybG5ibUZzUTJGc2JHSmhZMnM4ZEdocGN5d2dSbkpoWjIxbGJuUlRhV2R1WVd4elBGUStXMU5kUGl4Y2JpQWdJQ0FwT2lCdWRXMWlaWElnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl1Ym1WamRDaHphV2R1WVd3c0lHTmhiR3hpWVdOcktWeHVJQ0FnSUgxY2JuMWNiaUlzSUNKcGJYQnZjblFnUjA5aWFtVmpkQ0JtY205dElGd2laMms2THk5SFQySnFaV04wWENKY2JtbHRjRzl5ZENCSGFXOGdabkp2YlNCY0ltZHBPaTh2UjJsdlhDSmNibWx0Y0c5eWRDQkhUR2xpSUdaeWIyMGdYQ0puYVRvdkwwZE1hV0pjSWx4dWFXMXdiM0owSUhzZ2RIbHdaU0JRWVhOallXeHBabmtzSUdOaGJXVnNhV1o1TENCclpXSmhZbWxtZVNCOUlHWnliMjBnWENJdUxpOTFkR2xzTG1welhDSmNibWx0Y0c5eWRDQjBlWEJsSUhzZ1JHVmxjRWx1Wm1WeUxDQlNaV04xY25OcGRtVkpibVpsY2lCOUlHWnliMjBnWENJdUxpOTJZWEpwWVc1MExtcHpYQ0pjYmx4dWRIbHdaU0JUZFdKelkzSnBZbVZEWVd4c1ltRmpheUE5SUNncElEMCtJSFp2YVdSY2JuUjVjR1VnUkdsemNHOXpaVVoxYm1OMGFXOXVJRDBnS0NrZ1BUNGdkbTlwWkZ4dWRIbHdaU0JUZFdKelkzSnBZbVZHZFc1amRHbHZiaUE5SUNoallXeHNZbUZqYXpvZ1UzVmljMk55YVdKbFEyRnNiR0poWTJzcElEMCtJRVJwYzNCdmMyVkdkVzVqZEdsdmJseHVYRzVsZUhCdmNuUWdkSGx3WlNCQlkyTmxjM05sWkR4VVBpQTlJRlFnWlhoMFpXNWtjeUJCWTJObGMzTnZjanhwYm1abGNpQldQaUEvSUZZZ09pQnVaWFpsY2x4dVhHNWpiMjV6ZENCbGJYQjBlU0E5SUZONWJXSnZiQ2hjSW1WdGNIUjVJR052YlhCMWRHVmtJSFpoYkhWbFhDSXBYRzVjYmk4dklHVnpiR2x1ZEMxa2FYTmhZbXhsTFc1bGVIUXRiR2x1WlNCQWRIbHdaWE5qY21sd2RDMWxjMnhwYm5RdmJtOHRkVzV6WVdabExXUmxZMnhoY21GMGFXOXVMVzFsY21kcGJtZGNibVY0Y0c5eWRDQmpiR0Z6Y3lCQlkyTmxjM052Y2p4VUlEMGdkVzVyYm05M2JqNGdaWGgwWlc1a2N5QkdkVzVqZEdsdmJpQjdYRzRnSUNBZ2MzUmhkR2xqSUNSbmRIbHdaU0E5SUVkUFltcGxZM1F1VkZsUVJWOUtVMDlDU2tWRFZDQmhjeUIxYm10dWIzZHVJR0Z6SUVkUFltcGxZM1F1UjFSNWNHVThRV05qWlhOemIzSStYRzVjYmlBZ0lDQWpaMlYwT2lBb0tTQTlQaUJVWEc0Z0lDQWdJM04xWW5OamNtbGlaVG9nVTNWaWMyTnlhV0psUm5WdVkzUnBiMjVjYmx4dUlDQWdJR052Ym5OMGNuVmpkRzl5S0dkbGREb2dLQ2tnUFQ0Z1ZDd2djM1ZpYzJOeWFXSmxQem9nVTNWaWMyTnlhV0psUm5WdVkzUnBiMjRwSUh0Y2JpQWdJQ0FnSUNBZ2MzVndaWElvWENKeVpYUjFjbTRnWVhKbmRXMWxiblJ6TG1OaGJHeGxaUzVmWTJGc2JDNWhjSEJzZVNoaGNtZDFiV1Z1ZEhNdVkyRnNiR1ZsTENCaGNtZDFiV1Z1ZEhNcFhDSXBYRzRnSUNBZ0lDQWdJSFJvYVhNdUkzTjFZbk5qY21saVpTQTlJSE4xWW5OamNtbGlaU0EvUHlBb0tDa2dQVDRnS0NrZ1BUNGdkbTlwWkNBd0tWeHVJQ0FnSUNBZ0lDQjBhR2x6TGlOblpYUWdQU0JuWlhSY2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCVGRXSnpZM0pwWW1VZ1ptOXlJSFpoYkhWbElHTm9ZVzVuWlhNdVhHNGdJQ0FnSUNvZ1FIQmhjbUZ0SUdOaGJHeGlZV05ySUZSb1pTQm1kVzVqZEdsdmJpQjBieUJ5ZFc0Z2QyaGxiaUIwYUdVZ1kzVnljbVZ1ZENCMllXeDFaU0JqYUdGdVoyVnpMbHh1SUNBZ0lDQXFJRUJ5WlhSMWNtNXpJRlZ1YzNWaWMyTnlhV0psSUdaMWJtTjBhVzl1TGx4dUlDQWdJQ0FxTDF4dUlDQWdJSE4xWW5OamNtbGlaU2hqWVd4c1ltRmphem9nVTNWaWMyTnlhV0psUTJGc2JHSmhZMnNwT2lCRWFYTndiM05sUm5WdVkzUnBiMjRnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NGpjM1ZpYzJOeWFXSmxLR05oYkd4aVlXTnJLVnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJRUJ5WlhSMWNtNXpJRlJvWlNCamRYSnlaVzUwSUhaaGJIVmxMbHh1SUNBZ0lDQXFMMXh1SUNBZ0lHZGxkQ2dwT2lCVUlIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11STJkbGRDZ3BYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dRM0psWVhSbElHRWdibVYzSUdCQlkyTmxjM052Y21BZ2RHaGhkQ0JoY0hCc2FXVnpJR0VnZEhKaGJuTm1iM0p0WVhScGIyNGdiMjRnYVhSeklIWmhiSFZsTGx4dUlDQWdJQ0FxSUVCd1lYSmhiU0IwY21GdWMyWnZjbTBnVkdobElIUnlZVzV6Wm05eWJXRjBhVzl1SUhSdklHRndjR3g1TGlCVGFHOTFiR1FnWW1VZ1lTQndkWEpsSUdaMWJtTjBhVzl1TGx4dUlDQWdJQ0FxTDF4dUlDQWdJR0Z6UEZJZ1BTQlVQaWgwY21GdWMyWnZjbTA2SUNoMllXeDFaVG9nVkNrZ1BUNGdVaWs2SUVGalkyVnpjMjl5UEZJK0lIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJCWTJObGMzTnZjaWdvS1NBOVBpQjBjbUZ1YzJadmNtMG9kR2hwY3k0aloyVjBLQ2twTENCMGFHbHpMaU56ZFdKelkzSnBZbVVwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdjSEp2ZEdWamRHVmtJRjlqWVd4c1BGSWdQU0JVUGloMGNtRnVjMlp2Y20wNklDaDJZV3gxWlRvZ1ZDa2dQVDRnVWlrNklFRmpZMlZ6YzI5eVBGSStJSHRjYmlBZ0lDQWdJQ0FnYkdWMElIWmhiSFZsT2lCMGVYQmxiMllnWlcxd2RIa2dmQ0JTSUQwZ1pXMXdkSGxjYmlBZ0lDQWdJQ0FnYkdWMElIVnVjM1ZpT2lCRWFYTndiM05sUm5WdVkzUnBiMjVjYmx4dUlDQWdJQ0FnSUNCamIyNXpkQ0J6ZFdKelkzSnBZbVZ5Y3lBOUlHNWxkeUJUWlhROFUzVmljMk55YVdKbFEyRnNiR0poWTJzK0tDbGNibHh1SUNBZ0lDQWdJQ0JqYjI1emRDQnpkV0p6WTNKcFltVTZJRk4xWW5OamNtbGlaVVoxYm1OMGFXOXVJRDBnS0dOaGJHeGlZV05yS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9jM1ZpYzJOeWFXSmxjbk11YzJsNlpTQTlQVDBnTUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIVnVjM1ZpSUQwZ2RHaHBjeTV6ZFdKelkzSnBZbVVvS0NrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J1WlhkV1lXeDFaU0E5SUhSeVlXNXpabTl5YlNoMGFHbHpMbWRsZENncEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RtRnNkV1VnSVQwOUlHNWxkMVpoYkhWbEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlNBOUlHNWxkMVpoYkhWbFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCQmNuSmhlUzVtY205dEtITjFZbk5qY21saVpYSnpLUzVtYjNKRllXTm9LQ2hqWWlrZ1BUNGdZMklvS1NsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lITjFZbk5qY21saVpYSnpMbUZrWkNoallXeHNZbUZqYXlsY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpkV0p6WTNKcFltVnljeTVrWld4bGRHVW9ZMkZzYkdKaFkyc3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hOMVluTmpjbWxpWlhKekxuTnBlbVVnUFQwOUlEQXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1VnUFNCbGJYQjBlVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMWJuTjFZaWdwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnWjJWMElEMGdLQ2s2SUZJZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhaaGJIVmxJQ0U5UFNCbGJYQjBlU0EvSUhaaGJIVmxJRG9nZEhKaGJuTm1iM0p0S0hSb2FYTXVaMlYwS0NrcFhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUVGalkyVnpjMjl5S0dkbGRDd2djM1ZpYzJOeWFXSmxLVnh1SUNBZ0lIMWNibHh1SUNBZ0lIUnZVM1J5YVc1bktDazZJSE4wY21sdVp5QjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQmdRV05qWlhOemIzSThKSHQwYUdsekxtZGxkQ2dwZlQ1Z1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnVzFONWJXSnZiQzUwYjFCeWFXMXBkR2wyWlYwb0tTQjdYRzRnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmloY0lrRmpZMlZ6YzI5eUlHbHRjR3hwWTJsMGJIa2dZMjl1ZG1WeWRHVmtJSFJ2SUdFZ2NISnBiV2wwYVhabElIWmhiSFZsTGx3aUtWeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUwYjFOMGNtbHVaeWdwWEc0Z0lDQWdmVnh1ZlZ4dVhHNWxlSEJ2Y25RZ2FXNTBaWEptWVdObElFRmpZMlZ6YzI5eVBGUStJSHRjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUJEY21WaGRHVWdZU0JqYjIxd2RYUmxaQ0JnUVdOalpYTnpiM0pnSUhSb1lYUWdZMkZqYUdWeklHbDBjeUIwY21GdWMyWnZjbTFsWkNCMllXeDFaUzVjYmlBZ0lDQWdLaUJBY0dGeVlXMGdkSEpoYm5ObWIzSnRJRlJvWlNCMGNtRnVjMlp2Y20xaGRHbHZiaUIwYnlCaGNIQnNlUzRnVTJodmRXeGtJR0psSUdFZ2NIVnlaU0JtZFc1amRHbHZiaTVjYmlBZ0lDQWdLaUJ6WldVZ2UwQnNhVzVySUdOeVpXRjBaVU52YlhCMWRHVmtmU0JoYm1RZ2UwQnNhVzVySUdOeVpXRjBaVU52YlhCMWRHVmtVSEp2WkhWalpYSjlYRzRnSUNBZ0lDb3ZYRzRnSUNBZ1BGSWdQU0JVUGloMGNtRnVjMlp2Y20wNklDaDJZV3gxWlRvZ1ZDa2dQVDRnVWlrNklFRmpZMlZ6YzI5eVBGSStYRzU5WEc1Y2JtVjRjRzl5ZENCMGVYQmxJRk5sZEhSbGNqeFVQaUE5SUh0Y2JpQWdJQ0FvZG1Gc2RXVTZJRlFwT2lCMmIybGtYRzRnSUNBZ0tIWmhiSFZsT2lBb2NISmxkam9nVkNrZ1BUNGdWQ2s2SUhadmFXUmNibjFjYmx4dVpYaHdiM0owSUhSNWNHVWdVM1JoZEdVOFZENGdQU0JiUVdOalpYTnpiM0k4VkQ0c0lGTmxkSFJsY2p4VVBsMWNibHh1THlvcVhHNGdLaUJEY21WaGRHVWdZU0IzY21sMFlXSnNaU0J6YVdkdVlXd3VYRzRnS2x4dUlDb2dRSEJoY21GdElHbHVhWFFnVkdobElHbHVkR2xoYkNCMllXeDFaU0J2WmlCMGFHVWdjMmxuYm1Gc1hHNGdLaUJBY21WMGRYSnVjeUJCYmlCZ1FXTmpaWE56YjNKZ0lHRnVaQ0JoSUhObGRIUmxjaUJtZFc1amRHbHZibHh1SUNvdlhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1kzSmxZWFJsVTNSaGRHVThWRDRvYVc1cGREb2dWQ2s2SUZOMFlYUmxQRlErSUh0Y2JpQWdJQ0JzWlhRZ1kzVnljbVZ1ZEZaaGJIVmxJRDBnYVc1cGRGeHVJQ0FnSUdOdmJuTjBJSE4xWW5OamNtbGlaWEp6SUQwZ2JtVjNJRk5sZER4VGRXSnpZM0pwWW1WRFlXeHNZbUZqYXo0b0tWeHVYRzRnSUNBZ1kyOXVjM1FnYzNWaWMyTnlhV0psT2lCVGRXSnpZM0pwWW1WR2RXNWpkR2x2YmlBOUlDaGpZV3hzWW1GamF5a2dQVDRnZTF4dUlDQWdJQ0FnSUNCemRXSnpZM0pwWW1WeWN5NWhaR1FvWTJGc2JHSmhZMnNwWEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUFvS1NBOVBpQnpkV0p6WTNKcFltVnljeTVrWld4bGRHVW9ZMkZzYkdKaFkyc3BYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1kyOXVjM1FnYzJWMElEMGdLRzVsZDFaaGJIVmxPaUIxYm10dWIzZHVLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUhaaGJIVmxPaUJVSUQwZ2RIbHdaVzltSUc1bGQxWmhiSFZsSUQwOVBTQmNJbVoxYm1OMGFXOXVYQ0lnUHlCdVpYZFdZV3gxWlNoamRYSnlaVzUwVm1Gc2RXVXBJRG9nYm1WM1ZtRnNkV1ZjYmlBZ0lDQWdJQ0FnYVdZZ0tHTjFjbkpsYm5SV1lXeDFaU0FoUFQwZ2RtRnNkV1VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR04xY25KbGJuUldZV3gxWlNBOUlIWmhiSFZsWEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMeUJ5ZFc1dWFXNW5JR05oYkd4aVlXTnJjeUJ0YVdkb2RDQnRkWFJoZEdVZ2MzVmljMk55YVdKbGNuTmNiaUFnSUNBZ0lDQWdJQ0FnSUVGeWNtRjVMbVp5YjIwb2MzVmljMk55YVdKbGNuTXBMbVp2Y2tWaFkyZ29LR05pS1NBOVBpQmpZaWdwS1Z4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnY21WMGRYSnVJRnR1WlhjZ1FXTmpaWE56YjNJb0tDa2dQVDRnWTNWeWNtVnVkRlpoYkhWbExDQnpkV0p6WTNKcFltVXBMQ0J6WlhRZ1lYTWdVMlYwZEdWeVBGUStYVnh1ZlZ4dVhHNW1kVzVqZEdsdmJpQmpjbVZoZEdWRGIyMXdkWFJsWkZCeWIyUjFZMlZ5UEZRK0tHWnVPaUFvZEhKaFkyczZJRHhXUGloemFXZHVZV3c2SUVGalkyVnpjMjl5UEZZK0tTQTlQaUJXS1NBOVBpQlVLVG9nUVdOalpYTnpiM0k4VkQ0Z2UxeHVJQ0FnSUd4bGRDQjJZV3gxWlRvZ2RIbHdaVzltSUdWdGNIUjVJSHdnVkNBOUlHVnRjSFI1WEc0Z0lDQWdiR1YwSUhCeVpYWkVaWEJ6SUQwZ2JtVjNJRTFoY0R4QlkyTmxjM052Y2l3Z1JHbHpjRzl6WlVaMWJtTjBhVzl1UGlncFhHNWNiaUFnSUNCamIyNXpkQ0J6ZFdKelkzSnBZbVZ5Y3lBOUlHNWxkeUJUWlhROFUzVmljMk55YVdKbFEyRnNiR0poWTJzK0tDbGNiaUFnSUNCamIyNXpkQ0JqWVdOb1pTQTlJRzVsZHlCTllYQThRV05qWlhOemIzSXNJSFZ1YTI1dmQyNCtLQ2xjYmx4dUlDQWdJR052Ym5OMElHVm1abVZqZENBOUlDZ3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnWkdWd2N5QTlJRzVsZHlCVFpYUThRV05qWlhOemIzSStLQ2xjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdibVYzVm1Gc2RXVWdQU0JtYmlnb2Rpa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdaR1Z3Y3k1aFpHUW9kaWxjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlBb1kyRmphR1V1WjJWMEtIWXBJR0Z6SUdGdWVTa2dmSHdnZGk1blpYUW9LVnh1SUNBZ0lDQWdJQ0I5S1Z4dVhHNGdJQ0FnSUNBZ0lHTnZibk4wSUdScFpFTm9ZVzVuWlNBOUlIWmhiSFZsSUNFOVBTQnVaWGRXWVd4MVpWeHVJQ0FnSUNBZ0lDQjJZV3gxWlNBOUlHNWxkMVpoYkhWbFhHNWNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2JtVjNSR1Z3Y3lBOUlHNWxkeUJOWVhBOFFXTmpaWE56YjNJc0lFUnBjM0J2YzJWR2RXNWpkR2x2Ymo0b0tWeHVYRzRnSUNBZ0lDQWdJR1p2Y2lBb1kyOXVjM1FnVzJSbGNDd2dkVzV6ZFdKZElHOW1JSEJ5WlhaRVpYQnpLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVdSbGNITXVhR0Z6S0dSbGNDa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxYm5OMVlpZ3BYRzRnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc1bGQwUmxjSE11YzJWMEtHUmxjQ3dnZFc1emRXSXBYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JtYjNJZ0tHTnZibk4wSUdSbGNDQnZaaUJrWlhCektTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9JVzVsZDBSbGNITXVhR0Z6S0dSbGNDa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmthWE53YjNObElEMGdaR1Z3TG5OMVluTmpjbWxpWlNnb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUhaaGJIVmxJRDBnWkdWd0xtZGxkQ2dwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hqWVdOb1pTNW5aWFFvWkdWd0tTQWhQVDBnZG1Gc2RXVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oWTJobExuTmxkQ2hrWlhBc0lIWmhiSFZsS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWldabVpXTjBLQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibVYzUkdWd2N5NXpaWFFvWkdWd0xDQmthWE53YjNObEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdjSEpsZGtSbGNITWdQU0J1WlhkRVpYQnpYRzRnSUNBZ0lDQWdJR2xtSUNoa2FXUkRhR0Z1WjJVcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUVGeWNtRjVMbVp5YjIwb2MzVmljMk55YVdKbGNuTXBMbVp2Y2tWaFkyZ29LR05pS1NBOVBpQmpZaWdwS1Z4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnWTI5dWMzUWdjM1ZpYzJOeWFXSmxPaUJUZFdKelkzSnBZbVZHZFc1amRHbHZiaUE5SUNoallXeHNZbUZqYXlrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0JwWmlBb2MzVmljMk55YVdKbGNuTXVjMmw2WlNBOVBUMGdNQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdaV1ptWldOMEtDbGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUhOMVluTmpjbWxpWlhKekxtRmtaQ2hqWVd4c1ltRmpheWxjYmx4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnS0NrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2MzVmljMk55YVdKbGNuTXVaR1ZzWlhSbEtHTmhiR3hpWVdOcktWeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tITjFZbk5qY21saVpYSnpMbk5wZW1VZ1BUMDlJREFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaU0E5SUdWdGNIUjVYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5SUNoamIyNXpkQ0JiTENCMWJuTjFZbDBnYjJZZ2NISmxka1JsY0hNcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZFc1emRXSW9LVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lHTnZibk4wSUdkbGRDQTlJQ2dwT2lCVUlEMCtJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFpoYkhWbElDRTlQU0JsYlhCMGVTQS9JSFpoYkhWbElEb2dabTRvS0hZcElEMCtJSFl1WjJWMEtDa3BYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NtVjBkWEp1SUc1bGR5QkJZMk5sYzNOdmNpaG5aWFFzSUhOMVluTmpjbWxpWlNsY2JuMWNibHh1Wm5WdVkzUnBiMjRnWTNKbFlYUmxRMjl0Y0hWMFpXUkJjbWR6UEZ4dUlDQWdJR052Ym5OMElFUmxjSE1nWlhoMFpXNWtjeUJCY25KaGVUeEJZMk5sYzNOdmNqeGhibmsrUGl4Y2JpQWdJQ0JCY21keklHVjRkR1Z1WkhNZ2V5QmJTeUJwYmlCclpYbHZaaUJFWlhCelhUb2dRV05qWlhOelpXUThSR1Z3YzF0TFhUNGdmU3hjYmlBZ0lDQldJRDBnUVhKbmN5eGNiajRvWkdWd2N6b2dSR1Z3Y3l3Z2RISmhibk5tYjNKdFB6b2dLQzR1TG1GeVozTTZJRUZ5WjNNcElEMCtJRllwT2lCQlkyTmxjM052Y2p4V1BpQjdYRzRnSUNBZ2JHVjBJR1JwYzNCdmMyVTZJRUZ5Y21GNVBFUnBjM0J2YzJWR2RXNWpkR2x2Ymo1Y2JpQWdJQ0JzWlhRZ2RtRnNkV1U2SUhSNWNHVnZaaUJsYlhCMGVTQjhJRllnUFNCbGJYQjBlVnh1WEc0Z0lDQWdZMjl1YzNRZ2MzVmljMk55YVdKbGNuTWdQU0J1WlhjZ1UyVjBQRk4xWW5OamNtbGlaVU5oYkd4aVlXTnJQaWdwWEc0Z0lDQWdZMjl1YzNRZ1kyRmphR1VnUFNCdVpYY2dRWEp5WVhrOGRXNXJibTkzYmo0b1pHVndjeTVzWlc1bmRHZ3BYRzVjYmlBZ0lDQmpiMjV6ZENCamIyMXdkWFJsSUQwZ0tDazZJRllnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCaGNtZHpJRDBnWkdWd2N5NXRZWEFvS0dSbGNDd2dhU2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRmpZV05vWlZ0cFhTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oWTJobFcybGRJRDBnWkdWd0xtZGxkQ2dwWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCallXTm9aVnRwWFZ4dUlDQWdJQ0FnSUNCOUtWeHVYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjBjbUZ1YzJadmNtMGdQeUIwY21GdWMyWnZjbTBvTGk0dUtHRnlaM01nWVhNZ1FYSm5jeWtwSURvZ0tHRnlaM01nWVhNZ1ZpbGNiaUFnSUNCOVhHNWNiaUFnSUNCamIyNXpkQ0J6ZFdKelkzSnBZbVU2SUZOMVluTmpjbWxpWlVaMWJtTjBhVzl1SUQwZ0tHTmhiR3hpWVdOcktTQTlQaUI3WEc0Z0lDQWdJQ0FnSUdsbUlDaHpkV0p6WTNKcFltVnljeTV6YVhwbElEMDlQU0F3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2IzTmxJRDBnWkdWd2N5NXRZWEFvS0dSbGNDd2dhU2tnUFQ1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1pYQXVjM1ZpYzJOeWFXSmxLQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdibVYzVm1Gc2RXVWdQU0JrWlhBdVoyVjBLQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR05oWTJobFcybGRJQ0U5UFNCdVpYZFdZV3gxWlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRmphR1ZiYVYwZ1BTQmtaWEF1WjJWMEtDbGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2JtVjNWbUZzZFdVZ1BTQmpiMjF3ZFhSbEtDbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gyWVd4MVpTQWhQVDBnYm1WM1ZtRnNkV1VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlNBOUlHNWxkMVpoYkhWbFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdRWEp5WVhrdVpuSnZiU2h6ZFdKelkzSnBZbVZ5Y3lrdVptOXlSV0ZqYUNnb1kySXBJRDArSUdOaUtDa3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNsY2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJSE4xWW5OamNtbGlaWEp6TG1Ga1pDaGpZV3hzWW1GamF5bGNibHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdLQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYzNWaWMyTnlhV0psY25NdVpHVnNaWFJsS0dOaGJHeGlZV05yS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hOMVluTmpjbWxpWlhKekxuTnBlbVVnUFQwOUlEQXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpTQTlJR1Z0Y0hSNVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHbHpjRzl6WlM1dFlYQW9LR05pS1NBOVBpQmpZaWdwS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdScGMzQnZjMlV1YkdWdVozUm9JRDBnTUZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaFkyaGxMbXhsYm1kMGFDQTlJREJjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lHTnZibk4wSUdkbGRDQTlJQ2dwT2lCV0lEMCtJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFpoYkhWbElDRTlQU0JsYlhCMGVTQS9JSFpoYkhWbElEb2dZMjl0Y0hWMFpTZ3BYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NtVjBkWEp1SUc1bGR5QkJZMk5sYzNOdmNpaG5aWFFzSUhOMVluTmpjbWxpWlNsY2JuMWNibHh1THlvcVhHNGdLaUJEY21WaGRHVWdZVzRnWUVGalkyVnpjMjl5WUNCbWNtOXRJR0VnY0hKdlpIVmpaWElnWm5WdVkzUnBiMjRnZEdoaGRDQjBjbUZqYTNNZ2FYUnpJR1JsY0dWdVpHVnVZMmxsY3k1Y2JpQXFYRzRnS2lCZ1lHQjBjeUJGZUdGdGNHeGxYRzRnS2lCc1pYUWdZVG9nUVdOalpYTnpiM0k4Ym5WdFltVnlQbHh1SUNvZ2JHVjBJR0k2SUVGalkyVnpjMjl5UEc1MWJXSmxjajVjYmlBcUlHTnZibk4wSUdNNklFRmpZMlZ6YzI5eVBHNTFiV0psY2o0Z1BTQmpjbVZoZEdWRGIyMXdkWFJsWkNnb1oyVjBLU0E5UGlCblpYUW9ZU2tnS3lCblpYUW9ZaWtwWEc0Z0tpQmdZR0JjYmlBcVhHNGdLaUJBWlhod1pYSnBiV1Z1ZEdGc1hHNGdLaUJBY0dGeVlXMGdjSEp2WkhWalpYSWdWR2hsSUhCeWIyUjFZMlZ5SUdaMWJtTjBhVzl1SUhkb2FXTm9JR3hsZENkeklIbHZkU0IwY21GamF5QmtaWEJsYm1SbGJtTnBaWE5jYmlBcUlFQnlaWFIxY201eklGUm9aU0JqYjIxd2RYUmxaQ0JnUVdOalpYTnpiM0pnTGx4dUlDb3ZYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdZM0psWVhSbFEyOXRjSFYwWldROFZENG9YRzRnSUNBZ2NISnZaSFZqWlhJNklDaDBjbUZqYXpvZ1BGWStLSE5wWjI1aGJEb2dRV05qWlhOemIzSThWajRwSUQwK0lGWXBJRDArSUZRc1hHNHBPaUJCWTJObGMzTnZjanhVUGx4dVhHNHZLaXBjYmlBcUlFTnlaV0YwWlNCaGJpQmdRV05qWlhOemIzSmdJSGRvYVdOb0lHbHpJR052YlhCMWRHVmtJR1p5YjIwZ1lTQnNhWE4wSUc5bUlHZHBkbVZ1SUdCQlkyTmxjM052Y21CekxseHVJQ3BjYmlBcUlHQmdZSFJ6SUVWNFlXMXdiR1ZjYmlBcUlHeGxkQ0JoT2lCQlkyTmxjM052Y2p4dWRXMWlaWEkrWEc0Z0tpQnNaWFFnWWpvZ1FXTmpaWE56YjNJOGMzUnlhVzVuUGx4dUlDb2dZMjl1YzNRZ1l6b2dRV05qWlhOemIzSThXMjUxYldKbGNpd2djM1J5YVc1blhUNGdQU0JqY21WaGRHVkRiMjF3ZFhSbFpDaGJZU3dnWWwwcFhHNGdLaUJqYjI1emRDQmtPaUJCWTJObGMzTnZjanh6ZEhKcGJtYytJRDBnWTNKbFlYUmxRMjl0Y0hWMFpXUW9XMkVzSUdKZExDQW9ZVG9nYm5WdFltVnlMQ0JpT2lCemRISnBibWNwSUQwK0lHQWtlMkY5SUNSN1luMWdLVnh1SUNvZ1lHQmdYRzRnS2x4dUlDb2dRSEJoY21GdElHUmxjSE1nVEdsemRDQnZaaUJnUVdOalpYTnpiM0p6WUM1Y2JpQXFJRUJ3WVhKaGJTQjBjbUZ1YzJadmNtMGdRVzRnYjNCMGFXOXVZV3dnZEhKaGJuTm1iM0p0SUdaMWJtTjBhVzl1TGx4dUlDb2dRSEpsZEhWeWJuTWdWR2hsSUdOdmJYQjFkR1ZrSUdCQlkyTmxjM052Y21BdVhHNGdLaTljYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJqY21WaGRHVkRiMjF3ZFhSbFpEeGNiaUFnSUNCamIyNXpkQ0JFWlhCeklHVjRkR1Z1WkhNZ1FYSnlZWGs4UVdOalpYTnpiM0k4WVc1NVBqNHNYRzRnSUNBZ1FYSm5jeUJsZUhSbGJtUnpJSHNnVzBzZ2FXNGdhMlY1YjJZZ1JHVndjMTA2SUVGalkyVnpjMlZrUEVSbGNITmJTMTArSUgwc1hHNGdJQ0FnVkNBOUlFRnlaM01zWEc0K0tHUmxjSE02SUVSbGNITXNJSFJ5WVc1elptOXliVDg2SUNndUxpNWhjbWR6T2lCQmNtZHpLU0E5UGlCVUtUb2dRV05qWlhOemIzSThWRDVjYmx4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUdOeVpXRjBaVU52YlhCMWRHVmtLRnh1SUNBZ0lDNHVMbUZ5WjNNNlhHNGdJQ0FnSUNBZ0lId2dXM0J5YjJSMVkyVnlPaUFvZEhKaFkyczZJRHhXUGloemFXZHVZV3c2SUVGalkyVnpjMjl5UEZZK0tTQTlQaUJXS1NBOVBpQjFibXR1YjNkdVhWeHVJQ0FnSUNBZ0lDQjhJRnRrWlhCek9pQkJjbkpoZVR4QlkyTmxjM052Y2o0c0lIUnlZVzV6Wm05eWJUODZJQ2d1TGk1aGNtZHpPaUIxYm10dWIzZHVXMTBwSUQwK0lIVnVhMjV2ZDI1ZFhHNHBJSHRjYmlBZ0lDQmpiMjV6ZENCYlpHVndjMDl5VUhKdlpIVmpaWElzSUhSeVlXNXpabTl5YlYwZ1BTQmhjbWR6WEc0Z0lDQWdhV1lnS0hSNWNHVnZaaUJrWlhCelQzSlFjbTlrZFdObGNpQTlQVDBnWENKbWRXNWpkR2x2Ymx3aUtTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQmpjbVZoZEdWRGIyMXdkWFJsWkZCeWIyUjFZMlZ5S0dSbGNITlBjbEJ5YjJSMVkyVnlLVnh1SUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCamNtVmhkR1ZEYjIxd2RYUmxaRUZ5WjNNb1pHVndjMDl5VUhKdlpIVmpaWElzSUhSeVlXNXpabTl5YlNsY2JpQWdJQ0I5WEc1OVhHNWNiaThxS2x4dUlDb2dRM0psWVhSbElHRnVJR0JCWTJObGMzTnZjbUFnYjI0Z1lTQmdSMDlpYW1WamRDNVBZbXBsWTNSZ0ozTWdZSEJ5YjNCbGNuUjVZQzVjYmlBcVhHNGdLaUJBY0dGeVlXMGdiMkpxWldOMElGUm9aU0JnUjA5aWFtVmpkQzVQWW1wbFkzUmdJSFJ2SUdOeVpXRjBaU0IwYUdVZ1lFRmpZMlZ6YzI5eVlDQnZiaTVjYmlBcUlFQndZWEpoYlNCd2NtOXdaWEowZVNCUGJtVWdiMllnYVhSeklISmxaMmx6ZEdWeVpXUWdjSEp2Y0dWeWRHbGxjeTVjYmlBcUwxeHVaWGh3YjNKMElHWjFibU4wYVc5dUlHTnlaV0YwWlVKcGJtUnBibWM4VkNCbGVIUmxibVJ6SUVkUFltcGxZM1F1VDJKcVpXTjBMQ0JRSUdWNGRHVnVaSE1nYTJWNWIyWWdWRDRvWEc0Z0lDQWdiMkpxWldOME9pQlVMRnh1SUNBZ0lIQnliM0JsY25SNU9pQkZlSFJ5WVdOMFBGQXNJSE4wY21sdVp6NHNYRzRwT2lCQlkyTmxjM052Y2p4VVcxQmRQbHh1WEc0dkx5QlVUMFJQT2lCemRYQndiM0owSUc1bGMzUmxaQ0JpYVc1a2FXNW5jMXh1THk4Z1pYaHdiM0owSUdaMWJtTjBhVzl1SUdOeVpXRjBaVUpwYm1ScGJtYzhYRzR2THlBZ0lDQWdWQ0JsZUhSbGJtUnpJRWRQWW1wbFkzUXVUMkpxWldOMExGeHVMeThnSUNBZ0lGQXhJR1Y0ZEdWdVpITWdhMlY1YjJZZ1ZDeGNiaTh2SUNBZ0lDQlFNaUJsZUhSbGJtUnpJR3RsZVc5bUlFNXZiazUxYkd4aFlteGxQRlJiVURGZFBpeGNiaTh2SUQ0b1hHNHZMeUFnSUNBZ2IySnFaV04wT2lCVUxGeHVMeThnSUNBZ0lIQnliM0JsY25SNU1Ub2dSWGgwY21GamREeFFNU3dnYzNSeWFXNW5QaXhjYmk4dklDQWdJQ0J3Y205d1pYSjBlVEk2SUVWNGRISmhZM1E4VURJc0lITjBjbWx1Wno0c1hHNHZMeUFwT2lCQlkyTmxjM052Y2p4T2IyNU9kV3hzWVdKc1pUeFVXMUF4WFQ1YlVESmRQbHh1WEc0dktpcGNiaUFxSUVOeVpXRjBaU0JoYmlCZ1FXTmpaWE56YjNKZ0lHOXVJR0VnWUVkcGJ5NVRaWFIwYVc1bmMyQW5jeUJnYTJWNVlDNWNiaUFxSUZaaGJIVmxjeUJoY21VZ2NtVmpkWEp6YVhabGJIa2dkVzV3WVdOclpXUXVYRzRnS2x4dUlDb2dRR1JsY0hKbFkyRjBaV1FnY0hKbFptVnlJSFZ6YVc1bklIdEFiR2x1YXlCamNtVmhkR1ZUWlhSMGFXNW5jMzB1WEc0Z0tpQkFjR0Z5WVcwZ2IySnFaV04wSUZSb1pTQmdSMmx2TGxObGRIUnBibWR6WUNCMGJ5QmpjbVZoZEdVZ2RHaGxJR0JCWTJObGMzTnZjbUFnYjI0dVhHNGdLaUJBY0dGeVlXMGdhMlY1SUZSb1pTQnpaWFIwYVc1bmN5QnJaWGxjYmlBcUwxeHVaWGh3YjNKMElHWjFibU4wYVc5dUlHTnlaV0YwWlVKcGJtUnBibWM4VkQ0b2MyVjBkR2x1WjNNNklFZHBieTVUWlhSMGFXNW5jeXdnYTJWNU9pQnpkSEpwYm1jcE9pQkJZMk5sYzNOdmNqeFVQbHh1WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnWTNKbFlYUmxRbWx1WkdsdVp6eFVQaWh2WW1wbFkzUTZJRWRQWW1wbFkzUXVUMkpxWldOMElId2dSMmx2TGxObGRIUnBibWR6TENCclpYazZJSE4wY21sdVp5azZJRUZqWTJWemMyOXlQRlErSUh0Y2JpQWdJQ0JqYjI1emRDQndjbTl3SUQwZ2EyVmlZV0pwWm5rb2EyVjVLU0JoY3lCclpYbHZaaUIwZVhCbGIyWWdiMkpxWldOMFhHNWNiaUFnSUNCamIyNXpkQ0J6ZFdKelkzSnBZbVU2SUZOMVluTmpjbWxpWlVaMWJtTjBhVzl1SUQwZ0tHTmhiR3hpWVdOcktTQTlQaUI3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJSE5wWnlBOUlHOWlhbVZqZENCcGJuTjBZVzVqWlc5bUlFZHBieTVUWlhSMGFXNW5jeUEvSUZ3aVkyaGhibWRsWkZ3aUlEb2dYQ0p1YjNScFpubGNJbHh1SUNBZ0lDQWdJQ0JqYjI1emRDQnBaQ0E5SUc5aWFtVmpkQzVqYjI1dVpXTjBLR0FrZTNOcFozMDZPaVI3Y0hKdmNIMWdMQ0FvS1NBOVBpQmpZV3hzWW1GamF5Z3BLVnh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdLQ2tnUFQ0Z2IySnFaV04wTG1ScGMyTnZibTVsWTNRb2FXUXBYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1kyOXVjM1FnWjJWMElEMGdLQ2s2SUZRZ1BUNGdlMXh1SUNBZ0lDQWdJQ0JwWmlBb2IySnFaV04wSUdsdWMzUmhibU5sYjJZZ1IybHZMbE5sZEhScGJtZHpLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2IySnFaV04wTG1kbGRGOTJZV3gxWlNoclpYa3BMbkpsWTNWeWMybDJaVlZ1Y0dGamF5Z3BJR0Z6SUZSY2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJR2xtSUNodlltcGxZM1FnYVc1emRHRnVZMlZ2WmlCSFQySnFaV04wTGs5aWFtVmpkQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ1oyVjBkR1Z5SUQwZ1lHZGxkRjhrZTNCeWIzQXVjbVZ3YkdGalpVRnNiQ2hjSWkxY0lpd2dYQ0pmWENJcGZXQWdZWE1nYTJWNWIyWWdkSGx3Wlc5bUlHOWlhbVZqZEZ4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1oyVjBkR1Z5SUdsdUlHOWlhbVZqZENBbUppQjBlWEJsYjJZZ2IySnFaV04wVzJkbGRIUmxjbDBnUFQwOUlGd2lablZ1WTNScGIyNWNJaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUFvYjJKcVpXTjBXMmRsZEhSbGNsMGdZWE1nS0NrZ1BUNGdkVzVyYm05M2Jpa29LU0JoY3lCVVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNod2NtOXdJR2x1SUc5aWFtVmpkQ2tnY21WMGRYSnVJRzlpYW1WamRGdHdjbTl3WFNCaGN5QlVYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hMlY1SUdsdUlHOWlhbVZqZENrZ2NtVjBkWEp1SUc5aWFtVmpkRnRyWlhrZ1lYTWdhMlY1YjJZZ2RIbHdaVzltSUc5aWFtVmpkRjBnWVhNZ1ZGeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnZEdoeWIzY2dSWEp5YjNJb1lHTmhibTV2ZENCblpYUWdjSEp2Y0dWeWRIa2dYQ0lrZTJ0bGVYMWNJaUJ2YmlCY0lpUjdiMkpxWldOMGZWd2lZQ2xjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z2JtVjNJRUZqWTJWemMyOXlLR2RsZEN3Z2MzVmljMk55YVdKbEtWeHVmVnh1WEc1MGVYQmxJRU52Ym01bFkzUnBiMjVJWVc1a2JHVnlQRnh1SUNBZ0lFOGdaWGgwWlc1a2N5QkhUMkpxWldOMExrOWlhbVZqZEN4Y2JpQWdJQ0JUSUdWNGRHVnVaSE1nYTJWNWIyWWdUMXRjSWlSemFXZHVZV3h6WENKZExGeHVJQ0FnSUZRc1hHNCtJRDBnVDF0Y0lpUnphV2R1WVd4elhDSmRXMU5kSUdWNGRHVnVaSE1nS0M0dUxtRnlaM002SUdGdWVWdGRLU0E5UGlCcGJtWmxjaUJTWEc0Z0lDQWdQeUIyYjJsa0lHVjRkR1Z1WkhNZ1VseHVJQ0FnSUNBZ0lDQS9JQ2d1TGk1aGNtZHpPaUJiTGk0dVVHRnlZVzFsZEdWeWN6eFBXMXdpSkhOcFoyNWhiSE5jSWwxYlUxMCtMQ0JqZFhKeVpXNTBWbUZzZFdVNklGUmRLU0E5UGlCVVhHNGdJQ0FnSUNBZ0lEb2dibVYyWlhKY2JpQWdJQ0E2SUc1bGRtVnlYRzVjYmk4cUtseHVJQ29nUTNKbFlYUmxJR0Z1SUdCQlkyTmxjM052Y21BZ2QyaHBZMmdnYzJWMGN5QjFjQ0JoSUd4cGMzUWdiMllnWUVkUFltcGxZM1F1VDJKcVpXTjBZQ0J6YVdkdVlXd2dZMjl1Ym1WamRHbHZibk11WEc0Z0tseHVJQ29nWUdCZ2RITWdSWGhoYlhCc1pWeHVJQ29nWTI5dWMzUWdkbUZzZFdVNklFRmpZMlZ6YzI5eVBITjBjbWx1Wno0Z1BTQmpjbVZoZEdWRGIyNXVaV04wYVc5dUtGeHVJQ29nSUNCY0ltbHVhWFJwWVd3Z2RtRnNkV1ZjSWl4Y2JpQXFJQ0FnVzI5aWFqRXNJRndpYzJsbkxXNWhiV1ZjSWl3Z0tDNHVMbUZ5WjNNcElEMCtJRndpYzNSeVhDSmRMRnh1SUNvZ0lDQmJiMkpxTWl3Z1hDSnphV2N0Ym1GdFpWd2lMQ0FvTGk0dVlYSm5jeWtnUFQ0Z1hDSnpkSEpjSWwxY2JpQXFJQ2xjYmlBcUlHQmdZRnh1SUNwY2JpQXFJRUJ3WVhKaGJTQnBibWwwSUZSb1pTQnBibWwwYVdGc0lIWmhiSFZsWEc0Z0tpQkFjR0Z5WVcwZ2MybG5ibUZzY3lCQklHeHBjM1FnYjJZZ1lFZFBZbXBsWTNRdVQySnFaV04wWUN3Z2MybG5ibUZzSUc1aGJXVWdZVzVrSUdOaGJHeGlZV05ySUhCaGFYSnpJSFJ2SUdOdmJtNWxZM1F1WEc0Z0tpOWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQmpjbVZoZEdWRGIyNXVaV04wYVc5dVBGeHVJQ0FnSUZRc1hHNGdJQ0FnVHpFZ1pYaDBaVzVrY3lCSFQySnFaV04wTGs5aWFtVmpkQ3hjYmlBZ0lDQlRNU0JsZUhSbGJtUnpJR3RsZVc5bUlFOHhXMXdpSkhOcFoyNWhiSE5jSWwwc1hHNGdJQ0FnVHpJZ1pYaDBaVzVrY3lCSFQySnFaV04wTGs5aWFtVmpkQ3hjYmlBZ0lDQlRNaUJsZUhSbGJtUnpJR3RsZVc5bUlFOHlXMXdpSkhOcFoyNWhiSE5jSWwwc1hHNGdJQ0FnVHpNZ1pYaDBaVzVrY3lCSFQySnFaV04wTGs5aWFtVmpkQ3hjYmlBZ0lDQlRNeUJsZUhSbGJtUnpJR3RsZVc5bUlFOHpXMXdpSkhOcFoyNWhiSE5jSWwwc1hHNGdJQ0FnVHpRZ1pYaDBaVzVrY3lCSFQySnFaV04wTGs5aWFtVmpkQ3hjYmlBZ0lDQlROQ0JsZUhSbGJtUnpJR3RsZVc5bUlFODBXMXdpSkhOcFoyNWhiSE5jSWwwc1hHNGdJQ0FnVHpVZ1pYaDBaVzVrY3lCSFQySnFaV04wTGs5aWFtVmpkQ3hjYmlBZ0lDQlROU0JsZUhSbGJtUnpJR3RsZVc5bUlFODFXMXdpSkhOcFoyNWhiSE5jSWwwc1hHNGdJQ0FnVHpZZ1pYaDBaVzVrY3lCSFQySnFaV04wTGs5aWFtVmpkQ3hjYmlBZ0lDQlROaUJsZUhSbGJtUnpJR3RsZVc5bUlFODJXMXdpSkhOcFoyNWhiSE5jSWwwc1hHNGdJQ0FnVHpjZ1pYaDBaVzVrY3lCSFQySnFaV04wTGs5aWFtVmpkQ3hjYmlBZ0lDQlROeUJsZUhSbGJtUnpJR3RsZVc5bUlFODNXMXdpSkhOcFoyNWhiSE5jSWwwc1hHNGdJQ0FnVHpnZ1pYaDBaVzVrY3lCSFQySnFaV04wTGs5aWFtVmpkQ3hjYmlBZ0lDQlRPQ0JsZUhSbGJtUnpJR3RsZVc5bUlFODRXMXdpSkhOcFoyNWhiSE5jSWwwc1hHNGdJQ0FnVHprZ1pYaDBaVzVrY3lCSFQySnFaV04wTGs5aWFtVmpkQ3hjYmlBZ0lDQlRPU0JsZUhSbGJtUnpJR3RsZVc5bUlFODVXMXdpSkhOcFoyNWhiSE5jSWwwc1hHNCtLRnh1SUNBZ0lHbHVhWFE2SUZRc1hHNGdJQ0FnYURFNklGdFBNU3dnVXpFc0lFTnZibTVsWTNScGIyNUlZVzVrYkdWeVBFOHhMQ0JUTVN3Z1ZENWRMRnh1SUNBZ0lHZ3lQem9nVzA4eUxDQlRNaXdnUTI5dWJtVmpkR2x2YmtoaGJtUnNaWEk4VHpJc0lGTXlMQ0JVUGwwc1hHNGdJQ0FnYURNL09pQmJUek1zSUZNekxDQkRiMjV1WldOMGFXOXVTR0Z1Wkd4bGNqeFBNeXdnVXpNc0lGUStYU3hjYmlBZ0lDQm9ORDg2SUZ0UE5Dd2dVelFzSUVOdmJtNWxZM1JwYjI1SVlXNWtiR1Z5UEU4MExDQlROQ3dnVkQ1ZExGeHVJQ0FnSUdnMVB6b2dXMDgxTENCVE5Td2dRMjl1Ym1WamRHbHZia2hoYm1Sc1pYSThUelVzSUZNMUxDQlVQbDBzWEc0Z0lDQWdhRFkvT2lCYlR6WXNJRk0yTENCRGIyNXVaV04wYVc5dVNHRnVaR3hsY2p4UE5pd2dVellzSUZRK1hTeGNiaUFnSUNCb056ODZJRnRQTnl3Z1V6Y3NJRU52Ym01bFkzUnBiMjVJWVc1a2JHVnlQRTgzTENCVE55d2dWRDVkTEZ4dUlDQWdJR2c0UHpvZ1cwODRMQ0JUT0N3Z1EyOXVibVZqZEdsdmJraGhibVJzWlhJOFR6Z3NJRk00TENCVVBsMHNYRzRnSUNBZ2FEay9PaUJiVHprc0lGTTVMQ0JEYjI1dVpXTjBhVzl1U0dGdVpHeGxjanhQT1N3Z1V6a3NJRlErWFN4Y2Jpa2dlMXh1SUNBZ0lHeGxkQ0IyWVd4MVpTQTlJR2x1YVhSY2JpQWdJQ0JzWlhRZ1pHbHpjRzl6WlRvZ1FYSnlZWGs4UkdsemNHOXpaVVoxYm1OMGFXOXVQbHh1SUNBZ0lHTnZibk4wSUhOMVluTmpjbWxpWlhKeklEMGdibVYzSUZObGREeFRkV0p6WTNKcFltVkRZV3hzWW1GamF6NG9LVnh1SUNBZ0lHTnZibk4wSUhOcFoyNWhiSE1nUFNCYmFERXNJR2d5TENCb015d2dhRFFzSUdnMUxDQm9OaXdnYURjc0lHZzRMQ0JvT1YwdVptbHNkR1Z5S0Nob0tTQTlQaUJvSUNFOVBTQjFibVJsWm1sdVpXUXBYRzVjYmlBZ0lDQmpiMjV6ZENCemRXSnpZM0pwWW1VNklGTjFZbk5qY21saVpVWjFibU4wYVc5dUlEMGdLR05oYkd4aVlXTnJLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lHbG1JQ2h6ZFdKelkzSnBZbVZ5Y3k1emFYcGxJRDA5UFNBd0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCa2FYTndiM05sSUQwZ2MybG5ibUZzY3k1dFlYQW9LRnR2WW1wbFkzUXNJSE5wWjI1aGJDd2dZMkZzYkdKaFkydGRLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnYVdRZ1BTQkhUMkpxWldOMExrOWlhbVZqZEM1d2NtOTBiM1I1Y0dVdVkyOXVibVZqZEM1allXeHNLRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdlltcGxZM1FzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITnBaMjVoYkNCaGN5QnpkSEpwYm1jc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ2hmTENBdUxpNWhjbWR6S1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCdVpYZFdZV3gxWlNBOUlHTmhiR3hpWVdOcktDNHVMbUZ5WjNNc0lIWmhiSFZsS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIWmhiSFZsSUNFOVBTQnVaWGRXWVd4MVpTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxJRDBnYm1WM1ZtRnNkV1ZjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCQmNuSmhlUzVtY205dEtITjFZbk5qY21saVpYSnpLUzVtYjNKRllXTm9LQ2hqWWlrZ1BUNGdZMklvS1NsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FwWEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnS0NrZ1BUNGdSMDlpYW1WamRDNVBZbXBsWTNRdWNISnZkRzkwZVhCbExtUnBjMk52Ym01bFkzUXVZMkZzYkNodlltcGxZM1FzSUdsa0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlNsY2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJSE4xWW5OamNtbGlaWEp6TG1Ga1pDaGpZV3hzWW1GamF5bGNibHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdLQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYzNWaWMyTnlhV0psY25NdVpHVnNaWFJsS0dOaGJHeGlZV05yS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hOMVluTmpjbWxpWlhKekxuTnBlbVVnUFQwOUlEQXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2IzTmxMbTFoY0Nnb1kySXBJRDArSUdOaUtDa3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0c5elpTNXNaVzVuZEdnZ1BTQXdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCeVpYUjFjbTRnYm1WM0lFRmpZMlZ6YzI5eUtDZ3BJRDArSUhaaGJIVmxMQ0J6ZFdKelkzSnBZbVVwWEc1OVhHNWNiaThxS2x4dUlDb2dRM0psWVhSbElHRWdjMmxuYm1Gc0lHWnliMjBnWVNCd2NtOTJhV1Z5SUdaMWJtTjBhVzl1TGx4dUlDb2dWR2hsSUhCeWIzWnBaR1Z5SUdseklHTmhiR3hsWkNCM2FHVnVJSFJvWlNCbWFYSnpkQ0J6ZFdKelkzSnBZbVZ5SUdGd2NHVmhjbk1nWVc1a0lIUm9aU0J5WlhSMWNtNWxaQ0JrYVhOd2IzTmxYRzRnS2lCbWRXNWpkR2x2YmlCbWNtOXRJSFJvWlNCd2NtOTJhV1JsY2lCM2FXeHNJR0psSUdOaGJHeGxaQ0IzYUdWdUlIUm9aU0J1ZFcxaVpYSWdiMllnYzNWaWMyTnlhV0psY25NZ1pISnZjQ0IwYnlCNlpYSnZMbHh1SUNwY2JpQXFJRVY0WVcxd2JHVTZYRzRnS2x4dUlDb2dZR0JnZEhOY2JpQXFJR052Ym5OMElIWmhiSFZsSUQwZ1kzSmxZWFJsUlhoMFpYSnVZV3dvTUN3Z0tITmxkQ2tnUFQ0Z2UxeHVJQ29nSUNCamIyNXpkQ0JwYm5SbGNuWmhiQ0E5SUhObGRFbHVkR1Z5ZG1Gc0tDZ3BJRDArSUhObGRDZ29kaWtnUFQ0Z2RpQXJJREVwS1Z4dUlDb2dJQ0J5WlhSMWNtNGdLQ2tnUFQ0Z1kyeGxZWEpKYm5SbGNuWmhiQ2hwYm5SbGNuWmhiQ2xjYmlBcUlIMHBYRzRnS2lCZ1lHQmNiaUFxWEc0Z0tpQkFjR0Z5WVcwZ2FXNXBkQ0JVYUdVZ2FXNXBkR2xoYkNCMllXeDFaVnh1SUNvZ1FIQmhjbUZ0SUhCeWIyUjFZMlZ5SUZSb1pTQndjbTlrZFdObGNpQm1kVzVqZEdsdmJpQjNhR2xqYUNCemFHOTFiR1FnY21WMGRYSnVJR0VnWTJ4bFlXNTFjQ0JtZFc1amRHbHZibHh1SUNvdlhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1kzSmxZWFJsUlhoMFpYSnVZV3c4VkQ0b1hHNGdJQ0FnYVc1cGREb2dWQ3hjYmlBZ0lDQndjbTlrZFdObGNqb2dLSE5sZERvZ1UyVjBkR1Z5UEZRK0tTQTlQaUJFYVhOd2IzTmxSblZ1WTNScGIyNHNYRzRwT2lCQlkyTmxjM052Y2p4VVBpQjdYRzRnSUNBZ2JHVjBJR04xY25KbGJuUldZV3gxWlNBOUlHbHVhWFJjYmlBZ0lDQnNaWFFnWkdsemNHOXpaVG9nUkdsemNHOXpaVVoxYm1OMGFXOXVYRzRnSUNBZ1kyOXVjM1FnYzNWaWMyTnlhV0psY25NZ1BTQnVaWGNnVTJWMFBGTjFZbk5qY21saVpVTmhiR3hpWVdOclBpZ3BYRzVjYmlBZ0lDQmpiMjV6ZENCemRXSnpZM0pwWW1VNklGTjFZbk5qY21saVpVWjFibU4wYVc5dUlEMGdLR05oYkd4aVlXTnJLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lHbG1JQ2h6ZFdKelkzSnBZbVZ5Y3k1emFYcGxJRDA5UFNBd0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCa2FYTndiM05sSUQwZ2NISnZaSFZqWlhJb0tIWTZJSFZ1YTI1dmQyNHBJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J1WlhkV1lXeDFaVG9nVkNBOUlIUjVjR1Z2WmlCMklEMDlQU0JjSW1aMWJtTjBhVzl1WENJZ1B5QjJLR04xY25KbGJuUldZV3gxWlNrZ09pQjJYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0c1bGQxWmhiSFZsSUNFOVBTQmpkWEp5Wlc1MFZtRnNkV1VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZM1Z5Y21WdWRGWmhiSFZsSUQwZ2JtVjNWbUZzZFdWY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdRWEp5WVhrdVpuSnZiU2h6ZFdKelkzSnBZbVZ5Y3lrdVptOXlSV0ZqYUNnb1kySXBJRDArSUdOaUtDa3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTbGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUhOMVluTmpjbWxpWlhKekxtRmtaQ2hqWVd4c1ltRmpheWxjYmx4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnS0NrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2MzVmljMk55YVdKbGNuTXVaR1ZzWlhSbEtHTmhiR3hpWVdOcktWeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tITjFZbk5qY21saVpYSnpMbk5wZW1VZ1BUMDlJREFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa2FYTndiM05sS0NsY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJSEpsZEhWeWJpQnVaWGNnUVdOalpYTnpiM0lvS0NrZ1BUNGdZM1Z5Y21WdWRGWmhiSFZsTENCemRXSnpZM0pwWW1VcFhHNTlYRzVjYmk4cUtpQkFaWGh3WlhKcGJXVnVkR0ZzSUNvdlhHNTBlWEJsSUZObGRIUnBibWR6UEZRZ1pYaDBaVzVrY3lCU1pXTnZjbVE4YzNSeWFXNW5MQ0J6ZEhKcGJtYytQaUE5SUh0Y2JpQWdJQ0JiU3lCcGJpQnJaWGx2WmlCVUlHRnpJRlZ1WTJGd2FYUmhiR2w2WlR4UVlYTmpZV3hwWm5rOFN6NCtYVG9nUVdOalpYTnpiM0k4VW1WamRYSnphWFpsU1c1bVpYSThWRnRMWFQ0K1hHNTlJQ1lnZTF4dUlDQWdJRnRMSUdsdUlHdGxlVzltSUZRZ1lYTWdZSE5sZENSN1VHRnpZMkZzYVdaNVBFcytmV0JkT2lCVFpYUjBaWEk4UkdWbGNFbHVabVZ5UEZSYlMxMCtQbHh1ZlZ4dVhHNHZLaXBjYmlBcUlFQmxlSEJsY21sdFpXNTBZV3hjYmlBcVhHNGdLaUJYY21Gd0lHRWdlMEJzYVc1cklFZHBieTVUWlhSMGFXNW5jMzBnYVc1MGJ5QmhJR052Ykd4bFkzUnBiMjRnYjJZZ2MyVjBkR1Z5Y3lCaGJtUWdZV05qWlhOemIzSnpMbHh1SUNwY2JpQXFJRVY0WVcxd2JHVTZYRzRnS2x4dUlDb2dZR0JnZEhOY2JpQXFJR052Ym5OMElITWdQU0JqY21WaGRHVlRaWFIwYVc1bmN5aHpaWFIwYVc1bmN5d2dlMXh1SUNvZ0lDQmNJbU52YlhCc1pYZ3RhMlY1WENJNklGd2lZWHR6WVh0emMzMTlYQ0lzWEc0Z0tpQWdJRndpYzJsdGNHeGxMV3RsZVZ3aU9pQmNJbk5jSWl4Y2JpQXFJSDBwWEc0Z0tseHVJQ29nY3k1amIyMXdiR1Y0UzJWNUxuTjFZbk5qY21saVpTZ29LU0E5UGlCN1hHNGdLaUFnSUhCeWFXNTBLSE11WTI5dGNHeGxlRXRsZVM1blpYUW9LU2xjYmlBcUlIMHBYRzRnS2x4dUlDb2djeTV6WlhSRGIyMXdiR1Y0UzJWNUtDaHdjbVYyS1NBOVBpQW9lMXh1SUNvZ0lDQXVMaTV3Y21WMkxGeHVJQ29nSUNCclpYazZJSHNnYm1WemRHVmtPaUJjSWx3aUlIMHNYRzRnS2lCOUtTbGNiaUFxSUdCZ1lGeHVJQ292WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnWTNKbFlYUmxVMlYwZEdsdVozTThZMjl1YzNRZ1ZDQmxlSFJsYm1SeklGSmxZMjl5WkR4emRISnBibWNzSUhOMGNtbHVaejQrS0Z4dUlDQWdJSE5sZEhScGJtZHpPaUJIYVc4dVUyVjBkR2x1WjNNc1hHNGdJQ0FnYTJWNWN6b2dWQ3hjYmlrNklGTmxkSFJwYm1kelBGUStJSHRjYmlBZ0lDQnlaWFIxY200Z1QySnFaV04wTG1aeWIyMUZiblJ5YVdWektGeHVJQ0FnSUNBZ0lDQlBZbXBsWTNRdVpXNTBjbWxsY3loclpYbHpLUzVtYkdGMFRXRndLQ2hiYTJWNUxDQjBlWEJsWFNrZ1BUNGdXMXh1SUNBZ0lDQWdJQ0FnSUNBZ1cxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhiV1ZzYVdaNUtHdGxlU2tzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYm1WM0lFRmpZMlZ6YzI5eUtGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FvS1NBOVBpQnpaWFIwYVc1bmN5NW5aWFJmZG1Gc2RXVW9hMlY1S1M1eVpXTjFjbk5wZG1WVmJuQmhZMnNvS1N4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdLR05oYkd4aVlXTnJLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JwWkNBOUlITmxkSFJwYm1kekxtTnZibTVsWTNRb1lHTm9ZVzVuWldRNk9pUjdhMlY1ZldBc0lHTmhiR3hpWVdOcktWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUNncElEMCtJSE5sZEhScGJtZHpMbVJwYzJOdmJtNWxZM1FvYVdRcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnS1N4Y2JpQWdJQ0FnSUNBZ0lDQWdJRjBzWEc0Z0lDQWdJQ0FnSUNBZ0lDQmJYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZSE5sZENSN2EyVjVXekJkTG5SdlZYQndaWEpEWVhObEtDa2dLeUJqWVcxbGJHbG1lU2hyWlhrcExuTnNhV05sS0RFcGZXQXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdLSFk2SUhWdWEyNXZkMjRwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJWMGRHbHVaM011YzJWMFgzWmhiSFZsS0Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYTJWNUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JtVjNJRWRNYVdJdVZtRnlhV0Z1ZENoY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1Z2WmlCMklEMDlQU0JjSW1aMWJtTjBhVzl1WENJZ1B5QjJLSE5sZEhScGJtZHpMbWRsZEY5MllXeDFaU2hyWlhrcExtUmxaWEJWYm5CaFkyc29LU2tnT2lCMkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0tTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JkTEZ4dUlDQWdJQ0FnSUNCZEtTeGNiaUFnSUNBcFhHNTlYRzRpTENBaWFXMXdiM0owSUhSNWNHVWdSMDlpYW1WamRDQm1jbTl0SUZ3aVoyazZMeTlIVDJKcVpXTjBYQ0pjYm1sdGNHOXlkQ0I3SUhSNWNHVWdRV05qWlhOemIzSWdmU0JtY205dElGd2lMaTl6ZEdGMFpTNXFjMXdpWEc1Y2JuUjVjR1VnUjA5aWFpQTlJRWRQWW1wbFkzUXVUMkpxWldOMFhHNWxlSEJ2Y25RZ2RIbHdaU0JEUXp4VUlHVjRkR1Z1WkhNZ1IwOWlhaUE5SUVkUFltbytJRDBnZXlCdVpYY2dLSEJ5YjNCek9pQmhibmtwT2lCVUlIMWNibVY0Y0c5eWRDQjBlWEJsSUVaRFBGUWdaWGgwWlc1a2N5QkhUMkpxSUQwZ1IwOWlhajRnUFNBb2NISnZjSE02SUdGdWVTa2dQVDRnVkZ4dVhHNTBlWEJsSUVOemMxTmxkSFJsY2lBOUlDaHZZbXBsWTNRNklFZFBZbW9zSUdOemN6b2djM1J5YVc1bklId2dRV05qWlhOemIzSThjM1J5YVc1blBpa2dQVDRnZG05cFpGeHVYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdZMjl1Wm1sbmRXVW9ZMjl1WmpvZ1VHRnlkR2xoYkR4S2MzaEZiblkrS1NCN1hHNGdJQ0FnY21WMGRYSnVJRTlpYW1WamRDNWhjM05wWjI0b1pXNTJMQ0JqYjI1bUtWeHVmVnh1WEc1MGVYQmxJRXB6ZUVWdWRpQTlJSHRjYmlBZ0lDQnBiblJ5YVc1emFXTkZiR1Z0Wlc1MGN6b2dVbVZqYjNKa1BITjBjbWx1Wnl3Z1EwTWdmQ0JHUXo1Y2JpQWdJQ0IwWlhoMFRtOWtaU2h1YjJSbE9pQnpkSEpwYm1jZ2ZDQnVkVzFpWlhJcE9pQkhUMkpxWEc0Z0lDQWdZWEJ3Wlc1a1EyaHBiR1FvY0dGeVpXNTBPaUJIVDJKcUxDQmphR2xzWkRvZ1IwOWlhaWs2SUhadmFXUmNiaUFnSUNCeVpXMXZkbVZEYUdsc1pDaHdZWEpsYm5RNklFZFBZbW9zSUdOb2FXeGtPaUJIVDJKcUtUb2dkbTlwWkZ4dUlDQWdJSE5sZEVOemN6b2dRM056VTJWMGRHVnlYRzRnSUNBZ2MyVjBRMnhoYzNNNklFTnpjMU5sZEhSbGNseHVJQ0FnSUM4dklITjBjbWx1WjF0ZElHTmhiaUJpWlNCMWMyVWdkRzhnWkdWc1lYa2djMlYwZEdsdVp5QndjbTl3Y3lCaFpuUmxjaUJqYUdsc1pISmxibHh1SUNBZ0lDOHZJR1V1WnlCSGRHc3VVM1JoWTJ0YlhDSjJhWE5wWW14bFEyaHBiR1JPWVcxbFhDSmRJR1JsY0dWdVpITWdiMjRnWTJocGJHUnlaVzVjYmlBZ0lDQnBibWwwVUhKdmNITW9ZM1J2Y2pvZ2RXNXJibTkzYml3Z2NISnZjSE02SUdGdWVTazZJSFp2YVdRZ2ZDQnpkSEpwYm1kYlhWeHVJQ0FnSUdSbFptRjFiSFJEYkdWaGJuVndLRzlpYW1WamREb2dSMDlpYWlrNklIWnZhV1JjYm4xY2JseHVablZ1WTNScGIyNGdiV2x6YzJsdVowbHRjR3dvS1RvZ1lXNTVJSHRjYmlBZ0lDQjBhSEp2ZHlCRmNuSnZjaWhjSW0xcGMzTnBibWNnYVcxd2JGd2lLVnh1ZlZ4dVhHNWxlSEJ2Y25RZ1kyOXVjM1FnWlc1Mk9pQktjM2hGYm5ZZ1BTQjdYRzRnSUNBZ2FXNTBjbWx1YzJsalJXeGxiV1Z1ZEhNNklIdDlMRnh1SUNBZ0lIUmxlSFJPYjJSbE9pQnRhWE56YVc1blNXMXdiQ3hjYmlBZ0lDQmhjSEJsYm1SRGFHbHNaRG9nYldsemMybHVaMGx0Y0d3c1hHNGdJQ0FnY21WdGIzWmxRMmhwYkdRNklHMXBjM05wYm1kSmJYQnNMRnh1SUNBZ0lITmxkRU56Y3pvZ2JXbHpjMmx1WjBsdGNHd3NYRzRnSUNBZ2MyVjBRMnhoYzNNNklHMXBjM05wYm1kSmJYQnNMRnh1SUNBZ0lHbHVhWFJRY205d2N6b2dLQ2tnUFQ0Z2RtOXBaQ0F3TEZ4dUlDQWdJR1JsWm1GMWJIUkRiR1ZoYm5Wd09pQW9LU0E5UGlCMmIybGtJREFzWEc1OVhHNGlMQ0FpWlhod2IzSjBJR05zWVhOeklGTmpiM0JsSUh0Y2JpQWdJQ0J6ZEdGMGFXTWdZM1Z5Y21WdWREODZJRk5qYjNCbElId2diblZzYkZ4dVhHNGdJQ0FnY0dGeVpXNTBQem9nVTJOdmNHVWdmQ0J1ZFd4c1hHNGdJQ0FnWTI5dWRHVjRkSE1nUFNCdVpYY2dUV0Z3UEVOdmJuUmxlSFFzSUhWdWEyNXZkMjQrS0NsY2JseHVJQ0FnSUhCeWFYWmhkR1VnWTJ4bFlXNTFjSE1nUFNCdVpYY2dVMlYwUENncElEMCtJSFp2YVdRK0tDbGNiaUFnSUNCd2NtbDJZWFJsSUcxdmRXNTBjeUE5SUc1bGR5QlRaWFE4S0NrZ1BUNGdkbTlwWkQ0b0tWeHVJQ0FnSUhCeWFYWmhkR1VnYlc5MWJuUmxaQ0E5SUdaaGJITmxYRzVjYmlBZ0lDQmpiMjV6ZEhKMVkzUnZjaWh3WVhKbGJuUS9PaUJUWTI5d1pTQjhJRzUxYkd3cElIdGNiaUFnSUNBZ0lDQWdkR2hwY3k1d1lYSmxiblFnUFNCd1lYSmxiblJjYmlBZ0lDQjlYRzVjYmlBZ0lDQnZia05zWldGdWRYQW9ZMkZzYkdKaFkyczZJQ2dwSUQwK0lIWnZhV1FwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHBjeTVqYkdWaGJuVndjejh1WVdSa0tHTmhiR3hpWVdOcktWeHVJQ0FnSUgxY2JseHVJQ0FnSUc5dVRXOTFiblFvWTJGc2JHSmhZMnM2SUNncElEMCtJSFp2YVdRcElIdGNiaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVjR0Z5Wlc1MElDWW1JQ0YwYUdsekxuQmhjbVZ1ZEM1dGIzVnVkR1ZrS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuQmhjbVZ1ZEM1dmJrMXZkVzUwS0dOaGJHeGlZV05yS1Z4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dGIzVnVkSE11WVdSa0tHTmhiR3hpWVdOcktWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NuVnVQRlErS0dadU9pQW9LU0E5UGlCVUtTQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElIQnlaWFlnUFNCVFkyOXdaUzVqZFhKeVpXNTBYRzRnSUNBZ0lDQWdJRk5qYjNCbExtTjFjbkpsYm5RZ1BTQjBhR2x6WEc1Y2JpQWdJQ0FnSUNBZ2RISjVJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCbWJpZ3BYRzRnSUNBZ0lDQWdJSDBnWm1sdVlXeHNlU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG0xdmRXNTBjeTVtYjNKRllXTm9LQ2hqWWlrZ1BUNGdZMklvS1NsY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWJXOTFiblJ6TG1Oc1pXRnlLQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Ylc5MWJuUmxaQ0E5SUhSeWRXVmNiaUFnSUNBZ0lDQWdJQ0FnSUZOamIzQmxMbU4xY25KbGJuUWdQU0J3Y21WMlhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCa2FYTndiM05sS0NrZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TG1Oc1pXRnVkWEJ6TG1admNrVmhZMmdvS0dOaUtTQTlQaUJqWWlncEtWeHVJQ0FnSUNBZ0lDQjBhR2x6TG1Oc1pXRnVkWEJ6TG1Oc1pXRnlLQ2xjYmlBZ0lDQWdJQ0FnZEdocGN5NWpiMjUwWlhoMGN5NWpiR1ZoY2lncFhHNGdJQ0FnSUNBZ0lHUmxiR1YwWlNCMGFHbHpMbkJoY21WdWRGeHVJQ0FnSUgxY2JuMWNibHh1Wlhod2IzSjBJSFI1Y0dVZ1EyOXVkR1Y0ZER4VUlEMGdZVzU1UGlBOUlIdGNiaUFnSUNCMWMyVW9LVG9nVkZ4dUlDQWdJSEJ5YjNacFpHVThVajRvZG1Gc2RXVTZJRlFzSUdadU9pQW9LU0E5UGlCU0tUb2dVbHh1SUNBZ0lDaHdjbTl3Y3pvZ2V5QjJZV3gxWlRvZ1ZEc2dZMmhwYkdSeVpXNDZJQ2dwSUQwK0lFcFRXQzVGYkdWdFpXNTBJSDBwT2lCS1UxZ3VSV3hsYldWdWRGeHVmVnh1WEc0dktpcGNiaUFxSUVWNFlXMXdiR1VnVlhOaFoyVTZYRzRnS2lCZ1lHQjBjM2hjYmlBcUlHTnZibk4wSUUxNVEyOXVkR1Y0ZENBOUlHTnlaV0YwWlVOdmJuUmxlSFFvWENKbVlXeHNZbUZqYXkxMllXeDFaVndpS1Z4dUlDcGNiaUFxSUdaMWJtTjBhVzl1SUVOdmJuTjFiV1Z5UTI5dGNHOXVaVzUwS0NrZ2UxeHVJQ29nSUNCamIyNXpkQ0IyWVd4MVpTQTlJRTE1UTI5dWRHVjRkQzUxYzJVb0tWeHVJQ3BjYmlBcUlDQWdjbVYwZFhKdUlEeEhkR3N1VEdGaVpXd2diR0ZpWld3OWUzWmhiSFZsZlNBdlBseHVJQ29nZlZ4dUlDcGNiaUFxSUdaMWJtTjBhVzl1SUZCeWIzWnBaR1Z5UTI5dGNHOXVaVzUwS0NrZ2UxeHVJQ29nSUNCeVpYUjFjbTRnS0Z4dUlDb2dJQ0FnSUR4SGRHc3VRbTk0UGx4dUlDb2dJQ0FnSUNBZ1BFMTVRMjl1ZEdWNGRDQjJZV3gxWlQxY0ltMTVMWFpoYkhWbFhDSStYRzRnS2lBZ0lDQWdJQ0FnSUhzb0tTQTlQaUE4UTI5dWMzVnRaWEpEYjIxd2IyNWxiblFnTHo1OVhHNGdLaUFnSUNBZ0lDQThMMDE1UTI5dWRHVjRkRDVjYmlBcUlDQWdJQ0E4TDBkMGF5NUNiM2crWEc0Z0tpQWdJQ2xjYmlBcUlIMWNiaUFxSUdCZ1lGeHVJQ292WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnWTNKbFlYUmxRMjl1ZEdWNGREeFVQaWhrWldaaGRXeDBWbUZzZFdVNklGUXBPaUJEYjI1MFpYaDBQRlErSUh0Y2JpQWdJQ0JzWlhRZ1kzUjRPaUJEYjI1MFpYaDBQRlErWEc1Y2JpQWdJQ0JtZFc1amRHbHZiaUJ3Y205MmFXUmxQRkkrS0haaGJIVmxPaUJVTENCbWJqb2dLQ2tnUFQ0Z1VpazZJRklnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0J6WTI5d1pTQTlJR2RsZEZOamIzQmxLQ2xjYmlBZ0lDQWdJQ0FnYzJOdmNHVXVZMjl1ZEdWNGRITXVjMlYwS0dOMGVDd2dkbUZzZFdVcFhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCelkyOXdaUzV5ZFc0b1ptNHBYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1puVnVZM1JwYjI0Z2RYTmxLQ2s2SUZRZ2UxeHVJQ0FnSUNBZ0lDQnNaWFFnYzJOdmNHVWdQU0JUWTI5d1pTNWpkWEp5Wlc1MFhHNGdJQ0FnSUNBZ0lIZG9hV3hsSUNoelkyOXdaU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2RtRnNkV1VnUFNCelkyOXdaUzVqYjI1MFpYaDBjeTVuWlhRb1kzUjRLVnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSFpoYkhWbElDRTlQU0IxYm1SbFptbHVaV1FwSUhKbGRIVnliaUIyWVd4MVpTQmhjeUJVWEc0Z0lDQWdJQ0FnSUNBZ0lDQnpZMjl3WlNBOUlITmpiM0JsTG5CaGNtVnVkRnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJrWldaaGRXeDBWbUZzZFdWY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JtZFc1amRHbHZiaUJqYjI1MFpYaDBLSHNnZG1Gc2RXVXNJR05vYVd4a2NtVnVJSDA2SUhzZ2RtRnNkV1U2SUZRN0lHTm9hV3hrY21WdU9pQW9LU0E5UGlCS1UxZ3VSV3hsYldWdWRDQjlLU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ3Y205MmFXUmxLSFpoYkhWbExDQmphR2xzWkhKbGJpbGNiaUFnSUNCOVhHNWNiaUFnSUNCeVpYUjFjbTRnS0dOMGVDQTlJRTlpYW1WamRDNWhjM05wWjI0b1kyOXVkR1Y0ZEN3Z2UxeHVJQ0FnSUNBZ0lDQndjbTkyYVdSbExGeHVJQ0FnSUNBZ0lDQjFjMlVzWEc0Z0lDQWdmU2twWEc1OVhHNWNiaThxS2x4dUlDb2dSMlYwY3lCMGFHVWdjMk52Y0dVZ2RHaGhkQ0J2ZDI1eklIUm9aU0JqZFhKeVpXNTBiSGtnY25WdWJtbHVaeUJqYjJSbExseHVJQ3BjYmlBcUlFVjRZVzF3YkdVNlhHNGdLaUJnWUdCMGMxeHVJQ29nWTI5dWMzUWdjMk52Y0dVZ1BTQm5aWFJUWTI5d1pTZ3BYRzRnS2lCelpYUlVhVzFsYjNWMEtDZ3BJRDArSUh0Y2JpQXFJQ0FnTHk4Z1ZHaHBjeUJqWVd4c1ltRmpheUJuWlhSeklISjFiaUIzYVhSb2IzVjBJR0Z1SUc5M2JtVnlJSE5qYjNCbExseHVJQ29nSUNBdkx5QlNaWE4wYjNKbElHOTNibVZ5SUhacFlTQnpZMjl3WlM1eWRXNDZYRzRnS2lBZ0lITmpiM0JsTG5KMWJpZ29LU0E5UGlCN1hHNGdLaUFnSUNBZ1kyOXVjM1FnWm05dklEMGdSbTl2UTI5dWRHVjRkQzUxYzJVb0tWeHVJQ29nSUNBZ0lHOXVRMnhsWVc1MWNDZ29LU0E5UGlCN1hHNGdLaUFnSUNBZ0lDQndjbWx1ZENoY0luTnZiV1VnWTJ4bFlXNTFjRndpS1Z4dUlDb2dJQ0FnSUgwcFhHNGdLaUFnSUgwcFhHNGdLaUI5TENBeE1EQXdLVnh1SUNvZ1lHQmdYRzRnS2k5Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCblpYUlRZMjl3WlNncE9pQlRZMjl3WlNCN1hHNGdJQ0FnWTI5dWMzUWdjMk52Y0dVZ1BTQlRZMjl3WlM1amRYSnlaVzUwWEc0Z0lDQWdhV1lnS0NGelkyOXdaU2tnZTF4dUlDQWdJQ0FnSUNCMGFISnZkeUJGY25KdmNpaGNJbU5oYm01dmRDQm5aWFFnYzJOdmNHVTZJRzkxZENCdlppQjBjbUZqYTJsdVp5QmpiMjUwWlhoMFhDSXBYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2NtVjBkWEp1SUhOamIzQmxYRzU5WEc1Y2JpOHFLbHh1SUNvZ1FYUjBZV05vSUdFZ1kyeGxZVzUxY0NCallXeHNZbUZqYXlCMGJ5QjBhR1VnWTNWeWNtVnVkQ0I3UUd4cGJtc2dVMk52Y0dWOUxseHVJQ292WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnYjI1RGJHVmhiblZ3S0dOc1pXRnVkWEE2SUNncElEMCtJSFp2YVdRcElIdGNiaUFnSUNCcFppQW9JVk5qYjNCbExtTjFjbkpsYm5RcElIdGNiaUFnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2loRmNuSnZjaWhjSW05MWRDQnZaaUIwY21GamEybHVaeUJqYjI1MFpYaDBPaUIzYVd4c0lHNXZkQ0JpWlNCaFlteGxJSFJ2SUdOc1pXRnVkWEJjSWlrcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnVTJOdmNHVXVZM1Z5Y21WdWREOHViMjVEYkdWaGJuVndLR05zWldGdWRYQXBYRzU5WEc1Y2JpOHFLbHh1SUNvZ1FYUjBZV05vSUdFZ1kyRnNiR0poWTJzZ2RHOGdjblZ1SUhkb1pXNGdkR2hsSUdOMWNuSmxiblJzZVNCeWRXNXVhVzVuSUh0QWJHbHVheUJUWTI5d1pYMGdjbVYwZFhKdWN5NWNiaUFxTDF4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUc5dVRXOTFiblFvWTJ4bFlXNTFjRG9nS0NrZ1BUNGdkbTlwWkNrZ2UxeHVJQ0FnSUdsbUlDZ2hVMk52Y0dVdVkzVnljbVZ1ZENrZ2UxeHVJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0VWeWNtOXlLRndpWTJGdWJtOTBJR0YwZEdGamFDQnZiazF2ZFc1ME9pQnZkWFFnYjJZZ2RISmhZMnRwYm1jZ1kyOXVkR1Y0ZEZ3aUtTbGNiaUFnSUNCOVhHNWNiaUFnSUNCVFkyOXdaUzVqZFhKeVpXNTBQeTV2YmsxdmRXNTBLR05zWldGdWRYQXBYRzU5WEc1Y2JpOHFLbHh1SUNvZ1EzSmxZWFJsY3lCaElISnZiM1FnZTBCc2FXNXJJRk5qYjNCbGZTQjBhR0YwSUhkb1pXNGdaR2x6Y0c5elpXUWdkMmxzYkNCeVpXMXZkbVZjYmlBcUlHRnVlU0JqYUdsc1pDQnphV2R1WVd3Z2FHRnVaR3hsY2lCdmNpQnpkR0YwWlNCemRXSnpZM0pwWW1WeUxseHVJQ3BjYmlBcUlFVjRZVzF3YkdVNlhHNGdLaUJnWUdCMGMzaGNiaUFxSUdOeVpXRjBaVkp2YjNRb0tHUnBjM0J2YzJVcElEMCtJSHRjYmlBcUlDQWdiR1YwSUhKdmIzUTZJRWQwYXk1WGFXNWtiM2RjYmlBcVhHNGdLaUFnSUdOdmJuTjBJRnR6ZEdGMFpWMGdQU0JqY21WaGRHVlRkR0YwWlNoY0luWmhiSFZsWENJcFhHNGdLbHh1SUNvZ0lDQmpiMjV6ZENCeVpXMXZkbVVnUFNBb0tTQTlQaUI3WEc0Z0tpQWdJQ0FnY205dmRDNWtaWE4wY205NUtDbGNiaUFxSUNBZ0lDQmthWE53YjNObEtDbGNiaUFxSUNBZ2ZWeHVJQ3BjYmlBcUlDQWdjbVYwZFhKdUlDaGNiaUFxSUNBZ0lDQThSM1JyTGxkcGJtUnZkeUFrUFhzb2MyVnNaaWtnUFQ0Z0tISnZiM1FnUFNCelpXeG1LWDArWEc0Z0tpQWdJQ0FnSUNBOFIzUnJMa0p2ZUQ1Y2JpQXFJQ0FnSUNBZ0lDQWdQRWQwYXk1TVlXSmxiQ0JzWVdKbGJEMTdjM1JoZEdWOUlDOCtYRzRnS2lBZ0lDQWdJQ0FnSUR4SGRHc3VRblYwZEc5dUlDUmpiR2xqYTJWa1BYdHlaVzF2ZG1WOUlDOCtYRzRnS2lBZ0lDQWdJQ0E4TDBkMGF5NUNiM2crWEc0Z0tpQWdJQ0FnUEM5SGRHc3VWMmx1Wkc5M1BseHVJQ29nSUNBcFhHNGdLaUI5S1Z4dUlDb2dZR0JnWEc0Z0tpOWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQmpjbVZoZEdWU2IyOTBQRlErS0dadU9pQW9aR2x6Y0c5elpUb2dLQ2tnUFQ0Z2RtOXBaQ2tnUFQ0Z1ZDa2dlMXh1SUNBZ0lHTnZibk4wSUhOamIzQmxJRDBnYm1WM0lGTmpiM0JsS0c1MWJHd3BYRzRnSUNBZ2NtVjBkWEp1SUhOamIzQmxMbkoxYmlnb0tTQTlQaUJtYmlnb0tTQTlQaUJ6WTI5d1pTNWthWE53YjNObEtDa3BLVnh1ZlZ4dUlpd2dJbWx0Y0c5eWRDQkhUMkpxWldOMElHWnliMjBnWENKbmFUb3ZMMGRQWW1wbFkzUmNJbHh1YVcxd2IzSjBJSHNnWlc1MklIMGdabkp2YlNCY0lpNHZaVzUyTG1welhDSmNibWx0Y0c5eWRDQjdJRUZqWTJWemMyOXlJSDBnWm5KdmJTQmNJaTR2YzNSaGRHVXVhbk5jSWx4dWFXMXdiM0owSUhzZ2MyVjBJSDBnWm5KdmJTQmNJaTR1TDNWMGFXd3Vhbk5jSWx4dWFXMXdiM0owSUhzZ2IyNURiR1ZoYm5Wd0lIMGdabkp2YlNCY0lpNHZjMk52Y0dVdWFuTmNJbHh1YVcxd2IzSjBJSHNnWVhCd1pXNWtMQ0J6WlhSVWVYQmxMQ0J6YVdkdVlXeE9ZVzFsTENCMGVYQmxJRU5EVUhKdmNITWdmU0JtY205dElGd2lMaTlxYzNndWFuTmNJbHh1WEc1MGVYQmxJRlJvYVhOUWNtOXdjenhUWld4bUlHVjRkR1Z1WkhNZ1IwOWlhbVZqZEM1UFltcGxZM1ErSUQwZ1VHRnlkR2xoYkR4Y2JpQWdJQ0JQYldsMFBFTkRVSEp2Y0hNOFUyVnNaaXdnZXlCYlN5QnBiaUJyWlhsdlppQlRaV3htWFRvZ1UyVnNabHRMWFNCOVBpd2dYQ0lrWENJZ2ZDQmNJaVJqYjI1emRISjFZM1J2Y2x3aVBseHVQaUFtSUh0Y2JpQWdJQ0IwYUdsek9pQlRaV3htWEc1OVhHNWNiaThxS2lCQVpYaHdaWEpwYldWdWRHRnNJQ292WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnVkdocGN6eFVJR1Y0ZEdWdVpITWdSMDlpYW1WamRDNVBZbXBsWTNRK0tIdGNiaUFnSUNCMGFHbHpPaUJ6Wld4bUxGeHVJQ0FnSUdOb2FXeGtjbVZ1TEZ4dUlDQWdJQ1IwZVhCbExGeHVJQ0FnSUM0dUxuQnliM0J6WEc1OU9pQlVhR2x6VUhKdmNITThWRDRwSUh0Y2JpQWdJQ0JqYjI1emRDQmpiR1ZoYm5Wd0lEMGdibVYzSUVGeWNtRjVQQ2dwSUQwK0lIWnZhV1ErS0NsY2JseHVJQ0FnSUdsbUlDZ2tkSGx3WlNrZ2MyVjBWSGx3WlNoelpXeG1MQ0FrZEhsd1pTbGNibHh1SUNBZ0lHWnZjaUFvWTI5dWMzUWdXMnRsZVN3Z2RtRnNkV1ZkSUc5bUlFOWlhbVZqZEM1bGJuUnlhV1Z6S0hCeWIzQnpLU2tnZTF4dUlDQWdJQ0FnSUNCcFppQW9hMlY1SUQwOVBTQmNJbU56YzF3aUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kbUZzZFdVZ2FXNXpkR0Z1WTJWdlppQkJZMk5sYzNOdmNpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1Z1ZGk1elpYUkRjM01vYzJWc1ppd2dkbUZzZFdVdVoyVjBLQ2twWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJ4bFlXNTFjQzV3ZFhOb0tIWmhiSFZsTG5OMVluTmpjbWxpWlNnb0tTQTlQaUJsYm5ZdWMyVjBRM056S0hObGJHWXNJSFpoYkhWbExtZGxkQ2dwS1NrcFhHNGdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0hSNWNHVnZaaUIyWVd4MVpTQTlQVDBnWENKemRISnBibWRjSWlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnVkaTV6WlhSRGMzTW9jMlZzWml3Z2RtRnNkV1VwWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvYTJWNUlEMDlQU0JjSW1Oc1lYTnpYQ0lwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMllXeDFaU0JwYm5OMFlXNWpaVzltSUVGalkyVnpjMjl5S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXNTJMbk5sZEVOc1lYTnpLSE5sYkdZc0lIWmhiSFZsTG1kbGRDZ3BLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05zWldGdWRYQXVjSFZ6YUNoMllXeDFaUzV6ZFdKelkzSnBZbVVvS0NrZ1BUNGdaVzUyTG5ObGRFTnNZWE56S0hObGJHWXNJSFpoYkhWbExtZGxkQ2dwS1NrcFhHNGdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0hSNWNHVnZaaUIyWVd4MVpTQTlQVDBnWENKemRISnBibWRjSWlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnVkaTV6WlhSRGJHRnpjeWh6Wld4bUxDQjJZV3gxWlNsY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNoclpYa3VjM1JoY25SelYybDBhQ2hjSW05dVhDSXBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCcFpDQTlJSE5sYkdZdVkyOXVibVZqZENoemFXZHVZV3hPWVcxbEtHdGxlU2tzSUhaaGJIVmxLVnh1SUNBZ0lDQWdJQ0FnSUNBZ1kyeGxZVzUxY0M1d2RYTm9LQ2dwSUQwK0lITmxiR1l1WkdselkyOXVibVZqZENocFpDa3BYRzRnSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvZG1Gc2RXVWdhVzV6ZEdGdVkyVnZaaUJCWTJObGMzTnZjaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ1pHbHpjRzl6WlNBOUlIWmhiSFZsTG5OMVluTmpjbWxpWlNnb0tTQTlQaUJ6WlhRb2MyVnNaaXdnYTJWNUxDQjJZV3gxWlM1blpYUW9LU2twWEc0Z0lDQWdJQ0FnSUNBZ0lDQnpaWFFvYzJWc1ppd2dhMlY1TENCMllXeDFaUzVuWlhRb0tTbGNiaUFnSUNBZ0lDQWdJQ0FnSUdOc1pXRnVkWEF1Y0hWemFDaGthWE53YjNObEtWeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYzJWMEtITmxiR1lzSUd0bGVTd2dkbUZzZFdVcFhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCbWIzSWdLR3hsZENCamFHbHNaQ0J2WmlCQmNuSmhlUzVwYzBGeWNtRjVLR05vYVd4a2NtVnVLU0EvSUdOb2FXeGtjbVZ1SURvZ1cyTm9hV3hrY21WdVhTa2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb1kyaHBiR1FnUFQwOUlIUnlkV1VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmloRmNuSnZjaWhjSWxSeWVXbHVaeUIwYnlCaFpHUWdZbTl2YkdWaGJpQjJZV3gxWlNCdlppQmdkSEoxWldBZ1lYTWdZU0JqYUdsc1pDNWNJaWtwWEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjUwYVc1MVpWeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tFRnljbUY1TG1selFYSnlZWGtvWTJocGJHUXBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iM0lnS0dOdmJuTjBJR05vSUc5bUlHTm9hV3hrS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lYQndaVzVrS0hObGJHWXNJR05vS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0dOb2FXeGtLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVNoamFHbHNaQ0JwYm5OMFlXNWpaVzltSUVkUFltcGxZM1F1VDJKcVpXTjBLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOb2FXeGtJRDBnWlc1MkxuUmxlSFJPYjJSbEtHTm9hV3hrS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ1lYQndaVzVrS0hObGJHWXNJR05vYVd4a0tWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FXWWdLR05zWldGdWRYQXViR1Z1WjNSb0lENGdNQ2tnZTF4dUlDQWdJQ0FnSUNCdmJrTnNaV0Z1ZFhBb0tDa2dQVDRnWTJ4bFlXNTFjQzVtYjNKRllXTm9LQ2hqWWlrZ1BUNGdZMklvS1NrcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnY21WMGRYSnVJSE5sYkdaY2JuMWNiaUlzSUNKM2FXNWtiM2N1UW1GeUlIdGNiaUFnWW1GamEyZHliM1Z1WkRvZ2RISmhibk53WVhKbGJuUTdYRzRnSUdOdmJHOXlPaUJBZEdobGJXVmZabWRmWTI5c2IzSTdYRzRnSUdadmJuUXRkMlZwWjJoME9pQmliMnhrTzF4dWZWeHVkMmx1Wkc5M0xrSmhjaUErSUdObGJuUmxjbUp2ZUNCN1hHNGdJR0poWTJ0bmNtOTFibVE2SUNNeU1qSXlNalk3WEc1OVhHNTNhVzVrYjNjdVFtRnlJR0oxZEhSdmJpQjdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJRGh3ZUR0Y2JpQWdiV0Z5WjJsdUxYUnZjRG9nTkhCNE8xeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQTJjSGc3WEc1OVhHNTNhVzVrYjNjdVFtRnlJQzV6ZEdGeWRHSjFkSFJ2YmlCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwTzF4dUlDQnRZWEpuYVc0dGJHVm1kRG9nTVRCd2VEdGNibjFjYm5kcGJtUnZkeTVDWVhJZ0xuTjBZWEowWW5WMGRHOXVPbWh2ZG1WeUlIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nY21kaVlTZ3lOVFVzSURJMU5Td2dNalUxTENBd0xqQTRLVHRjYmlBZ1ltOTRMWE5vWVdSdmR6b2dNQ0F5Y0hnZ05uQjRJSEpuWW1Fb01Dd2dNQ3dnTUN3Z01DNHlOU2s3WEc1OVhHNTNhVzVrYjNjdVFtRnlJQzV6ZEdGeWRHSjFkSFJ2YmlCcGJXRm5aU0I3WEc0Z0lIQmhaR1JwYm1jNklEQXVNM0psYlR0Y2JuMWNibmRwYm1SdmR5NUNZWElnTG5WMGFXeHBkR2xsY3lCaWRYUjBiMjRnZTF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQjBjbUZ1YzNCaGNtVnVkRHRjYm4xY2JuZHBibVJ2ZHk1Q1lYSWdMblYwYVd4cGRHbGxjeUJpZFhSMGIyNDZhRzkyWlhJZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUJ5WjJKaEtESTFOU3dnTWpVMUxDQXlOVFVzSURBdU1EZ3BPMXh1SUNCaWIzZ3RjMmhoWkc5M09pQXdJREp3ZUNBMmNIZ2djbWRpWVNnd0xDQXdMQ0F3TENBd0xqSTFLVHRjYm4xY2JuZHBibVJ2ZHk1Q1lYSWdMblYwYVd4cGRHbGxjeUJzWVdKbGJDQjdYRzRnSUdadmJuUXRkMlZwWjJoME9pQnViM0p0WVd3N1hHNGdJR1p2Ym5RdGMybDZaVG9nTVhKbGJUdGNibjFjYm5kcGJtUnZkeTVDWVhJZ0xtUmhkR1YwYVcxbElHSjFkSFJ2YmlCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwTzF4dWZWeHVkMmx1Wkc5M0xrSmhjaUF1WkdGMFpYUnBiV1VnWW5WMGRHOXVPbWh2ZG1WeUlIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nY21kaVlTZ3lOVFVzSURJMU5Td2dNalUxTENBd0xqQTRLVHRjYmlBZ1ltOTRMWE5vWVdSdmR6b2dNQ0F5Y0hnZ05uQjRJSEpuWW1Fb01Dd2dNQ3dnTUN3Z01DNHlOU2s3WEc1OVhHNTNhVzVrYjNjdVFtRnlJQzVrWVhSbGRHbHRaU0JzWVdKbGJDQjdYRzRnSUdadmJuUXRkMlZwWjJoME9pQnViM0p0WVd3N1hHNGdJR1p2Ym5RdGMybDZaVG9nTUM0NWNtVnRPMXh1ZlZ4dWQybHVaRzkzTGtKaGNpQXVhR2xrWlhkcGJtUnZkM05pZFhSMGIyNGdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMGNtRnVjM0JoY21WdWREdGNiaUFnYldGeVoybHVMWEpwWjJoME9pQXpjSGc3WEc0Z0lIQmhaR1JwYm1jNklEQXVNbkpsYlR0Y2JuMWNibmRwYm1SdmR5NUNZWElnTG1ocFpHVjNhVzVrYjNkelluVjBkRzl1T21odmRtVnlJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2NtZGlZU2d5TlRVc0lESTFOU3dnTWpVMUxDQXdMakE0S1R0Y2JpQWdZbTk0TFhOb1lXUnZkem9nTUNBeWNIZ2dObkI0SUhKblltRW9NQ3dnTUN3Z01Dd2dNQzR5TlNrN1hHNTlYRzVjYmk1emVYTjBjbUY1WW5WMGRHOXVJR0oxZEhSdmJpQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhSeVlXNXpjR0Z5Wlc1ME8xeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQTRjSGc3WEc0Z0lIUnlZVzV6YVhScGIyNDZJR0poWTJ0bmNtOTFibVF0WTI5c2IzSWdNakF3YlhNZ1pXRnpaU3dnWW05NExYTm9ZV1J2ZHlBeE5UQnRjeUJsWVhObE8xeHVmVnh1TG5ONWMzUnlZWGxpZFhSMGIyNGdZblYwZEc5dU9taHZkbVZ5SUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2djbWRpWVNneU5UVXNJREkxTlN3Z01qVTFMQ0F3TGpBNEtUdGNiaUFnWW05NExYTm9ZV1J2ZHpvZ01DQXljSGdnTm5CNElISm5ZbUVvTUN3Z01Dd2dNQ3dnTUM0eU5TazdYRzU5WEc0dWMzbHpkSEpoZVdKMWRIUnZiaUJpZFhSMGIyNDZZV04wYVhabElIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nY21kaVlTZ3lOVFVzSURJMU5Td2dNalUxTENBd0xqRTJLVHRjYmlBZ1ltOTRMWE5vWVdSdmR6b2dNQ0F4Y0hnZ00zQjRJSEpuWW1Fb01Dd2dNQ3dnTUN3Z01DNHpLVHRjYm4xY2JseHVMbk41YzNSeVlYbHRaVzUxSUQ0Z1kyOXVkR1Z1ZEhNZ2UxeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQTFjSGc3WEc0Z0lHSnZjbVJsY2kxamIyeHZjam9nSXpRek5ETTBOVHRjYmlBZ1ltOXlaR1Z5TFhkcFpIUm9PaUF4TGpWd2VEdGNiaUFnY0dGa1pHbHVaem9nTUhKbGJUdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nY21kaVlTZ3pOQ3dnTXpRc0lETTRMQ0F3TGprNEtUdGNibjFjYmk1emVYTjBjbUY1YldWdWRTQStJR0Z5Y205M0lIdGNiaUFnTFdkMGF5MXBZMjl1TFhOdmRYSmpaVG9nYm05dVpUc2dMeW9nY21WdGIzWmxJSFJvWlNCaGNuSnZkeUJuY21Gd2FHbGpJQ292WEc0Z0lHSmhZMnRuY205MWJtUTZJSFJ5WVc1emNHRnlaVzUwTzF4dWZWeHVMbk41YzNSeVlYbHRaVzUxSUM1d2IzQnZkbVZ5YldWdWRYTjBZV05ySUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dkSEpoYm5Od1lYSmxiblE3WEc1OVhHNHVjM2x6ZEhKaGVXMWxiblVnTG1Kc2RXVjBiMjkwYUcxbGJuVWdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMGNtRnVjM0JoY21WdWREdGNibjFjYmk1emVYTjBjbUY1YldWdWRTQXVZbXgxWlhSdmIzUm9iV1Z1ZFNBdWMyVndaWEpoZEc5eUlIdGNiaUFnYldsdUxXaGxhV2RvZERvZ01TNDFjSGc3WEc1OVhHNHVjM2x6ZEhKaGVXMWxiblVnTG1Kc2RXVjBiMjkwYUcxbGJuVWdMbk4xWW1obFlXUnBibWNnZTF4dUlDQndZV1JrYVc1bkxXeGxablE2SURFd2NIZzdYRzRnSUdadmJuUXRkMlZwWjJoME9pQmliMnhrTzF4dUlDQnRZWEpuYVc0dFltOTBkRzl0T2lBMWNIZzdYRzRnSUcxaGNtZHBiaTEwYjNBNklEVndlRHRjYm4xY2JpNXplWE4wY21GNWJXVnVkU0F1WW14MVpYUnZiM1JvYldWdWRTQXVaR1YyYVdObGNtOTNJSHRjYmlBZ2NHRmtaR2x1Wnkxc1pXWjBPaUExY0hnN1hHNGdJSEJoWkdScGJtY3RjbWxuYUhRNklEVndlRHRjYm4xY2JpNXplWE4wY21GNWJXVnVkU0F1WW14MVpYUnZiM1JvYldWdWRTQXVaR1YyYVdObGNtOTNJQzV6ZEdGMGRYTk1ZV0psYkNCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTUM0NGNtVnRPMXh1SUNCd1lXUmthVzVuTFhSdmNEb2dOWEI0TzF4dWZWeHVYRzUzYVc1a2IzY3VUbTkwYVdacFkyRjBhVzl1SUh0Y2JpQWdZbUZqYTJkeWIzVnVaRG9nSXpJeU1qSXlOanRjYmlBZ1kyOXNiM0k2SUNObVptWTdYRzRnSUdKdmNtUmxjaTF5WVdScGRYTTZJRFp3ZUR0Y2JpQWdjR0ZrWkdsdVp6b2dPSEI0TzF4dUlDQnRZWEpuYVc0dGRHOXdPaUF4TUhCNE8xeHVJQ0J0WVhKbmFXNHRjbWxuYUhRNklERXdjSGc3WEc0Z0lHWnZiblF0YzJsNlpUb2dNVFJ3ZUR0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURFdU1qdGNibjFjYm5kcGJtUnZkeTVPYjNScFptbGpZWFJwYjI0Z2FXMWhaMlVnZTF4dUlDQXRaM1JyTFdsamIyNHRjMmw2WlRvZ016SndlRHRjYm4xY2JuZHBibVJ2ZHk1T2IzUnBabWxqWVhScGIyNGdMbk4xYlcxaGNua2dlMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dZbTlzWkR0Y2JuMGlMQ0FpYVcxd2IzSjBJRUZ6ZEdGc0lHWnliMjBnWENKbmFUb3ZMMEZ6ZEdGc1AzWmxjbk5wYjI0OU5DNHdYQ0pjYm1sdGNHOXlkQ0JIZEdzZ1puSnZiU0JjSW1kcE9pOHZSM1JyUDNabGNuTnBiMjQ5TkM0d1hDSmNibWx0Y0c5eWRDQkhaR3NnWm5KdmJTQmNJbWRwT2k4dlIyUnJQM1psY25OcGIyNDlOQzR3WENKY2JtVjRjRzl5ZENCN0lFRnpkR0ZzTENCSGRHc3NJRWRrYXlCOVhHNGlMQ0FpYVcxd2IzSjBJRWRwYnlCbWNtOXRJRndpWjJrNkx5OUhhVzgvZG1WeWMybHZiajB5TGpCY0lseHVhVzF3YjNKMElFZE1hV0lnWm5KdmJTQmNJbWRwT2k4dlIweHBZajkyWlhKemFXOXVQVEl1TUZ3aVhHNXBiWEJ2Y25RZ1IwOWlhbVZqZEN3Z2V5QnlaV2RwYzNSbGNpd2djMmxuYm1Gc0lIMGdabkp2YlNCY0ltZHVhVzB2WjI5aWFtVmpkRndpWEc1cGJYQnZjblFnZXlCQlkyTmxjM052Y2lCOUlHWnliMjBnWENKbmJtbHRYQ0pjYmx4dVkyOXVjM1FnWlc1amIyUmxjaUE5SUc1bGR5QlVaWGgwUlc1amIyUmxjaWdwWEc1Y2JtVjRjRzl5ZENCdVlXMWxjM0JoWTJVZ1VISnZZMlZ6Y3lCN1hHNGdJQ0FnWlhod2IzSjBJR2x1ZEdWeVptRmpaU0JUYVdkdVlXeFRhV2R1WVhSMWNtVnpJR1Y0ZEdWdVpITWdSMDlpYW1WamRDNVBZbXBsWTNRdVUybG5ibUZzVTJsbmJtRjBkWEpsY3lCN1hHNGdJQ0FnSUNBZ0lITjBaRzkxZERvZ1VISnZZMlZ6YzF0Y0luTjBaRzkxZEZ3aVhWeHVJQ0FnSUNBZ0lDQnpkR1JsY25JNklGQnliMk5sYzNOYlhDSnpkR1JsY25KY0lsMWNiaUFnSUNBZ0lDQWdaWGhwZERvZ1VISnZZMlZ6YzF0Y0ltVjRhWFJjSWwxY2JpQWdJQ0I5WEc0Z0lDQWdaWGh3YjNKMElHbHVkR1Z5Wm1GalpTQkRiMjV6ZEhKMVkzUnZjbEJ5YjNCeklHVjRkR1Z1WkhNZ1IwOWlhbVZqZEM1UFltcGxZM1F1UTI5dWMzUnlkV04wYjNKUWNtOXdjeUI3WEc0Z0lDQWdJQ0FnSUdGeVozWTZJSE4wY21sdVoxdGRYRzRnSUNBZ2ZWeHVmVnh1WEc1QWNtVm5hWE4wWlhJb0tWeHVaWGh3YjNKMElHTnNZWE56SUZCeWIyTmxjM01nWlhoMFpXNWtjeUJIVDJKcVpXTjBMazlpYW1WamRDQjdYRzRnSUNBZ1FITnBaMjVoYkNoVGRISnBibWNwWEc0Z0lDQWdjSEp2ZEdWamRHVmtJSE4wWkc5MWRDaHZkWFE2SUhOMGNtbHVaeWtnZTF4dUlDQWdJQ0FnSUNCMmIybGtJRzkxZEZ4dUlDQWdJSDFjYmx4dUlDQWdJRUJ6YVdkdVlXd29VM1J5YVc1bktWeHVJQ0FnSUhCeWIzUmxZM1JsWkNCemRHUmxjbklvWlhKeU9pQnpkSEpwYm1jcElIdGNiaUFnSUNBZ0lDQWdkbTlwWkNCbGNuSmNiaUFnSUNCOVhHNWNiaUFnSUNCQWMybG5ibUZzS0U1MWJXSmxjaXdnUW05dmJHVmhiaWxjYmlBZ0lDQndjbTkwWldOMFpXUWdaWGhwZENoamIyUmxPaUJ1ZFcxaVpYSXNJSE5wWjI1aGJHVmtPaUJpYjI5c1pXRnVLU0I3WEc0Z0lDQWdJQ0FnSUhadmFXUWdXMk52WkdVc0lITnBaMjVoYkdWa1hWeHVJQ0FnSUgxY2JseHVJQ0FnSUNObGJtTnZaR1Z5SUQwZ2JtVjNJRlJsZUhSRmJtTnZaR1Z5S0NsY2JpQWdJQ0FqYjNWMFUzUnlaV0Z0T2lCSGFXOHVSR0YwWVVsdWNIVjBVM1J5WldGdFhHNGdJQ0FnSTJWeWNsTjBjbVZoYlRvZ1IybHZMa1JoZEdGSmJuQjFkRk4wY21WaGJWeHVJQ0FnSUNOcGJsTjBjbVZoYlRvZ1IybHZMa1JoZEdGUGRYUndkWFJUZEhKbFlXMWNiaUFnSUNBamNISnZZMlZ6Y3pvZ1IybHZMbE4xWW5CeWIyTmxjM05jYmx4dUlDQWdJQ055WldGa1UzUnlaV0Z0S0hOMGNtVmhiVG9nUjJsdkxrUmhkR0ZKYm5CMWRGTjBjbVZoYlNrZ2UxeHVJQ0FnSUNBZ0lDQnpkSEpsWVcwdWNtVmhaRjlzYVc1bFgyRnplVzVqS0VkTWFXSXVVRkpKVDFKSlZGbGZSRVZHUVZWTVZDd2diblZzYkN3Z0tGOHNJSEpsY3lrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RISjVJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmJiM1YwY0hWMFhTQTlJSE4wY21WaGJTNXlaV0ZrWDJ4cGJtVmZabWx1YVhOb1gzVjBaamdvY21WektWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h2ZFhSd2RYUWdJVDA5SUc1MWJHd3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSE4wY21WaGJTQTlQVDBnZEdocGN5NGpaWEp5VTNSeVpXRnRLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuTjBaR1Z5Y2lodmRYUndkWFF1ZEhKcGJTZ3BLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXpkR1J2ZFhRb2IzVjBjSFYwTG5SeWFXMG9LU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxpTnlaV0ZrVTNSeVpXRnRLSE4wY21WaGJTbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUlHTmhkR05vSUNobGNuSnZjaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9aWEp5YjNJcFhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgwcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnWTI5dWJtVmpkRHhUSUdWNGRHVnVaSE1nYTJWNWIyWWdVSEp2WTJWemN5NVRhV2R1WVd4VGFXZHVZWFIxY21WelBpaGNiaUFnSUNBZ0lDQWdjMmxuYm1Gc09pQlRMRnh1SUNBZ0lDQWdJQ0JqWVd4c1ltRmphem9nUjA5aWFtVmpkQzVUYVdkdVlXeERZV3hzWW1GamF6eDBhR2x6TENCUWNtOWpaWE56TGxOcFoyNWhiRk5wWjI1aGRIVnlaWE5iVTEwK0xGeHVJQ0FnSUNrNklHNTFiV0psY2lCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjI1dVpXTjBLSE5wWjI1aGJDd2dZMkZzYkdKaFkyc3BYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dSbTl5WTJVZ2NYVnBkQ0IwYUdVZ2MzVmljSEp2WTJWemN5NWNiaUFnSUNBZ0tpOWNiaUFnSUNCcmFXeHNLQ2s2SUhadmFXUWdlMXh1SUNBZ0lDQWdJQ0IwYUdsekxpTndjbTlqWlhOekxtWnZjbU5sWDJWNGFYUW9LVnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJRk5sYm1RZ1lTQnphV2R1WVd3Z2RHOGdkR2hsSUhOMVluQnliMk5sYzNNdVhHNGdJQ0FnSUNwY2JpQWdJQ0FnS2lCQWNHRnlZVzBnYzJsbmJtRnNJRk5wWjI1aGJDQnVkVzFpWlhJZ2RHOGdZbVVnYzJWdWRGeHVJQ0FnSUNBcUwxeHVJQ0FnSUhOcFoyNWhiQ2h6YVdkdVlXdzZJRzUxYldKbGNpazZJSFp2YVdRZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TGlOd2NtOWpaWE56TG5ObGJtUmZjMmxuYm1Gc0tITnBaMjVoYkNsY2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCWGNtbDBaU0JoSUd4cGJtVWdkRzhnZEdobElITjFZbkJ5YjJObGMzTW5JSE4wWkdsdUlITjVibU5vY205dWIzVnpiSGt1WEc0Z0lDQWdJQ29nVTJWbElIdEFiR2x1YXlCSGFXOHVSR0YwWVU5MWRIQjFkRk4wY21WaGJTNXdjbTkwYjNSNWNHVXVkM0pwZEdWZllubDBaWE5mWVhONWJtTjlYRzRnSUNBZ0lDcGNiaUFnSUNBZ0tpQkFjR0Z5WVcwZ2MzUnlJRk4wY21sdVp5QjBieUJpWlNCM2NtbDBkR1Z1SUhSdklITjBaR2x1WEc0Z0lDQWdJQ292WEc0Z0lDQWdkM0pwZEdVb2MzUnlPaUJ6ZEhKcGJtY3BPaUJRY205dGFYTmxQRnRpYjI5c1pXRnVMQ0J1ZFcxaVpYSmRQaUI3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1VISnZiV2x6WlNnb2NtVnpiMngyWlN3Z2NtVnFaV04wS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMaU5wYmxOMGNtVmhiUzUzY21sMFpWOWllWFJsYzE5aGMzbHVZeWhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYm1OdlpHVnlMbVZ1WTI5a1pTaHpkSElwTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVkTWFXSXVVRkpKVDFKSlZGbGZSRVZHUVZWTVZDeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVkV3hzTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNoZkxDQnlaWE1wSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhKNUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxjMjlzZG1Vb2RHaHBjeTRqYVc1VGRISmxZVzB1ZDNKcGRHVmZZV3hzWDJacGJtbHphQ2h5WlhNcEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdOaGRHTm9JQ2hsY25KdmNpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVZxWldOMEtHVnljbTl5S1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDbGNiaUFnSUNBZ0lDQWdmU2xjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUJYY21sMFpTQmhJR3hwYm1VZ2RHOGdkR2hsSUhOMVluQnliMk5sYzNNbklITjBaR2x1SUdGemVXNWphSEp2Ym05MWMyeDVMbHh1SUNBZ0lDQXFYRzRnSUNBZ0lDb2dRSEJoY21GdElITjBjaUJUZEhKcGJtY2dkRzhnWW1VZ2QzSnBkSFJsYmlCMGJ5QnpkR1JwYmx4dUlDQWdJQ0FxTDF4dUlDQWdJR0Z6ZVc1aklIZHlhWFJsUVhONWJtTW9jM1J5T2lCemRISnBibWNwT2lCUWNtOXRhWE5sUEhadmFXUStJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCUWNtOXRhWE5sS0NoeVpYTnZiSFpsTENCeVpXcGxZM1FwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVJMmx1VTNSeVpXRnRMbmR5YVhSbFgyRnNiRjloYzNsdVl5aGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGlObGJtTnZaR1Z5TG1WdVkyOWtaU2h6ZEhJcExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFZE1hV0l1VUZKSlQxSkpWRmxmUkVWR1FWVk1WQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1ZFd4c0xGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDaGZMQ0J5WlhNcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RISjVJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsYzI5c2RtVW9kbTlwWkNCMGFHbHpMaU5wYmxOMGNtVmhiUzUzY21sMFpWOWhiR3hmWm1sdWFYTm9LSEpsY3lrcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWTJGMFkyZ2dLR1Z5Y205eUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaV3BsWTNRb1pYSnliM0lwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0tWeHVJQ0FnSUNBZ0lDQjlLVnh1SUNBZ0lIMWNibHh1SUNBZ0lHTnZibk4wY25WamRHOXlLSHNnWVhKbmRpQjlPaUJRY205alpYTnpMa052Ym5OMGNuVmpkRzl5VUhKdmNITXBJSHRjYmlBZ0lDQWdJQ0FnYzNWd1pYSW9LVnh1SUNBZ0lDQWdJQ0JqYjI1emRDQndjbTlqWlhOeklEMGdLSFJvYVhNdUkzQnliMk5sYzNNZ1BTQkhhVzh1VTNWaWNISnZZMlZ6Y3k1dVpYY29YRzRnSUNBZ0lDQWdJQ0FnSUNCaGNtZDJMRnh1SUNBZ0lDQWdJQ0FnSUNBZ1IybHZMbE4xWW5CeWIyTmxjM05HYkdGbmN5NVRWRVJKVGw5UVNWQkZJSHhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JIYVc4dVUzVmljSEp2WTJWemMwWnNZV2R6TGxOVVJFOVZWRjlRU1ZCRklIeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkhhVzh1VTNWaWNISnZZMlZ6YzBac1lXZHpMbE5VUkVWU1VsOVFTVkJGTEZ4dUlDQWdJQ0FnSUNBcEtWeHVYRzRnSUNBZ0lDQWdJSFJvYVhNdUkybHVVM1J5WldGdElEMGdSMmx2TGtSaGRHRlBkWFJ3ZFhSVGRISmxZVzB1Ym1WM0tIQnliMk5sYzNNdVoyVjBYM04wWkdsdVgzQnBjR1VvS1NFcFhHNGdJQ0FnSUNBZ0lIUm9hWE11STI5MWRGTjBjbVZoYlNBOUlFZHBieTVFWVhSaFNXNXdkWFJUZEhKbFlXMHVibVYzS0hCeWIyTmxjM011WjJWMFgzTjBaRzkxZEY5d2FYQmxLQ2toS1Z4dUlDQWdJQ0FnSUNCMGFHbHpMaU5sY25KVGRISmxZVzBnUFNCSGFXOHVSR0YwWVVsdWNIVjBVM1J5WldGdExtNWxkeWh3Y205alpYTnpMbWRsZEY5emRHUmxjbkpmY0dsd1pTZ3BJU2xjYmx4dUlDQWdJQ0FnSUNCMGFHbHpMaU55WldGa1UzUnlaV0Z0S0hSb2FYTXVJMjkxZEZOMGNtVmhiU2xjYmlBZ0lDQWdJQ0FnZEdocGN5NGpjbVZoWkZOMGNtVmhiU2gwYUdsekxpTmxjbkpUZEhKbFlXMHBYRzVjYmlBZ0lDQWdJQ0FnY0hKdlkyVnpjeTUzWVdsMFgyRnplVzVqS0c1MWJHd3NJQ2hmTENCeVpYTXBJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJ5ZVNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NISnZZMlZ6Y3k1M1lXbDBYMlpwYm1semFDaHlaWE1wWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlJR05oZEdOb0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZMeUJwWjI1dmNtVmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIQnliMk5sYzNNdVoyVjBYMmxtWDJWNGFYUmxaQ2dwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVsZUdsMEtIQnliMk5sYzNNdVoyVjBYMlY0YVhSZmMzUmhkSFZ6S0Nrc0lHWmhiSE5sS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY0hKdlkyVnpjeTVuWlhSZmFXWmZjMmxuYm1Gc1pXUW9LU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVaWGhwZENod2NtOWpaWE56TG1kbGRGOTBaWEp0WDNOcFp5Z3BMQ0IwY25WbEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOUtWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlGTjBZWEowSUdFZ2JtVjNJSE4xWW5CeWIyTmxjM01nZDJsMGFDQjBhR1VnWjJsMlpXNGdZMjl0YldGdVpDNWNiaUFnSUNBZ0tpQlVhR1VnWm1seWMzUWdaV3hsYldWdWRDQnZaaUIwYUdVZ2RtVmpkRzl5SUdseklHVjRaV04xZEdWa0lIZHBkR2dnZEdobElISmxiV0ZwYm1sdVoxeHVJQ0FnSUNBcUlHVnNaVzFsYm5SeklHRnpJSFJvWlNCaGNtZDFiV1Z1ZENCc2FYTjBMbHh1SUNBZ0lDQXFMMXh1SUNBZ0lITjBZWFJwWXlCemRXSndjbTlqWlhOemRpaGpiV1E2SUhOMGNtbHVaMXRkS1NCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dVSEp2WTJWemN5aDdJR0Z5WjNZNklHTnRaQ0I5S1Z4dUlDQWdJSDFjYmx4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUZOMFlYSjBJR0VnYm1WM0lITjFZbkJ5YjJObGMzTWdkMmwwYUNCMGFHVWdaMmwyWlc0Z1kyOXRiV0Z1WkZ4dUlDQWdJQ0FxSUhkb2FXTm9JR2x6SUhCaGNuTmxaQ0IxYzJsdVp5QjdRR3hwYm1zZ1IweHBZaTV6YUdWc2JGOXdZWEp6WlY5aGNtZDJmUzVjYmlBZ0lDQWdLaTljYmlBZ0lDQnpkR0YwYVdNZ2MzVmljSEp2WTJWemN5aGpiV1E2SUhOMGNtbHVaeWtnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0JiTENCaGNtZDJYU0E5SUVkTWFXSXVjMmhsYkd4ZmNHRnljMlZmWVhKbmRpaGpiV1FwWEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJRY205alpYTnpMbk4xWW5CeWIyTmxjM04yS0dGeVozWWhLVnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJRVY0WldOMWRHVWdZU0JqYjIxdFlXNWtJSE41Ym1Ob2NtOXViM1Z6YkhrdVhHNGdJQ0FnSUNvZ1ZHaGxJR1pwY25OMElHVnNaVzFsYm5RZ2IyWWdkR2hsSUhabFkzUnZjaUJwY3lCbGVHVmpkWFJsWkNCM2FYUm9JSFJvWlNCeVpXMWhhVzVwYm1kY2JpQWdJQ0FnS2lCbGJHVnRaVzUwY3lCaGN5QjBhR1VnWVhKbmRXMWxiblFnYkdsemRDNWNiaUFnSUNBZ0tseHVJQ0FnSUNBcUlFQjBhSEp2ZDNNZ2MzUmtaWEp5WEc0Z0lDQWdJQ29nUUhKbGRIVnliaUJ6ZEdSdmRYUWdiMllnZEdobElITjFZbkJ5YjJObGMzTmNiaUFnSUNBZ0tpOWNiaUFnSUNCemRHRjBhV01nWlhobFkzWW9ZMjFrT2lCemRISnBibWRiWFNrZ2UxeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCd2NtOWpaWE56SUQwZ1IybHZMbE4xWW5CeWIyTmxjM011Ym1WM0tGeHVJQ0FnSUNBZ0lDQWdJQ0FnWTIxa0xGeHVJQ0FnSUNBZ0lDQWdJQ0FnUjJsdkxsTjFZbkJ5YjJObGMzTkdiR0ZuY3k1VFZFUkZVbEpmVUVsUVJTQjhJRWRwYnk1VGRXSndjbTlqWlhOelJteGhaM011VTFSRVQxVlVYMUJKVUVVc1hHNGdJQ0FnSUNBZ0lDbGNibHh1SUNBZ0lDQWdJQ0JqYjI1emRDQmJMQ0J2ZFhRc0lHVnljbDBnUFNCd2NtOWpaWE56TG1OdmJXMTFibWxqWVhSbFgzVjBaamdvYm5Wc2JDd2diblZzYkNsY2JpQWdJQ0FnSUNBZ2FXWWdLSEJ5YjJObGMzTXVaMlYwWDNOMVkyTmxjM05tZFd3b0tTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUc5MWRDNTBjbWx0S0NsY2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJvY205M0lHNWxkeUJGY25KdmNpaGxjbklwWEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCRmVHVmpkWFJsSUdFZ1kyOXRiV0Z1WkNCemVXNWphSEp2Ym05MWMyeDVMbHh1SUNBZ0lDQXFJRlJvWlNCamIyMXRZVzVrSUdseklIQmhjbk5sWkNCMWMybHVaeUI3UUd4cGJtc2dSMHhwWWk1emFHVnNiRjl3WVhKelpWOWhjbWQyZlM1Y2JpQWdJQ0FnS2x4dUlDQWdJQ0FxSUVCMGFISnZkM01nYzNSa1pYSnlYRzRnSUNBZ0lDb2dRSEpsZEhWeWJpQnpkR1J2ZFhRZ2IyWWdkR2hsSUhOMVluQnliMk5sYzNOY2JpQWdJQ0FnS2k5Y2JpQWdJQ0J6ZEdGMGFXTWdaWGhsWXloamJXUTZJSE4wY21sdVp5a2dlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQmJMQ0JoY21kMlhTQTlJRWRNYVdJdWMyaGxiR3hmY0dGeWMyVmZZWEpuZGloamJXUXBYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQlFjbTlqWlhOekxtVjRaV04yS0dGeVozWWhLVnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJRVY0WldOMWRHVWdZU0JqYjIxdFlXNWtJR0Z6ZVc1amFISnZibTkxYzJ4NUxseHVJQ0FnSUNBcUlGUm9aU0JtYVhKemRDQmxiR1Z0Wlc1MElHOW1JSFJvWlNCMlpXTjBiM0lnYVhNZ1pYaGxZM1YwWldRZ2QybDBhQ0IwYUdVZ2NtVnRZV2x1YVc1blhHNGdJQ0FnSUNvZ1pXeGxiV1Z1ZEhNZ1lYTWdkR2hsSUdGeVozVnRaVzUwSUd4cGMzUXVYRzRnSUNBZ0lDcGNiaUFnSUNBZ0tpQkFkR2h5YjNkeklITjBaR1Z5Y2x4dUlDQWdJQ0FxSUVCeVpYUjFjbTRnYzNSa2IzVjBJRzltSUhSb1pTQnpkV0p3Y205alpYTnpYRzRnSUNBZ0lDb3ZYRzRnSUNBZ2MzUmhkR2xqSUdWNFpXTkJjM2x1WTNZb1kyMWtPaUJ6ZEhKcGJtZGJYU2s2SUZCeWIyMXBjMlU4YzNSeWFXNW5QaUI3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJSEJ5YjJObGMzTWdQU0JIYVc4dVUzVmljSEp2WTJWemN5NXVaWGNvWEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiV1FzWEc0Z0lDQWdJQ0FnSUNBZ0lDQkhhVzh1VTNWaWNISnZZMlZ6YzBac1lXZHpMbE5VUkVWU1VsOVFTVkJGSUh3Z1IybHZMbE4xWW5CeWIyTmxjM05HYkdGbmN5NVRWRVJQVlZSZlVFbFFSU3hjYmlBZ0lDQWdJQ0FnS1Z4dVhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dVSEp2YldselpTZ29jbVZ6YjJ4MlpTd2djbVZxWldOMEtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQndjbTlqWlhOekxtTnZiVzExYm1sallYUmxYM1YwWmpoZllYTjVibU1vYm5Wc2JDd2diblZzYkN3Z0tGOHNJSEpsY3lrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJ5ZVNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElGc3NJRzkxZEN3Z1pYSnlYU0E5SUhCeWIyTmxjM011WTI5dGJYVnVhV05oZEdWZmRYUm1PRjltYVc1cGMyZ29jbVZ6S1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY0hKdlkyVnpjeTVuWlhSZmMzVmpZMlZ6YzJaMWJDZ3BLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjbVZ6YjJ4MlpTaHZkWFF1ZEhKcGJTZ3BLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WcVpXTjBLRzVsZHlCRmNuSnZjaWhsY25JdWRISnBiU2dwS1NsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWTJGMFkyZ2dLR1Z5Y205eUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGFtVmpkQ2hsY25KdmNpbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtWeHVJQ0FnSUNBZ0lDQjlLVnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJRVY0WldOMWRHVWdZU0JqYjIxdFlXNWtJR0Z6ZVc1amFISnZibTkxYzJ4NUxseHVJQ0FnSUNBcUlGUm9aU0JqYjIxdFlXNWtJR2x6SUhCaGNuTmxaQ0IxYzJsdVp5QjdRR3hwYm1zZ1IweHBZaTV6YUdWc2JGOXdZWEp6WlY5aGNtZDJmUzVjYmlBZ0lDQWdLbHh1SUNBZ0lDQXFJRUIwYUhKdmQzTWdjM1JrWlhKeVhHNGdJQ0FnSUNvZ1FISmxkSFZ5YmlCemRHUnZkWFFnYjJZZ2RHaGxJSE4xWW5CeWIyTmxjM05jYmlBZ0lDQWdLaTljYmlBZ0lDQnpkR0YwYVdNZ1pYaGxZMEZ6ZVc1aktHTnRaRG9nYzNSeWFXNW5LU0I3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJRnNzSUdGeVozWmRJRDBnUjB4cFlpNXphR1ZzYkY5d1lYSnpaVjloY21kMktHTnRaQ2xjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJRkJ5YjJObGMzTXVaWGhsWTBGemVXNWpkaWhoY21kMklTbGNiaUFnSUNCOVhHNTlYRzVjYm5SNWNHVWdRWEpuY3lBOUlIdGNiaUFnSUNCamJXUTZJSE4wY21sdVp5QjhJSE4wY21sdVoxdGRYRzRnSUNBZ2IzVjBQem9nS0hOMFpHOTFkRG9nYzNSeWFXNW5LU0E5UGlCMmIybGtYRzRnSUNBZ1pYSnlQem9nS0hOMFpHVnljam9nYzNSeWFXNW5LU0E5UGlCMmIybGtYRzU5WEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCemRXSndjbTlqWlhOektHRnlaM002SUVGeVozTXBPaUJRY205alpYTnpYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJ6ZFdKd2NtOWpaWE56S0Z4dUlDQWdJR050WkRvZ2MzUnlhVzVuSUh3Z2MzUnlhVzVuVzEwc1hHNGdJQ0FnYjI1UGRYUS9PaUFvYzNSa2IzVjBPaUJ6ZEhKcGJtY3BJRDArSUhadmFXUXNYRzRnSUNBZ2IyNUZjbkkvT2lBb2MzUmtaWEp5T2lCemRISnBibWNwSUQwK0lIWnZhV1FzWEc0cE9pQlFjbTlqWlhOelhHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQnpkV0p3Y205alpYTnpLRnh1SUNBZ0lHRnlaM05QY2tOdFpEb2dRWEpuY3lCOElITjBjbWx1WnlCOElITjBjbWx1WjF0ZExGeHVJQ0FnSUc5dVQzVjBPaUFvYzNSa2IzVjBPaUJ6ZEhKcGJtY3BJRDArSUhadmFXUWdQU0J3Y21sdWRDeGNiaUFnSUNCdmJrVnljam9nS0hOMFpHVnljam9nYzNSeWFXNW5LU0E5UGlCMmIybGtJRDBnY0hKcGJuUmxjbklzWEc0cElIdGNiaUFnSUNCamIyNXpkQ0JoY21keklEMGdRWEp5WVhrdWFYTkJjbkpoZVNoaGNtZHpUM0pEYldRcElIeDhJSFI1Y0dWdlppQmhjbWR6VDNKRGJXUWdQVDA5SUZ3aWMzUnlhVzVuWENKY2JpQWdJQ0JqYjI1emRDQjdJR050WkN3Z1pYSnlMQ0J2ZFhRZ2ZTQTlJSHRjYmlBZ0lDQWdJQ0FnWTIxa09pQmhjbWR6SUQ4Z1lYSm5jMDl5UTIxa0lEb2dZWEpuYzA5eVEyMWtMbU50WkN4Y2JpQWdJQ0FnSUNBZ1pYSnlPaUJoY21keklEOGdiMjVGY25JZ09pQmhjbWR6VDNKRGJXUXVaWEp5SUh4OElHOXVSWEp5TEZ4dUlDQWdJQ0FnSUNCdmRYUTZJR0Z5WjNNZ1B5QnZiazkxZENBNklHRnlaM05QY2tOdFpDNXZkWFFnZkh3Z2IyNVBkWFFzWEc0Z0lDQWdmVnh1WEc0Z0lDQWdZMjl1YzNRZ2NISnZZeUE5SUVGeWNtRjVMbWx6UVhKeVlYa29ZMjFrS1NBL0lGQnliMk5sYzNNdWMzVmljSEp2WTJWemMzWW9ZMjFrS1NBNklGQnliMk5sYzNNdWMzVmljSEp2WTJWemN5aGpiV1FwWEc0Z0lDQWdjSEp2WXk1amIyNXVaV04wS0Z3aWMzUmtiM1YwWENJc0lDaGZMQ0J6ZEdSdmRYUTZJSE4wY21sdVp5a2dQVDRnYjNWMEtITjBaRzkxZENrcFhHNGdJQ0FnY0hKdll5NWpiMjV1WldOMEtGd2ljM1JrWlhKeVhDSXNJQ2hmTENCemRHUmxjbkk2SUhOMGNtbHVaeWtnUFQ0Z1pYSnlLSE4wWkdWeWNpa3BYRzRnSUNBZ2NtVjBkWEp1SUhCeWIyTmNibjFjYmx4dUx5b3FJRUIwYUhKdmQzTWdlMFZ5Y205eWZTQlVhSEp2ZDNNZ2MzUmtaWEp5SUNvdlhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1pYaGxZeWhqYldRNklITjBjbWx1WnlCOElITjBjbWx1WjF0ZEtTQjdYRzRnSUNBZ2NtVjBkWEp1SUVGeWNtRjVMbWx6UVhKeVlYa29ZMjFrS1NBL0lGQnliMk5sYzNNdVpYaGxZM1lvWTIxa0tTQTZJRkJ5YjJObGMzTXVaWGhsWXloamJXUXBYRzU5WEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCbGVHVmpRWE41Ym1Nb1kyMWtPaUJ6ZEhKcGJtY2dmQ0J6ZEhKcGJtZGJYU2s2SUZCeWIyMXBjMlU4YzNSeWFXNW5QaUI3WEc0Z0lDQWdhV1lnS0VGeWNtRjVMbWx6UVhKeVlYa29ZMjFrS1NrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1VISnZZMlZ6Y3k1bGVHVmpRWE41Ym1OMktHTnRaQ2xjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1VISnZZMlZ6Y3k1bGVHVmpRWE41Ym1Nb1kyMWtLVnh1SUNBZ0lIMWNibjFjYmx4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUdOeVpXRjBaVk4xWW5CeWIyTmxjM01vYVc1cGREb2djM1J5YVc1bkxDQmxlR1ZqT2lCemRISnBibWNnZkNCemRISnBibWRiWFNrNklFRmpZMlZ6YzI5eVBITjBjbWx1Wno1Y2JseHVaWGh3YjNKMElHWjFibU4wYVc5dUlHTnlaV0YwWlZOMVluQnliMk5sYzNNOFZENG9YRzRnSUNBZ2FXNXBkRG9nVkN4Y2JpQWdJQ0JsZUdWak9pQnpkSEpwYm1jZ2ZDQnpkSEpwYm1kYlhTeGNiaUFnSUNCMGNtRnVjMlp2Y20wNklDaHpkR1J2ZFhRNklITjBjbWx1Wnl3Z2NISmxkam9nVkNrZ1BUNGdWQ3hjYmlrNklFRmpZMlZ6YzI5eVBGUStYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJqY21WaGRHVlRkV0p3Y205alpYTnpQRlErS0Z4dUlDQWdJR2x1YVhRNklGUXNYRzRnSUNBZ1pYaGxZem9nYzNSeWFXNW5JSHdnYzNSeWFXNW5XMTBzWEc0Z0lDQWdkSEpoYm5ObWIzSnRQem9nS0hOMFpHOTFkRG9nYzNSeWFXNW5MQ0J3Y21WMk9pQlVLU0E5UGlCVUxGeHVLVG9nUVdOalpYTnpiM0k4VkQ0Z2UxeHVJQ0FnSUd4bGRDQmpkWEp5Wlc1MFZtRnNkV1VnUFNCcGJtbDBYRzRnSUNBZ2JHVjBJSEJ5YjJNNklGQnliMk5sYzNNZ2ZDQnVkV3hzSUQwZ2JuVnNiRnh1SUNBZ0lHTnZibk4wSUhOMVluTmpjbWxpWlhKeklEMGdibVYzSUZObGREd29LU0E5UGlCMmIybGtQaWdwWEc1Y2JpQWdJQ0JtZFc1amRHbHZiaUJ6ZFdKelkzSnBZbVVvWTJGc2JHSmhZMnM2SUNncElEMCtJSFp2YVdRcE9pQW9LU0E5UGlCMmIybGtJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tITjFZbk5qY21saVpYSnpMbk5wZW1VZ1BUMDlJREFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEJ5YjJNZ1BTQnpkV0p3Y205alpYTnpLR1Y0WldNc0lDaHpkR1J2ZFhRcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQjJZV3gxWlNBOUlIUnlZVzV6Wm05eWJTQS9JSFJ5WVc1elptOXliU2h6ZEdSdmRYUXNJR04xY25KbGJuUldZV3gxWlNrZ09pQW9jM1JrYjNWMElHRnpJRlFwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHTjFjbkpsYm5SV1lXeDFaU0FoUFQwZ2RtRnNkV1VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZM1Z5Y21WdWRGWmhiSFZsSUQwZ2RtRnNkV1ZjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1FYSnlZWGt1Wm5KdmJTaHpkV0p6WTNKcFltVnljeWt1Wm05eVJXRmphQ2dvWTJJcElEMCtJR05pS0NrcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlNsY2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJSE4xWW5OamNtbGlaWEp6TG1Ga1pDaGpZV3hzWW1GamF5bGNibHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdLQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYzNWaWMyTnlhV0psY25NdVpHVnNaWFJsS0dOaGJHeGlZV05yS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hOMVluTmpjbWxpWlhKekxuTnBlbVVnUFQwOUlEQXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3Y205alB5NXJhV3hzS0NsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2NtOWpJRDBnYm5Wc2JGeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnY21WMGRYSnVJRzVsZHlCQlkyTmxjM052Y2lnb0tTQTlQaUJqZFhKeVpXNTBWbUZzZFdVc0lITjFZbk5qY21saVpTbGNibjFjYmlJc0lDSnBiWEJ2Y25RZ1IwOWlhbVZqZEN3Z2V5QnlaV2RwYzNSbGNpd2djMmxuYm1Gc0lIMGdabkp2YlNCY0ltZHVhVzB2WjI5aWFtVmpkRndpWEc1cGJYQnZjblFnZXlCQlkyTmxjM052Y2lCOUlHWnliMjBnWENKbmJtbHRYQ0pjYm1sdGNHOXlkQ0I3SUdWNFpXTkJjM2x1WXlCOUlHWnliMjBnWENJdUwzQnliMk5sYzNNdWFuTmNJbHh1YVcxd2IzSjBJRWRNYVdJZ1puSnZiU0JjSW1kcE9pOHZSMHhwWWo5MlpYSnphVzl1UFRJdU1Gd2lYRzVjYm1WNGNHOXlkQ0J1WVcxbGMzQmhZMlVnVkdsdFpYSWdlMXh1SUNBZ0lHVjRjRzl5ZENCcGJuUmxjbVpoWTJVZ1UybG5ibUZzVTJsbmJtRjBkWEpsY3lCbGVIUmxibVJ6SUVkUFltcGxZM1F1VDJKcVpXTjBMbE5wWjI1aGJGTnBaMjVoZEhWeVpYTWdlMXh1SUNBZ0lDQWdJQ0J1YjNjb0tUb2dkbTlwWkZ4dUlDQWdJQ0FnSUNCallXNWpaV3hzWldRb0tUb2dkbTlwWkZ4dUlDQWdJSDFjYm4xY2JseHVRSEpsWjJsemRHVnlLQ2xjYm1WNGNHOXlkQ0JqYkdGemN5QlVhVzFsY2lCbGVIUmxibVJ6SUVkUFltcGxZM1F1VDJKcVpXTjBJSHRjYmlBZ0lDQmtaV05zWVhKbElDUnphV2R1WVd4ek9pQlVhVzFsY2k1VGFXZHVZV3hUYVdkdVlYUjFjbVZ6WEc1Y2JpQWdJQ0JBYzJsbmJtRnNLQ2xjYmlBZ0lDQndjbTkwWldOMFpXUWdibTkzS0NrZ2UzMWNibHh1SUNBZ0lFQnphV2R1WVd3b0tWeHVJQ0FnSUhCeWIzUmxZM1JsWkNCallXNWpaV3hzWldRb0tTQjdmVnh1WEc0Z0lDQWdjM1JoZEdsaklHbHVkR1Z5ZG1Gc0tHbHVkR1Z5ZG1Gc09pQnVkVzFpWlhJc0lHTmhiR3hpWVdOclB6b2dLQ2tnUFQ0Z2RtOXBaQ2tnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0I3SUhScGJXVnlMQ0J1YjNjZ2ZTQTlJRlJwYldWeUxtNWxkeWhqWVd4c1ltRmpheXdnS0NrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2x0YldWa2FXRjBaUzVwYzE5a1pYTjBjbTk1WldRb0tTa2dhVzF0WldScFlYUmxMbVJsYzNSeWIza29LVnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSE52ZFhKalpTNXBjMTlrWlhOMGNtOTVaV1FvS1NrZ2MyOTFjbU5sTG1SbGMzUnliM2tvS1Z4dUlDQWdJQ0FnSUNCOUtWeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCcGJXMWxaR2xoZEdVZ1BTQnpaWFJVYVcxbGIzVjBLRzV2ZHlsY2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYzI5MWNtTmxJRDBnYzJWMFNXNTBaWEoyWVd3b2JtOTNMQ0JwYm5SbGNuWmhiQ2xjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJwYldWeVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnYzNSaGRHbGpJSFJwYldWdmRYUW9hVzUwWlhKMllXdzZJRzUxYldKbGNpd2dZMkZzYkdKaFkycy9PaUFvS1NBOVBpQjJiMmxrS1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUhzZ2RHbHRaWElzSUc1dmR5QjlJRDBnVkdsdFpYSXVibVYzS0dOaGJHeGlZV05yTENBb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYzI5MWNtTmxMbWx6WDJSbGMzUnliM2xsWkNncEtTQnpiM1Z5WTJVdVpHVnpkSEp2ZVNncFhHNGdJQ0FnSUNBZ0lIMHBYRzRnSUNBZ0lDQWdJR052Ym5OMElITnZkWEpqWlNBOUlITmxkRlJwYldWdmRYUW9ibTkzTENCcGJuUmxjblpoYkNsY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhScGJXVnlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2MzUmhkR2xqSUdsa2JHVW9ZMkZzYkdKaFkycy9PaUFvS1NBOVBpQjJiMmxrS1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUhzZ2RHbHRaWElzSUc1dmR5QjlJRDBnVkdsdFpYSXVibVYzS0dOaGJHeGlZV05yTENBb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYzI5MWNtTmxMbWx6WDJSbGMzUnliM2xsWkNncEtTQnpiM1Z5WTJVdVpHVnpkSEp2ZVNncFhHNGdJQ0FnSUNBZ0lIMHBYRzRnSUNBZ0lDQWdJR052Ym5OMElITnZkWEpqWlNBOUlITmxkRlJwYldWdmRYUW9ibTkzS1Z4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEdsdFpYSmNiaUFnSUNCOVhHNWNiaUFnSUNCd2NtbDJZWFJsSUhOMFlYUnBZeUJ1Wlhjb2IyNU9iM2MvT2lBb0tTQTlQaUIyYjJsa0xDQnZia05oYm1ObGJHeGxaRDg2SUNncElEMCtJSFp2YVdRcElIdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2RHbHRaWElnUFNCdVpYY2dWR2x0WlhJb0tWeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCdWIzY2dQU0IwYVcxbGNpNWpiMjV1WldOMEtGd2libTkzWENJc0lDZ3BJRDArSUhadmFXUWdiMjVPYjNjL0xpZ3BLVnh1SUNBZ0lDQWdJQ0JqYjI1emRDQmpZVzVqWld4c1pXUWdQU0IwYVcxbGNpNWpiMjV1WldOMEtGd2lZMkZ1WTJWc2JHVmtYQ0lzSUNncElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUnBiV1Z5TG1ScGMyTnZibTVsWTNRb2JtOTNLVnh1SUNBZ0lDQWdJQ0FnSUNBZ2RHbHRaWEl1WkdselkyOXVibVZqZENoallXNWpaV3hzWldRcFhHNGdJQ0FnSUNBZ0lDQWdJQ0J2YmtOaGJtTmxiR3hsWkQ4dUtDbGNiaUFnSUNBZ0lDQWdmU2xjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSHNnZEdsdFpYSXNJRzV2ZHpvZ0tDa2dQVDRnZEdsdFpYSXVibTkzS0NrZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUdOdmJtNWxZM1E4VXlCbGVIUmxibVJ6SUd0bGVXOW1JRlJwYldWeUxsTnBaMjVoYkZOcFoyNWhkSFZ5WlhNK0tGeHVJQ0FnSUNBZ0lDQnphV2R1WVd3NklGTXNYRzRnSUNBZ0lDQWdJR05oYkd4aVlXTnJPaUJIVDJKcVpXTjBMbE5wWjI1aGJFTmhiR3hpWVdOclBIUm9hWE1zSUZScGJXVnlMbE5wWjI1aGJGTnBaMjVoZEhWeVpYTmJVMTArTEZ4dUlDQWdJQ2s2SUc1MWJXSmxjaUI3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiMjV1WldOMEtITnBaMjVoYkN3Z1kyRnNiR0poWTJzcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnWTJGdVkyVnNLQ2tnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMbU5oYm1ObGJHeGxaQ2dwWEc0Z0lDQWdmVnh1ZlZ4dVhHNWxlSEJ2Y25RZ1kyOXVjM1FnZXlCcGJuUmxjblpoYkN3Z2RHbHRaVzkxZEN3Z2FXUnNaU0I5SUQwZ1ZHbHRaWEpjYmx4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUdOeVpXRjBaVkJ2Ykd3b1hHNGdJQ0FnYVc1cGREb2djM1J5YVc1bkxGeHVJQ0FnSUdsdWRHVnlkbUZzT2lCdWRXMWlaWElzWEc0Z0lDQWdaWGhsWXpvZ2MzUnlhVzVuSUh3Z2MzUnlhVzVuVzEwc1hHNHBPaUJCWTJObGMzTnZjanh6ZEhKcGJtYytYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJqY21WaGRHVlFiMnhzUEZRK0tGeHVJQ0FnSUdsdWFYUTZJRlFzWEc0Z0lDQWdhVzUwWlhKMllXdzZJRzUxYldKbGNpeGNiaUFnSUNCbGVHVmpPaUJ6ZEhKcGJtY2dmQ0J6ZEhKcGJtZGJYU3hjYmlBZ0lDQjBjbUZ1YzJadmNtMDZJQ2h6ZEdSdmRYUTZJSE4wY21sdVp5d2djSEpsZGpvZ1ZDa2dQVDRnVkN4Y2JpazZJRUZqWTJWemMyOXlQRlErWEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCamNtVmhkR1ZRYjJ4c1BGUStLRnh1SUNBZ0lHbHVhWFE2SUZRc1hHNGdJQ0FnYVc1MFpYSjJZV3c2SUc1MWJXSmxjaXhjYmlBZ0lDQm1iam9nS0hCeVpYWTZJRlFwSUQwK0lGUWdmQ0JRY205dGFYTmxQRlErTEZ4dUtUb2dRV05qWlhOemIzSThWRDVjYmx4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUdOeVpXRjBaVkJ2Ykd3OFZENG9YRzRnSUNBZ2FXNXBkRG9nVkN4Y2JpQWdJQ0JwZG1Gc09pQnVkVzFpWlhJc1hHNGdJQ0FnWlhobFkwOXlSbTQ2SUhOMGNtbHVaeUI4SUhOMGNtbHVaMXRkSUh3Z0tDaHdjbVYyT2lCVUtTQTlQaUJVSUh3Z1VISnZiV2x6WlR4VVBpa3NYRzRnSUNBZ2RISmhibk5tYjNKdFB6b2dLSE4wWkc5MWREb2djM1J5YVc1bkxDQndjbVYyT2lCVUtTQTlQaUJVTEZ4dUtUb2dRV05qWlhOemIzSThWRDRnZTF4dUlDQWdJR3hsZENCamRYSnlaVzUwVm1Gc2RXVWdQU0JwYm1sMFhHNGdJQ0FnYkdWMElIUnBiV1Z5T2lCSFRHbGlMbE52ZFhKalpTQjhJRzUxYkd3Z1BTQnVkV3hzWEc0Z0lDQWdZMjl1YzNRZ2MzVmljMk55YVdKbGNuTWdQU0J1WlhjZ1UyVjBQQ2dwSUQwK0lIWnZhV1ErS0NsY2JseHVJQ0FnSUdaMWJtTjBhVzl1SUhObGRDaDJZV3gxWlRvZ1ZDa2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb2RtRnNkV1VnSVQwOUlHTjFjbkpsYm5SV1lXeDFaU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZM1Z5Y21WdWRGWmhiSFZsSUQwZ2RtRnNkV1ZjYmlBZ0lDQWdJQ0FnSUNBZ0lFRnljbUY1TG1aeWIyMG9jM1ZpYzJOeWFXSmxjbk1wTG1admNrVmhZMmdvS0dOaUtTQTlQaUJqWWlncEtWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1puVnVZM1JwYjI0Z1kyOXRjSFYwWlNncElIdGNiaUFnSUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUJsZUdWalQzSkdiaUE5UFQwZ1hDSm1kVzVqZEdsdmJsd2lLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCMllXeDFaU0E5SUdWNFpXTlBja1p1S0dOMWNuSmxiblJXWVd4MVpTbGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDJZV3gxWlNCcGJuTjBZVzVqWlc5bUlGQnliMjFwYzJVcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlM1MGFHVnVLSE5sZENsY2JpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMlYwS0haaGJIVmxLVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWlhobFkwRnplVzVqS0dWNFpXTlBja1p1S1M1MGFHVnVLQ2h6ZEdSdmRYUXBJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelpYUW9kSEpoYm5ObWIzSnRJRDhnZEhKaGJuTm1iM0p0S0hOMFpHOTFkQ3dnWTNWeWNtVnVkRlpoYkhWbEtTQTZJQ2h6ZEdSdmRYUWdZWE1nVkNrcFhHNGdJQ0FnSUNBZ0lDQWdJQ0I5S1Z4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnWm5WdVkzUnBiMjRnYzNWaWMyTnlhV0psS0dOaGJHeGlZV05yT2lBb0tTQTlQaUIyYjJsa0tUb2dLQ2tnUFQ0Z2RtOXBaQ0I3WEc0Z0lDQWdJQ0FnSUdsbUlDaHpkV0p6WTNKcFltVnljeTV6YVhwbElEMDlQU0F3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J6WlhSVWFXMWxiM1YwS0dOdmJYQjFkR1VwWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhVzFsY2lBOUlITmxkRWx1ZEdWeWRtRnNLR052YlhCMWRHVXNJR2wyWVd3cFhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0J6ZFdKelkzSnBZbVZ5Y3k1aFpHUW9ZMkZzYkdKaFkyc3BYRzVjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhOMVluTmpjbWxpWlhKekxtUmxiR1YwWlNoallXeHNZbUZqYXlsY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoemRXSnpZM0pwWW1WeWN5NXphWHBsSUQwOVBTQXdJQ1ltSUhScGJXVnlLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJ4bFlYSkpiblJsY25aaGJDaDBhVzFsY2lsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFXMWxjaUE5SUc1MWJHeGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUhKbGRIVnliaUJ1WlhjZ1FXTmpaWE56YjNJb0tDa2dQVDRnWTNWeWNtVnVkRlpoYkhWbExDQnpkV0p6WTNKcFltVXBYRzU5WEc0aUxDQWlhVzF3YjNKMElHRndjQ0JtY205dElGd2lZV2R6TDJkMGF6UXZZWEJ3WENKY2JtbHRjRzl5ZENCN0lFRnpkR0ZzTENCSGRHc3NJRWRrYXlCOUlHWnliMjBnWENKaFozTXZaM1JyTkZ3aVhHNXBiWEJ2Y25RZ2V5QmxlR1ZqUVhONWJtTWdmU0JtY205dElGd2lZV2R6TDNCeWIyTmxjM05jSWx4dWFXMXdiM0owSUhzZ1kzSmxZWFJsVUc5c2JDQjlJR1p5YjIwZ1hDSmhaM012ZEdsdFpWd2lYRzVwYlhCdmNuUWdSMHhwWWlCbWNtOXRJRndpWjJrNkx5OUhUR2xpWENKY2JtbHRjRzl5ZENCVGVYTlVjbUY1UW5WMGRHOXVJR1p5YjIwZ1hDSXVMMU41YzNSbGJWUnlZWGt2VTNselZISmhlVUoxZEhSdmJsd2lYRzVwYlhCdmNuUWdWbTlzZFcxbFNXNWthV05oZEc5eUlHWnliMjBnWENJdUwxVjBhV3hwZEdsbGN5OTJiMngxYldWcGJtUnBZMkYwYjNKY0lseHVhVzF3YjNKMElFaHBaR1ZYYVc1a2IzZHpRblYwZEc5dUlHWnliMjBnWENJdUwwaHBaR1ZYYVc1a2IzZHpRblYwZEc5dVhDSmNibWx0Y0c5eWRDQk9aWFIzYjNKclNXNWthV05oZEc5eUlHWnliMjBnWENJdUwxVjBhV3hwZEdsbGN5OXVaWFIzYjNKcmFXNWthV05oZEc5eVhDSmNibWx0Y0c5eWRDQlZkR2xzYzFCdmNHOTJaWElnWm5KdmJTQmNJaTR2VlhScGJHbDBhV1Z6TDNWMGFXeHBkR2xsYzNCdmNHOTJaWEpjSWx4dVhHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCbWRXNWpkR2x2YmlCQ1lYSW9aMlJyYlc5dWFYUnZjam9nUjJSckxrMXZibWwwYjNJcElIdGNiaUFnWTI5dWMzUWdkR2x0WlNBOUlHTnlaV0YwWlZCdmJHd29YQ0pjSWl3Z01UQXdNQ3dnSjJSaGRHVWdYQ0lySld3NkpVMGdKWEJjSWljcFhHNGdJR052Ym5OMElHUmhkR1VnUFNCamNtVmhkR1ZRYjJ4c0tGd2lYQ0lzSURFd01EQXNJQ2RrWVhSbElGd2lLeVZ0THlWa0x5VlpYQ0luS1Z4dUlDQmpiMjV6ZENCN0lFSlBWRlJQVFN3Z1RFVkdWQ3dnVWtsSFNGUWdmU0E5SUVGemRHRnNMbGRwYm1SdmQwRnVZMmh2Y2x4dUlDQmpiMjV6ZENCQlUxTkZWRk5mVUVGVVNDQTlJR0FrZTBkTWFXSXVaMlYwWDJOMWNuSmxiblJmWkdseUtDbDlMMkZ6YzJWMGMyQmNibHh1SUNCeVpYUjFjbTRnS0Z4dUlDQWdJRHgzYVc1a2IzZGNiaUFnSUNBZ0lIWnBjMmxpYkdWY2JpQWdJQ0FnSUc1aGJXVTlYQ0ppWVhKY0lseHVJQ0FnSUNBZ1kyeGhjM005WENKQ1lYSmNJbHh1SUNBZ0lDQWdaMlJyYlc5dWFYUnZjajE3WjJScmJXOXVhWFJ2Y24xY2JpQWdJQ0FnSUdWNFkyeDFjMmwyYVhSNVBYdEJjM1JoYkM1RmVHTnNkWE5wZG1sMGVTNUZXRU5NVlZOSlZrVjlYRzRnSUNBZ0lDQmhibU5vYjNJOWUwSlBWRlJQVFNCOElFeEZSbFFnZkNCU1NVZElWSDFjYmlBZ0lDQWdJR0Z3Y0d4cFkyRjBhVzl1UFh0aGNIQjlYRzRnSUNBZ1BseHVJQ0FnSUNBZ1BHTmxiblJsY21KdmVDQmpjM05PWVcxbFBWd2lZMlZ1ZEdWeVltOTRYQ0krWEc0Z0lDQWdJQ0FnSUR4aWRYUjBiMjVjYmlBZ0lDQWdJQ0FnSUNCamJHRnpjejFjSW5OMFlYSjBZblYwZEc5dVhDSmNiaUFnSUNBZ0lDQWdJQ0FrZEhsd1pUMWNJbk4wWVhKMFhDSmNiaUFnSUNBZ0lDQWdJQ0J2YmtOc2FXTnJaV1E5ZXlncElEMCtJR1Y0WldOQmMzbHVZeWhjSW5kaGJHdGxjbHdpS1gxY2JpQWdJQ0FnSUNBZ0lDQm9aWGh3WVc1a1hHNGdJQ0FnSUNBZ0lDQWdhR0ZzYVdkdVBYdEhkR3N1UVd4cFoyNHVVMVJCVWxSOVhHNGdJQ0FnSUNBZ0lENWNiaUFnSUNBZ0lDQWdJQ0E4YVcxaFoyVWdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWFXeGxQWHRnSkh0QlUxTkZWRk5mVUVGVVNIMHZZWEpqYUY5aWJIVmxMbkJ1WjJCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0J3YVhobGJGTnBlbVU5ZXpJd2ZWeHVJQ0FnSUNBZ0lDQWdJQzgrWEc0Z0lDQWdJQ0FnSUR3dlluVjBkRzl1UGx4dUlDQWdJQ0FnSUNBOFltOTRJQ1IwZVhCbFBWd2lZMlZ1ZEdWeVhDSWdMejVjYmlBZ0lDQWdJQ0FnUEdKdmVDQWtkSGx3WlQxY0ltVnVaRndpSUdoaGJHbG5iajE3UjNSckxrRnNhV2R1TGtWT1JIMCtYRzRnSUNBZ0lDQWdJQ0FnUEZONWMxUnlZWGxDZFhSMGIyNGdMejVjYmlBZ0lDQWdJQ0FnSUNBOGJXVnVkV0oxZEhSdmJpQmNiaUFnSUNBZ0lDQWdJQ0FnSUdOc1lYTnpQVndpZFhScGJHbDBhV1Z6WENKY2JpQWdJQ0FnSUNBZ0lDQWdJR1JwY21WamRHbHZiajE3UjNSckxrRnljbTkzVkhsd1pTNU9UMDVGZlZ4dUlDQWdJQ0FnSUNBZ0lENWNiaUFnSUNBZ0lDQWdJQ0FnSUR4aWIzZ2diM0pwWlc1MFlYUnBiMjQ5ZTBkMGF5NVBjbWxsYm5SaGRHbHZiaTVJVDFKSldrOU9WRUZNZlNCemNHRmphVzVuUFhzMmZUNWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ1BFNWxkSGR2Y210SmJtUnBZMkYwYjNJZ0x6NWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ1BGWnZiSFZ0WlVsdVpHbGpZWFJ2Y2lBdlBseHVJQ0FnSUNBZ0lDQWdJQ0FnUEM5aWIzZytYRzRnSUNBZ0lDQWdJQ0FnSUNBOFZYUnBiSE5RYjNCdmRtVnlJQzgrWEc0Z0lDQWdJQ0FnSUNBZ1BDOXRaVzUxWW5WMGRHOXVQbHh1SUNBZ0lDQWdJQ0FnSUR4dFpXNTFZblYwZEc5dUlHTnNZWE56UFZ3aVpHRjBaWFJwYldWY0lqNWNiaUFnSUNBZ0lDQWdJQ0FnSUR4aWIzZ2diM0pwWlc1MFlYUnBiMjQ5ZTBkMGF5NVBjbWxsYm5SaGRHbHZiaTVXUlZKVVNVTkJUSDArWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJRHhzWVdKbGJDQnNZV0psYkQxN2RHbHRaWDBnYUdGc2FXZHVQWHRIZEdzdVFXeHBaMjR1UlU1RWZTOCtYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lEeHNZV0psYkNCc1lXSmxiRDE3WkdGMFpYMGdhR0ZzYVdkdVBYdEhkR3N1UVd4cFoyNHVSVTVFZlM4K1hHNGdJQ0FnSUNBZ0lDQWdJQ0E4TDJKdmVENWNiaUFnSUNBZ0lDQWdJQ0FnSUR4d2IzQnZkbVZ5UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0E4UjNSckxrTmhiR1Z1WkdGeUlDOCtYRzRnSUNBZ0lDQWdJQ0FnSUNBOEwzQnZjRzkyWlhJK1hHNGdJQ0FnSUNBZ0lDQWdQQzl0Wlc1MVluVjBkRzl1UGx4dUlDQWdJQ0FnSUNBZ0lEeElhV1JsVjJsdVpHOTNjMEoxZEhSdmJpQXZQbHh1SUNBZ0lDQWdJQ0E4TDJKdmVENWNiaUFnSUNBZ0lEd3ZZMlZ1ZEdWeVltOTRQbHh1SUNBZ0lEd3ZkMmx1Wkc5M1BseHVJQ0FwWEc1OVhHNGlMQ0FpYVcxd2IzSjBJRUZ6ZEdGc1ZISmhlU0JtY205dElDZG5hVG92TDBGemRHRnNWSEpoZVNjN1hHNXBiWEJ2Y25RZ2V5QkhkR3NnZlNCbWNtOXRJQ2RoWjNNdlozUnJOQ2M3WEc1Y2JtVjRjRzl5ZENCcGJuUmxjbVpoWTJVZ1UzbHpWSEpoZVZCeWIzQnpJSHRjYmlBZ2FXTnZibE5wZW1VL09pQnVkVzFpWlhJN0lDOHZJR1JsWm1GMWJIUWdNVFpjYmlBZ2MzQmhZMmx1Wno4NklHNTFiV0psY2pzZ0lDOHZJR1JsWm1GMWJIUWdORnh1ZlZ4dVhHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCbWRXNWpkR2x2YmlCVGVYTlVjbUY1S0hzZ2FXTnZibE5wZW1VZ1BTQXhOaXdnYzNCaFkybHVaeUE5SURFd0lIMDZJRk41YzFSeVlYbFFjbTl3Y3lrZ2UxeHVJQ0JqYjI1emRDQjBjbUY1SUQwZ1FYTjBZV3hVY21GNUxsUnlZWGt1WjJWMFgyUmxabUYxYkhRb0tWeHVJQ0F2THlCRGIyNTBZV2x1WlhJZ1ptOXlJSFJ5WVhrZ2FXTnZibk5jYmlBZ1kyOXVjM1FnZEhKaGVVSnZlQ0E5SUc1bGR5QkhkR3N1UW05NEtIc2diM0pwWlc1MFlYUnBiMjQ2SUVkMGF5NVBjbWxsYm5SaGRHbHZiaTVJVDFKSldrOU9WRUZNTENCemNHRmphVzVuT2lCemNHRmphVzVuSUgwcFhHNGdJR052Ym5OMElIUnlZWGxKWTI5dWN6b2dSM1JyTGtsdFlXZGxXMTBnUFNCYlhWeHVYRzVjYmlBZ1puVnVZM1JwYjI0Z2RYQmtZWFJsVkhKaGVVbDBaVzF6S0NrZ2UxeHVJQ0F2THlCU1pXMXZkbVVnYjJ4a0lIZHBaR2RsZEhNZ1puSnZiU0IwY21GNVFtOTRYRzRnSUdadmNpQW9ZMjl1YzNRZ2FXTnZiaUJ2WmlCMGNtRjVTV052Ym5NcElIdGNiaUFnSUNCMGNtRjVRbTk0TG5KbGJXOTJaU2hwWTI5dUtWeHVJQ0I5WEc0Z0lIUnlZWGxKWTI5dWN5NXNaVzVuZEdnZ1BTQXdYRzVjYmlBZ0x5OGdRV1JrSUc1bGR5QjBjbUY1SUdsMFpXMXpYRzRnSUdOdmJuTjBJR2wwWlcxeklEMGdkSEpoZVM1blpYUmZhWFJsYlhNb0tWeHVJQ0JtYjNJZ0tHTnZibk4wSUdsMFpXMGdiMllnYVhSbGJYTXBJSHRjYmlBZ0lDQmpiMjV6ZENCcFkyOXVJRDBnYVhSbGJTNW5aWFJmWjJsamIyNG9LVnh1SUNBZ0lHbG1JQ2doYVdOdmJpa2dZMjl1ZEdsdWRXVmNibHh1SUNBZ0lHTnZibk4wSUdsdFlXZGxJRDBnYm1WM0lFZDBheTVKYldGblpTaDdJR2RwWTI5dU9pQnBZMjl1TENCd2FYaGxiRjl6YVhwbE9pQnBZMjl1VTJsNlpTQjlLVnh1SUNBZ0lHTnZibk4wSUdkbGMzUjFjbVVnUFNCdVpYY2dSM1JyTGtkbGMzUjFjbVZEYkdsamF5aDdJR0oxZEhSdmJqb2dNeUI5S1Z4dUlDQWdJR2RsYzNSMWNtVXVZMjl1Ym1WamRDaGNJbkJ5WlhOelpXUmNJaXdnS0NrZ1BUNGdlMXh1SUNBZ0lDQWdZMjl1YzNRZ2JXVnVkVTF2WkdWc0lEMGdhWFJsYlM1blpYUmZiV1Z1ZFY5dGIyUmxiQ2dwSUM4dklISmxkSFZ5Ym5NZ1IybHZMazFsYm5WTmIyUmxiQ0I4SUc1MWJHeGNiaUFnSUNBZ0lHbG1JQ2h0Wlc1MVRXOWtaV3dwSUh0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnY0c5d2IzWmxjazFsYm5VZ1BTQnVaWGNnUjNSckxsQnZjRzkyWlhKTlpXNTFLSHNnYldWdWRWOXRiMlJsYkRvZ2JXVnVkVTF2WkdWc0xDQm9ZWE5mWVhKeWIzYzZJR1poYkhObElIMHBYRzRnSUNBZ0lDQWdJSEJ2Y0c5MlpYSk5aVzUxTG5ObGRGOXdZWEpsYm5Rb2FXMWhaMlVwSUNBdkx5QmhibU5vYjNJZ2RHOGdkR2hsSUhSeVlYa2dhV052Ymx4dUlDQWdJQ0FnSUNCd2IzQnZkbVZ5VFdWdWRTNXBibk5sY25SZllXTjBhVzl1WDJkeWIzVndLQ2RrWW5WemJXVnVkU2NzSUdsMFpXMHVaMlYwWDJGamRHbHZibDluY205MWNDZ3BLVnh1SUNBZ0lDQWdJQ0J3YjNCdmRtVnlUV1Z1ZFM1d2IzQjFjQ2dwWEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmU2xjYmlBZ0lDQnBiV0ZuWlM1aFpHUmZZMjl1ZEhKdmJHeGxjaWhuWlhOMGRYSmxLVnh1WEc0Z0lDQWdkSEpoZVVKdmVDNWhjSEJsYm1Rb2FXMWhaMlVwWEc0Z0lDQWdkSEpoZVVsamIyNXpMbkIxYzJnb2FXMWhaMlVwWEc0Z0lIMWNibjFjYmx4dVhHNGdJQzh2SUVsdWFYUnBZV3dnY21WdVpHVnlYRzRnSUhWd1pHRjBaVlJ5WVhsSmRHVnRjeWdwWEc1Y2JpQWdMeThnVEdsemRHVnVJR1p2Y2lCdVpYY2dhWFJsYlhNZ1lXUmtaV1F2Y21WdGIzWmxaQ0JrZVc1aGJXbGpZV3hzZVZ4dUlDQjBjbUY1TG1OdmJtNWxZM1FvWENKcGRHVnRMV0ZrWkdWa1hDSXNJSFZ3WkdGMFpWUnlZWGxKZEdWdGN5bGNiaUFnZEhKaGVTNWpiMjV1WldOMEtGd2lhWFJsYlMxeVpXMXZkbVZrWENJc0lIVndaR0YwWlZSeVlYbEpkR1Z0Y3lsY2JseHVJQ0J5WlhSMWNtNGdkSEpoZVVKdmVGeHVmVnh1SWl3Z0ltbHRjRzl5ZENCSGRHc2dabkp2YlNCY0ltZHBPaTh2UjNSclAzWmxjbk5wYjI0OU5DNHdYQ0pjYm1sdGNHOXlkQ0JCYzNSaGJDQm1jbTl0SUZ3aVoyazZMeTlCYzNSaGJEOTJaWEp6YVc5dVBUUXVNRndpWEc1cGJYQnZjblFnZXlCRFExQnliM0J6SUgwZ1puSnZiU0JjSW1kdWFXMWNJbHh1YVcxd2IzSjBJSHNnYVc1MGNtbHVjMmxqUld4bGJXVnVkSE1nZlNCbWNtOXRJRndpWjI1cGJTOW5kR3MwTDJwemVDMXlkVzUwYVcxbFhDSmNibHh1ZEhsd1pTQlFjbTl3Y3p4VUlHVjRkR1Z1WkhNZ1IzUnJMbGRwWkdkbGRDd2dVSEp2Y0hNK0lEMGdRME5RY205d2N6eFVMQ0JRWVhKMGFXRnNQRkJ5YjNCelBqNWNibHh1VDJKcVpXTjBMbUZ6YzJsbmJpaHBiblJ5YVc1emFXTkZiR1Z0Wlc1MGN5d2dlMXh1SUNBZ0lHSnZlRG9nUjNSckxrSnZlQ3hjYmlBZ0lDQmlkWFIwYjI0NklFZDBheTVDZFhSMGIyNHNYRzRnSUNBZ1kyVnVkR1Z5WW05NE9pQkhkR3N1UTJWdWRHVnlRbTk0TEZ4dUlDQWdJQzh2SUdOcGNtTjFiR0Z5Y0hKdlozSmxjM002SUVGemRHRnNMa05wY21OMWJHRnlVSEp2WjNKbGMzTXNYRzRnSUNBZ1pISmhkMmx1WjJGeVpXRTZJRWQwYXk1RWNtRjNhVzVuUVhKbFlTeGNiaUFnSUNCbGJuUnllVG9nUjNSckxrVnVkSEo1TEZ4dUlDQWdJR2x0WVdkbE9pQkhkR3N1U1cxaFoyVXNYRzRnSUNBZ2JHRmlaV3c2SUVkMGF5NU1ZV0psYkN4Y2JpQWdJQ0JzWlhabGJHSmhjam9nUjNSckxreGxkbVZzUW1GeUxGeHVJQ0FnSUcxbGJuVmlkWFIwYjI0NklFZDBheTVOWlc1MVFuVjBkRzl1TEZ4dUlDQWdJRzkyWlhKc1lYazZJRWQwYXk1UGRtVnliR0Y1TEZ4dUlDQWdJSEJ2Y0c5MlpYSTZJRWQwYXk1UWIzQnZkbVZ5TEZ4dUlDQWdJSEpsZG1WaGJHVnlPaUJIZEdzdVVtVjJaV0ZzWlhJc1hHNGdJQ0FnYzJOeWIyeHNaV1IzYVc1a2IzYzZJRWQwYXk1VFkzSnZiR3hsWkZkcGJtUnZkeXhjYmlBZ0lDQnpiR2xrWlhJNklFRnpkR0ZzTGxOc2FXUmxjaXhjYmlBZ0lDQnpkR0ZqYXpvZ1IzUnJMbE4wWVdOckxGeHVJQ0FnSUhOM2FYUmphRG9nUjNSckxsTjNhWFJqYUN4Y2JpQWdJQ0IwYjJkbmJHVmlkWFIwYjI0NklFZDBheTVVYjJkbmJHVkNkWFIwYjI0c1hHNGdJQ0FnZDJsdVpHOTNPaUJCYzNSaGJDNVhhVzVrYjNjc1hHNTlLVnh1WEc1a1pXTnNZWEpsSUdkc2IySmhiQ0I3WEc0Z0lDQWdibUZ0WlhOd1lXTmxJRXBUV0NCN1hHNGdJQ0FnSUNBZ0lHbHVkR1Z5Wm1GalpTQkpiblJ5YVc1emFXTkZiR1Z0Wlc1MGN5QjdYRzRnSUNBZ0lDQWdJQ0FnSUNCaWIzZzZJRkJ5YjNCelBFZDBheTVDYjNnc0lFZDBheTVDYjNndVEyOXVjM1J5ZFdOMGIzSlFjbTl3Y3o1Y2JpQWdJQ0FnSUNBZ0lDQWdJR0oxZEhSdmJqb2dVSEp2Y0hNOFIzUnJMa0oxZEhSdmJpd2dSM1JyTGtKMWRIUnZiaTVEYjI1emRISjFZM1J2Y2xCeWIzQnpQbHh1SUNBZ0lDQWdJQ0FnSUNBZ1kyVnVkR1Z5WW05NE9pQlFjbTl3Y3p4SGRHc3VRMlZ1ZEdWeVFtOTRMQ0JIZEdzdVEyVnVkR1Z5UW05NExrTnZibk4wY25WamRHOXlVSEp2Y0hNK1hHNGdJQ0FnSUNBZ0lDQWdJQ0F2THlCamFYSmpkV3hoY25CeWIyZHlaWE56T2lCUWNtOXdjenhCYzNSaGJDNURhWEpqZFd4aGNsQnliMmR5WlhOekxDQkJjM1JoYkM1RGFYSmpkV3hoY2xCeWIyZHlaWE56TGtOdmJuTjBjblZqZEc5eVVISnZjSE0rWEc0Z0lDQWdJQ0FnSUNBZ0lDQmtjbUYzYVc1bllYSmxZVG9nVUhKdmNITThSM1JyTGtSeVlYZHBibWRCY21WaExDQkhkR3N1UkhKaGQybHVaMEZ5WldFdVEyOXVjM1J5ZFdOMGIzSlFjbTl3Y3o1Y2JpQWdJQ0FnSUNBZ0lDQWdJR1Z1ZEhKNU9pQlFjbTl3Y3p4SGRHc3VSVzUwY25rc0lFZDBheTVGYm5SeWVTNURiMjV6ZEhKMVkzUnZjbEJ5YjNCelBseHVJQ0FnSUNBZ0lDQWdJQ0FnYVcxaFoyVTZJRkJ5YjNCelBFZDBheTVKYldGblpTd2dSM1JyTGtsdFlXZGxMa052Ym5OMGNuVmpkRzl5VUhKdmNITStYRzRnSUNBZ0lDQWdJQ0FnSUNCc1lXSmxiRG9nVUhKdmNITThSM1JyTGt4aFltVnNMQ0JIZEdzdVRHRmlaV3d1UTI5dWMzUnlkV04wYjNKUWNtOXdjejVjYmlBZ0lDQWdJQ0FnSUNBZ0lHeGxkbVZzWW1GeU9pQlFjbTl3Y3p4SGRHc3VUR1YyWld4Q1lYSXNJRWQwYXk1TVpYWmxiRUpoY2k1RGIyNXpkSEoxWTNSdmNsQnliM0J6UGx4dUlDQWdJQ0FnSUNBZ0lDQWdiV1Z1ZFdKMWRIUnZiam9nVUhKdmNITThSM1JyTGsxbGJuVkNkWFIwYjI0c0lFZDBheTVOWlc1MVFuVjBkRzl1TGtOdmJuTjBjblZqZEc5eVVISnZjSE0rWEc0Z0lDQWdJQ0FnSUNBZ0lDQnZkbVZ5YkdGNU9pQlFjbTl3Y3p4SGRHc3VUM1psY214aGVTd2dSM1JyTGs5MlpYSnNZWGt1UTI5dWMzUnlkV04wYjNKUWNtOXdjejVjYmlBZ0lDQWdJQ0FnSUNBZ0lIQnZjRzkyWlhJNklGQnliM0J6UEVkMGF5NVFiM0J2ZG1WeUxDQkhkR3N1VUc5d2IzWmxjaTVEYjI1emRISjFZM1J2Y2xCeWIzQnpQbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjJaV0ZzWlhJNklGQnliM0J6UEVkMGF5NVNaWFpsWVd4bGNpd2dSM1JyTGxKbGRtVmhiR1Z5TGtOdmJuTjBjblZqZEc5eVVISnZjSE0rWEc0Z0lDQWdJQ0FnSUNBZ0lDQnpZM0p2Ykd4bFpIZHBibVJ2ZHpvZ1VISnZjSE04UjNSckxsTmpjbTlzYkdWa1YybHVaRzkzTENCSGRHc3VVMk55YjJ4c1pXUlhhVzVrYjNjdVEyOXVjM1J5ZFdOMGIzSlFjbTl3Y3o1Y2JpQWdJQ0FnSUNBZ0lDQWdJSE5zYVdSbGNqb2dVSEp2Y0hNOFFYTjBZV3d1VTJ4cFpHVnlMQ0JCYzNSaGJDNVRiR2xrWlhJdVEyOXVjM1J5ZFdOMGIzSlFjbTl3Y3o1Y2JpQWdJQ0FnSUNBZ0lDQWdJSE4wWVdOck9pQlFjbTl3Y3p4SGRHc3VVM1JoWTJzc0lFZDBheTVUZEdGamF5NURiMjV6ZEhKMVkzUnZjbEJ5YjNCelBseHVJQ0FnSUNBZ0lDQWdJQ0FnYzNkcGRHTm9PaUJRY205d2N6eEhkR3N1VTNkcGRHTm9MQ0JIZEdzdVUzZHBkR05vTGtOdmJuTjBjblZqZEc5eVVISnZjSE0rWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBiMmRuYkdWaWRYUjBiMjQ2SUZCeWIzQnpQRWQwYXk1VWIyZG5iR1ZDZFhSMGIyNHNJRWQwYXk1VWIyZG5iR1ZDZFhSMGIyNHVRMjl1YzNSeWRXTjBiM0pRY205d2N6NWNiaUFnSUNBZ0lDQWdJQ0FnSUhkcGJtUnZkem9nVUhKdmNITThRWE4wWVd3dVYybHVaRzkzTENCQmMzUmhiQzVYYVc1a2IzY3VRMjl1YzNSeWRXTjBiM0pRY205d2N6NWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibjFjYmx4dVpYaHdiM0owSUNvZ1puSnZiU0JjSW1kdWFXMHZaM1JyTkM5cWMzZ3RjblZ1ZEdsdFpWd2lYRzRpTENBaWFXMXdiM0owSUVkMGF5Qm1jbTl0SUZ3aVoyazZMeTlIZEdzL2RtVnljMmx2YmowMExqQmNJbHh1YVcxd2IzSjBJRWRwYnlCbWNtOXRJRndpWjJrNkx5OUhhVzgvZG1WeWMybHZiajB5TGpCY0lseHVhVzF3YjNKMElIc2dZMjl1Wm1sbmRXVWdmU0JtY205dElGd2lMaTR2YW5ONEwyVnVkaTVxYzF3aVhHNXBiWEJ2Y25RZ2V5Qm5aWFJVZVhCbExDQnZia05zWldGdWRYQXNJRUZqWTJWemMyOXlMQ0JHY21GbmJXVnVkQ0I5SUdaeWIyMGdYQ0l1TGk5cGJtUmxlQzVxYzF3aVhHNWNibWx0Y0c5eWRDQjBlWEJsSUVGa2R5Qm1jbTl0SUZ3aVoyazZMeTlCWkhkY0lseHVZMjl1YzNRZ1lXUjNJRDBnWVhkaGFYUWdhVzF3YjNKMEtGd2laMms2THk5QlpIZGNJaWt1ZEdobGJpZ29iU2tnUFQ0Z2JTNWtaV1poZFd4MEtTNWpZWFJqYUNnb0tTQTlQaUJ1ZFd4c0tWeHVYRzVqYjI1emRDQmtkVzF0ZVVKMWFXeGtaWElnUFNCdVpYY2dSM1JyTGtKMWFXeGtaWElvS1Z4dVhHNWpiMjV6ZENCN0lHbHVkSEpwYm5OcFkwVnNaVzFsYm5SeklIMGdQU0JqYjI1bWFXZDFaU2g3WEc0Z0lDQWdhVzVwZEZCeWIzQnpLR04wYjNJcElIdGNiaUFnSUNBZ0lDQWdhV1lnS0dOMGIzSWdQVDA5SUVkMGF5NVRkR0ZqYXlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdhMlY1Y3pvZ1FYSnlZWGs4UlhoMGNtRmpkRHhyWlhsdlppQkhkR3N1VTNSaFkyc3NJSE4wY21sdVp6NCtJRDBnVzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aWRtbHphV0pzWlVOb2FXeGtUbUZ0WlZ3aUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lkbWx6YVdKc1pWOWphR2xzWkY5dVlXMWxYQ0lzWEc0Z0lDQWdJQ0FnSUNBZ0lDQmRYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYTJWNWMxeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJR2xtSUNoaFpIY2dKaVlnWTNSdmNpQTlQVDBnWVdSM0xsUnZaMmRzWlVkeWIzVndLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCclpYbHpPaUJCY25KaGVUeEZlSFJ5WVdOMFBHdGxlVzltSUVGa2R5NVViMmRuYkdWSGNtOTFjQ3dnYzNSeWFXNW5QajRnUFNCYlhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hDSmhZM1JwZG1WY0lpeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmNJbUZqZEdsMlpVNWhiV1ZjSWl4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCY0ltRmpkR2wyWlY5dVlXMWxYQ0lzWEc0Z0lDQWdJQ0FnSUNBZ0lDQmRYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYTJWNWMxeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZTeGNiaUFnSUNCelpYUkRjM01vYjJKcVpXTjBMQ0JqYzNNcElIdGNiaUFnSUNBZ0lDQWdhV1lnS0NFb2IySnFaV04wSUdsdWMzUmhibU5sYjJZZ1IzUnJMbGRwWkdkbGRDa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9SWEp5YjNJb1lHTmhibTV2ZENCelpYUWdZM056SUc5dUlDUjdiMkpxWldOMGZXQXBLVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnWTNSNElEMGdiMkpxWldOMExtZGxkRjl6ZEhsc1pWOWpiMjUwWlhoMEtDbGNiaUFnSUNBZ0lDQWdiR1YwSUhCeWIzWnBaR1Z5T2lCSGRHc3VRM056VUhKdmRtbGtaWEpjYmx4dUlDQWdJQ0FnSUNCamIyNXpkQ0J6WlhSMFpYSWdQU0FvWTNOek9pQnpkSEpwYm1jcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doWTNOekxtbHVZMngxWkdWektGd2llMXdpS1NCOGZDQWhZM056TG1sdVkyeDFaR1Z6S0Z3aWZWd2lLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOemN5QTlJR0FxSUhzZ0pIdGpjM045SUgxZ1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNod2NtOTJhV1JsY2lrZ1kzUjRMbkpsYlc5MlpWOXdjbTkyYVdSbGNpaHdjbTkyYVdSbGNpbGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2NISnZkbWxrWlhJZ1BTQnVaWGNnUjNSckxrTnpjMUJ5YjNacFpHVnlLQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lIQnliM1pwWkdWeUxteHZZV1JmWm5KdmJWOXpkSEpwYm1jb1kzTnpLVnh1SUNBZ0lDQWdJQ0FnSUNBZ1kzUjRMbUZrWkY5d2NtOTJhV1JsY2lod2NtOTJhV1JsY2l3Z1IzUnJMbE5VV1V4RlgxQlNUMVpKUkVWU1gxQlNTVTlTU1ZSWlgxVlRSVklwWEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnBaaUFvWTNOeklHbHVjM1JoYm1ObGIyWWdRV05qWlhOemIzSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lITmxkSFJsY2loamMzTXVaMlYwS0NrcFhHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmthWE53YjNObElEMGdZM056TG5OMVluTmpjbWxpWlNnb0tTQTlQaUJ6WlhSMFpYSW9ZM056TG1kbGRDZ3BLU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lHOXVRMnhsWVc1MWNDaGthWE53YjNObEtWeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYzJWMGRHVnlLR056Y3lsY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgwc1hHNWNiaUFnSUNCelpYUkRiR0Z6Y3lodlltcGxZM1FzSUdOc1lYTnpUbUZ0WlNrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvSVNodlltcGxZM1FnYVc1emRHRnVZMlZ2WmlCSGRHc3VWMmxrWjJWMEtTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpaEZjbkp2Y2loZ1kyRnVibTkwSUhObGRDQmpiR0Z6YzA1aGJXVWdiMjRnSkh0dlltcGxZM1I5WUNrcFhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JwWmlBb1kyeGhjM05PWVcxbElHbHVjM1JoYm1ObGIyWWdRV05qWlhOemIzSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHOWlhbVZqZEM1amMzTkRiR0Z6YzJWeklEMGdZMnhoYzNOT1lXMWxMbWRsZENncExuTndiR2wwS0M5Y1hITXJMeWxjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdScGMzQnZjMlVnUFNCamJHRnpjMDVoYldVdWMzVmljMk55YVdKbEtGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDZ3BJRDArSUNodlltcGxZM1F1WTNOelEyeGhjM05sY3lBOUlHTnNZWE56VG1GdFpTNW5aWFFvS1M1emNHeHBkQ2d2WEZ4ekt5OHBLU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDbGNiaUFnSUNBZ0lDQWdJQ0FnSUc5dVEyeGxZVzUxY0Noa2FYTndiM05sS1Z4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdiMkpxWldOMExuTmxkRjlqYzNOZlkyeGhjM05sY3loamJHRnpjMDVoYldVdWMzQnNhWFFvTDF4Y2N5c3ZLU2xjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDBzWEc1Y2JpQWdJQ0IwWlhoMFRtOWtaU2gwWlhoMEtTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQkhkR3N1VEdGaVpXd3VibVYzS0hSbGVIUXVkRzlUZEhKcGJtY29LU2xjYmlBZ0lDQjlMRnh1WEc0Z0lDQWdMeThnWUhObGRGOWphR2xzWkdBZ1lXNWtJR1Z6Y0dWamFXRnNiSGtnWUhKbGJXOTJaV0FnYldsbmFIUWdZbVVnZDJGNUlIUnZieUJuWlc1bGNtbGpJR0Z1WkNCMGFHVnlaU0J0YVdkb2RGeHVJQ0FnSUM4dklHSmxJR05oYzJWeklIZG9aWEpsSUdsMElHUnZaWE1nYm05MElHRmpkSFZoYkd4NUlHUnZJSGRvWVhRZ2QyVWdkMkZ1ZENCcGRDQjBieUJrYjF4dUlDQWdJQzh2WEc0Z0lDQWdMeThnYVdZZ2RHaGxjbVVnYVhNZ1lTQjFjMlZqWVhObElHWnZjaUJsYVhSb1pYSWdiMllnZEdobGMyVWdkSGR2SUhSb1lYUWdaRzlsY3lCemIyMWxkR2hwYm1jZ1pXeHpaU0IwYUdGdVhHNGdJQ0FnTHk4Z2QyVWdaWGh3WldOMElHbDBJSFJ2SUdSdklHaGxjbVVnYVc0Z1lTQktVMWdnWTI5dWRHVjRkQ0IzWlNCb1lYWmxJSFJ2SUdOb1pXTnJJR1p2Y2lCcmJtOTNiaUJwYm5OMFlXNWpaWE5jYmlBZ0lDQnlaVzF2ZG1WRGFHbHNaQ2h3WVhKbGJuUXNJR05vYVd4a0tTQjdYRzRnSUNBZ0lDQWdJR2xtSUNod1lYSmxiblFnYVc1emRHRnVZMlZ2WmlCSGRHc3VWMmxrWjJWMElDWW1JR05vYVd4a0lHbHVjM1JoYm1ObGIyWWdSM1JyTGtWMlpXNTBRMjl1ZEhKdmJHeGxjaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIQmhjbVZ1ZEM1eVpXMXZkbVZmWTI5dWRISnZiR3hsY2loamFHbHNaQ2xjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lHbG1JQ2hjSW5ObGRGOWphR2xzWkZ3aUlHbHVJSEJoY21WdWRDQW1KaUIwZVhCbGIyWWdjR0Z5Wlc1MExuTmxkRjlqYUdsc1pDQTlQU0JjSW1aMWJtTjBhVzl1WENJcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ3WVhKbGJuUXVjMlYwWDJOb2FXeGtLRzUxYkd3cFhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JwWmlBb1hDSnlaVzF2ZG1WY0lpQnBiaUJ3WVhKbGJuUWdKaVlnZEhsd1pXOW1JSEJoY21WdWRDNXlaVzF2ZG1VZ1BUMGdYQ0ptZFc1amRHbHZibHdpS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjR0Z5Wlc1MExuSmxiVzkyWlNoamFHbHNaQ2xjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lIUm9jbTkzSUVWeWNtOXlLR0JqWVc1dWIzUWdjbVZ0YjNabElDUjdZMmhwYkdSOUlHWnliMjBnSkh0d1lYSmxiblI5WUNsY2JpQWdJQ0I5TEZ4dUlDQWdJR0Z3Y0dWdVpFTm9hV3hrS0hCaGNtVnVkQ3dnWTJocGJHUXBJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tGeHVJQ0FnSUNBZ0lDQWdJQ0FnWTJocGJHUWdhVzV6ZEdGdVkyVnZaaUJIZEdzdVFXUnFkWE4wYldWdWRDQW1KbHh1SUNBZ0lDQWdJQ0FnSUNBZ1hDSnpaWFJmWVdScWRYTjBiV1Z1ZEZ3aUlHbHVJSEJoY21WdWRDQW1KbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVzltSUhCaGNtVnVkQzV6WlhSZllXUnFkWE4wYldWdWRDQTlQVDBnWENKbWRXNWpkR2x2Ymx3aVhHNGdJQ0FnSUNBZ0lDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhCaGNtVnVkQzV6WlhSZllXUnFkWE4wYldWdWRDaGphR2xzWkNsY2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJR2xtSUNoY2JpQWdJQ0FnSUNBZ0lDQWdJR05vYVd4a0lHbHVjM1JoYm1ObGIyWWdSM1JyTGxkcFpHZGxkQ0FtSmx4dUlDQWdJQ0FnSUNBZ0lDQWdjR0Z5Wlc1MElHbHVjM1JoYm1ObGIyWWdSM1JyTGxOMFlXTnJJQ1ltWEc0Z0lDQWdJQ0FnSUNBZ0lDQmphR2xzWkM1dVlXMWxJQ0U5UFNCY0lsd2lJQ1ltWEc0Z0lDQWdJQ0FnSUNBZ0lDQmphR2xzWkM1dVlXMWxJQ0U5UFNCdWRXeHNJQ1ltWEc0Z0lDQWdJQ0FnSUNBZ0lDQm5aWFJVZVhCbEtHTm9hV3hrS1NBOVBUMGdYQ0p1WVcxbFpGd2lYRzRnSUNBZ0lDQWdJQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIQmhjbVZ1ZEM1aFpHUmZibUZ0WldRb1kyaHBiR1FzSUdOb2FXeGtMbTVoYldVcFhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JwWmlBb1kyaHBiR1FnYVc1emRHRnVZMlZ2WmlCSGRHc3VVRzl3YjNabGNpQW1KaUJ3WVhKbGJuUWdhVzV6ZEdGdVkyVnZaaUJIZEdzdVRXVnVkVUoxZEhSdmJpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhCaGNtVnVkQzV6WlhSZmNHOXdiM1psY2loamFHbHNaQ2xjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lHbG1JQ2hjYmlBZ0lDQWdJQ0FnSUNBZ0lHTm9hV3hrSUdsdWMzUmhibU5sYjJZZ1IybHZMazFsYm5WTmIyUmxiQ0FtSmx4dUlDQWdJQ0FnSUNBZ0lDQWdLSEJoY21WdWRDQnBibk4wWVc1alpXOW1JRWQwYXk1TlpXNTFRblYwZEc5dUlIeDhJSEJoY21WdWRDQnBibk4wWVc1alpXOW1JRWQwYXk1UWIzQnZkbVZ5VFdWdWRTbGNiaUFnSUNBZ0lDQWdLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2NHRnlaVzUwTG5ObGRGOXRaVzUxWDIxdlpHVnNLR05vYVd4a0tWeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tHTm9hV3hrSUdsdWMzUmhibU5sYjJZZ1IybHZMazFsYm5WSmRHVnRJQ1ltSUhCaGNtVnVkQ0JwYm5OMFlXNWpaVzltSUVkcGJ5NU5aVzUxS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0F2THlCVVQwUlBPbHh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLR05vYVd4a0lHbHVjM1JoYm1ObGIyWWdSM1JyTGxkcGJtUnZkeUFtSmlCd1lYSmxiblFnYVc1emRHRnVZMlZ2WmlCSGRHc3VRWEJ3YkdsallYUnBiMjRwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQndZWEpsYm5RdVlXUmtYM2RwYm1SdmR5aGphR2xzWkNsY2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJR2xtSUNoamFHbHNaQ0JwYm5OMFlXNWpaVzltSUVkMGF5NVVaWGgwUW5WbVptVnlJQ1ltSUhCaGNtVnVkQ0JwYm5OMFlXNWpaVzltSUVkMGF5NVVaWGgwVm1sbGR5a2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhCaGNtVnVkQzV6WlhSZlluVm1abVZ5S0dOb2FXeGtLVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLSEJoY21WdWRDQnBibk4wWVc1alpXOW1JRWQwYXk1Q2RXbHNaR0ZpYkdVcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ3WVhKbGJuUXVkbVoxYm1OZllXUmtYMk5vYVd4a0tHUjFiVzE1UW5WcGJHUmxjaXdnWTJocGJHUXNJR2RsZEZSNWNHVW9ZMmhwYkdRcEtWeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnZEdoeWIzY2dSWEp5YjNJb1lHTmhibTV2ZENCaFpHUWdKSHRqYUdsc1pIMGdkRzhnSkh0d1lYSmxiblI5WUNsY2JpQWdJQ0I5TEZ4dWZTbGNibHh1Wlhod2IzSjBJSHNnUm5KaFoyMWxiblFzSUdsdWRISnBibk5wWTBWc1pXMWxiblJ6SUgxY2JtVjRjRzl5ZENCN0lHcHplQ3dnYW5ONGN5QjlJR1p5YjIwZ1hDSXVMaTlxYzNndmFuTjRMbXB6WENKY2JpSXNJQ0pwYlhCdmNuUWdleUJIZEdzZ2ZTQm1jbTl0SUZ3aVlXZHpMMmQwYXpSY0lseHVhVzF3YjNKMElGTjVjM1J5WVhrZ1puSnZiU0JjSWk0dlUzbHpWSEpoZVZ3aVhHNWNibVY0Y0c5eWRDQmtaV1poZFd4MElHWjFibU4wYVc5dUlGTjVjMVJ5WVhsQ2RYUjBiMjRvS1NCN1hHNGdJR052Ym5OMElIQnZjRzkyWlhJZ1BTQW9YRzRnSUNBZ1BIQnZjRzkyWlhJZ1kyeGhjM005WENKemVYTjBjbUY1YldWdWRWd2lQbHh1SUNBZ0lDQWdQRk41YzNSeVlYa2dMejVjYmlBZ0lDQThMM0J2Y0c5MlpYSStYRzRnSUNrZ1lYTWdSM1JyTGxCdmNHOTJaWEk3WEc1Y2JpQWdZMjl1YzNRZ1luVjBkRzl1SUQwZ0tGeHVJQ0FnSUR4dFpXNTFZblYwZEc5dVhHNGdJQ0FnSUNCamJHRnpjejFjSW5ONWMzUnlZWGxpZFhSMGIyNWNJbHh1SUNBZ0lDQWdaR2x5WldOMGFXOXVQWHRIZEdzdVFYSnliM2RVZVhCbExsVlFmVnh1SUNBZ0lENWNiaUFnSUNBZ0lIdHdiM0J2ZG1WeWZWeHVJQ0FnSUR3dmJXVnVkV0oxZEhSdmJqNWNiaUFnS1NCaGN5QkhkR3N1VFdWdWRVSjFkSFJ2Ymp0Y2JseHVJQ0F2THlCWGFHVnVJSEJ2Y0c5MlpYSWdkbWx6YVdKcGJHbDBlU0JqYUdGdVoyVnpMQ0IwYjJkbmJHVWdZWEp5YjNjZ1pHbHlaV04wYVc5dVhHNGdJSEJ2Y0c5MlpYSXVZMjl1Ym1WamRDaGNJbk5vYjNkY0lpd2dLQ2tnUFQ0Z2UxeHVJQ0FnSUdKMWRIUnZiaTVrYVhKbFkzUnBiMjRnUFNCSGRHc3VRWEp5YjNkVWVYQmxMa1JQVjA0N1hHNGdJSDBwTzF4dVhHNGdJSEJ2Y0c5MlpYSXVZMjl1Ym1WamRDaGNJbWhwWkdWY0lpd2dLQ2tnUFQ0Z2UxeHVJQ0FnSUdKMWRIUnZiaTVrYVhKbFkzUnBiMjRnUFNCSGRHc3VRWEp5YjNkVWVYQmxMbFZRTzF4dUlDQjlLVHRjYmx4dUlDQnlaWFIxY200Z1luVjBkRzl1TzF4dWZWeHVJaXdnSW1sdGNHOXlkQ0I3SUVkMGF5QjlJR1p5YjIwZ1hDSmhaM012WjNSck5Gd2lYRzVwYlhCdmNuUWdWM0FnWm5KdmJTQmNJbWRwT2k4dlFYTjBZV3hYY0Z3aVhHNWNibVY0Y0c5eWRDQmtaV1poZFd4MElHWjFibU4wYVc5dUlGWnZiSFZ0WlVsdVpHbGpZWFJ2Y2lncElIdGNiaUFnWTI5dWMzUWdZWFZrYVc4Z1BTQlhjQzVuWlhSZlpHVm1ZWFZzZENncFhHNGdJR052Ym5OMElHeGhZbVZzSUQwZ2JtVjNJRWQwYXk1TVlXSmxiQ2g3WEc0Z0lDQWdhR0ZzYVdkdU9pQkhkR3N1UVd4cFoyNHVSVTVFTEZ4dUlDQjlLVnh1WEc0Z0lHTnZibk4wSUhWd1pHRjBaVWxqYjI0Z1BTQW9LU0E5UGlCN1hHNGdJQ0FnWTI5dWMzUWdjM0JsWVd0bGNpQTlJR0YxWkdsdkxtZGxkRjlrWldaaGRXeDBYM053WldGclpYSW9LVnh1SUNBZ0lHbG1JQ2doYzNCbFlXdGxjaWtnY21WMGRYSnVYRzVjYmlBZ0lDQnBaaUFvYzNCbFlXdGxjaTV0ZFhSbEtTQjdYRzRnSUNBZ0lDQnNZV0psYkM1c1lXSmxiQ0E5SUZ3aVhIVkZSVVU0WENKY2JpQWdJQ0I5SUdWc2MyVWdhV1lnS0hOd1pXRnJaWEl1ZG05c2RXMWxJRHc5SURBdU16TXBJSHRjYmlBZ0lDQWdJR3hoWW1Wc0xteGhZbVZzSUQwZ1hDSmNkVVl3TWpaY0lseHVJQ0FnSUgwZ1pXeHpaU0JwWmlBb2MzQmxZV3RsY2k1MmIyeDFiV1VnUEQwZ01DNDJOaWtnZTF4dUlDQWdJQ0FnYkdGaVpXd3ViR0ZpWld3Z1BTQmNJbHgxUmpBeU4xd2lYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUd4aFltVnNMbXhoWW1Wc0lEMGdYQ0pjZFVZd01qaGNJbHh1SUNBZ0lIMWNiaUFnZlZ4dVhHNGdJQzh2SUVsdWFYUnBZV3dnYzJWMFhHNGdJSFZ3WkdGMFpVbGpiMjRvS1Z4dVhHNGdJQzh2SUZKbFlXTjBJSFJ2SUdOb1lXNW5aWE5jYmlBZ1lYVmthVzh1WjJWMFgyUmxabUYxYkhSZmMzQmxZV3RsY2lncExtTnZibTVsWTNRb1hDSnViM1JwWm5rNk9uWnZiSFZ0WlZ3aUxDQjFjR1JoZEdWSlkyOXVLVnh1SUNCaGRXUnBieTVuWlhSZlpHVm1ZWFZzZEY5emNHVmhhMlZ5S0NrdVkyOXVibVZqZENoY0ltNXZkR2xtZVRvNmJYVjBaVndpTENCMWNHUmhkR1ZKWTI5dUtWeHVYRzRnSUhKbGRIVnliaUJzWVdKbGJGeHVmVnh1SWl3Z0ltbHRjRzl5ZENCN0lFZDBheUI5SUdaeWIyMGdYQ0poWjNNdlozUnJORndpWEc1cGJYQnZjblFnU0hsd2NteGhibVFnWm5KdmJTQmNJbWRwT2k4dlFYTjBZV3hJZVhCeWJHRnVaRndpWEc1Y2JtVjRjRzl5ZENCa1pXWmhkV3gwSUdaMWJtTjBhVzl1SUVocFpHVlhhVzVrYjNkelFuVjBkRzl1S0NrZ2UxeHVJQ0JqYjI1emRDQm9lWEJ5SUQwZ1NIbHdjbXhoYm1RdVoyVjBYMlJsWm1GMWJIUW9LVnh1SUNCc1pYUWdZWEpsU0dsa1pHVnVJRDBnWm1Gc2MyVmNiaUFnWTI5dWMzUWdkMmx1Wkc5M1YyOXlhM053WVdObFRXRndPaUJTWldOdmNtUThjM1J5YVc1bkxDQnVkVzFpWlhJK0lEMGdlMzFjYmx4dUlDQmpiMjV6ZENCcFkyOXVJRDBnYm1WM0lFZDBheTVNWVdKbGJDaDdYRzRnSUNBZ2JHRmlaV3c2SUZ3aVhIVkdNRFpGWENJc0lDOHZJRzl3Wlc0Z1pYbGxYRzRnSUgwcFhHNWNiaUFnWTI5dWMzUWdZblYwZEc5dUlEMGdibVYzSUVkMGF5NUNkWFIwYjI0b2UxeHVJQ0FnSUdoaGJHbG5iam9nUjNSckxrRnNhV2R1TGtWT1JDeGNiaUFnSUNCamFHbHNaRG9nYVdOdmJpeGNiaUFnZlNsY2JseHVJQ0JpZFhSMGIyNHVZV1JrWDJOemMxOWpiR0Z6Y3loY0ltaHBaR1YzYVc1a2IzZHpZblYwZEc5dVhDSXBYRzVjYmlBZ1luVjBkRzl1TG1OdmJtNWxZM1FvWENKamJHbGphMlZrWENJc0lDZ3BJRDArSUh0Y2JpQWdJQ0JzWlhRZ1kyeHBaVzUwY3lBOUlHaDVjSEl1WjJWMFgyTnNhV1Z1ZEhNb0tUdGNiaUFnSUNCbWIzSWdLR052Ym5OMElHTnNhV1Z1ZENCdlppQmpiR2xsYm5SektYdGNiaUFnSUNBZ0lDQWdhV1lvWVhKbFNHbGtaR1Z1S1h0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElIZHpJRDBnZDJsdVpHOTNWMjl5YTNOd1lXTmxUV0Z3VzJOc2FXVnVkQzVoWkdSeVpYTnpYVnh1SUNBZ0lDQWdJQ0FnSUNBZ2FIbHdjaTV0WlhOellXZGxLR0JrYVhOd1lYUmphQ0J0YjNabGRHOTNiM0pyYzNCaFkyVnphV3hsYm5RZ0pIdDNjMzBzWVdSa2NtVnpjem93ZUNSN1kyeHBaVzUwTG1Ga1pISmxjM045WUNsY2JpQWdJQ0FnSUNBZ0lDQWdJR1JsYkdWMFpTQjNhVzVrYjNkWGIzSnJjM0JoWTJWTllYQmJZMnhwWlc1MExtRmtaSEpsYzNOZFhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdaV3h6Wlh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSGRwYm1SdmQxZHZjbXR6Y0dGalpVMWhjRnRqYkdsbGJuUXVZV1JrY21WemMxMGdQU0JqYkdsbGJuUXVkMjl5YTNOd1lXTmxMbWxrWEc0Z0lDQWdJQ0FnSUNBZ0lDQm9lWEJ5TG0xbGMzTmhaMlVvWUdScGMzQmhkR05vSUcxdmRtVjBiM2R2Y210emNHRmpaWE5wYkdWdWRDQnpjR1ZqYVdGc0xHRmtaSEpsYzNNNk1IZ2tlMk5zYVdWdWRDNWhaR1J5WlhOemZXQXBYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQmhjbVZJYVdSa1pXNGdQU0FoWVhKbFNHbGtaR1Z1WEc0Z0lDQWdhV052Ymk1c1lXSmxiQ0E5SUdGeVpVaHBaR1JsYmlBL0lGd2lYSFZHTURjd1hDSWdPaUJjSWx4MVJqQTJSVndpSUM4dklHTnNiM05sWkNCbGVXVWdMeUJ2Y0dWdUlHVjVaVnh1SUNCOUtWeHVYRzRnSUhKbGRIVnliaUJpZFhSMGIyNWNibjFjYmlJc0lDSnBiWEJ2Y25RZ2V5QkhkR3NnZlNCbWNtOXRJRndpWVdkekwyZDBhelJjSWx4dWFXMXdiM0owSUU1bGRIZHZjbXNnWm5KdmJTQmNJbWRwT2k4dlFYTjBZV3hPWlhSM2IzSnJYQ0pjYm1sdGNHOXlkQ0JIVEdsaUlHWnliMjBnWENKbmFUb3ZMMGRNYVdKY0lseHVYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQm1kVzVqZEdsdmJpQk9aWFIzYjNKclNXNWthV05oZEc5eUtDa2dlMXh1SUNCamIyNXpkQ0J1WlhSM2IzSnJJRDBnVG1WMGQyOXlheTVuWlhSZlpHVm1ZWFZzZENncFhHNGdJR052Ym5OMElHeGhZbVZzSUQwZ2JtVjNJRWQwYXk1TVlXSmxiQ2g3WEc0Z0lDQWdhR0ZzYVdkdU9pQkhkR3N1UVd4cFoyNHVSVTVFTEZ4dUlDQjlLVnh1WEc0Z0lHTnZibk4wSUhWd1pHRjBaVWxqYjI0Z1BTQW9LU0E5UGlCN1hHNGdJQ0FnYzNkcGRHTm9JQ2h1WlhSM2IzSnJMbWRsZEY5d2NtbHRZWEo1S0NrcElIdGNiaUFnSUNBZ0lDQWdMeThnVjJseVpXUWdZMjl1Ym1WamRHbHZibHh1SUNBZ0lDQWdJQ0JqWVhObElERTZYRzRnSUNBZ0lDQWdJQ0FnSUNCc1lXSmxiQzVzWVdKbGJDQTlJRndpWEhWRVFqZ3dYSFZFUXpBeVhDSmNiaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJYRzRnSUNBZ0lDQWdJQzh2SUZkcFpta2dZMjl1Ym1WamRHbHZibHh1SUNBZ0lDQWdJQ0JqWVhObElESTZYRzRnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjM1J5Wlc1bmRHZ2dQU0J1WlhSM2IzSnJMbmRwWm1rdWMzUnlaVzVuZEdoY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoemRISmxibWQwYUNBK0lEZ3dLWHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWVdKbGJDNXNZV0psYkNBOUlGd2lYSFZFUWpneVhIVkVSREk0WENKY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnYVdZb2MzUnlaVzVuZEdnZ1BpQTJNQ2w3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdGaVpXd3ViR0ZpWld3Z1BTQmNJbHgxUkVJNE1seDFSRVF5TlZ3aVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUdsbUtITjBjbVZ1WjNSb0lENGdOREFwZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4aFltVnNMbXhoWW1Wc0lEMGdYQ0pjZFVSQ09ESmNkVVJFTWpKY0lseHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdaV3h6WlNCcFppaHpkSEpsYm1kMGFDQStJREl3S1h0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1lXSmxiQzVzWVdKbGJDQTlJRndpWEhWRVFqZ3lYSFZFUkRGR1hDSmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ2FXWW9jM1J5Wlc1bmRHZ2dQaUF3S1h0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1lXSmxiQzVzWVdKbGJDQTlJRndpWEhWRVFqZ3lYSFZFUkRKR1hDSmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJR0p5WldGclhHNGdJQ0FnSUNBZ0lDOHZJRTV2SUdOdmJtNWxZM1JwYjI0Z1pHVm1ZWFZzZEZ4dUlDQWdJQ0FnSUNCa1pXWmhkV3gwT2x4dUlDQWdJQ0FnSUNBZ0lDQWdiR0ZpWld3dWJHRmlaV3dnUFNCY0lseDFSRUk0TWx4MVJFUXlSVndpWEc0Z0lDQWdJQ0FnSUNBZ0lDQmljbVZoYTF4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUM4dklFbHVhWFJwWVd3Z2MyVjBYRzRnSUNBZ2RYQmtZWFJsU1dOdmJpZ3BYRzVjYmlBZ0x5OGdVbVZoWTNRZ2RHOGdZMmhoYm1kbGMxeHVJQ0FnSUc1bGRIZHZjbXN1WTI5dWJtVmpkQ2hjSW01dmRHbG1lVG82Y0hKcGJXRnllVndpTENCMWNHUmhkR1ZKWTI5dUtWeHVJQ0FnSUc1bGRIZHZjbXN1WTI5dWJtVmpkQ2hjSW01dmRHbG1lVG82YzNSaGRHVmNJaXdnZFhCa1lYUmxTV052YmlsY2JpQWdJQ0J1WlhSM2IzSnJMbU52Ym01bFkzUW9YQ0p1YjNScFpuazZPbVJsZG1salpYTmNJaXdnZFhCa1lYUmxTV052YmlsY2JseHVJQ0FnSUM4dklGQnZiR3dnYzNSeVpXNW5kR2dnWlhabGNua2djMlZqYjI1a1hHNGdJQ0FnUjB4cFlpNTBhVzFsYjNWMFgyRmtaQ2hIVEdsaUxsQlNTVTlTU1ZSWlgwUkZSa0ZWVEZRc0lERXdNREFzSUNncElEMCtJSHRjYmlBZ0lDQnBaaUFvYm1WMGQyOXlheTVuWlhSZmNISnBiV0Z5ZVNncElEMDlQU0F5S1NCN1hHNGdJQ0FnSUNBZ0lIVndaR0YwWlVsamIyNG9LVnh1SUNBZ0lIMWNiaUFnSUNCeVpYUjFjbTRnZEhKMVpTQXZMeUJyWldWd0lISmxjR1ZoZEdsdVoxeHVJQ0FnSUgwcFhHNWNiaUFnSUNCeVpYUjFjbTRnYkdGaVpXeGNibjFjYmlJc0lDSnBiWEJ2Y25RZ2V5QkhkR3NnZlNCbWNtOXRJQ2RoWjNNdlozUnJOQ2M3WEc1cGJYQnZjblFnUjB4cFlpQm1jbTl0SUZ3aVoyazZMeTlIVEdsaVhDSmNibWx0Y0c5eWRDQkNiSFZsZEc5dmRHZ2dabkp2YlNCY0ltZHBPaTh2UVhOMFlXeENiSFZsZEc5dmRHaGNJbHh1YVcxd2IzSjBJRVJsZG1salpWSnZkeUJtY205dElGd2lMaTlrWlhacFkyVnliM2RjSWx4dWFXMXdiM0owSUhzZ2RHbHRaVzkxZENCOUlHWnliMjBnWENKaFozTXZkR2x0WlZ3aVhHNWNibVY0Y0c5eWRDQmtaV1poZFd4MElHWjFibU4wYVc5dUlFSnNkV1YwYjI5MGFFMWxiblVvWW1GamEwSjFkSFJ2YmpvZ1IzUnJMa0oxZEhSdmJpa2dlMXh1SUNBZ0lHTnZibk4wSUdKc2RXVjBiMjkwYUNBOUlFSnNkV1YwYjI5MGFDNW5aWFJmWkdWbVlYVnNkQ2dwWEc0Z0lDQWdZMjl1YzNRZ1lXUmhjSFJsY2lBOUlHSnNkV1YwYjI5MGFDNW5aWFJmWVdSaGNIUmxjaWdwWEc0Z0lDQWdZMjl1YzNRZ1kyOXVibVZqZEdWa1JHVjJhV05sY3pvZ1FteDFaWFJ2YjNSb0xrUmxkbWxqWlZ0ZElEMGdXMTFjYmlBZ0lDQmpiMjV6ZENCd1lXbHlaV1JFWlhacFkyVnpPaUJDYkhWbGRHOXZkR2d1UkdWMmFXTmxXMTBnUFNCYlhWeHVJQ0FnSUdOdmJuTjBJR1JwYzJOdmRtVnlaV1JFWlhacFkyVnpPaUJDYkhWbGRHOXZkR2d1UkdWMmFXTmxXMTBnUFNCYlhWeHVYRzRnSUNBZ0x5OGdWM0poY0NCaWRYUjBiMjRnWVc1a0lHTnZiblJsYm5RZ2FXNTBieUJoSUhabGNuUnBZMkZzSUdKdmVDQm1iM0lnZEhKaGVWeHVJQ0FnSUdOdmJuTjBJRzFoYVc1Q2IzZ2dQU0J1WlhjZ1IzUnJMa0p2ZUNoN0lHOXlhV1Z1ZEdGMGFXOXVPaUJIZEdzdVQzSnBaVzUwWVhScGIyNHVWa1ZTVkVsRFFVd3NJSE53WVdOcGJtYzZJRFlnZlNsY2JseHVJQ0FnSUM4dklGUnZjQ0JpWVhJZ1kyOXVkR0ZwYm1sdVp5QjBhR1VnWW1GamF5QmlkWFIwYjI0c0lIUnBkR3hsTENCaGJtUWdZbXgxWlhSdmIzUm9JSFJ2WjJkc1pWeHVJQ0FnSUdOdmJuTjBJSFJwZEd4bFFtOTRJRDBnYm1WM0lFZDBheTVDYjNnb2V5QnZjbWxsYm5SaGRHbHZiam9nUjNSckxrOXlhV1Z1ZEdGMGFXOXVMa2hQVWtsYVQwNVVRVXdzSUhOd1lXTnBibWM2SURZZ2ZTbGNiaUFnSUNCMGFYUnNaVUp2ZUM1aGNIQmxibVFvWW1GamEwSjFkSFJ2YmlsY2JpQWdJQ0IwYVhSc1pVSnZlQzVoY0hCbGJtUW9ibVYzSUVkMGF5NU1ZV0psYkNoN2JHRmlaV3c2SUZ3aVFteDFaWFJ2YjNSb1hDSXNJR2hoYkdsbmJqb2dSM1JyTGtGc2FXZHVMbE5VUVZKVWZTa3BYRzVjYmlBZ0lDQXZMeUJOYVdSa2JHVWdjMlZqZEdsdmJpQmpiMjUwWVdsdWFXNW5JSFJvWlNCd1lXbHlaV1FnWkdWMmFXTmxjeUJzYVhOMFhHNGdJQ0FnWTI5dWMzUWdjR0Z5YVdWa1JHVjJhV05sYzBKdmVDQTlJRzVsZHlCSGRHc3VRbTk0S0hzZ2IzSnBaVzUwWVhScGIyNDZJRWQwYXk1UGNtbGxiblJoZEdsdmJpNVdSVkpVU1VOQlRDd2djM0JoWTJsdVp6b2dOaUI5S1Z4dUlDQWdJSEJoY21sbFpFUmxkbWxqWlhOQ2IzZ3VZWEJ3Wlc1a0tHNWxkeUJIZEdzdVRHRmlaV3dvZTJ4aFltVnNPaUJjSWxCaGFYSmxaQ0JrWlhacFkyVnpYQ0lzSUdoaGJHbG5iam9nUjNSckxrRnNhV2R1TGxOVVFWSlVMQ0JqYzNORGJHRnpjMlZ6T2lCYlhDSnpkV0pvWldGa2FXNW5YQ0pkZlNrcFhHNWNiaUFnSUNBdkx5QkNiM1IwYjIwZ2MyVmpkR2x2YmlCamIyNTBZV2x1YVc1bklIUm9aU0J1YjI0dGNHRnBjbVZrSUdSbGRtbGpaU0JzYVhOMFhHNGdJQ0FnWTI5dWMzUWdaR2x6WTI5MlpYSmxaRVJsZG1salpYTkNiM2dnUFNCdVpYY2dSM1JyTGtKdmVDaDdJRzl5YVdWdWRHRjBhVzl1T2lCSGRHc3VUM0pwWlc1MFlYUnBiMjR1VmtWU1ZFbERRVXdzSUhOd1lXTnBibWM2SURZZ2ZTbGNiaUFnSUNCa2FYTmpiM1psY21Wa1JHVjJhV05sYzBKdmVDNWhjSEJsYm1Rb2JtVjNJRWQwYXk1TVlXSmxiQ2g3YkdGaVpXdzZJRndpVG05MElIQmhhWEpsWkZ3aUxDQm9ZV3hwWjI0NklFZDBheTVCYkdsbmJpNVRWRUZTVkN3Z1kzTnpRMnhoYzNObGN6b2dXMXdpYzNWaWFHVmhaR2x1WjF3aVhYMHBLVnh1WEc0Z0lDQWdkSEo1SUh0Y2JpQWdJQ0FnSUNBZ1lXUmhjSFJsY2o4dWMzUmhjblJmWkdselkyOTJaWEo1S0NrN1hHNGdJQ0FnZlNCallYUmphQ0FvWlhKeUtTQjdYRzRnSUNBZ0lDQWdJSEJ5YVc1MEtHQkdZV2xzWldRZ2RHOGdjM1JoY25RZ1pHbHpZMjkyWlhKNU9pQWtlMlZ5Y24xZ0tUdGNiaUFnSUNCOVhHNWNiaUFnSUNBdkx5QkdkVzVqZEdsdmJpQjBieUJuWlhRZ2NHRnBjbVZrSUdGdVpDQmpiMjV1WldOMFpXUWdaR1YyYVdObGN5QmhibVFnY0c5d2RXeGhkR1VnZEdobGFYSWdiR2x6ZEhOY2JpQWdJQ0JtZFc1amRHbHZiaUJuWlhSUVlXbHlaV1JFWlhacFkyVnpLQ2w3WEc0Z0lDQWdJQ0FnSUM4dklGSmxjMlYwSUdGeWNtRjVjMXh1SUNBZ0lDQWdJQ0JqYjI1dVpXTjBaV1JFWlhacFkyVnpMbXhsYm1kMGFDQTlJREJjYmlBZ0lDQWdJQ0FnY0dGcGNtVmtSR1YyYVdObGN5NXNaVzVuZEdnZ1BTQXdYRzRnSUNBZ0lDQWdJR1p2Y2loamIyNXpkQ0JrWlhacFkyVWdiMllnWW14MVpYUnZiM1JvTG1kbGRGOWtaWFpwWTJWektDa3BlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWW9aR1YyYVdObExtZGxkRjl3WVdseVpXUW9LU2w3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb1pHVjJhV05sTG1kbGRGOWpiMjV1WldOMFpXUW9LU2w3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibTVsWTNSbFpFUmxkbWxqWlhNdWNIVnphQ2hrWlhacFkyVXBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJWN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJoYVhKbFpFUmxkbWxqWlhNdWNIVnphQ2hrWlhacFkyVXBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5OGdSMlYwY3lCaElHeHBjM1FnYjJZZ1pHbHpZMjkyWlhKbFpDQmtaWFpwWTJWelhHNGdJQ0FnWm5WdVkzUnBiMjRnWjJWMFJHbHpZMjkyWlhKbFpFUmxkbWxqWlhNb0tYdGNiaUFnSUNBZ0lDQWdMeThnVW1WelpYUWdZWEp5WVhselhHNGdJQ0FnSUNBZ0lHUnBjMk52ZG1WeVpXUkVaWFpwWTJWekxteGxibWQwYUNBOUlEQmNiaUFnSUNBZ0lDQWdabTl5S0dOdmJuTjBJR1JsZG1salpTQnZaaUJpYkhWbGRHOXZkR2d1WjJWMFgyUmxkbWxqWlhNb0tTbDdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppZ2haR1YyYVdObExtZGxkRjl3WVdseVpXUW9LU2w3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdselkyOTJaWEpsWkVSbGRtbGpaWE11Y0hWemFDaGtaWFpwWTJVcFhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2THlCU1pXWnlaWE5vWlhNZ2RHaGxJSEJoYVhKbFpDQmtaWFpwWTJWeklHeHBjM1JjYmlBZ0lDQm1kVzVqZEdsdmJpQnlaV1p5WlhOb1VHRnBjbVZrUkdWMmFXTmxjeWdwZTF4dUlDQWdJQ0FnSUNCblpYUlFZV2x5WldSRVpYWnBZMlZ6S0NsY2JpQWdJQ0FnSUNBZ0x5OGdSVzF3ZEhrZ2RHaGxJR0p2ZUZ4dUlDQWdJQ0FnSUNCamIyNXpkQ0IwYVhSc1pTQTlJSEJoY21sbFpFUmxkbWxqWlhOQ2IzZ3VaMlYwWDJacGNuTjBYMk5vYVd4a0tDbGNiaUFnSUNBZ0lDQWdiR1YwSUdOb2FXeGtJRDBnZEdsMGJHVS9MbWRsZEY5dVpYaDBYM05wWW14cGJtY29LU0I4ZkNCdWRXeHNYRzRnSUNBZ0lDQWdJSGRvYVd4bEtHTm9hV3hrS1h0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHNWxlSFFnUFNCamFHbHNaQzVuWlhSZmJtVjRkRjl6YVdKc2FXNW5LQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lIQmhjbWxsWkVSbGRtbGpaWE5DYjNndWNtVnRiM1psS0dOb2FXeGtLVnh1SUNBZ0lDQWdJQ0FnSUNBZ1kyaHBiR1FnUFNCdVpYaDBYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnWm05eUtHTnZibk4wSUdSbGRtbGpaU0J2WmlCamIyNXVaV04wWldSRVpYWnBZMlZ6S1h0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHUmxkbWxqWlZKdmR5QTlJRVJsZG1salpWSnZkeWhrWlhacFkyVXNJSEpsWm5KbGMyaFFZV2x5WldSRVpYWnBZMlZ6S1Z4dUlDQWdJQ0FnSUNBZ0lDQWdjR0Z5YVdWa1JHVjJhV05sYzBKdmVDNWhjSEJsYm1Rb1pHVjJhV05sVW05M0tWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJR1p2Y2loamIyNXpkQ0JrWlhacFkyVWdiMllnY0dGcGNtVmtSR1YyYVdObGN5bDdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JrWlhacFkyVlNiM2NnUFNCRVpYWnBZMlZTYjNjb1pHVjJhV05sTENCeVpXWnlaWE5vVUdGcGNtVmtSR1YyYVdObGN5bGNiaUFnSUNBZ0lDQWdJQ0FnSUhCaGNtbGxaRVJsZG1salpYTkNiM2d1WVhCd1pXNWtLR1JsZG1salpWSnZkeWxjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJQzh2SUZKbFpuSmxjMmhsY3lCMGFHVWdaR2x6WTI5MlpYSmxaQ0JrWlhacFkyVnpJR3hwYzNSY2JpQWdJQ0JtZFc1amRHbHZiaUJ5WldaeVpYTm9SR2x6WTI5MlpYSmxaRVJsZG1salpYTW9LWHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdkR2wwYkdVZ1BTQmthWE5qYjNabGNtVmtSR1YyYVdObGMwSnZlQzVuWlhSZlptbHljM1JmWTJocGJHUW9LVnh1SUNBZ0lDQWdJQ0JzWlhRZ1kyaHBiR1FnUFNCMGFYUnNaVDh1WjJWMFgyNWxlSFJmYzJsaWJHbHVaeWdwSUh4OElHNTFiR3hjYmlBZ0lDQWdJQ0FnZDJocGJHVW9ZMmhwYkdRcGUxeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdibVY0ZENBOUlHTm9hV3hrTG1kbGRGOXVaWGgwWDNOcFlteHBibWNvS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdaR2x6WTI5MlpYSmxaRVJsZG1salpYTkNiM2d1Y21WdGIzWmxLR05vYVd4a0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnWTJocGJHUWdQU0J1WlhoMFhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JuWlhSRWFYTmpiM1psY21Wa1JHVjJhV05sY3lncFhHNGdJQ0FnSUNBZ0lHWnZjaWhqYjI1emRDQmtaWFpwWTJVZ2IyWWdaR2x6WTI5MlpYSmxaRVJsZG1salpYTXBlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnWkdWMmFXTmxVbTkzSUQwZ1JHVjJhV05sVW05M0tHUmxkbWxqWlN3Z2NtVm1jbVZ6YUVGc2JFUmxkbWxqWlhNcFhHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhOamIzWmxjbVZrUkdWMmFXTmxjMEp2ZUM1aGNIQmxibVFvWkdWMmFXTmxVbTkzS1Z4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHk4Z1VtVm1jbVZ6YUdWeklHSnZkR2dnYkdsemRITmNiaUFnSUNCbWRXNWpkR2x2YmlCeVpXWnlaWE5vUVd4c1JHVjJhV05sY3lncGUxeHVJQ0FnSUNBZ0lDQnlaV1p5WlhOb1VHRnBjbVZrUkdWMmFXTmxjeWdwWEc0Z0lDQWdJQ0FnSUhKbFpuSmxjMmhFYVhOamIzWmxjbVZrUkdWMmFXTmxjeWdwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeThnUjJWMElHbHVhWFJwWVd3Z2NHRnBjbVZrSUdSbGRtbGpaWE5jYmlBZ0lDQnlaV1p5WlhOb1VHRnBjbVZrUkdWMmFXTmxjeWdwWEc1Y2JpQWdJQ0F2THlCSFpYUWdhVzVwZEdsaGJDQmthWE5qYjNabGNtVmtJR1JsZG1salpYTmNiaUFnSUNCeVpXWnlaWE5vUkdselkyOTJaWEpsWkVSbGRtbGpaWE1vS1Z4dVhHNGdJQ0FnYldGcGJrSnZlQzVoY0hCbGJtUW9kR2wwYkdWQ2IzZ3BYRzRnSUNBZ2JXRnBia0p2ZUM1aGNIQmxibVFvY0dGeWFXVmtSR1YyYVdObGMwSnZlQ2xjYmlBZ0lDQnRZV2x1UW05NExtRndjR1Z1WkNodVpYY2dSM1JyTGxObGNHRnlZWFJ2Y2loN0lHOXlhV1Z1ZEdGMGFXOXVPaUJIZEdzdVQzSnBaVzUwWVhScGIyNHVTRTlTU1ZwUFRsUkJUQ3dnWTNOelEyeGhjM05sY3pvZ1cxd2ljMlZ3WlhKaGRHOXlYQ0pkZlNrcE8xeHVJQ0FnSUcxaGFXNUNiM2d1WVhCd1pXNWtLR1JwYzJOdmRtVnlaV1JFWlhacFkyVnpRbTk0S1Z4dVhHNGdJQ0FnTHk4Z1BUMDlJRmR5WVhBZ2JXRnBia0p2ZUNCcGJpQmhJSE5qY205c2JHVmtJSGRwYm1SdmR5QTlQVDFjYmlBZ0lDQmpiMjV6ZENCelkzSnZiR3hsY2lBOUlHNWxkeUJIZEdzdVUyTnliMnhzWldSWGFXNWtiM2NvZTF4dUlDQWdJQ0FnSUNCMlpYaHdZVzVrT2lCMGNuVmxMQ0FnSUM4dklHeGxkQ0JwZENCbGVIQmhibVFnZG1WeWRHbGpZV3hzZVNCcFppQjBhR1VnWTI5dWRHRnBibVZ5SUdGc2JHOTNjMXh1SUNBZ0lDQWdJQ0JvWlhod1lXNWtPaUJtWVd4elpTd2dJQzh2SUhkcFpIUm9JSGRwYkd3Z1ltVWdabWw0WldSY2JpQWdJQ0FnSUNBZ2IzWmxjbXhoZVY5elkzSnZiR3hwYm1jNklIUnlkV1VzSUM4dklHOXdkR2x2Ym1Gc09pQnVhV05sSUc5MlpYSnNZWGtnYzJOeWIyeHNZbUZ5YzF4dUlDQWdJSDBwTzF4dVhHNGdJQ0FnYzJOeWIyeHNaWEl1WVdSa1gyTnpjMTlqYkdGemN5aGNJbUpzZFdWMGIyOTBhRzFsYm5WY0lpbGNiaUFnSUNCelkzSnZiR3hsY2k1elpYUmZZMmhwYkdRb2JXRnBia0p2ZUNsY2JseHVJQ0FnSUM4dklFOXdkR2x2Ym1Gc09pQm1iM0pqWlNCaElHWnBlR1ZrSUhOcGVtVWdabTl5SUhSb1pTQndiM0J2ZG1WeUlHTnZiblJsYm5SY2JpQWdJQ0J6WTNKdmJHeGxjaTV6WlhSZmMybDZaVjl5WlhGMVpYTjBLQzB4TENBME1EQXBJQzh2SUhkcFpIUm9JSGdnYUdWcFoyaDBJR2x1SUhCcGVHVnNjMXh1WEc0Z0lDQWdZV1JoY0hSbGNqOHVZMjl1Ym1WamRDaGNJbTV2ZEdsbWVUbzZaR2x6WTI5MlpYSnBibWRjSWl3Z0tDa2dQVDU3WEc0Z0lDQWdJQ0FnSUhKbFpuSmxjMmhFYVhOamIzWmxjbVZrUkdWMmFXTmxjeWdwWEc0Z0lDQWdmU2xjYmx4dUlDQWdJQzh2SUZSUFJFOGdkMmhsYmlCMGFHVWdiV1Z1ZFNCdmNHVnVjMXh1SUNBZ0lDOHZJSE5qY205c2JHVnlMbU52Ym01bFkzUW9YQ0p0WVhCY0lpd2dLQ2tnUFQ1N1hHNGdJQ0FnTHk4Z0lDQWdJR052Ym5OdmJHVXViRzluS0Z3aVQxQkZUbHdpS1Z4dUlDQWdJQzh2SUgwcFhHNWNibHh1SUNBZ0lISmxkSFZ5YmlCelkzSnZiR3hsY2x4dWZWeHVJaXdnSW1sdGNHOXlkQ0I3SUVkMGF5QjlJR1p5YjIwZ1hDSmhaM012WjNSck5Gd2lPMXh1YVcxd2IzSjBJSHNnZEdsdFpXOTFkQ0I5SUdaeWIyMGdYQ0poWjNNdmRHbHRaVndpWEc1cGJYQnZjblFnUW14MVpYUnZiM1JvSUdaeWIyMGdYQ0puYVRvdkwwRnpkR0ZzUW14MVpYUnZiM1JvWENJN1hHNWNibVY0Y0c5eWRDQmtaV1poZFd4MElHWjFibU4wYVc5dUlFUmxkbWxqWlZKdmR5aGNiaUFnWkdWMmFXTmxPaUJDYkhWbGRHOXZkR2d1UkdWMmFXTmxMRnh1SUNCeVpXWnlaWE5vUkdWMmFXTmxjejg2SUNnb0tTQTlQaUIyYjJsa0tTQjhJRzUxYkd4Y2JpazZJRWQwYXk1WGFXUm5aWFFnZTF4dUlDQmpiMjV6ZENCa1pYWnBZMlZPWVcxbElEMGdaR1YyYVdObExtZGxkRjl1WVcxbEtDa2dmSHdnWENKVmJtdHViM2R1SUVSbGRtbGpaVndpTzF4dVhHNGdJR052Ym5OMElITjBZWFIxYzB4aFltVnNJRDBnYm1WM0lFZDBheTVNWVdKbGJDaDdYRzRnSUNBZ2JHRmlaV3c2SUdSbGRtbGpaUzVuWlhSZlkyOXVibVZqZEdWa0tDa2dQeUJjSWtOdmJtNWxZM1JsWkZ3aUlEb2dYQ0pFYVhOamIyNXVaV04wWldSY0lpeGNiaUFnSUNCb1lXeHBaMjQ2SUVkMGF5NUJiR2xuYmk1VFZFRlNWQ3hjYmlBZ0lDQjRZV3hwWjI0NklEQXNYRzRnSUgwcE8xeHVJQ0J6ZEdGMGRYTk1ZV0psYkM1aFpHUmZZM056WDJOc1lYTnpLRndpYzNSaGRIVnpUR0ZpWld4Y0lpbGNibHh1SUNBdkx5QlVhR1VnWVdOMGFXOXVJR0oxZEhSdmJpQnBibk5wWkdVZ2RHaGxJSEpsZG1WaGJHVnlYRzRnSUdOdmJuTjBJR0ZqZEdsdmJrSjFkSFJ2YmlBOUlHNWxkeUJIZEdzdVFuVjBkRzl1S0h0Y2JpQWdJQ0JzWVdKbGJEb2daR1YyYVdObExtZGxkRjlqYjI1dVpXTjBaV1FvS1NBL0lGd2lSR2x6WTI5dWJtVmpkRndpSURvZ1hDSkRiMjV1WldOMFhDSXNYRzRnSUNBZ2FHRnNhV2R1T2lCSGRHc3VRV3hwWjI0dVJVNUVMRnh1SUNCOUtUdGNibHh1SUNCc1pYUWdkR2x0WlhJNklGSmxkSFZ5YmxSNWNHVThkSGx3Wlc5bUlIUnBiV1Z2ZFhRK0lId2diblZzYkNBOUlHNTFiR3c3WEc1Y2JpQWdZV04wYVc5dVFuVjBkRzl1TG1OdmJtNWxZM1FvWENKamJHbGphMlZrWENJc0lDZ3BJRDArSUh0Y2JpQWdJQ0JwWmlBb1pHVjJhV05sTG1kbGRGOWpiMjV1WldOMFpXUW9LU2tnZTF4dUlDQWdJQ0FnZEhKNUlIdGNiaUFnSUNBZ0lDQWdaR1YyYVdObExtUnBjMk52Ym01bFkzUmZaR1YyYVdObEtHNTFiR3dwTzF4dUlDQWdJQ0FnZlNCallYUmphQ0FvWlhKeUtTQjdYRzRnSUNBZ0lDQWdJSEJ5YVc1MEtHQkdZV2xzWldRZ2RHOGdZMjl1Ym1WamREb2dKSHRsY25KOVlDazdYRzRnSUNBZ0lDQjlYRzRnSUNBZ0lDQmNiaUFnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnZEhKNUlIdGNiaUFnSUNBZ0lDQWdaR1YyYVdObExtTnZibTVsWTNSZlpHVjJhV05sS0c1MWJHd3BPMXh1SUNBZ0lDQWdJQ0J6ZEdGMGRYTk1ZV0psYkM1c1lXSmxiQ0E5SUZ3aVEyOXVaV04wYVc1bkxpNHVYQ0pjYmlBZ0lDQWdJQ0FnZEdsdFpYSWdQU0IwYVcxbGIzVjBLREV3TURBd0xDQW9LU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdhV1lvSVdSbGRtbGpaUzVuWlhSZlkyOXVibVZqZEdWa0tDa3BlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2MzUmhkSFZ6VEdGaVpXd3ViR0ZpWld3Z1BTQmNJa052Ym01bFkzUnBiMjRnWm1GcGJHVmtYQ0pjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdkR2x0WlhJZ1BTQnVkV3hzWEc0Z0lDQWdJQ0FnSUgwcFhHNGdJQ0FnSUNCOUlHTmhkR05vSUNobGNuSXBJSHRjYmlBZ0lDQWdJQ0FnY0hKcGJuUW9ZRVpoYVd4bFpDQjBieUJqYjI1dVpXTjBPaUFrZTJWeWNuMWdLVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUgwcE8xeHVYRzRnSUM4dklGUm9hWE1nWkc5bGMyNG5kQ0JxZFhOMElHNXZkR2xtZVNCM2FHVnVJR052Ym01bFkzUmxaQ0JpZFhRZ1ptOXlJR0Z1ZVNCamIyNXVaV04wYVc5dUlHTm9ZVzVuWlZ4dUlDQmtaWFpwWTJVdVkyOXVibVZqZENoY0ltNXZkR2xtZVRvNlkyOXVibVZqZEdWa1hDSXNJQ2dwSUQwK0lIdGNiaUFnSUNCcFppaGtaWFpwWTJVdVoyVjBYMk52Ym01bFkzUmxaQ2dwS1h0Y2JpQWdJQ0FnSUdsbUtIUnBiV1Z5S1h0Y2JpQWdJQ0FnSUNBZ2RHbHRaWEl1WTJGdVkyVnNLQ2xjYmlBZ0lDQWdJQ0FnZEdsdFpYSWdQU0J1ZFd4c1hHNGdJQ0FnSUNCOVhHNGdJQ0FnSUNCcFppQW9jbVZtY21WemFFUmxkbWxqWlhNcElISmxabkpsYzJoRVpYWnBZMlZ6S0NrN1hHNGdJQ0FnZlZ4dUlDQjlLVnh1WEc0Z0lDOHZJRkpsZG1WaGJHVnlJSFJvWVhRZ1lXNXBiV0YwWlhNZ2RHaGxJR0oxZEhSdmJpQnpiR2xrYVc1bklHUnZkMjVjYmlBZ1kyOXVjM1FnY21WMlpXRnNaWElnUFNCdVpYY2dSM1JyTGxKbGRtVmhiR1Z5S0h0Y2JpQWdJQ0J5WlhabFlXeGZZMmhwYkdRNklHWmhiSE5sTEZ4dUlDQWdJSFJ5WVc1emFYUnBiMjVmZEhsd1pUb2dSM1JyTGxKbGRtVmhiR1Z5VkhKaGJuTnBkR2x2YmxSNWNHVXVVMHhKUkVWZlJFOVhUaXhjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVYMlIxY21GMGFXOXVPaUF4TURBc0lDOHZJRzF6WEc0Z0lIMHBPMXh1SUNCeVpYWmxZV3hsY2k1elpYUmZZMmhwYkdRb1lXTjBhVzl1UW5WMGRHOXVLVHRjYmx4dUlDQmpiMjV6ZENCMGFYUnNaVXhoWW1Wc0lEMGdibVYzSUVkMGF5NU1ZV0psYkNoN1hHNGdJQ0FnYkdGaVpXdzZJR1JsZG1salpVNWhiV1VzWEc0Z0lDQWdhR0ZzYVdkdU9pQkhkR3N1UVd4cFoyNHVVMVJCVWxRc1hHNGdJQ0FnZUdGc2FXZHVPaUF3TEZ4dUlDQjlLVHRjYmx4dUlDQmpiMjV6ZENCamIyNTBaVzUwUW05NElEMGdibVYzSUVkMGF5NUNiM2dvZTF4dUlDQWdJRzl5YVdWdWRHRjBhVzl1T2lCSGRHc3VUM0pwWlc1MFlYUnBiMjR1VmtWU1ZFbERRVXdzWEc0Z0lDQWdjM0JoWTJsdVp6b2dNaXhjYmlBZ2ZTazdYRzRnSUdOdmJuUmxiblJDYjNndVlYQndaVzVrS0hScGRHeGxUR0ZpWld3cE8xeHVJQ0JqYjI1MFpXNTBRbTk0TG1Gd2NHVnVaQ2h6ZEdGMGRYTk1ZV0psYkNrN1hHNWNiaUFnTHk4Z1NHVmhaR1Z5SUdKMWRIUnZiaUJtYjNJZ2RHaGxJR1JsZG1salpTQnVZVzFsWEc0Z0lHTnZibk4wSUdobFlXUmxjaUE5SUc1bGR5QkhkR3N1UW5WMGRHOXVLSHRjYmlBZ0lDQmphR2xzWkRvZ1kyOXVkR1Z1ZEVKdmVDeGNiaUFnSUNCb1lXeHBaMjQ2SUVkMGF5NUJiR2xuYmk1R1NVeE1MRnh1SUNCOUtUdGNibHh1SUNCb1pXRmtaWEl1WTI5dWJtVmpkQ2hjSW1Oc2FXTnJaV1JjSWl3Z0tDa2dQVDRnZTF4dUlDQWdJQzh2SUZSdloyZHNaU0IyYVhOcFltbHNhWFI1SUc5bUlIUm9aU0JoWTNScGIyNGdZblYwZEc5dVhHNGdJQ0FnY21WMlpXRnNaWEl1Y21WMlpXRnNYMk5vYVd4a0lEMGdJWEpsZG1WaGJHVnlMbkpsZG1WaGJGOWphR2xzWkR0Y2JpQWdmU2s3WEc1Y2JpQWdMeThnVm1WeWRHbGpZV3dnWTI5dWRHRnBibVZ5SUdadmNpQjBhR2x6SUdSbGRtbGpaVnh1SUNCamIyNXpkQ0JrWlhacFkyVkNiM2dnUFNCdVpYY2dSM1JyTGtKdmVDaDdYRzRnSUNBZ2IzSnBaVzUwWVhScGIyNDZJRWQwYXk1UGNtbGxiblJoZEdsdmJpNVdSVkpVU1VOQlRDeGNiaUFnSUNCemNHRmphVzVuT2lBMExGeHVJQ0I5S1R0Y2JseHVJQ0JrWlhacFkyVkNiM2d1WVhCd1pXNWtLR2hsWVdSbGNpazdYRzRnSUdSbGRtbGpaVUp2ZUM1aGNIQmxibVFvY21WMlpXRnNaWElwTzF4dUlDQmtaWFpwWTJWQ2IzZ3VZV1JrWDJOemMxOWpiR0Z6Y3loY0ltUmxkbWxqWlhKdmQxd2lLVnh1WEc0Z0lISmxkSFZ5YmlCa1pYWnBZMlZDYjNnN1hHNTlYRzRpTENBaWFXMXdiM0owSUhzZ1IzUnJJSDBnWm5KdmJTQW5ZV2R6TDJkMGF6UW5PMXh1YVcxd2IzSjBJRWRNYVdJZ1puSnZiU0JjSW1kcE9pOHZSMHhwWWx3aVhHNXBiWEJ2Y25RZ2V5QmxlR1ZqUVhONWJtTWdmU0JtY205dElDZGhaM012Y0hKdlkyVnpjeWM3WEc1cGJYQnZjblFnUW14MVpYUnZiM1JvVFdWdWRTQm1jbTl0SUNjdUwwSnNkV1YwYjI5MGFDOWliSFZsZEc5dmRHaHRaVzUxSnp0Y2JseHVaWGh3YjNKMElHUmxabUYxYkhRZ1puVnVZM1JwYjI0Z1ZYUnBiSE5RYjNCdmRtVnlLQ2tnZTF4dUlDQmpiMjV6ZENCd2IzQnZkbVZ5VFdWdWRTQTlJRzVsZHlCSGRHc3VVRzl3YjNabGNpZ3BYRzRnSUhCdmNHOTJaWEpOWlc1MUxtRmtaRjlqYzNOZlkyeGhjM01vWENKemVYTjBjbUY1YldWdWRWd2lLVnh1WEc0Z0lDOHZJSEJ2Y0c5MlpYSk5aVzUxTG5ObGRGOWhkWFJ2YUdsa1pTaG1ZV3h6WlNrN0lDOHZJRlJGVFZCUFVrRlNXU0JHVDFJZ1JFVkNWVWRIU1U1SElGSkZUVTlXUlNCR1QxSWdSa2xPUVV3Z1FsVkpURVJjYmx4dUlDQXZMeUJEY21WaGRHVWdZU0J6ZEdGamF5Qm1iM0lnWVc1cGJXRjBaV1FnZEhKaGJuTnBkR2x2Ym5OY2JpQWdZMjl1YzNRZ2MzUmhZMnNnUFNCdVpYY2dSM1JyTGxOMFlXTnJLSHRjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVYM1I1Y0dVNklFZDBheTVUZEdGamExUnlZVzV6YVhScGIyNVVlWEJsTGxOTVNVUkZYMHhGUmxRc1hHNGdJQ0FnZEhKaGJuTnBkR2x2Ymw5a2RYSmhkR2x2YmpvZ01qQXdMQ0F2THlCdGMxeHVJQ0I5S1R0Y2JseHVJQ0J6ZEdGamF5NXpaWFJmZG1odmJXOW5aVzVsYjNWektHWmhiSE5sS1R0Y2JpQWdjM1JoWTJzdWMyVjBYMmhsZUhCaGJtUW9abUZzYzJVcE8xeHVJQ0J6ZEdGamF5NWhaR1JmWTNOelgyTnNZWE56S0Z3aWNHOXdiM1psY20xbGJuVnpkR0ZqYTF3aUtWeHVYRzRnSUhCdmNHOTJaWEpOWlc1MUxuTmxkRjlqYUdsc1pDaHpkR0ZqYXlsY2JseHVJQ0F2THlCQ2RYUjBiMjRnWW1GeUlDaEVaV1poZFd4MElIWnBaWGNnWm05eUlIUm9aU0IxZEdsc2FYUnBaWE1nY0c5d2IzWmxjaWxjYmlBZ1kyOXVjM1FnWW5WMGRHOXVRbTk0SUQwZ2JtVjNJRWQwYXk1Q2IzZ29leUJ2Y21sbGJuUmhkR2x2YmpvZ1IzUnJMazl5YVdWdWRHRjBhVzl1TGtoUFVrbGFUMDVVUVV3c0lITndZV05wYm1jNklEWWdmU2xjYmlBZ1luVjBkRzl1UW05NExuTmxkRjkyWVd4cFoyNG9SM1JyTGtGc2FXZHVMbE5VUVZKVUtUdGNibHh1SUNBdkx5QkVaV05zWVhKbElHSmhZMnNnWW5WMGRHOXVJSFJ2SUdKbElIVnpaV1FnYVc0Z2MzVmlMVzFsYm5WelhHNGdJR052Ym5OMElHSmhZMnRDZFhSMGIyNGdQU0J1WlhjZ1IzUnJMa0oxZEhSdmJpaDdJR3hoWW1Wc09pQmNJand0WENJZ2ZTbGNiaUFnWW1GamEwSjFkSFJ2Ymk1amIyNXVaV04wS0Z3aVkyeHBZMnRsWkZ3aUxDQW9LU0E5UGlCN1hHNGdJQ0FnYzNSaFkyc3VkSEpoYm5OcGRHbHZibDkwZVhCbElEMGdSM1JyTGxOMFlXTnJWSEpoYm5OcGRHbHZibFI1Y0dVdVUweEpSRVZmVWtsSFNGUmNiaUFnSUNCemRHRmpheTV6WlhSZmRtbHphV0pzWlY5amFHbHNaQ2hpZFhSMGIyNUNiM2dwWEc0Z0lIMHBYRzVjYmlBZ0x5OGdSR1ZqYkdGeVpTQnpkV0l0YldWdWRYTmNiaUFnWTI5dWMzUWdZbXgxWlhSdmIzUm9UV1Z1ZFNBOUlFSnNkV1YwYjI5MGFFMWxiblVvWW1GamEwSjFkSFJ2YmlsY2JseHVJQ0J6ZEdGamF5NWhaR1JmYm1GdFpXUW9ZblYwZEc5dVFtOTRMQ0JjSW0xaGFXNWNJaWxjYmlBZ2MzUmhZMnN1WVdSa1gyNWhiV1ZrS0dKc2RXVjBiMjkwYUUxbGJuVXNJRndpWW14MVpYUnZiM1JvWENJcFhHNWNiaUFnTHk4Z1EzSmxZWFJsSUdKMWRIUnZibk5jYmlBZ1kyOXVjM1FnWW14MVpYUnZiM1JvVjJsa1oyVjBJRDBnYm1WM0lFZDBheTVDZFhSMGIyNG9leUJzWVdKbGJEb2dYQ0pjZFVZeU9UUmNJaUI5S1Z4dUlDQmpiMjV6ZENCdVpYUjNiM0pyVjJsa1oyVjBJRDBnYm1WM0lFZDBheTVDZFhSMGIyNG9leUJzWVdKbGJEb2dYQ0pjZFVSQ09EQmNkVVJETURKY0lpQjlLVnh1SUNCamIyNXpkQ0IyYjJ4MWJXVlhhV1JuWlhRZ1BTQnVaWGNnUjNSckxrSjFkSFJ2YmloN0lHeGhZbVZzT2lCY0lseDFSakF5T0Z3aUlIMHBYRzRnSUdOdmJuTjBJSE41YzNSbGJWZHBaR2RsZENBOUlHNWxkeUJIZEdzdVFuVjBkRzl1S0hzZ2JHRmlaV3c2SUZ3aVhIVkVRamd3WEhWRVJqVkNYQ0lnZlNsY2JseHVJQ0JpYkhWbGRHOXZkR2hYYVdSblpYUXVZMjl1Ym1WamRDaGNJbU5zYVdOclpXUmNJaXdnS0NrZ1BUNGdlMXh1SUNBZ0lITjBZV05yTG5SeVlXNXphWFJwYjI1ZmRIbHdaU0E5SUVkMGF5NVRkR0ZqYTFSeVlXNXphWFJwYjI1VWVYQmxMbE5NU1VSRlgweEZSbFJjYmlBZ0lDQnpkR0ZqYXk1elpYUmZkbWx6YVdKc1pWOWphR2xzWkNoaWJIVmxkRzl2ZEdoTlpXNTFLVnh1SUNCOUtWeHVYRzRnSUc1bGRIZHZjbXRYYVdSblpYUXVZMjl1Ym1WamRDaGNJbU5zYVdOclpXUmNJaXdnS0NrZ1BUNGdlMXh1SUNBZ0lHVjRaV05CYzNsdVl5aGJYQ0p1YlMxamIyNXVaV04wYVc5dUxXVmthWFJ2Y2x3aVhTbGNiaUFnSUNBdWRHaGxiaWdvYjNWMEtTQTlQaUJqYjI1emIyeGxMbXh2WnlodmRYUXBLVnh1SUNBZ0lDNWpZWFJqYUNnb1pYSnlLU0E5UGlCamIyNXpiMnhsTG1WeWNtOXlLR1Z5Y2lrcFhHNGdJSDBwWEc1Y2JpQWdkbTlzZFcxbFYybGtaMlYwTG1OdmJtNWxZM1FvWENKamJHbGphMlZrWENJc0lDZ3BJRDArSUh0Y2JpQWdJQ0JsZUdWalFYTjVibU1vVzF3aWEybDBkSGxjSWl3Z1hDSXRMV05zWVhOelBWZHBjbVZ0YVhoY0lpd2dYQ0l0WlZ3aUxDQmNJbmRwY21WdGFYaGNJbDBwWEc0Z0lDQWdMblJvWlc0b0tHOTFkQ2tnUFQ0Z1kyOXVjMjlzWlM1c2IyY29iM1YwS1NsY2JpQWdJQ0F1WTJGMFkyZ29LR1Z5Y2lrZ1BUNGdZMjl1YzI5c1pTNWxjbkp2Y2lobGNuSXBLVnh1SUNCOUtWeHVYRzRnSUhONWMzUmxiVmRwWkdkbGRDNWpiMjV1WldOMEtGd2lZMnhwWTJ0bFpGd2lMQ0FvS1NBOVBpQjdYRzRnSUNBZ1pYaGxZMEZ6ZVc1aktGdGNJbTFwYzNOcGIyNWpaVzUwWlhKY0lsMHBYRzRnSUNBZ0xuUm9aVzRvS0c5MWRDa2dQVDRnWTI5dWMyOXNaUzVzYjJjb2IzVjBLU2xjYmlBZ0lDQXVZMkYwWTJnb0tHVnljaWtnUFQ0Z1kyOXVjMjlzWlM1bGNuSnZjaWhsY25JcEtWeHVJQ0I5S1Z4dVhHNGdJR0oxZEhSdmJrSnZlQzVoY0hCbGJtUW9ZbXgxWlhSdmIzUm9WMmxrWjJWMEtWeHVJQ0JpZFhSMGIyNUNiM2d1WVhCd1pXNWtLRzVsZEhkdmNtdFhhV1JuWlhRcFhHNGdJR0oxZEhSdmJrSnZlQzVoY0hCbGJtUW9kbTlzZFcxbFYybGtaMlYwS1Z4dUlDQmlkWFIwYjI1Q2IzZ3VZWEJ3Wlc1a0tITjVjM1JsYlZkcFpHZGxkQ2xjYmx4dUlDQndiM0J2ZG1WeVRXVnVkUzVqYjI1dVpXTjBLRndpWTJ4dmMyVmtYQ0lzSUNncElEMCtlMXh1SUNBZ0lDQWdjM1JoWTJzdWMyVjBYM1pwYzJsaWJHVmZZMmhwYkdRb1luVjBkRzl1UW05NEtWeHVJQ0I5S1Z4dVhHNGdJSEpsZEhWeWJpQndiM0J2ZG1WeVRXVnVkVnh1ZlZ4dUlpd2dJbWx0Y0c5eWRDQjdJRUZ6ZEdGc0xDQkhaR3NzSUVkMGF5QjlJR1p5YjIwZ1hDSmhaM012WjNSck5Gd2lPMXh1YVcxd2IzSjBJRTV2ZEdsbVpDQm1jbTl0SUZ3aVoyazZMeTlCYzNSaGJFNXZkR2xtWkZ3aU8xeHVhVzF3YjNKMElHRndjQ0JtY205dElGd2lZV2R6TDJkMGF6UXZZWEJ3WENJN1hHNWNibVY0Y0c5eWRDQmtaV1poZFd4MElHWjFibU4wYVc5dUlFNXZkR2xtWkZkcFpHZGxkQ2huWkd0dGIyNXBkRzl5T2lCSFpHc3VUVzl1YVhSdmNpa2dlMXh1SUNCamIyNXpkQ0I3SUZKSlIwaFVMQ0JVVDFBZ2ZTQTlJRUZ6ZEdGc0xsZHBibVJ2ZDBGdVkyaHZjanRjYmlBZ1kyOXVjM1FnYm05MGFXWmtJRDBnVG05MGFXWmtMbWRsZEY5a1pXWmhkV3gwS0NrN1hHNGdJRnh1SUNBdkx5QkxaV1Z3SUhSeVlXTnJJRzltSUdOMWNuSmxiblJzZVNCa2FYTndiR0Y1WldRZ2JtOTBhV1pwWTJGMGFXOXVjMXh1SUNCamIyNXpkQ0JoWTNScGRtVk9iM1JwWm1sallYUnBiMjV6T2lCTllYQThiblZ0WW1WeUxDQkJjM1JoYkM1WGFXNWtiM2MrSUQwZ2JtVjNJRTFoY0NncE8xeHVJQ0JjYmlBZ0x5OGdUR2x6ZEdWdUlHWnZjaUJ1WlhjZ2JtOTBhV1pwWTJGMGFXOXVjMXh1SUNCdWIzUnBabVF1WTI5dWJtVmpkQ2hjSW01dmRHbG1hV1ZrWENJc0lDaGZMQ0JwWkNrZ1BUNGdlMXh1SUNBZ0lHTnZibk4wSUc0Z1BTQnViM1JwWm1RdVoyVjBYMjV2ZEdsbWFXTmhkR2x2YmlocFpDazdYRzRnSUNBZ2FXWWdLQ0Z1S1NCeVpYUjFjbTQ3WEc0Z0lDQWdZMjl1YzNRZ2FHbHVkSE1nUFNCdUxtZGxkRjlvYVc1MGN5Z3BMbkpsWTNWeWMybDJaVlZ1Y0dGamF5Z3BJR0Z6SUdGdWVUdGNiaUFnSUNCc1pYUWdhVzFoWjJWUVlYUm9JRDBnYUdsdWRITmJYQ0pwYldGblpTMXdZWFJvWENKZElIeDhJRzUxYkd3N1hHNWNiaUFnSUNCc1pYUWdZWEJ3U1dOdmJpQTlJR2hwYm5Selcxd2laR1Z6YTNSdmNDMWxiblJ5ZVZ3aVhTQjhmQ0J1ZFd4c08xeHVJQ0FnSUZ4dUlDQWdJR052Ym5OMElHNXZkR2xtVjJsdVpHOTNJRDBnS0Z4dUlDQWdJQ0FnUEhkcGJtUnZkMXh1SUNBZ0lDQWdJQ0J1WVcxbFBYdGdibTkwYVdacFkyRjBhVzl1TFNSN2FXUjlZSDFjYmlBZ0lDQWdJQ0FnWTJ4aGMzTTlYQ0pPYjNScFptbGpZWFJwYjI1Y0lseHVJQ0FnSUNBZ0lDQm5aR3R0YjI1cGRHOXlQWHRuWkd0dGIyNXBkRzl5ZlZ4dUlDQWdJQ0FnSUNCaGJtTm9iM0k5ZTFSUFVDQjhJRkpKUjBoVWZWeHVJQ0FnSUNBZ0lDQmxlR05zZFhOcGRtbDBlVDE3UVhOMFlXd3VSWGhqYkhWemFYWnBkSGt1U1VkT1QxSkZmVnh1SUNBZ0lDQWdJQ0JoY0hCc2FXTmhkR2x2YmoxN1lYQndmVnh1SUNBZ0lDQWdQbHh1SUNBZ0lDQWdJQ0E4WW05NElHOXlhV1Z1ZEdGMGFXOXVQWHRIZEdzdVQzSnBaVzUwWVhScGIyNHVWa1ZTVkVsRFFVeDlQbHh1SUNBZ0lDQWdJQ0FnSUNBZ1BHSnZlQ0J2Y21sbGJuUmhkR2x2YmoxN1IzUnJMazl5YVdWdWRHRjBhVzl1TGtoUFVrbGFUMDVVUVV4OVBseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIc29ZWEJ3U1dOdmJpa2dKaVlnS0Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUR4cGJXRm5aU0JjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXTnZiazVoYldVOWUyRndjRWxqYjI1OVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0x6NWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXBmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRHhzWVdKbGJDQnNZV0psYkQxN2JpNWhjSEJPWVcxbGZTOCtYRzRnSUNBZ0lDQWdJQ0FnSUNBOEwySnZlRDVjYmlBZ0lDQWdJQ0FnSUNBZ0lEeGliM2dnYjNKcFpXNTBZWFJwYjI0OWUwZDBheTVQY21sbGJuUmhkR2x2Ymk1SVQxSkpXazlPVkVGTWZUNWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjdLR2x0WVdkbFVHRjBhQ2tnSmlZZ0tGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeHBiV0ZuWlNCY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabWxzWlQxN2FXMWhaMlZRWVhSb2ZTQmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZQbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ2w5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEdKdmVDQnZjbWxsYm5SaGRHbHZiajE3UjNSckxrOXlhV1Z1ZEdGMGFXOXVMbFpGVWxSSlEwRk1mVDVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1BHeGhZbVZzSUd4aFltVnNQWHR1TG5OMWJXMWhjbmw5SUdOc1lYTnpQVndpYzNWdGJXRnllVndpSUdoaGJHbG5iajE3UjNSckxrRnNhV2R1TGtWT1JIMHZQbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOGJHRmlaV3dnYkdGaVpXdzllMjR1WW05a2VYMGdZMnhoYzNNOVhDSmliMlI1WENJZ2FHRnNhV2R1UFh0SGRHc3VRV3hwWjI0dVJVNUVmUzgrWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEM5aWIzZytYRzRnSUNBZ0lDQWdJQ0FnSUNBOEwySnZlRDVjYmlBZ0lDQWdJQ0FnUEM5aWIzZytYRzRnSUNBZ0lDQThMM2RwYm1SdmR6NWNiaUFnSUNBcElHRnpJRUZ6ZEdGc0xsZHBibVJ2ZHp0Y2JpQWdJQ0JjYmlBZ0lDQXZMeUJUYUc5M0lIUm9aU0J1YjNScFptbGpZWFJwYjI0Z2QybHVaRzkzWEc0Z0lDQWdibTkwYVdaWGFXNWtiM2N1YzJodmR5Z3BPMXh1SUNBZ0lHRmpkR2wyWlU1dmRHbG1hV05oZEdsdmJuTXVjMlYwS0dsa0xDQnViM1JwWmxkcGJtUnZkeWs3WEc0Z0lDQWdYRzRnSUNBZ0x5OGdRWFYwYjIxaGRHbGpZV3hzZVNCeVpXMXZkbVVnYVhRZ1lXWjBaWElnTlNCelpXTnZibVJ6WEc0Z0lDQWdjMlYwVkdsdFpXOTFkQ2dvS1NBOVBpQjdYRzRnSUNBZ0lDQnViM1JwWmxkcGJtUnZkeTVrWlhOMGNtOTVLQ2s3WEc0Z0lDQWdJQ0JoWTNScGRtVk9iM1JwWm1sallYUnBiMjV6TG1SbGJHVjBaU2hwWkNrN1hHNGdJQ0FnZlN3Z05UQXdNQ2s3WEc0Z0lIMHBPMXh1SUNCY2JpQWdMeThnVEdsemRHVnVJR1p2Y2lCdWIzUnBabWxqWVhScGIyNGdjbVZ6YjJ4MWRHbHZiaUFvZDJobGJpQjFjMlZ5SUdScGMyMXBjM05sY3lCdmNpQnViM1JwWm1sallYUnBiMjRnWlhod2FYSmxjeWxjYmlBZ2JtOTBhV1prTG1OdmJtNWxZM1FvWENKeVpYTnZiSFpsWkZ3aUxDQW9YeXdnYVdRcElEMCtJSHRjYmlBZ0lDQmpiMjV6ZENCdWIzUnBabGRwYm1SdmR5QTlJR0ZqZEdsMlpVNXZkR2xtYVdOaGRHbHZibk11WjJWMEtHbGtLVHRjYmlBZ0lDQnBaaUFvYm05MGFXWlhhVzVrYjNjcElIdGNiaUFnSUNBZ0lHNXZkR2xtVjJsdVpHOTNMbVJsYzNSeWIza29LVHRjYmlBZ0lDQWdJR0ZqZEdsMlpVNXZkR2xtYVdOaGRHbHZibk11WkdWc1pYUmxLR2xrS1R0Y2JpQWdJQ0I5WEc0Z0lIMHBPMXh1SUNCY2JpQWdMeThnVW1WMGRYSnVJRzUxYkd3Z2MybHVZMlVnYm05MGFXWnBZMkYwYVc5dWN5QmpjbVZoZEdVZ2RHaGxhWElnYjNkdUlIZHBibVJ2ZDNOY2JpQWdjbVYwZFhKdUlHNTFiR3c3WEc1OUlpd2dJbWx0Y0c5eWRDQmhjSEFnWm5KdmJTQmNJbUZuY3k5bmRHczBMMkZ3Y0Z3aVhHNXBiWEJ2Y25RZ2MzUjViR1VnWm5KdmJTQmNJaTR2YzNSNWJHVXVjMk56YzF3aVhHNXBiWEJ2Y25RZ1FtRnlJR1p5YjIwZ1hDSXVMM2RwWkdkbGRDOUNZWEpjSWx4dWFXMXdiM0owSUU1dmRHbG1aRmRwWkdkbGRDQm1jbTl0SUZ3aUxpOTNhV1JuWlhRdlRtOTBhV1pwWTJGMGFXOXVYQ0k3WEc1Y2JtRndjQzV6ZEdGeWRDaDdYRzRnSUdOemN6b2djM1I1YkdVc1hHNGdJRzFoYVc0b0tTQjdYRzRnSUNBZ1kyOXVjM1FnYlc5dWFYUnZjbk1nUFNCaGNIQXVaMlYwWDIxdmJtbDBiM0p6S0NrN1hHNWNiaUFnSUNCdGIyNXBkRzl5Y3k1dFlYQW9LRzF2Ym1sMGIzSXBJRDArSUh0Y2JpQWdJQ0FnSUM4dklGSmxibVJsY2lCMGFHVWdkR0Z6YTJKaGNseHVJQ0FnSUNBZ1FtRnlLRzF2Ym1sMGIzSXBPMXh1SUNBZ0lIMHBPMXh1SUNBZ0lFNXZkR2xtWkZkcFpHZGxkQ2h0YjI1cGRHOXljMXN3WFNrN1hHNGdJSDBzWEc1OUtUdGNiaUpkTEFvZ0lDSnRZWEJ3YVc1bmN5STZJQ0k3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN08wRkJUVUVzVTBGQlV5eFRRVUZUTEV0QlFXRTdRVUZETTBJc1UwRkJUeXhKUVVOR0xGRkJRVkVzYlVKQlFXMUNMRTlCUVU4c1JVRkRiRU1zVjBGQlZ5eExRVUZMTEVkQlFVY3NSVUZEYmtJc1dVRkJXVHRCUVVOeVFqdEJRVVZCTEdWQlFXVXNVMEZCV1N4TFFVRTRRa0VzVVVGQmRVSTdRVUZETlVVc1UwRkJUeXhKUVVGSkxFdEJRVXNzUTBGQlF5eE5RVUZOUVN4UFFVRk5MRVZCUVVVc1QwRkJUeXhEUVVGRExFVkJRVVVzVFVGQlRTeE5RVUZOTEUxQlFVMDdRVUZETDBRN1FVRkZRU3hUUVVGVExFMUJRWGRDTEU5QlFWVXNUVUZCWjBNN1FVRkRka1VzVTBGQlR5eGxRVUZsTEU5QlFVOHNUVUZCVFR0QlFVRkJMRWxCUXk5Q0xFMUJRVTA3UVVGRFJpeGhRVUZQTEV0QlFVc3NUMEZCVHl4VFFVRlRMRWxCUVVrc1EwRkJReXhGUVVGRkxFVkJRVVU3UVVGQlFTeEpRVU42UXp0QlFVRkJMRVZCUTBvc1EwRkJRenRCUVVOTU8wRkJSVUVzVFVGQlRTeFRRVUZUTEU5QlFVOHNaMEpCUVdkQ0xFZEJRVWNzUTBGQlF5eEZRVUZGTEUxQlFVMHNXVUZCV1N4TlFVRk5PMEZCUTJoRkxGRkJRVTBzUzBGQlN5eFhRVUZYTEUxQlFVMDdRVUZETlVJc1VVRkJUU3haUVVGWkxGZEJRVmNzVlVGQlZUdEJRVU4yUXl4UlFVRk5MRmxCUVZrc1YwRkJWeXhaUVVGWk8wRkJRemRETEVOQlFVTTdRVUZGUkN4TlFVRk5MRk5CUVZNc1QwRkJUeXh0UWtGQmJVSXNSMEZCUnl4RFFVRkRMRVZCUVVVc1QwRkJUeXhOUVVGTk8wRkJRM2hFTEZGQlFVMHNUMEZCVHl4WFFVRlhMRk5CUVZNN1FVRkRja01zUTBGQlF6dEJRVVZFTEUxQlFVMHNVMEZCVXl4UFFVRlBMSEZDUVVGeFFpeEhRVUZITEVOQlFVTXNSVUZCUlN4VFFVRlRMRmRCUVVGRExGbEJRVmNzVDBGQlR5eE5RVUZOTzBGQlF6bEZMRkZCUVUwc1VVRkJVU3hYUVVGWExFOUJRVTg3UVVGRGFFTXNVVUZCVFVFc1YwRkJWU3hYUVVGWExGVkJRVlU3UVVGRGNrTXNVVUZCVFVFc1YwRkJWU3hYUVVGWExGTkJRVk03UVVGRGNFTXNVVUZCVFN4UFFVRlBMRmRCUVZjc1QwRkJUenRCUVVOdVF5eERRVUZETzBGQlJVUXNUVUZCVFN4VFFVRlRMRTlCUVU4c2IwSkJRVzlDTEVkQlFVY3NRMEZCUXl4RlFVRkZMRlZCUVVGRExGZEJRVlVzVTBGQlV5eFZRVUZWTEUxQlFVMDdRVUZETDBVc1VVRkJUVUVzVlVGQlV5eFhRVUZYTEU5QlFVODdRVUZEYWtNc1VVRkJUVUVzVlVGQlV5eFhRVUZYTEZWQlFWVTdRVUZEY0VNc1VVRkJUVUVzVlVGQlV5eFhRVUZYTEZsQlFWazdRVUZEZEVNc1VVRkJUVUVzVlVGQlV5eFhRVUZYTEZOQlFWTTdRVUZEYmtNc1VVRkJUU3hSUVVGUkxGZEJRVmNzWjBKQlFXZENPMEZCUTNwRExGRkJRVTBzVVVGQlVTeFhRVUZYTEdsQ1FVRnBRanRCUVVNeFF5eFJRVUZOTEZWQlFWVXNWMEZCVnl4VFFVRlRPMEZCUTNoRExFTkJRVU03UVVGRlJDeE5RVUZOTEZOQlFWTXNUMEZCVHl4cFFrRkJhVUlzUjBGQlJ5eERRVUZETEVWQlFVVXNUMEZCVHl4UFFVRlBMRTFCUVUwN1FVRkROMFFzVVVGQlRTeE5RVUZOTEZkQlFWY3NVMEZCVXp0QlFVTm9ReXhSUVVGTkxFOUJRVThzVjBGQlZ5eDFRa0ZCZFVJN1FVRkRMME1zVVVGQlRTeFBRVUZQTEZkQlFWY3NjVUpCUVhGQ08wRkJRemRETEZGQlFVMHNUMEZCVHl4WFFVRlhMSE5DUVVGelFqdEJRVU01UXl4UlFVRk5MRTlCUVU4c1YwRkJWeXh2UWtGQmIwSTdRVUZETlVNc1VVRkJUU3hQUVVGUExGZEJRVmNzVlVGQlZUdEJRVU4wUXl4RFFVRkRPMEZCUlVRc1RVRkJUU3hUUVVGVExFOUJRVThzYlVKQlFXMUNMRWRCUVVjc1EwRkJReXhGUVVGRkxFdEJRVXNzVFVGQlRUdEJRVU4wUkN4UlFVRk5MRXRCUVVzc1YwRkJWeXhsUVVGbE8wRkJRM0pETEZGQlFVMHNTMEZCU3l4WFFVRlhMR05CUVdNN1FVRkRlRU1zUTBGQlF6dEJRVVZFTEUxQlFVMHNVMEZCVXl4UFFVRlBMR3RDUVVGclFpeEhRVUZITEVOQlFVTXNSVUZCUlN4UlFVRkJReXhUUVVGUkxHRkJRV0VzVFVGQlRUdEJRVU55UlN4UlFVRk5RU3hSUVVGUExGZEJRVmNzWlVGQlpUdEJRVU4yUXl4UlFVRk5MR0ZCUVdFc1YwRkJWeXhUUVVGVE8wRkJRek5ETEVOQlFVTTdRVUZGUkN4TlFVRk5MRk5CUVZNc1QwRkJUeXg1UWtGQmVVSXNSMEZCUnl4RFFVRkRMRVZCUVVVc1kwRkJZeXhOUVVGTk8wRkJRM0pGTEZGQlFVMHNZMEZCWXl4WFFVRlhMRk5CUVZNN1FVRkROVU1zUTBGQlF6dEJRVVZFTEUxQlFVMHNVMEZCVXl4UFFVRlBMR05CUVdNc1IwRkJSeXhEUVVGRExFVkJRVVVzU1VGQlFVTXNTMEZCU1N4UFFVRlBMRTFCUVUwc1RVRkJUVHRCUVVNM1JDeFJRVUZOUVN4SlFVRkhMRmRCUVZjc1UwRkJVenRCUVVNM1FpeFJRVUZOTEUxQlFVMHNWMEZCVnl4VFFVRlRPMEZCUTJoRExGRkJRVTBzVFVGQlRTeFhRVUZYTEZkQlFWYzdRVUZEYkVNc1VVRkJUU3hOUVVGTkxGZEJRVmNzWVVGQllUdEJRVU53UXl4UlFVRk5MRTFCUVUwc1YwRkJWeXhWUVVGVk8wRkJRMnBETEZGQlFVMHNUVUZCVFN4WFFVRlhMRk5CUVZNN1FVRkRhRU1zVVVGQlRTeE5RVUZOTEZkQlFWY3NVMEZCVXp0QlFVTm9ReXhSUVVGTkxFMUJRVTBzVjBGQlZ5eFhRVUZYTzBGQlEyeERMRkZCUVUwc1RVRkJUU3hYUVVGWExFOUJRVTg3UVVGRE9VSXNVVUZCVFN4TlFVRk5MRmRCUVZjc1UwRkJVenRCUVVOb1F5eFJRVUZOTEUxQlFVMHNWMEZCVnl4VFFVRlRPMEZCUTNCRExFTkJRVU03UVVGRlJDeE5RVUZOTEZOQlFWTXNUMEZCVHl4blFrRkJaMElzUjBGQlJ5eERRVUZETEVWQlFVVXNTMEZCU3l4TlFVRk5PMEZCUTI1RUxGRkJRVTBzUzBGQlN5eFhRVUZYTEU5QlFVODdRVUZEYWtNc1EwRkJRenM3TzBGRGFFWkVMRTlCUVU4c1lVRkJZVHRCUVVOd1FpeFBRVUZQTEZWQlFWVTdPenRCUTFaV0xGTkJRVk1zVTBGQlV5eExRVUZoTzBGQlEyeERMRk5CUVU4c1NVRkRSaXhSUVVGUkxHMUNRVUZ0UWl4UFFVRlBMRVZCUTJ4RExGZEJRVmNzUzBGQlN5eEhRVUZITEVWQlEyNUNMRmxCUVZrN1FVRkRja0k3UVVGRlR5eFRRVUZUUXl4VlFVRlRMRXRCUVdFN1FVRkRiRU1zVTBGQlR5eEpRVU5HTEZGQlFWRXNiVUpCUVcxQ0xFOUJRVThzUlVGRGJFTXNWMEZCVnl4TFFVRkxMRWRCUVVjc1JVRkRia0lzV1VGQldUdEJRVU55UWp0QlFXdENUeXhUUVVGVExFbEJRVWtzUlVGQlJTeE5RVUZOTEZsQlFWa3NVMEZCVXl4SFFVRlpPMEZCUTNwRUxFMUJRVWtzVlVGQlZTeEpRVUZKTEVsQlFVazdRVUZGZEVJc1VVRkJUU3hSUVVGUkxFOUJRVThzVVVGQlVTeGpRVUZqTEVOQlFVTXNRMEZCUXp0QlFVVTNReXhOUVVGSkxFMUJRVTBzVTBGQlV5eEhRVUZITzBGQlEyeENMR1ZCUVZjc1EwRkJReXhMUVVGTExFdEJRVXNzUzBGQlN5eFBRVUZQTzBGQlF6bENMR2xDUVVGWExFbEJRVWtzUjBGQlJ5eExRVUZMTEV0QlFVczdRVUZCUVN4SlFVTm9RenRCUVVGQkxFVkJRMG83UVVGRlFTeE5RVUZKTEZsQlFWa3NVMEZCVXl4VFFVRlRMRWRCUVVjN1FVRkRha01zWlVGQlZ6dEJRVU5ZTEdWQlFWY3NVVUZCVVN4VlFVRlZPMEZCUTNwQ0xHbENRVUZYTEVsQlFVa3NTVUZCU1R0QlFVRkJMRWxCUTNaQ08wRkJRMEVzWlVGQlZ5eExRVUZMTEVsQlFVazdRVUZCUVN4RlFVTjRRaXhQUVVGUE8wRkJRMGdzWlVGQlZ6dEJRVUZCTEVWQlEyWTdRVUZGUVN4VFFVRlBPMEZCUTFnN1FVRmxUeXhUUVVGVExFbEJRVWtzUzBGQmNVSXNUVUZCWXl4UFFVRlpPMEZCUXk5RUxGRkJRVTBzVFVGQlRVTXNWVUZCVXl4SlFVRkpPMEZCUTNwQ0xGRkJRVTFETEZWQlFWTXNUMEZCVHl4SFFVRkhPMEZCUTNwQ0xGRkJRVTFETEZWQlFWTXNUMEZCVHl4SFFVRkhPMEZCUlhwQ0xFMUJRVWs3UVVGRlNpeE5RVUZKUkN4WFFVRlZMRTlCUVU4c1QwRkJUeXhKUVVGSlFTeFBRVUZOTEUxQlFVMHNXVUZCV1R0QlFVTndSQ3hqUVVGWExFbEJRVWxCTEU5QlFVMHNSVUZCYjBJN1FVRkJRU3hGUVVNM1F5eFBRVUZQTzBGQlEwZ3NZMEZCVlN4SlFVRkpMRWxCUVhkQ08wRkJRVUVzUlVGRE1VTTdRVUZGUVN4TlFVRkpMRmxCUVZrc1QwRkJUenRCUVVOdVFpeFJRVUZKUXl4WFFVRlZMRTlCUVU4c1QwRkJUeXhKUVVGSlFTeFBRVUZOTEUxQlFVMHNXVUZCV1R0QlFVTndSRHRCUVVGRExFMUJRVU1zU1VGQlNVRXNUMEZCVFN4RlFVRjFRaXhMUVVGTE8wRkJRVUVzU1VGRE5VTXNUMEZCVHp0QlFVTklMR0ZCUVU4c1QwRkJUeXhMUVVGTExFVkJRVVVzUTBGQlF5eEpRVUZKTEVkQlFVY3NUVUZCVFN4RFFVRkRPMEZCUVVFc1NVRkRlRU03UVVGQlFTeEZRVU5LTzBGQlEwbzdPenRCUkRGRlFTeEpRVUZOTEU5QlFVOHNUMEZCVHl4cFFrRkJhVUk3UVVGRGNrTXNTVUZCVFN4RlFVRkZMR2RDUVVGblFpeGhRVUZoTEZGQlFWRXNTVUZCU1R0QlFVTnFSQ3hKUVVGTkxFVkJRVVVzVVVGQlVTeE5RVUZOTEdOQlFXTXNTVUZCU1R0QlFVdHFReXhKUVVGTkxHTkJRV01zVVVGQlVUdEJRVWMxUWl4SlFVRk5MR3RDUVVGclFpeFJRVUZSTzBGQlNXaERMRWxCUVUwc1dVRkJXU3hSUVVGUk8wRkJSekZDTEVsQlFVMHNZVUZCWVN4UlFVRlJPMEZCT0VOc1F5eFRRVUZUTEZsQlEwd3NTMEZEVFR0QlFVTk9MRTFCUVVrc1NVRkJTU3hSUVVGVExFOUJRVTBzVFVGQlRTeHJRMEZCYTBNN1FVRkRMMFFzVFVGQlNTeEpRVUZKTEU5QlFWRXNUMEZCVFN4TlFVRk5MR2xEUVVGcFF6dEJRVVUzUkN4TlFVRkpMRTlCUVU4c1NVRkJTU3hUUVVGVExGVkJRVlU3UVVGRE9VSXNWVUZCVFN4TlFVRk5MREpEUVVFeVF6dEJRVUZCTEVWQlF6TkVPMEZCUlVFc1UwRkJUeXhKUVVGSk8wRkJRMlk3UVVGM1JVOHNVMEZCVXl4UFFVRlZMR2xDUVVFMlF6dEJRVU51UlN4VFFVRlBMRk5CUVZVc1MwRkJNRUlzUzBGQmRVSTdRVUZET1VRc1ZVRkJUU3haUVVGWkxGbEJRVmtzUjBGQlJ6dEJRVU5xUXl4VlFVRk5MRTlCUVhOQ0xFbEJRVWs3UVVGRGFFTXNWVUZCVFN4UlFVRlRMRXRCUVVzc1pVRkJaU3hEUVVGRE8wRkJRM0JETEZGQlFVa3NZVUZCWVN4UFFVRlBPMEZCUTNCQ0xGbEJRVTBzUlVGQlJTeFBRVUZQTEV0QlFVc3NTVUZCU1N4TlFVRk5MRk5CUVZNN1FVRkRka01zV1VGQlRTeFRRVUZUTEVsQlFVa3NSVUZCUlN4UFFVRlBMRkZCUVZFc1YwRkJWeXhWUVVGVkxFdEJRVXM3UVVGQlFTeEpRVU5zUlN4UFFVRlBPMEZCUTBnc1dVRkJUU3hUUVVGVExFbEJRVWtzUlVGQlJTeFBRVUZQTEZkQlFWY3NWVUZCVlN4TlFVRk5MR2RDUVVGblFqdEJRVUZCTEVsQlF6TkZPMEZCUTBFc1YwRkJUenRCUVVGQkxFVkJRMWc3UVVGRFNqdEJRWEZDVHl4VFFVRlRMRTlCUVZVc2FVSkJRVFpETzBGQlEyNUZMRk5CUVU4c1UwRkJWVU1zVFVGQmRVTXNTMEZCZFVJN1FVRkRNMFVzVlVGQlRTeFpRVUZaTEZsQlFWa3NSMEZCUnp0QlFVTnFReXhWUVVGTkxFOUJRWE5DTEVsQlFVazdRVUZEYUVNc1ZVRkJUU3hSUVVGVExFdEJRVXNzWlVGQlpTeERRVUZETzBGQlEzQkRMRkZCUVVrc1lVRkJZU3hQUVVGUE8wRkJRM0JDTEZsQlFVMHNSVUZCUlN4UFFVRlBMRXRCUVVzc1NVRkJTU3hOUVVGTkxGTkJRVk03UVVGRGRrTXNXVUZCVFN4VFFVRlRMRWxCUVVrc1JVRkJSU3hQUVVGUExGRkJRVkVzVjBGQlZ5eFZRVUZWTEV0QlFVczdRVUZCUVN4SlFVTnNSU3hQUVVGUE8wRkJRMGdzV1VGQlRTeFRRVUZUTEVsQlFVa3NSVUZCUlN4UFFVRlBMRmRCUVZjc1ZVRkJWU3hOUVVGTkxHZENRVUZuUWp0QlFVRkJMRWxCUXpORk8wRkJRMEVzVjBGQlQwRTdRVUZCUVN4RlFVTllPMEZCUTBvN1FVRjNSRThzVTBGQlV5eFZRVWxVTEUxQlNWazdRVUZEWml4VFFVRlBMRk5CUVZVc1VVRkJVU3hMUVVGTE8wRkJRekZDTEZGQlFVa3NTVUZCU1N4UlFVRlRMRTlCUVUwc1RVRkJUU3hyUTBGQmEwTTdRVUZETDBRc1VVRkJTU3hKUVVGSkxFOUJRVkVzVDBGQlRTeE5RVUZOTEdsRFFVRnBRenRCUVVVM1JDeFJRVUZKTEU5QlFVOHNTVUZCU1N4VFFVRlRMRlZCUVZVN1FVRkRPVUlzV1VGQlRTeE5RVUZOTEhGRFFVRnhRenRCUVVGQkxFbEJRM0pFTzBGQlJVRXNWVUZCVFVNc1kwRkJZU3hUUVVGVExFbEJRVWtzU1VGQlNUdEJRVU53UXl4VlFVRk5MRTlCUVhOQ0xFbEJRVWs3UVVGRGFFTXNWVUZCVFN4VlFVRlhMRXRCUVVzc1dVRkJXU3hEUVVGRE8wRkJSVzVETEZGQlFVa3NUVUZCVFN4UlFVRlJMRXRCUVVzc1EwRkJReXhEUVVGRExFZEJRVWM3UVVGRGVFSXNXVUZCVFN4RFFVRkRMRkZCUVZFc1dVRkJXU3hQUVVGUExFbEJRVWs3UVVGTmRFTXNZMEZCVVVFc1YwRkJWU3hKUVVGSk8wRkJRVUVzVVVGRGJFSTdRVUZCUVN4UlFVTkJMRk5CUVZNc1UwRkJVeXhYUVVGWE8wRkJRVUVzVVVGRE4wSXNZVUZCWVN4UFFVRlBMRWxCUVVrc1EwRkJReXhOUVVGUExGbEJRVmtzU1VGQlNTeEZRVUZGTEZOQlFWTXNRMEZCUlR0QlFVRkJMRkZCUXpkRUxFZEJRVWtzWTBGQll6dEJRVUZCTEZWQlEyUXNZVUZCWVN4WlFVRlpMR0ZCUVdFc1YwRkJWeXhUUVVGVE8wRkJRVUVzVVVGRE9VUTdRVUZCUVN4UlFVTkJMRWRCUVVrc1UwRkJVeXhUUVVGVE8wRkJRVUVzVlVGRGJFSXNUMEZCVHl4UlFVRlJPMEZCUVVFc1VVRkRia0k3UVVGQlFTeFJRVU5CTEVkQlFVa3NUMEZCVHl4VFFVRlRMR2RDUVVGblFpeFpRVUZaTzBGQlFVRXNWVUZETlVNc1lVRkJZU3hSUVVGUk8wRkJRVUVzVVVGRGVrSTdRVUZCUVN4TlFVTktPMEZCUVVFc1NVRkRTaXhQUVVGUE8wRkJRMGdzV1VGQlRTeFRRVUZUTzBGQlEyWXNZMEZCVVVFc1YwRkJWU3hKUVVGSk8wRkJRVUVzVVVGRGJFSTdRVUZCUVN4UlFVTkJMRk5CUVZNN1FVRkJRU3hSUVVOVUxHRkJRV0VzVDBGQlR5eEpRVUZKTEVOQlFVTXNUVUZCVHl4WlFVRlpMRWxCUVVrc1JVRkJSU3hUUVVGVExFTkJRVVU3UVVGQlFTeE5RVU5xUlR0QlFVRkJMRWxCUTBvN1FVRkZRU3hYUVVGUExGbEJRV0VzVVVGQlVUdEJRVU40UWl4aFFVRlBMRXRCUVVzc1MwRkJTMEVzWVVGQldTeEhRVUZITEUxQlFVMDdRVUZCUVN4SlFVTXhRenRCUVVGQkxFVkJRMG83UVVGRFNqdEJRVVZCTEVsQlFVMHNVMEZCVXl4TFFVRkxMRXRCUVVzN1FVRkRla0lzU1VGQlRTeFRRVUZUTEVWQlFVVXNTMEZCU3p0QlFVTjBRaXhKUVVGTkxGVkJRVlVzUzBGQlN5eExRVUZMTzBGQlF6RkNMRWxCUVUwc1YwRkJWenRCUVVOcVFpeEpRVUZOTEZkQlFWYzdRVUZEYWtJc1NVRkJUU3hYUVVGWExFOUJRVTg3UVVGRGVFSXNTVUZCVFN4WFFVRlhMRTlCUVU4N1FVRkZlRUlzVTBGQlV5eGxRVUZsTEUxQlFYTkNMRTFCUVdNc1QwRkJiVUk3UVVGRE0wVXNWVUZCVVN4TlFVRk5PMEZCUVVFc1NVRkRWaXhMUVVGTExGRkJRVkU3UVVGRFZDeGhRVUZQTEZWQlFWVXNVVUZCVVN4TlFVRk5MRWxCUVVrc1NVRkJTU3hQUVVGUExFdEJRVXM3UVVGQlFTeEpRVU4yUkN4TFFVRkxMRkZCUVZFN1FVRkRWQ3hoUVVGUExGVkJRVlVzVDBGQlR5eE5RVUZOTEVsQlFVa3NTVUZCU1N4UFFVRlBMRVZCUVVVN1FVRkJRU3hKUVVOdVJDeExRVUZMTEZGQlFWRTdRVUZEVkN4aFFVRlBMRlZCUVZVc1NVRkJTU3hOUVVGTkxFbEJRVWtzU1VGQlNTeFBRVUZQTEZGQlFWRXNVVUZCVVN4RFFVRkRPMEZCUVVFc1NVRkRMMFFzUzBGQlN5eFJRVUZSTzBGQlExUXNZVUZCVHl4VlFVRlZMRXRCUVVzc1RVRkJUU3hKUVVGSkxFbEJRVWtzVDBGQlR5eEhRVUZITEZOQlFWTXNRMEZCUXp0QlFVRkJMRWxCUXpWRUxFdEJRVXNzVVVGQlVUdEJRVU5VTEdGQlFVOHNWVUZCVlN4TlFVRk5MRTFCUVUwc1NVRkJTU3hKUVVGSkxFOUJRVThzVlVGQlZTeFZRVUZWTEVOQlFVTTdRVUZCUVN4SlFVTnlSU3hMUVVGTExGRkJRVkU3UVVGRFZDeGhRVUZQTEZWQlFWVXNUMEZCVHl4TlFVRk5MRWxCUVVrc1NVRkJTU3hQUVVGUExFZEJRVWNzVDBGQlR5eHJRa0ZCYTBJc1EwRkJRenRCUVVGQkxFbEJRemxGTEV0QlFVc3NVVUZCVVR0QlFVTlVMR0ZCUVU4c1ZVRkJWU3hOUVVGTkxFMUJRVTBzU1VGQlNTeEpRVUZKTEU5QlFVOHNWVUZCVlN4VlFVRlZMRU5CUVVNN1FVRkJRU3hKUVVOeVJTeExRVUZMTEZGQlFWRTdRVUZEVkN4aFFVRlBMRlZCUVZVc1QwRkJUeXhOUVVGTkxFbEJRVWtzU1VGQlNTeFBRVUZQTEU5QlFVOHNWMEZCVnl4UFFVRlBMRmRCUVZjc1EwRkJRenRCUVVGQkxFbEJRM1JHTEV0QlFVc3NVVUZCVVR0QlFVTlVMR0ZCUVU4c1ZVRkJWU3hUUVVGVExFMUJRVTBzU1VGQlNTeEpRVUZKTEV0QlFVczdRVUZCUVN4SlFVTnFSQ3hMUVVGTExGRkJRVkU3UVVGRFZDeGhRVUZQTEZWQlFWVXNUMEZCVHl4TlFVRk5MRWxCUVVrc1NVRkJTU3hQUVVGakxFdEJRVXNzVDBGQlR6dEJRVUZCTEVsQlJYQkZMRXRCUVVzc1VVRkJVVHRCUVVGQkxFbEJRMklzUzBGQlN5eFJRVUZSTzBGQlFVRXNTVUZEWWl4TFFVRkxMRkZCUVZFN1FVRkJRU3hKUVVOaUxFdEJRVXNzVVVGQlVUdEJRVUZCTEVsQlEySXNTMEZCU3l4UlFVRlJPMEZCUVVFc1NVRkRZaXhMUVVGTExGRkJRVkVzWlVGQlpTeFBRVUZQTzBGQlF5OUNMRmxCUVUwc1RVRkJUU3h6UTBGQmMwTXNTVUZCU1N4SFFVRkhPMEZCUVVFc1NVRkROMFFzUzBGQlN5eFJRVUZSTzBGQlFVRXNTVUZEWWp0QlFVTkpMR0ZCUVU4c1ZVRkJWU3hQUVVGUExFMUJRVTBzU1VGQlNTeEpRVUZKTEU5QlFXTXNTVUZCU1R0QlFVRkJMRVZCUTJoRk8wRkJRMG83UVVGRlFTeFRRVUZUTEUxQlFVMHNUVUZCWXl4UFFVRnRRaXhoUVVFclF6dEJRVU16Uml4TlFVRkpMSFZDUVVGMVFpeFZRVUZYTEZGQlFVODdRVUZGTjBNc1RVRkJTU3huUWtGQlowSXNWVUZCVlN4blFrRkJaMElzV1VGQldTeG5Ra0ZCWjBJc1QwRkJUenRCUVVNM1JTeFhRVUZQTEZWQlFWVXNVMEZCVXl4TlFVRk5MRWxCUVVrc1NVRkJTU3hMUVVGTE8wRkJRVUVzUlVGRGFrUTdRVUZGUVN4TlFVRkpMR2RDUVVGblFpeFJRVUZSTzBGQlEzaENMRmRCUVU4c1ZVRkJWU3hQUVVGUExFMUJRVTBzU1VGQlNTeEpRVUZKTEU5QlFVOHNSVUZCUlR0QlFVRkJMRVZCUTI1RU8wRkJSVUVzVFVGQlNTeG5Ra0ZCWjBJc1VVRkJVVHRCUVVONFFpeFhRVUZQTEZWQlFWVXNUMEZCVHl4TlFVRk5MRWxCUVVrc1NVRkJTU3hQUVVGUExFTkJRVU1zVDBGQlR5eFhRVUZYTEU5QlFVOHNWMEZCVnl4RFFVRkRPMEZCUVVFc1JVRkRka1k3UVVGRlFTeE5RVUZKTEdkQ1FVRm5RaXhUUVVGVE8wRkJRM3BDTEZkQlFVOHNWVUZCVlN4UlFVRlJMRTFCUVUwc1NVRkJTU3hKUVVGSkxFOUJRVThzUzBGQlN6dEJRVUZCTEVWQlEzWkVPMEZCUlVFc1RVRkJTU3haUVVGWkxHRkJRV0U3UVVGRGVrSXNWMEZCVHl4bFFVRmxMRmxCUVZrc1VVRkJVU3hOUVVGTkxFdEJRVXM3UVVGQlFTeEZRVU42UkR0QlFVVkJMRTFCUVVrc1QwRkJUeXhuUWtGQlowSXNXVUZCV1R0QlFVTnVReXhYUVVGUExGbEJRVmtzVFVGQlRTeExRVUZMTzBGQlFVRXNSVUZEYkVNN1FVRkZRU3hSUVVGTkxFMUJRVTBzYVVOQlFXbERPMEZCUTJwRU8wRkJhMEpQTEZOQlFWTXNVMEZCYlVRc1ZVRkJiMElzUTBGQlF5eEhRVUZITzBGQlEzWkdMRk5CUVU4c1UwRkJWU3hMUVVGVkxFdEJRV2xETzBGQlEzaEVMRlZCUVUwc1NVRkJTU3hSUVVGUk8wRkJSV3hDTEZGQlFVa3NUMEZCVHl4TlFVRk5MRmxCUVZrc1EwRkJReXhGUVVGRkxGZEJRVmNzWVVGQllTeExRVUZMTEVOQlFVTXNSVUZCUlN4WFFVRlhMRk5CUVZNc1IwRkJSenRCUVVOdVJpeGpRVUZSTEZkQlFWY3NTVUZCU1N4WlFVRlpMRVZCUVVVc1QwRkJUeXhEUVVGRE8wRkJRVUVzU1VGRGFrUTdRVUZGUVN4VlFVRk5MRTlCUVU4c1NVRkJTVHRCUVVWcVFpeFZRVUZOTEZGQlFUUkRPMEZCUVVFc1RVRkRPVU1zVVVGQlVTeExRVUZMTEdOQlFXTXNRMEZCUXl4RFFVRkRMRVZCUVVVc1NVRkJTU3hEUVVGRExFTkJRVU1zVjBGQlZ5eEZRVUZGTEU5QlFVOHNTMEZCU3l4RFFVRkRMRTFCUVUwN1FVRkRha1VzWTBGQlRTeE5RVUZOTEZOQlFWTXNVMEZCVXp0QlFVTTVRaXhqUVVGTkxFOUJRVThzVFVGQlRTeExRVUZMTEU5QlFVOHNTVUZCU1R0QlFVTnVReXhsUVVGUExFTkJRVU1zUzBGQlN5eEpRVUZKTzBGQlFVRXNUVUZEY2tJc1EwRkJRenRCUVVGQkxFbEJRMHc3UVVGRlFTeFZRVUZOTEZWQlFWVTdRVUZCUVN4TlFVTmFMRkZCUVZFc1MwRkJTeXhYUVVGWExFTkJRVU1zUTBGQlF5eEZRVUZGTEVsQlFVa3NRMEZCUXl4RFFVRkRRU3hoUVVGWkxFVkJRVVVzVTBGQlV5eExRVUZMTEZGQlFWRXNSMEZCUjBNc1VVRkJUeXhEUVVGRExFMUJRVTA3UVVGRGJrWXNXVUZCU1N4TFFVRkxPMEZCUTB3c2VVSkJRV1VzU1VGQlNTeFhRVUZYTEUxQlFVMUVMRmxCUVZjc1YwRkJWeXhMUVVGTExFZEJRVWNzUTBGQlF5eEpRVUZKTzBGQlFVRXNXVUZEYmtVc1dVRkJXVHRCUVVGQkxGbEJRMW9zWTBGQll6dEJRVUZCTEZsQlEyUXNUMEZCVHp0QlFVRkJMRlZCUTFnc1EwRkJRenRCUVVGQkxGRkJRMHc3UVVGRFFTeGxRVUZQTEVOQlFVTkJMR0ZCUVZsRExFOUJRVTA3UVVGQlFTeE5RVU01UWl4RFFVRkRPMEZCUVVFc1NVRkRURHRCUVVWQkxGZEJRVThzUzBGQlN6dEJRVU5hTEZkQlFVOHNTMEZCU3p0QlFVVmFMR3RDUVVGakxFVkJRVVVzUjBGQlJ5eFRRVUZUTEZsQlFWa3NUMEZCVHl4VFFVRlRMRkZCUVZFc1IwRkJSeXhIUVVGSE8wRkJRVUVzUlVGRE1VVTdRVUZEU2p0QlFUUkRRU3hUUVVGVExGTkJRVk1zVDBGQlR6dEJRVU42UWl4TlFVRk5MRk5CUVZNc1QwRkJUenRCUVVOMFFpeExRVUZMTEZOQlFWTXNUMEZCVHp0QlFVTnlRaXhKUVVGSkxGTkJRVk1zVDBGQlR6dEJRVU53UWl4SlFVRkpMRk5CUVZNc1QwRkJUenM3TzBGRk4yVndRaXhQUVVGUFF5eFhRVUZWTzBGQlEycENMRTlCUVU4c1UwRkJVenRCUVVOb1FpeFBRVUZQTEZOQlFWTTdRVUZEYUVJc1QwRkJUME1zVlVGQlV6czdPMEZEUTJoQ0xFOUJRVThzVTBGQlV6dEJRVU5vUWl4UFFVRlBReXhYUVVGVk8wRkJRMnBDTEU5QlFVOURMR05CUVdFN1FVRlhjRUlzU1VGQlRTeHJRa0ZCYTBJN1FVRkZha0lzU1VGQlRTeFZRVUZWUXl4TlFVRkxPMEZCUnpWQ0xFbEJRVTBzVDBGQlR5eFBRVUZQTEhGQ1FVRnhRanRCUVVONlF5eEpRVUZOTEZsQlFWa3NUMEZCVHl3d1FrRkJNRUk3UVVGRGJrUXNTVUZCVFN4bFFVRmxMRTlCUVU4c2IwSkJRVzlDTzBGQlEyaEVMRWxCUVUwc2IwSkJRVzlDTEU5QlFVOHNlVUpCUVhsQ08wRkJRekZFTEVsQlFVMHNiMEpCUVc5Q0xFOUJRVThzZVVKQlFYbENPMEZCTlVJeFJEdEJRVzlEVHl4SlFVRk5MRlZCUVU0c1kwRkJjMEpETEZOQlFWRXNUMEZCVHp0QlFVRkJMRVZCYlVKNFF5eGpRVUZqTzBGQlExWXNWVUZCVFR0QlFXSldMRk5CUVVNc1RVRkxSenRCUVVGQkxFMUJRMEVzVFVGQlRTeERRVUZETzBGQlFVRXNUVUZEVUN4UlFVRlJMRzlDUVVGSkxFbEJRV2RDTzBGQlFVRXNTVUZEYUVNN1FVRk5TU3hWUVVGTkxGVkJRVlVzUzBGQlN6dEJRVU55UWl4UlFVRkpMRU5CUVVNc1VVRkJVU3hKUVVGSkxFVkJRVWNzVDBGQlRTeE5RVUZOTEhkQ1FVRjNRanRCUVVONFJDeFRRVUZMTEZGQlFWRXNVVUZCVVN4SlFVRkpPMEZCUVVFc1JVRkROMEk3UVVGQlFTeEZRWEpDUVN4UFFVRlBPMEZCUTBnc1NVRkJRVUVzVTBGQlVTeGpRVUZqTEVsQlFVazdRVUZCUVN4RlFVTTVRanRCUVVGQkxFVkJXVUU3UVVGQlFTeEZRVk5CTEU5QlFVOHNZMEZCYVVVN1FVRkRjRVVzVlVGQlRTeFBRVUZQTEV0QlFVc3NUVUZCVFN4blFrRkJaMElzV1VGQldUdEJRVVZ3UkN4UlFVRkpMRkZCUVZFc1MwRkJTeXhUUVVGVExFVkJRVVVzV1VGQldUdEJRVU53UXl4WFFVRkxMRk5CUVZNc1JVRkJSU3hYUVVGWE8wRkJRVUVzVVVGRGRrSTdRVUZCUVN4UlFVTkJMRWxCUVVsRUxFMUJRVXNzVVVGQlVTeExRVUZMTEZkQlFWY3NTMEZCU3l4WlFVRXdRaXhEUVVGRE8wRkJRVUVzVFVGRGNrVTdRVUZCUVN4SlFVTktPMEZCUlVFc1ZVRkJUU3hQUVVGUExFOUJRVThzVTBGQlV5eFpRVUZaTEVsQlFVa3NXVUZCV1R0QlFVRkJMRVZCUXpkRU8wRkJRVUVzUlVGRlFTeExRVUZMTEZOQlFXbENMRkZCUVhsQ08wRkJRek5ETEZWQlFVMUZMRlZCUVZNc1MwRkJTeXhOUVVGTkxHTkJRV01zU1VGQlNUdEJRVVUxUXl4UlFVRkpRU3hYUVVGVkxFdEJRVXNzVTBGQlV5eEZRVUZGTEZsQlFWazdRVUZEZEVNc1dVRkJUU3haUVVGWkxFbEJRVWxCTEZGQlFVOHNTMEZCU3l4SlFVRkpMRU5CUVVNc1RVRkJUU3hGUVVGRkxGTkJRVk1zUlVGQlJTeExRVUZMTEVWQlFVVXNRMEZCUXp0QlFVTnNSU3hYUVVGTExGTkJRVk1zUlVGQlJTeFhRVUZYTEZsQlFWa3NUVUZCVFN4SlFVRkpSaXhOUVVGTExGRkJRVkVzVjBGQlZ5eE5RVUZOTEVOQlFVTTdRVUZCUVN4SlFVTndSanRCUVVWQkxGZEJRVThzVFVGQlRTeExRVUZMUlN4VlFVRlRMRk5CUVZNc1NVRkJTU3hKUVVGSkxFMUJRVTBzUjBGQlJ5eE5RVUZOTzBGQlFVRXNSVUZETDBRN1FVRkJRVHRCUVVGQkxFVkJSMEVzYlVKQlFXMUNMRWRCUVRKQ0xHTkJRVEpETzBGQlEzSkdMRlZCUVUwc1QwRkJUeXhMUVVGTExFMUJRVTBzWjBKQlFXZENMRmxCUVZrN1FVRkZjRVFzVVVGQlNTeERRVUZETEUxQlFVMDdRVUZEVUN4WlFVRk5MRTFCUVUwc1IwRkJSeXhMUVVGTExGbEJRVmtzU1VGQlNTd3JRa0ZCSzBJc1dVRkJXU3hIUVVGSE8wRkJRVUVzU1VGRGRFWTdRVUZGUVN4VlFVRk5MRkZCUVZFc1MwRkJTeXhaUVVGWk8wRkJReTlDTEZGQlFVa3NUMEZCVHl4VlFVRlZMR0ZCUVdFN1FVRkRPVUlzWVVGQlR5eEpRVUZKUml4TlFVRkxMRkZCUVZFc1MwRkJTeXhYUVVGWExFdEJRVXM3UVVGQlFTeEpRVU5xUkN4UFFVRlBPMEZCUTBnc1lVRkJUenRCUVVGQkxFbEJRMWc3UVVGQlFTeEZRVU5LTzBGQlFVRTdRVUZCUVN4RlFVZEJMRzFDUVVOSkxFZEJRMEVzWTBGRFFTeFBRVU5HTzBGQlEwVXNWVUZCVFN4WFFVRlhMRTFCUVUwc1YwRkJWenRCUVVOc1F5eFZRVUZOTEU5QlFVOHNTMEZCU3l4TlFVRk5MR2RDUVVGblFpeFpRVUZaTzBGQlJYQkVMRkZCUVVrc1EwRkJReXhOUVVGTk8wRkJRMUFzV1VGQlRTeE5RVUZOTEVkQlFVY3NTMEZCU3l4WlFVRlpMRWxCUVVrc2MwSkJRWE5DTEZsQlFWa3NSMEZCUnp0QlFVRkJMRWxCUXpkRk8wRkJSVUVzVVVGQlNTeExRVUZMTEZsQlFWa3NUVUZCVFN4VlFVRlZPMEZCUTJwRExGZEJRVXNzV1VGQldTeEpRVUZKTEUxQlFVMHNWMEZCWjBJN1FVRkJRU3hKUVVNdlF6dEJRVUZCTEVWQlEwbzdRVUZCUVR0QlFVRkJMRVZCUjBFc1lVRkJZU3hQUVVGblFpeFpRVUZ6UXp0QlFVTXZSQ3haUVVGUkxFMUJRVTBzUzBGQlN6dEJRVU51UWl4UlFVRkpMR2xDUVVGcFFrRXNUVUZCU3l4UFFVRlBPMEZCUXpkQ0xHRkJRVThzVjBGQlZ5eGpRVUZqTEV0QlFVczdRVUZCUVN4SlFVTjZRenRCUVVOQkxGRkJRVWtzYVVKQlFXbENMRTlCUVU4N1FVRkRlRUlzWVVGQlR5eFhRVUZYTzBGQlFVRXNVVUZEWkN4TlFVRk5MRXRCUVVzc1UwRkJVeXhIUVVGSExFbEJRVWtzVFVGQlRTeFBRVUZQTEdWQlFXVXNUVUZCVFN4SlFVRkpPMEZCUVVFc1VVRkRha1VzVFVGQlRUdEJRVUZCTEUxQlExWTdRVUZCUVN4SlFVTktPMEZCUTBFc1pVRkJWeXhyUWtGQmEwSXNaME5CUVdkRExFZEJRVWNzUzBGQlN5eEZRVUZGTzBGQlFVRXNSVUZETTBVN1FVRkJRVHRCUVVGQkxFVkJSMEVzWVVGQllTeFBRVUZuUWl4WlFVRnZRaXhaUVVGelF6dEJRVU51Uml4UlFVRkpMRlZCUVZVc1VVRkJVU3hWUVVGVkxGRkJRVmM3UVVGRGRrTXNZVUZCVHl4WFFVRlhMR0ZCUVdFc1NVRkJTVUVzVFVGQlN5eFJRVUZSTEUxQlFVMHNRMEZCUXl4RFFVRkRMRU5CUVVNN1FVRkJRU3hKUVVNM1JEdEJRVVZCTEZWQlFVMHNUMEZCVHl4TFFVRkxMRTFCUVUwc1kwRkJZeXhWUVVGVkxFZEJRVWNzV1VGQldTeERRVUZETzBGQlEyaEZMRlZCUVUwc1dVRkJXU3hKUVVGSkxFdEJRVXNzU1VGQlNTeERRVUZETEZGQlFWRXNTVUZCU1N4VFFVRlRMRVZCUVVVc1MwRkJTeXhGUVVGRkxFTkJRVU03UVVGREwwUXNVVUZCU1N4RFFVRkRMRTFCUVUwc1VVRkJVU3hMUVVGTExFVkJRVWNzVDBGQlRTeE5RVUZOTEhsQ1FVRjVRanRCUVVOb1JTeGxRVUZYTEdGQlFXRXNTVUZCU1VFc1RVRkJTeXhSUVVGUkxGZEJRVmNzUzBGQlN5eERRVUZETzBGQlFVRXNSVUZET1VRN1FVRkJRVHRCUVVGQkxFVkJSMEVzYTBKQlEwa3NSMEZEUVN4WlFVTkJMRmxCUTBFc1dVRkRTVHRCUVVOS0xGRkJRVWs3UVVGRFFTeFpRVUZOTEZGQlFWTXNTMEZCU3l4VlFVRlZPMEZCUVVFc1VVRkRNVUlzUjBGQlJ5eFhRVUZYTEZkQlFUSkNPMEZCUVVFc1RVRkROME03UVVGRlFTeFZRVUZKTEdsQ1FVRnBRa0VzVFVGQlN5eFRRVUZUTzBGQlF5OUNMRzFDUVVGWExHRkJRV0VzUzBGQlN6dEJRVUZCTEUxQlEycERMRmRCUVZjc2FVSkJRV2xDTEZOQlFWTTdRVUZEYWtNc1kwRkRTeXhMUVVGTExFTkJRVU5ITEZkQlFWVXNTMEZCU3l4aFFVRmhRU3hSUVVGUExGbEJRVmtzVlVGQlZTeERRVUZETEVWQlEyaEZMRTFCUVUwc1EwRkJReXhWUVVGVkxFdEJRVXNzWVVGQllTeFBRVUZQTEZWQlFWVXNRMEZCUXp0QlFVRkJMRTFCUXpsRUxFOUJRVTg3UVVGRFNDeGhRVUZMTEdGQlFXRXNUMEZCVHl4WlFVRlpMRlZCUVZVN1FVRkJRU3hOUVVOdVJEdEJRVUZCTEVsQlEwb3NVMEZCVXl4UFFVRlBPMEZCUTFvc1YwRkJTeXhoUVVGaExFOUJRVThzVlVGQlZUdEJRVUZCTEVsQlEzWkRPMEZCUVVFc1JVRkRTanRCUVVGQk8wRkJRVUVzUlVGSFFTeE5RVUZOTEUxQlFVMDdRVUZCUVN4SlFVTlNMRlZCUVZVc1NVRkJTU3hSUVVGUk8wRkJRVUVzU1VGRGRFSXNUMEZCVHl4TFFVRkxMRTFCUVUwN1FVRkJRU3hKUVVOc1FpeGhRVUZoTEUxQlFVMHNTMEZCU3l4TlFVRk5MRXRCUVVzc1RVRkJUU3hIUVVGSExFVkJRVVVzUzBGQlN5eEhRVUZITzBGQlFVRXNTVUZEZEVRc1VVRkJVU3hKUVVGSkxHdENRVUZyUWp0QlFVRkJMRWxCUXpsQ0xGTkJRVUZETEZkQlFWVTdRVUZCUVN4RlFVTmtMRWxCVFVrc1EwRkJReXhIUVVGclFqdEJRVU51UWl4VlFVRk5MRTlCUVU4c1NVRkJTU3hKUVVGSk8wRkJRVUU3UVVGQlFTeE5RVVZxUWl4RlFVRkZMR3RDUVVGclFpeExRVUZMTEUxQlFVMDdRVUZCUVN4SlFVTnVRenRCUVVWQkxGTkJRVXNzVVVGQlVTeHpRa0ZCYzBJc1MwRkJTeXhyUWtGQmEwSXNTMEZCU3l4SlFVRkpMRU5CUVVNN1FVRkRjRVVzVTBGQlN5eFJRVUZSTEhWQ1FVRjFRaXhMUVVGTExHMUNRVUZ0UWl4TFFVRkxMRWxCUVVrc1EwRkJRenRCUVVOMFJTeFRRVUZMTEZGQlFWRXNkVUpCUVhWQ0xFdEJRVXNzYlVKQlFXMUNMRXRCUVVzc1NVRkJTU3hEUVVGRE8wRkJSWFJGTEZOQlFVc3NUVUZCVFN4WlFVRlpPMEZCUlhaQ0xGZEJRVThzU1VGQlNTeFJRVUZSTEVOQlFVTXNVMEZCVXl4WFFVRlhPMEZCUTNCRExGVkJRVWtzVTBGRFFVRXNWMEZCVlN4SlFVTktMRmRCUVZjc1RVRkJUVHRCUVVOaUxHVkJRVThzVFVGQlRTeHBRa0ZCYVVJc1EwRkJRenRCUVVNdlFpeHBRa0ZCVXp0QlFVRkJMRTFCUTJJc1IwRkJSMEVzVVVGQlR5eEpRVU5XTzBGQlJWWXNXVUZCVFN4UlFVRlJMRTFCUVUwN1FVRkRhRUlzV1VGQlNTeFJRVUZSTzBGQlExSXNkVUpCUVdFc1RVRkJUVHRCUVVOdVFpeHRRa0ZCVXp0QlFVRkJMRkZCUTJJN1FVRkJRU3hOUVVOS08wRkJSVUVzV1VGQlRTeFJRVUZSTEVsQlFVazdRVUZCUVN4UlFVTmtPMEZCUVVFc1VVRkRRVHRCUVVGQkxGRkJRMEU3UVVGQlFTeFJRVU5CTEVOQlFVTXNVMEZCTmtJN1FVRkRNVUlzWTBGQlNUdEJRVU5CTEdsQ1FVRkxMRTlCUVU4c1RVRkJUU3hWUVVGVk8wRkJRelZDTEdsQ1FVRkxMRk5CUVZNc1JVRkJSU3hoUVVGaE8wRkJRemRDTEdsQ1FVRkxMRk5CUVZNc1JVRkJSU3hQUVVGUExFbEJRVWtzVFVGQlRUdEJRVU0zUWl4clFrRkJTU3hsUVVGbExFdEJRVXM3UVVGRGVFSXNiVUpCUVVzc1UwRkJVenRCUVVOa0xHMUNRVUZMTEUxQlFVMHNZMEZCWXp0QlFVTjZRaXh4UWtGQlR5eExRVUZMTEZOQlFWTXNSVUZCUlR0QlFVRkJMRmxCUXpOQ0xFTkJRVU03UVVGRlJDeHZRa0ZCVVN4SlFVRkpPMEZCUVVFc1ZVRkRhRUlzVTBGQlV5eFBRVUZQTzBGQlExb3NiVUpCUVU4c1MwRkJTenRCUVVGQkxGVkJRMmhDTzBGQlFVRXNVVUZEU2p0QlFVRkJMRkZCUTBFN1FVRkJRU3hSUVVOQk8wRkJRVUVzVFVGRFNqdEJRVUZCTEVsQlEwb3NRMEZCUXp0QlFVRkJMRVZCUTB3N1FVRkJRVHRCUVVGQkxFVkJSMEVzZVVKQlEwa3NSMEZEUVN4VFFVTkJMR0ZCUTBZN1FVRkRSU3hWUVVGTlF5eFBRVUZOTEc5Q1FVRkpMRWxCUVVrc1EwRkJReXhIUVVGSExFOUJRVThzUzBGQlN5eFJRVUZSTEZkQlFWY3NRMEZCUXl4SFFVRkhMRWRCUVVjc1YwRkJWeXhEUVVGRE8wRkJRekZGTEdWQlFWY3NVVUZCVVVFc1MwRkJTU3hQUVVGUExFZEJRVWM3UVVGRE4wSXNWMEZCU3l4UFFVRlBMRWxCUVcxRE8wRkJRVUVzU1VGRGJrUTdRVUZCUVN4RlFVTktPMEZCUVVFN1FVRkJRU3hGUVVkQkxHTkJRMGtzUjBGRFFTeFRRVU5CU0N4VFFVTkJMRmxCUTBZN1FVRkRSU3hUUVVGTExFdEJRVXNzVTBGQlUwRXNUMEZCVFN4SFFVRkhMRWRCUVVjc1YwRkJWeXhYUVVFeVFpeERRVUZETzBGQlFVRXNSVUZETVVVN1FVRkJRVHRCUVVGQkxFVkJSMEVzYjBKQlEwa3NXVUZEUVN4TlFVTnpRenRCUVVOMFF5eFZRVUZOTEVWQlFVVXNUVUZCVFN4SlFVRkpMRXRCUVVzc1UwRkJVenRCUVVOb1F5eFJRVUZKTEVOQlFVTXNUVUZCVHl4UFFVRk5MRTFCUVUwc09FTkJRVGhETzBGQlJYUkZMRlZCUVUwc1UwRkJVeXhMUVVGTExFMUJRVTBzWTBGQll5eFZRVUZWTzBGQlEyeEVMRkZCUVVrc1EwRkJReXhQUVVGUkxFOUJRVTBzVFVGQlRTeHJRa0ZCYTBJN1FVRkZNME1zVlVGQlRTeFpRVUZaTEVsQlFVa3NUMEZCVHl4UlFVRlJMRWxCUVVrc1EwRkJReXhOUVVGTkxFVkJRVVVzVTBGQlV5eEZRVUZGTEV0QlFVc3NSVUZCUlN4RFFVRkRPMEZCUlhKRkxGZEJRVTg3UVVGQlFTeE5RVU5JTzBGQlFVRXNUVUZEUVN4SlFVRkpSaXhOUVVGTExGRkJRVkVzVjBGQlZ5eEpRVUZKTzBGQlFVRXNUVUZEYUVNc1NVRkJTU3hqUVVGak8wRkJRVUVzVFVGRGJFSTdRVUZCUVN4TlFVTkJPMEZCUVVFc1NVRkRTanRCUVVGQkxFVkJRMG83UVVGQlFUdEJRVUZCTEVWQlIwRXNSVUY0VUZFc1RVRk5VQ3huUWtGclVFRXNZVUZCV1N4RlFVRkZMRmxCUVc5Q0xFMUJRU3RDTzBGQlF6bEVMRlZCUVUwc1UwRkJVeXhMUVVGTExHOUNRVUZ2UWl4WlFVRlpMRWxCUVVrN1FVRkRlRVFzVjBGQlR5eExRVUZMTEZOQlFWTXNSVUZCUlN4TlFVRlBMRlZCUVZVc1IwRkJSeXhOUVVGTk8wRkJRVUVzUlVGRGNrUTdRVUZCUVR0QlFVRkJMRVZCUjBFc1EwRkJReXhwUWtGQmFVSXNSVUZCUlN4WlFVRnZRaXhOUVVGM1F6dEJRVU0xUlN4WFFVRlBMRWxCUVVrc1VVRkJVU3hEUVVGRExGTkJRVk1zVjBGQlZ6dEJRVU53UXl4VlFVRkpPMEZCUTBFc1kwRkJUU3hUUVVGVExFdEJRVXNzYjBKQlFXOUNMRmxCUVZrc1NVRkJTVHRCUVVONFJDeGhRVUZMTEZOQlFWTXNSVUZCUlN4TlFVRlBMRXRCUVVzc1IwRkJSeXhSUVVGUkxFTkJRVU1zUjBGQlJ5eFJRVUZSTzBGQlF5OURMR05CUVVrN1FVRkRRU3h2UWtGQlVTeExRVUZMTEZOQlFWTXNSVUZCUlN4TlFVRlBMRmxCUVZrc1IwRkJSeXhEUVVGRE8wRkJRVUVzVlVGRGJrUXNVMEZCVXl4UFFVRlBPMEZCUTFvc2JVSkJRVThzUzBGQlN6dEJRVUZCTEZWQlEyaENPMEZCUVVFc1VVRkRTaXhEUVVGRE8wRkJRVUVzVFVGRFRDeFRRVUZUTEU5QlFVODdRVUZEV2l4bFFVRlBMRXRCUVVzN1FVRkJRU3hOUVVOb1FqdEJRVUZCTEVsQlEwb3NRMEZCUXp0QlFVRkJMRVZCUTB3N1FVRkJRVHRCUVVGQkxFVkJSMEVzUTBGQlF5eHBRa0ZCYVVJc1JVRkJSU3hOUVVGakxFOUJRV2RDTzBGQlF6bERMRlZCUVUwc1VVRkJVU3hMUVVGTExGTkJRVk1zUlVGQlJUdEJRVU01UWl4VlFVRk5MRTlCUVU4c1MwRkJTeXhOUVVGTkxHZENRVUZuUWl4SlFVRkpPMEZCUlRWRExGVkJRVTBzVlVGQlZTeEpRVUZKUVN4TlFVRkxMRkZCUVZFc1MwRkJTeXhYUVVGWExFdEJRVXM3UVVGRGRFUXNWVUZCVFN4dlFrRkJiMElzVFVGQlRTeFBRVUZQTzBGQlJYWkRMRlZCUVUwN1FVRkJRU3hOUVVOR08wRkJRVUVzVFVGRFFTeEpRVUZKUVN4TlFVRkxMRkZCUVZFc1UwRkJVeXhEUVVGRExFMUJRVTBzWjBKQlFXZENMRTFCUVUwc1QwRkJUeXhEUVVGRE8wRkJRVUVzVFVGREwwUXNTVUZCU1N4alFVRmpPMEZCUVVFc1RVRkRiRUk3UVVGQlFTeE5RVU5CTzBGQlFVRXNUVUZEUVN4RFFVRkRMRWRCUVVjc1VVRkJVVHRCUVVOU0xGbEJRVWs3UVVGRFFTeG5Ra0ZCVFN4WlFVRlpMRWRCUVVjN1FVRkJRU3hSUVVONlFpeFRRVUZUTEVkQlFVYzdRVUZEVWl4clFrRkJVU3hOUVVGTkxFTkJRVU03UVVGQlFTeFJRVU51UWp0QlFVRkJMRTFCUTBvN1FVRkJRU3hKUVVOS08wRkJRVUVzUlVGRFNqdEJRVUZCTzBGQlFVRXNSVUZIUVN4TlFVRk5MRTFCUVUwN1FVRkJRU3hKUVVOU0xFMUJRVTBzU1VGQlNTeExRVUZMTzBGQlFVRXNTVUZEWml4UFFVRlBMRXRCUVVzc1RVRkJUVHRCUVVGQkxFbEJRMnhDTEdGQlFXRXNUVUZCVFN4TFFVRkxMRTFCUVUwc1MwRkJTeXhOUVVGTkxFZEJRVWNzUlVGQlJTeExRVUZMTEVkQlFVYzdRVUZCUVN4SlFVTjBSQ3hSUVVGUkxFbEJRVWtzWlVGQlpUdEJRVUZCTEVsQlF6TkNMRk5CUVVGSkxGZEJRVlU3UVVGQlFTeEZRVU5rTEVsQlRVa3NRMEZCUXl4SFFVRnJRanRCUVVOdVFpeFZRVUZOTEZGQlFWRXNTVUZCU1N4SlFVRkpMRlZCUVZVN1FVRkJRU3hOUVVNMVFpeGhRVUZoTzBGQlFVRXNUVUZEWWl4blFrRkJaMElzUzBGQlN5eE5RVUZOTzBGQlFVRXNUVUZETTBJc1owSkJRV2RDTEV0QlFVczdRVUZCUVN4TlFVTnlRaXhQUVVGUE8wRkJRVUVzVFVGRFVDeFJRVUZSTzBGQlFVRXNUVUZEVWl4aFFVRmhPMEZCUVVFc1NVRkRha0lzUTBGQlF6dEJRVVZFTEZkQlFVOHNTVUZCU1N4UlFVRlJMRU5CUVVNc1UwRkJVeXhYUVVGWE8wRkJRM0JETEZsQlFVMHNZMEZCWXl4SlFVRkpMRWxCUVVrc1dVRkJXVHRCUVVWNFF5eFZRVUZKTEZOQlEwRkJMRmRCUVZVc1NVRkRTaXhYUVVGWExFMUJRVTA3UVVGRFlpeGxRVUZQTEUxQlFVMHNhVUpCUVdsQ0xFTkJRVU03UVVGREwwSXNhVUpCUVZNN1FVRkRWQ3h2UWtGQldTeFBRVUZQTzBGQlFVRXNUVUZEZGtJc1IwRkJSMEVzVVVGQlR5eEpRVU5XTzBGQlJWWXNXVUZCVFN4WFFVRlhTaXhOUVVGTExHdENRVUZyUWl4aFFVRmhMRU5CUVVNc1IwRkJSeXhSUVVGUk8wRkJRemRFTEZsQlFVazdRVUZEUVN4alFVRkpMRkZCUVZFN1FVRkRVaXg1UWtGQllTeE5RVUZOTzBGQlEyNUNMSEZDUVVGVE8wRkJRVUVzVlVGRFlqdEJRVVZCTEdkQ1FVRk5MRmxCUVZrc1IwRkJSenRCUVVOeVFpeGxRVUZMTEZOQlFWTXNSVUZCUlN4UlFVRlJPMEZCUlhoQ0xHZENRVUZOTEUxQlFVMDdRVUZCUVN4WlFVTlNMRTFCUVUwc1VVRkJVU3haUVVGWkxFdEJRVXNzWTBGQll5eExRVUZMTEVsQlFVa3NRMEZCUXp0QlFVRkJMRmxCUTNaRUxFMUJRVTA3UVVGQlFTeGpRVU5HTzBGQlFVRXNZMEZEUVN4TFFVRkxMSGxDUVVGNVFpeExRVUZMTEVsQlFVazdRVUZCUVN4WlFVTXpRenRCUVVGQkxGVkJRMG83UVVGRlFTeGxRVUZMTEZOQlFWTXNSVUZCUlN4UFFVRlBMRWxCUVVrc1RVRkJUVHRCUVVNM1FpeG5Ra0ZCU1N4UlFVRlJMRU5CUVVNc1QwRkJUeXhOUVVGTkxGZEJRVmNzUlVGQlJTeERRVUZETzBGQlEzaERMRzFDUVVGUExFdEJRVXNzVTBGQlV5eEZRVUZGTzBGQlFVRXNWVUZETTBJc1EwRkJRenRCUVVWRUxHdENRVUZSTEVsQlFVazdRVUZCUVN4UlFVTm9RaXhUUVVGVExFOUJRVTg3UVVGRFdpeHBRa0ZCVHl4TFFVRkxPMEZCUVVFc1VVRkRhRUk3UVVGQlFTeE5RVU5LTEVOQlFVTTdRVUZCUVN4SlFVTk1MRU5CUVVNN1FVRkJRU3hGUVVOTU8wRkJRVUVzUlVGRlFTeFBRVUZQTzBGQlEwZ3NWVUZCVFN4RlFVRkZMRTlCUVU4c1NVRkJTU3hMUVVGTExGTkJRVk03UVVGRGFrTXNaVUZCVnl4TlFVRk5MRTlCUVU4c1QwRkJUeXhIUVVGSE8wRkJRemxDTEdGQlFVOHNUMEZCVHl4RlFVRkZPMEZCUTJoQ0xGTkJRVWM3UVVGQlFTeEpRVU5RTzBGQlFVRXNSVUZEU2p0QlFVTktPMEZCYlVOUExGTkJRVk1zVFVGQlRTeE5RVUZqTEZOQlFUQkRPMEZCUXpGRkxGTkJRVThzVTBGQlZTeExRVUYzUXl4TFFVRTBRanRCUVVOcVJpeFZRVUZOTEU5QlFVOHNTVUZCU1R0QlFVTnFRaXhSUVVGSkxFTkJRVU1zUzBGQlRTeFBRVUZOTEUxQlFVMHNSMEZCUnl4SlFVRkpMRWxCUVVrc2MwSkJRWE5DTzBGQlJYaEVMRlZCUVUwc1JVRkJSU3hqUVVGakxFTkJRVU1zUjBGQlJ5eGpRVUZqTEVOQlFVTXNSMEZCUnl4cFFrRkJhVUlzUTBGQlF5eEZRVUZGTEVsQlFVazdRVUZGY0VVc1ZVRkJUU3hWUVVGVkxFbEJRVWs3UVVGQlFTeE5RVU5vUWl4TlFVRk5PMEZCUVVFc1RVRkRUaXhWUVVGVk8wRkJRVUVzVVVGRFRqdEJRVUZCTEZWQlEwa3NUVUZCVFR0QlFVRkJMRlZCUTA0c1dVRkJXU3hGUVVGRkxFdEJRVXM3UVVGQlFTeFZRVU51UWl4VlFVRlZPMEZCUVVFc1dVRkRUaXhIUVVGSExFOUJRVThzVVVGQlVTeFhRVUZYTEVWQlFVVXNTVUZCU1N4RFFVRkRMRU5CUVVOTkxFOUJRVTBzU1VGQlNTeFBRVUZQTzBGQlFVRXNZMEZEYkVRc1RVRkJUVHRCUVVGQkxHTkJRMDRzV1VGQldTeEZRVUZGTEUxQlFVRkJMRTFCUVVzN1FVRkJRU3hqUVVOdVFpeFZRVUZWTEV0QlFVc3NTVUZCU1N4RFFVRkRMRk5CUVZNc1JVRkJSU3hOUVVGTkxFOUJRVThzV1VGQldTeEpRVUZKTEVWQlFVVTdRVUZCUVN4WlFVTnNSU3hGUVVGRk8wRkJRVUVzV1VGRFJpeEhRVUZITEU5QlFVOHNVVUZCVVN4WFFVRlhMRVZCUVVVc1NVRkJTU3hEUVVGRExFTkJRVU5CTEU5QlFVMHNTVUZCU1N4UFFVRlBPMEZCUVVFc1kwRkRiRVFzVFVGQlRUdEJRVUZCTEdOQlEwNHNXVUZCV1N4RlFVRkZMRTFCUVVGQkxFMUJRVXM3UVVGQlFTeGpRVU51UWl4VlFVRlZMRXRCUVVzc1NVRkJTU3hEUVVGRExGTkJRVk1zUlVGQlJTeE5RVUZOTEU5QlFVOHNXVUZCV1N4SlFVRkpMRVZCUVVVN1FVRkJRU3haUVVOc1JTeEZRVUZGTzBGQlFVRXNXVUZEUml4SFFVRkhMRTlCUVU4c1QwRkJUeXhqUVVGakxFVkJRVVVzU1VGQlNTeERRVUZETEVWQlFVVXNUVUZCUVVFc1QwRkJUU3hOUVVGTkxFMUJRVTBzVFVGQlRTeFBRVUZQTzBGQlFVRXNZMEZEYmtVc1RVRkJUVHRCUVVGQkxHTkJRMDRzV1VGQldUdEJRVUZCTEdkQ1FVTlNMRWRCUVVsQkxGTkJRVkVzUlVGQlJTeE5RVUZCUVN4TlFVRkxPMEZCUVVFc1owSkJRMjVDTzBGQlFVRXNaMEpCUTBFc1UwRkJVeXhQUVVGUExGTkJRVk1zVDBGQlR5eFJRVUZSTEZWQlFWVTdRVUZCUVN4alFVTjBSRHRCUVVGQkxGbEJRMG9zUlVGQlJUdEJRVUZCTEZWQlEwNDdRVUZCUVN4UlFVTktPMEZCUVVFc1RVRkRTanRCUVVGQkxFbEJRMG9zUTBGQlF6dEJRVVZFTEZkQlFVOHNUMEZCVHl4TFFVRkxMRVZCUVVVc1EwRkJReXhKUVVGSkxFZEJRVWNzU1VGQlNTeHJRa0ZCYTBJc1dVRkJXU3hQUVVGUExFVkJRVVVzUTBGQlF6dEJRVU42UlN4aFFVRlRMRTlCUVU4c1JVRkJSU3hMUVVGTExFZEJRVWM3UVVGQlFTeEZRVU01UWp0QlFVTktPMEZCWTBFc1UwRkJVeXhqUVVOTUxFMUJRMEVzVVVGRFFTeExRVU5HTzBGQlEwVXNVVUZCVFN4UFFVRlBMRWxCUVVrN1FVRkRha0lzVVVGQlRTeFBRVUZQTEVsQlFVazdRVUZEYWtJc1VVRkJUU3hWUVVGWExFdEJRVXNzWjBKQlFXZENMRU5CUVVNN1FVRkZka01zVFVGQlNTeFBRVUZQTEZOQlFWTXNWVUZCVlR0QlFVTXhRaXhWUVVGTkxFMUJRVTBzZFVOQlFYVkRPMEZCUVVFc1JVRkRka1E3UVVGRlFTeFJRVUZOTEVOQlFVTXNVVUZCVVN4VlFVRlZMRU5CUVVNc1EwRkJReXhKUVVGTExFMUJRVTBzVVVGQlVTeExRVUZMTEVOQlFVTXNRMEZCUXl4SlFVRkpMRTlCUVU4c1EwRkJReXhKUVVGSk8wRkJSWEpGTEZWQlFWRXNTVUZCU1N4SlFVRkpPMEZCUVVFc1NVRkRXaXhIUVVGSExFOUJRVThzU1VGQlNTeERRVUZETEZOQlFWTTdRVUZCUVN4TlFVTndRaXhYUVVGWE8wRkJRVUVzVFVGRFdDeEhRVUZKTEU5QlFVOHNVVUZCVVN4WFFVRlhMRVZCUVVVc1RVRkJUU3hKUVVGSkxFbEJRVWs3UVVGQlFTeEpRVU5zUkN4RlFVRkZPMEZCUVVFc1NVRkRSaXhIUVVGSExGRkJRVkVzU1VGQlNTeERRVUZETEZOQlFWTTdRVUZCUVN4TlFVTnlRaXhYUVVGWE8wRkJRVUVzVFVGRFdDeEhRVUZKTEU5QlFVOHNVVUZCVVN4WFFVRlhMRVZCUVVVc1RVRkJUU3hKUVVGSkxFbEJRVWs3UVVGQlFTeEpRVU5zUkN4RlFVRkZPMEZCUVVFc1JVRkRUanRCUVVWQkxGTkJRVTg3UVVGRFdEdEJRVEpMVHl4VFFVRlRMR1ZCUjFnc1RVRkJiMFE3UVVGRGNrUXNVMEZCVHl4VFFVTklMRkZCU1VFc1MwRkRiVVU3UVVGRGJrVXNWVUZCVFN4UFFVRlBMR05CUVdNc1RVRkJUU3hSUVVGUkxFZEJRVWM3UVVGRk5VTXNWMEZCVHl4clFrRkJiVUpETEU5QlFVMDdRVUZETlVJc1ZVRkJTU3hMUVVGTExGTkJRVk1zUlVGQlJTeFBRVUZQTzBGQlEzWkNMR05CUVUwc1VVRkJVU3hOUVVGTkxFdEJRVXNzYVVKQlFXbENMRVZCUVVVc1RVRkJUVUVzUzBGQlNUdEJRVU4wUkN4bFFVRlBMRTFCUVUwc1YwRkJkVU03UVVGQlFTeE5RVU40UkN4UFFVRlBPMEZCUTBnc1pVRkJUeXhQUVVGUExFMUJRVTBzVFVGQlRVRXNTMEZCU1R0QlFVRkJMRTFCUTJ4RE8wRkJRVUVzU1VGRFNqdEJRVUZCTEVWQlEwbzdRVUZEU2pzN08wRkRNWE5DUVN4blJVRkJRVU1zUzBGQlFUdEJRVk5CTEhWQ1FVRkRMRTFCUVUwc2MwSkJRWE5DTzBGQlEzUkNMRWxCUVUwc1YwRkJUaXhOUVVGTkxHdENRVUZuUWtFc1RVRkJRU3hUUVVkNlFpeHJRa0ZCUXl4WlFVRlpMRWxCUzJJc2NVSkJRVU1zV1VGQldTeEhRVUZITEVsQlMyaENMR0ZCUVVNc1dVRkJXU3hKUVV0aUxHZENRVUZETEZsQlFWa3NRMEZCUXl4SlFVRkpMRWRCUVVjc1EwRkJReXhIUVVGSExFTkJRVU1zU1VGc1FrUkJMRXRCUVZFN1FVRkJRU3hGUVhWQ2FrTXNXVUZCV1N4TlFVRnRRanRCUVVNelFpeFZRVUZOTzBGQmVFSlFPMEZCUTBnc1UwRkJVU3hQUVVGU08wRkJkMEpKTEZOQlFVc3NUMEZCVHp0QlFVRkJMRVZCUTJoQ08wRkJRVUVzUlVGMFFrRXNUVUZCVFN4WlFVRXlRanRCUVVNM1FpeFhRVUZQTEZGQlFWRXNVVUZCVVN4TFFVRkxMRXRCUVVzc1UwRkJVeXhEUVVGRE8wRkJRVUVzUlVGREwwTTdRVUZCUVN4RlFVZEJMRTFCUVUwc1lVRkJZU3hOUVVFMlFqdEJRVU0xUXl4WFFVRlBMRkZCUVZFc1VVRkJVU3hMUVVGTExFdEJRVXNzWVVGQllTeEpRVUZKTEVOQlFVTTdRVUZCUVN4RlFVTjJSRHRCUVVGQkxFVkJSMEVzVFVGQlRTeFBRVUZ6UWp0QlFVTjRRaXhYUVVGUExGRkJRVkVzVVVGQlVTeExRVUZMTEV0QlFVc3NTMEZCU3l4RFFVRkRPMEZCUVVFc1JVRkRNME03UVVGQlFTeEZRVWRCTEUxQlFVMHNVVUZCVVN4TlFVRnRRenRCUVVNM1F5eFhRVUZQTEV0QlFVc3NTMEZCU3l4UlFVRlJMRWxCUVVrc1JVRkJSU3hMUVVGTExFTkJRVU1zVVVGQlVTeERRVUZETEVkQlFVY3NRMEZCUXp0QlFVRkJMRVZCUTNSRU8wRkJRVUVzUlVGUFFTeFBRVUZQTEUxQlFVMHNZMEZCYzBJN1FVRkRMMElzVlVGQlRVTXNUMEZCVFN4SlFVRkpMRk5CUVZFN1FVRkJRU3hOUVVOd1FpeFhRVUZYTzBGQlFVRXNUVUZCUXp0QlFVRkJMRTFCUTFvc1pVRkJaVHRCUVVGQkxFMUJRVU03UVVGQlFTeE5RVU5vUWl4UFFVRlBPMEZCUVVFc1RVRkJRenRCUVVGQkxFMUJRMUlzVTBGQlV5eE5RVUZOTEZGQlFWRXNUMEZCVHp0QlFVRkJMRWxCUTJ4RExFTkJRVU03UVVGRlJDeFhRVUZQUVN4TFFVRkpMRTFCUVUwN1FVRkJRU3hOUVVOaUxFMUJRVTBzWTBGQll6dEJRVUZCTEVsQlEzaENMRU5CUVVNN1FVRkJRU3hGUVVOTU8wRkJRMG83UVVGNFEwOHNlVUpCUVVGRU8wRkJTVWdzTkVKQlFVMHNZVUZFVGl4blFrRklVenRCUVZOVUxEUkNRVUZOTEdkQ1FVUk9MRzFDUVZKVE8wRkJZMVFzTkVKQlFVMHNVVUZFVGl4WFFXSlRPMEZCYlVKVUxEUkNRVUZOTEZkQlJFNHNZMEZzUWxNN1FVRkJRU3hYUVVGT0xIVkRRVVJRTEhGQ1FVTmhPMEZCUVU0c05FSkJRVTA3UVVGQlRpeEpRVUZOTEZWQlFVNDdPenRCUmtaUUxGTkJRVk1zTWtKQlFUSkNPMEZCUTNCRExGTkJRVk1zVFVGQlRTeHRRa0ZCYlVJN096dEJSMVJzUXl4UFFVRlBSU3hqUVVGaE96czdRVU5CY0VJc1QwRkJUME1zWTBGQllUdEJRVUZ3UWl4SlFVRkJReXhMUVVGQk8wRkJUMDhzU1VGQlRTeFhRVUZPTEUxQlFVMHNhMEpCUVRCQ1JDeFRRVUZSTEU5QlFVODdRVUZCUVN4RlFVZHNSRHRCUVVGQkxGTkJRVkVzVFVGQmJVSTdRVUZCUVN4TlFVTjJRaXhSUVVGUkxFVkJRVVVzWVVGQllTeERRVUZEUVN4VFFVRlJMRmRCUVZjc1JVRkJSVHRCUVVGQkxFMUJRemRETEZGQlFWRXNSVUZCUlN4aFFVRmhMRU5CUVVOQkxGTkJRVkVzVjBGQlZ5eEZRVUZGTzBGQlFVRXNTVUZEYWtRN1FVRkJRVHRCUVVGQkxFVkJSVUU3UVVGQlFTeFRRVUZSUXl4UFFVRnpRanRCUVVGQkxFMUJRekZDTEZWQlFWVkVMRk5CUVZFc1ZVRkJWU3hUUVVGVExGbEJRVmtzU1VGQlNTeEpRVUZKUVN4VFFVRlJMRmRCUVZjc1VVRkJVVHRCUVVGQkxFbEJRM2hHTzBGQlFVRTdRVUZCUVN4RlFVVkJMRTlCUVU4N1FVRkRTQ3hKUVVGQlFTeFRRVUZSTEdOQlFXTXNTVUZCU1R0QlFVRkJMRVZCUXpsQ08wRkJRVUVzUlVGRlFTeEhRV0pSTEV0QlFVRkJMRk5CUVZFc1UwRkxVa01zVFVGQlFVUXNVMEZCVVN4WlFWRmtMRTlCUVU4c1UwRkJVU3hKUVVGSk8wRkJRMnBDTEZkQlFVOHNTMEZCU3p0QlFVRkJMRVZCUTJoQ08wRkJRVUVzUlVGSlFTeFBRVUZQTEU5QlFXZENPMEZCUTI1Q0xGRkJRVWtzYVVKQlFXbENMRmRCUVZVN1FVRkRNMElzV1VGQlRTeE5RVUZOTEhsRFFVRjVRenRCUVVGQkxFbEJRM3BFTzBGQlJVRXNVMEZCU3l4VlFVRlZMRXRCUVVzc1MwRkJTenRCUVVONlFpeFRRVUZMTEV0QlFVc3NWVUZCVlN4TFFVRkxPMEZCUTNwQ0xGTkJRVXNzVDBGQlR5eFZRVUZWTzBGQlFVRXNSVUZETVVJN1FVRkJRU3hGUVVWQkxFOUJRVThzVDBGQlowSTdRVUZEYmtJc1ZVRkJUU3hSUVVGUkxFdEJRVXNzVlVGQlZTeFZRVUZWTEVOQlFVTXNUVUZCVFN4TlFVRk5MRXRCUVVzN1FVRkRla1FzVTBGQlN5eFZRVUZWTEU5QlFVOHNUMEZCVHl4RFFVRkRPMEZCUlRsQ0xGTkJRVXNzUzBGQlN5eFZRVUZWTEV0QlFVczdRVUZEZWtJc1UwRkJTeXhQUVVGUExGVkJRVlU3UVVGQlFTeEZRVU14UWp0QlFVRkJMRVZCUlVFc1dVRkJXU3hGUVVGRkxGZEJRVmNzUTBGQlF5eEZRVUZGTEVsQlFYbERMRU5CUVVNc1IwRkJSenRCUVVOeVJTeFZRVUZOTzBGQlEwNHNVMEZCU3l4WlFVRlpMRTFCUVUwc1VVRkJVU3hSUVVGUkxFbEJRVWtzVjBGQlZ5eERRVUZETEZGQlFWRTdRVUZCUVN4RlFVTnVSVHRCUVVGQkxFVkJSVUVzVVVGRFNVVXNVMEZEUVN4VlFVTk5PMEZCUTA0c1YwRkJUeXhOUVVGTkxGRkJRVkZCTEZOQlFWRXNVVUZCVVR0QlFVRkJMRVZCUTNwRE8wRkJRMG83T3p0QlF6RkVRU3hQUVVGUFF5eGpRVUZoTzBGQlEzQkNMRTlCUVU5RExGVkJRVk03UVVGRGFFSXNUMEZCVDBNc1YwRkJWVHRCUVZWcVFpeEpRVUZOTEZGQlFWRXNUMEZCVHl4elFrRkJjMEk3UVVGSGNFTXNTVUZCVFN4WFFVRk9MRTFCUVUwc2EwSkJRVGhDTEZOQlFWTTdRVUZCUVN4RlFVTm9SRHRCUVVGQkxGTkJRVThzVTBGQlUwTXNVMEZCVVR0QlFVRkJPMEZCUVVFc1JVRkZlRUk3UVVGQlFTeEZRVU5CTzBGQlFVRXNSVUZGUVN4WlFVRlpMRXRCUVdNc1YwRkJLMEk3UVVGRGNrUXNWVUZCVFN4clJVRkJhMFU3UVVGRGVFVXNVMEZCU3l4aFFVRmhMR05CUVdNc1RVRkJUU3hOUVVGTk8wRkJRelZETEZOQlFVc3NUMEZCVHp0QlFVRkJMRVZCUTJoQ08wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJMRVZCVDBFc1ZVRkJWU3hWUVVFNFF6dEJRVU53UkN4WFFVRlBMRXRCUVVzc1YwRkJWeXhSUVVGUk8wRkJRVUVzUlVGRGJrTTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRU3hGUVV0QkxFMUJRVk03UVVGRFRDeFhRVUZQTEV0QlFVc3NTMEZCU3p0QlFVRkJMRVZCUTNKQ08wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVN4RlFVMUJMRWRCUVZVc1YwRkJlVU03UVVGREwwTXNWMEZCVHl4SlFVRkpMRlZCUVZNc1RVRkJUU3hWUVVGVkxFdEJRVXNzUzBGQlN5eERRVUZETEVkQlFVY3NTMEZCU3l4VlFVRlZPMEZCUVVFc1JVRkRja1U3UVVGQlFTeEZRVVZWTEUxQlFXRXNWMEZCZVVNN1FVRkROVVFzVVVGQlNTeFJRVUV3UWp0QlFVTTVRaXhSUVVGSk8wRkJSVW9zVlVGQlRTeGpRVUZqTEc5Q1FVRkpMRWxCUVhWQ08wRkJSUzlETEZWQlFVMHNXVUZCSzBJc1EwRkJReXhoUVVGaE8wRkJReTlETEZWQlFVa3NXVUZCV1N4VFFVRlRMRWRCUVVjN1FVRkRlRUlzWjBKQlFWRXNTMEZCU3l4VlFVRlZMRTFCUVUwN1FVRkRla0lzWjBKQlFVMHNWMEZCVnl4VlFVRlZMRXRCUVVzc1NVRkJTU3hEUVVGRE8wRkJRM0pETEdOQlFVa3NWVUZCVlN4VlFVRlZPMEZCUTNCQ0xHOUNRVUZSTzBGQlExSXNhMEpCUVUwc1MwRkJTeXhYUVVGWExFVkJRVVVzVVVGQlVTeERRVUZETEU5QlFVOHNSMEZCUnl4RFFVRkRPMEZCUVVFc1ZVRkRhRVE3UVVGQlFTeFJRVU5LTEVOQlFVTTdRVUZCUVN4TlFVTk1PMEZCUlVFc2EwSkJRVmtzU1VGQlNTeFJRVUZSTzBGQlJYaENMR0ZCUVU4c1RVRkJUVHRCUVVOVUxHOUNRVUZaTEU5QlFVOHNVVUZCVVR0QlFVTXpRaXhaUVVGSkxGbEJRVmtzVTBGQlV5eEhRVUZITzBGQlEzaENMR3RDUVVGUk8wRkJRMUlzWjBKQlFVMDdRVUZCUVN4UlFVTldPMEZCUVVFc1RVRkRTanRCUVVGQkxFbEJRMG83UVVGRlFTeFZRVUZOTEUxQlFVMHNUVUZCVXp0QlFVTnFRaXhoUVVGUExGVkJRVlVzVVVGQlVTeFJRVUZSTEZWQlFWVXNTMEZCU3l4SlFVRkpMRU5CUVVNN1FVRkJRU3hKUVVONlJEdEJRVVZCTEZkQlFVOHNTVUZCU1N4VlFVRlRMRXRCUVVzc1UwRkJVenRCUVVGQkxFVkJRM1JETzBGQlFVRXNSVUZGUVN4WFFVRnRRanRCUVVObUxGZEJRVThzV1VGQldTeExRVUZMTEVsQlFVa3NRMEZCUXp0QlFVRkJMRVZCUTJwRE8wRkJRVUVzUlVGRlFTeERRVUZETEU5QlFVOHNWMEZCVnl4SlFVRkpPMEZCUTI1Q0xGbEJRVkVzUzBGQlN5eHhSRUZCY1VRN1FVRkRiRVVzVjBGQlR5eExRVUZMTEZOQlFWTTdRVUZCUVN4RlFVTjZRanRCUVVOS096czdRVU55Ums4c1UwRkJVeXhUUVVGVExFMUJRWFZDTzBGQlF6VkRMRk5CUVU4c1QwRkJUeXhQUVVGUExFdEJRVXNzU1VGQlNUdEJRVU5zUXp0QlFXVkJMRk5CUVZNc1kwRkJiVUk3UVVGRGVFSXNVVUZCVFN4TlFVRk5MR05CUVdNN1FVRkRPVUk3UVVGRlR5eEpRVUZOTEUxQlFXTTdRVUZCUVN4RlFVTjJRaXh0UWtGQmJVSXNRMEZCUXp0QlFVRkJMRVZCUTNCQ0xGVkJRVlU3UVVGQlFTeEZRVU5XTEdGQlFXRTdRVUZCUVN4RlFVTmlMR0ZCUVdFN1FVRkJRU3hGUVVOaUxGRkJRVkU3UVVGQlFTeEZRVU5TTEZWQlFWVTdRVUZCUVN4RlFVTldMRmRCUVZjc1RVRkJUVHRCUVVGQkxFVkJRMnBDTEdkQ1FVRm5RaXhOUVVGTk8wRkJRekZDT3pzN1FVTjJRMDhzU1VGQlRTeFJRVUZPTEUxQlFVMHNUMEZCVFR0QlFVRkJMRVZCVldZc1dVRkJXU3hSUVVGMVFqdEJRVTV1UXl4dlFrRkJWeXh2UWtGQlNTeEpRVUZ6UWp0QlFVVnlReXhUUVVGUkxGZEJRVmNzYjBKQlFVa3NTVUZCWjBJN1FVRkRka01zVTBGQlVTeFRRVUZUTEc5Q1FVRkpMRWxCUVdkQ08wRkJRM0pETEZOQlFWRXNWVUZCVlR0QlFVZGtMRk5CUVVzc1UwRkJVenRCUVVGQkxFVkJRMnhDTzBGQlFVRXNSVUZGUVN4VlFVRlZMRlZCUVhOQ08wRkJRelZDTEZOQlFVc3NWVUZCVlN4SlFVRkpMRkZCUVZFN1FVRkJRU3hGUVVNdlFqdEJRVUZCTEVWQlJVRXNVVUZCVVN4VlFVRnpRanRCUVVNeFFpeFJRVUZKTEV0QlFVc3NWVUZCVlN4RFFVRkRMRXRCUVVzc1QwRkJUeXhUUVVGVE8wRkJRM0pETEZkQlFVc3NUMEZCVHl4UlFVRlJMRkZCUVZFN1FVRkJRU3hKUVVOb1F5eFBRVUZQTzBGQlEwZ3NWMEZCU3l4UFFVRlBMRWxCUVVrc1VVRkJVVHRCUVVGQkxFbEJRelZDTzBGQlFVRXNSVUZEU2p0QlFVRkJMRVZCUlVFc1NVRkJUeXhKUVVGaE8wRkJRMmhDTEZWQlFVMHNUMEZCVHl4UFFVRk5PMEZCUTI1Q0xGZEJRVTBzVlVGQlZUdEJRVVZvUWl4UlFVRkpPMEZCUTBFc1lVRkJUeXhIUVVGSE8wRkJRVUVzU1VGRFpDeFZRVUZGTzBGQlEwVXNWMEZCU3l4UFFVRlBMRkZCUVZFc1EwRkJReXhQUVVGUExFZEJRVWNzUTBGQlF6dEJRVU5vUXl4WFFVRkxMRTlCUVU4c1RVRkJUVHRCUVVOc1FpeFhRVUZMTEZWQlFWVTdRVUZEWml4aFFVRk5MRlZCUVZVN1FVRkJRU3hKUVVOd1FqdEJRVUZCTEVWQlEwbzdRVUZCUVN4RlFVVkJMRlZCUVZVN1FVRkRUaXhUUVVGTExGTkJRVk1zVVVGQlVTeERRVUZETEU5QlFVOHNSMEZCUnl4RFFVRkRPMEZCUTJ4RExGTkJRVXNzVTBGQlV5eE5RVUZOTzBGQlEzQkNMRk5CUVVzc1UwRkJVeXhOUVVGTk8wRkJRM0JDTEZkQlFVOHNTMEZCU3p0QlFVRkJMRVZCUTJoQ08wRkJRMG83UVVGNVJrOHNVMEZCVXl4VlFVRlZMRk5CUVhGQ08wRkJRek5ETEUxQlFVa3NRMEZCUXl4TlFVRk5MRk5CUVZNN1FVRkRhRUlzV1VGQlVTeE5RVUZOTEUxQlFVMHNjMFJCUVhORUxFTkJRVU03UVVGQlFTeEZRVU12UlR0QlFVVkJMRkZCUVUwc1UwRkJVeXhWUVVGVkxFOUJRVTg3UVVGRGNFTTdRVUYzUTA4c1UwRkJVeXhYUVVGakxFbEJRV2RETzBGQlF6RkVMRkZCUVUwc1VVRkJVU3hKUVVGSkxFMUJRVTBzU1VGQlNUdEJRVU0xUWl4VFFVRlBMRTFCUVUwc1NVRkJTU3hOUVVGTkxFZEJRVWNzVFVGQlRTeE5RVUZOTEZGQlFWRXNRMEZCUXl4RFFVRkRPMEZCUTNCRU96czdRVXB5UzA4c1NVRkJUU3hWUVVGVkxFOUJRVThzYTBKQlFXdENPMEZCWlhwRExFbEJRVTBzWTBGQll5eFBRVUZQTEhOQ1FVRnpRanRCUVdWcVJDeEpRVUZOTEdOQlFXTXNUMEZCVHl4MVFrRkJkVUk3UVVGTGJFUXNVMEZCVXl4UlFVRlJMRkZCUVhkQ08wRkJRelZETEZOQlFVOHNWMEZCVnl4VFFVRlZMRTlCUVU4c1QwRkJUeXhKUVVGbE8wRkJRemRFTzBGQmVVVkJMRk5CUVZNc1kwRkJZeXhOUVVGMVFqdEJRVU14UXl4VFFVRlBMRXRCUVVzc2NVSkJRWEZDUXl4VFFVRlJPMEZCUXpkRE8wRkJSVUVzVTBGQlV5eGxRVUZsTEUxQlFYVkNPMEZCUXpORExGTkJRVThzVDBGQlR5eFRRVUZUTEdOQlFXTXNRMEZCUXl4alFVRmpMRWxCUVVrN1FVRkROVVE3UVVGSlR5eFRRVUZUTEZkQlFWY3NTMEZCY1VJN1FVRkROVU1zVVVGQlRTeERRVUZETEV0QlFVc3NUVUZCVFN4SlFVRkpMRk5CUVZNc1NVRkJTU3hOUVVGTkxFTkJRVU1zUTBGQlF5eEZRVUZGTEUxQlFVMHNSMEZCUnp0QlFVVjBSQ3hOUVVGSkxFbEJRVWtzVjBGQlZ5eFRRVUZUTEVkQlFVYzdRVUZETTBJc1YwRkJUeXhYUVVGWExFbEJRVWtzVFVGQlRTeERRVUZETEVOQlFVTTdRVUZCUVN4RlFVTnNRenRCUVVWQkxGTkJRVThzVTBGQlV5eEhRVUZITEVkQlFVY3NTMEZCU3l4TlFVRk5MRXRCUVVzN1FVRkRNVU03UVVGRlR5eFRRVUZUTEU5QlFVOHNVVUZCZDBJc1QwRkJkVUk3UVVGRGJFVXNUVUZCU1N4clFrRkJhMElzVlVGQlZUdEJRVU0xUWl4WFFVRlBMRTlCUVU4c1MwRkJTenRCUVVOdVFqdEJRVUZCTEVWQlEwbzdRVUZGUVN4TlFVRkpMR1ZCUVdVc1ZVRkJWU3hQUVVGUExFOUJRVThzVjBGQlZ5eE5RVUZOTEZsQlFWazdRVUZEY0VVc1YwRkJUeXhYUVVGWExFVkJRVVVzUzBGQlN6dEJRVU42UWp0QlFVRkJMRVZCUTBvN1FVRkZRU3hOUVVGSkxGbEJRVmtzVVVGQlVTeExRVUZMTzBGQlEycERPMEZCUlU4c1UwRkJVeXhQUVVGUExGRkJRWGRDTEU5QlFYVkNPMEZCUTJ4RkxFMUJRVWtzYTBKQlFXdENMRlZCUVZVN1FVRkROVUlzVjBGQlR5eFBRVUZQTEV0QlFVczdRVUZEYmtJN1FVRkJRU3hGUVVOS08wRkJSVUVzVFVGQlNTeHBRa0ZCYVVJc1ZVRkJWVHRCUVVNelFpeGxRVUZYTEUxQlFVMHNUMEZCVHp0QlFVTndRaXhoUVVGUExGRkJRVkVzUlVGQlJUdEJRVUZCTEVsQlEzSkNPMEZCUlVFc1ZVRkJUU3huUWtGQlowSXNUVUZCVFN4UlFVRlJMRlZCUVZVc1EwRkJReXhIUVVGSExFOUJRVTg3UVVGRGNrUXNWVUZCU1N4RlFVRkZMR05CUVdOQkxGTkJRVkVzVTBGQlV6dEJRVU5xUXl4bFFVRlBMRkZCUVZFc1RVRkJUU3hWUVVGVkxHTkJRV01zUlVGQlJTeFBRVUZQTEUxQlFVMHNSVUZCUlN4RFFVRkRPMEZCUVVFc1RVRkRia1U3UVVGRFFTeGhRVUZQTEZGQlFWRXNSVUZCUlR0QlFVRkJMRWxCUTNKQ0xFTkJRVU03UVVGRlJDeFZRVUZOTEdkQ1FVRm5RaXhOUVVGTkxGRkJRVkVzVlVGQlZTeERRVUZETEVkQlFVY3NUMEZCVHp0QlFVTnlSQ3hWUVVGSkxFVkJRVVVzWTBGQlkwRXNVMEZCVVN4VFFVRlRPMEZCUTJwRExHVkJRVThzVVVGQlVTeE5RVUZOTEZWQlFWVXNhVUpCUVdsQ0xFVkJRVVVzVTBGQlV5eE5RVUZOTEVWQlFVVXNRMEZCUXp0QlFVRkJMRTFCUTNoRk8wRkJRMEVzWVVGQlR5eFJRVUZSTEVWQlFVVTdRVUZCUVN4SlFVTnlRaXhEUVVGRE8wRkJSVVFzWTBGQlZTeE5RVUZOTzBGQlExb3NXVUZCVFN4WFFVRlhMR0ZCUVdFN1FVRkRPVUlzV1VGQlRTeFhRVUZYTEdGQlFXRTdRVUZCUVN4SlFVTnNReXhEUVVGRE8wRkJSVVE3UVVGQlFTeEZRVU5LTzBGQlJVRXNUVUZCU1N4bFFVRmxMRlZCUVZVc1QwRkJUeXhQUVVGUExGZEJRVmNzVFVGQlRTeFpRVUZaTzBGQlEzQkZMRmRCUVU4c1YwRkJWeXhGUVVGRkxFOUJRVThzVVVGQlVTeExRVUZMTEVOQlFVTTdRVUZEZWtNN1FVRkJRU3hGUVVOS08wRkJSVUVzVFVGQlNTeFpRVUZaTEZGQlFWRXNTMEZCU3p0QlFVTnFRenRCUVVkUExGTkJRVk1zVVVGQlVTeFJRVUZuUWl4TlFVRmpPMEZCUTJ4RUxFMUJRVWtzVjBGQlZ5eFZRVUZWTEU5QlFVOHNUMEZCVHl4TlFVRk5MRWxCUVVrN1FVRkROME1zV1VGQlVTeExRVUZMTEhWQ1FVRjFRaXhQUVVGUExFOUJRVThzUTBGQlF5eFBRVUZQTEVsQlFVa3NUMEZCVHl4TlFVRk5MRVZCUVVVN1FVRkJRU3hGUVVOcVJqdEJRVVZCTEZOQlFVOHNUMEZCVHl4UlFVRlJMRVZCUVVVc1EwRkJReXhQUVVGUExFZEJRVWNzUzBGQlN5eERRVUZETzBGQlF6ZERPMEZCV1U4c1UwRkJVeXhKUVVOYUxFMUJRMEVzVTBGRlFTeExRVU5ETzBGQlEwUXNVVUZCVFN4RlFVRkZMRWRCUVVjc1QwRkJUeXhqUVVGakxGVkJRVlVzUjBGQlJ5eExRVUZMTEVsQlFVazdRVUZEZEVRc1VVRkJUU3hSUVVGUk8wRkJSV1FzVFVGQlNTeEpRVUZMTEZGQlFVOHNUMEZCVHl4UFFVRlBMRVZCUVVVc1NVRkJTU3hEUVVGRE8wRkJSWEpETEZGQlFVMHNZVUZCWVN4SlFVRkpMRlZCUVZVc1RVRkJUU3hMUVVGTExFdEJRVXNzUTBGQlF6dEJRVU5zUkN4UlFVRk5MR2RDUVVGNVF5eERRVUZETzBGQlJXaEVMR0ZCUVZjc1EwRkJRME1zVFVGQlN5eExRVUZMTEV0QlFVc3NUMEZCVHl4UlFVRlJMRXRCUVVzc1IwRkJSenRCUVVNNVF5eFJRVUZKTEZWQlFWVXNVVUZCVnp0QlFVTnlRaXhoUVVGUExFMUJRVTFCTEVsQlFVYzdRVUZCUVN4SlFVTndRanRCUVVWQkxGRkJRVWtzVjBGQlZ5eFRRVUZUUVN4SlFVRkhMRWRCUVVjN1FVRkRNVUlzYjBKQlFXTkJMRWxCUVVjc1NVRkJTU3hOUVVGTlFTeEpRVUZITzBGQlF6bENMR0ZCUVU4c1RVRkJUVUVzU1VGQlJ6dEJRVUZCTEVsQlEzQkNPMEZCUVVFc1JVRkRTanRCUVVWQkxFMUJRVWtzVDBGQlR5eFRRVUZUTEZWQlFWVTdRVUZETVVJc1VVRkJTU3hSUVVGUkxFbEJRVWtzYlVKQlFXMUNPMEZCUXk5Q0xHRkJRVThzU1VGQlNTeHJRa0ZCYTBJc1NVRkJTVHRCUVVGQkxFbEJRM0pETEU5QlFVODdRVUZEU0N4WlFVRk5MRTFCUVUwc09FSkJRVGhDTEVsQlFVa3NSMEZCUnp0QlFVRkJMRWxCUTNKRU8wRkJRVUVzUlVGRFNqdEJRVVZCTEUxQlFVa3NaVUZCWlN4SlFVRkpMRWRCUVVjN1FVRkRkRUlzVlVGQlRVTXNWVUZCVXl4TFFVRkxMRVZCUVVVc1ZVRkJWU3hIUVVGSExFMUJRVTBzUTBGQlF6dEJRVU14UXl4UlFVRkpMRTFCUVU4c1UwRkJVVUVzVTBGQlVTeExRVUZMTzBGQlEyaERMRkZCUVVsQkxFOUJRVTA3UVVGRFZpeFhRVUZQUVR0QlFVRkJMRVZCUTFnN1FVRkhRU3hSUVVGTkxFVkJRVVVzUzBGQlN5eFBRVUZQTEZWQlFWVXNTVUZCU1R0QlFVTnNReXhUUVVGUExFMUJRVTA3UVVGRFlpeFRRVUZQTEUxQlFVMDdRVUZGWWl4UlFVRk5MRlZCUVRaRUxFTkJRVU03UVVGRGNFVXNVVUZCVFN4WFFVRXJReXhEUVVGRE8wRkJSM1JFTEdGQlFWY3NRMEZCUTBRc1RVRkJTeXhMUVVGTExFdEJRVXNzVDBGQlR5eFJRVUZSTEV0QlFVc3NSMEZCUnp0QlFVTTVReXhSUVVGSlFTeExRVUZKTEZkQlFWY3NTVUZCU1N4SFFVRkhPMEZCUTNSQ0xHTkJRVkVzUzBGQlN5eERRVUZEUVN4TlFVRkxMRXRCUVhOQ0xFTkJRVU03UVVGRE1VTXNZVUZCVHl4TlFVRk5RU3hKUVVGSE8wRkJRVUVzU1VGRGNFSTdRVUZEUVN4UlFVRkpMR2xDUVVGcFFpeFZRVUZWTzBGQlF6TkNMR1ZCUVZNc1MwRkJTeXhEUVVGRFFTeE5RVUZMTEV0QlFVc3NRMEZCUXp0QlFVTXhRaXhaUVVGTlFTeEpRVUZITEVsQlFVa3NUVUZCVFN4SlFVRkpPMEZCUVVFc1NVRkRNMEk3UVVGQlFTeEZRVU5LTzBGQlIwRXNVVUZCVFN4VFFVRlRMR1ZCUVdVc1lVRkJZU3hMUVVGTExFbEJRVWtzU1VGQlN5eExRVUZsTEV0QlFVczdRVUZETjBVc1RVRkJTU3hoUVVGakxGRkJRVThzVDBGQlR5eFJRVUZSTEV0QlFVczdRVUZETjBNc1RVRkJTU3hOUVVGUExGTkJRVkVzVVVGQlVTeExRVUZMTzBGQlJXaERMRTFCUVVrc1NVRkJTeXhMUVVGSkxFOUJRVThzVVVGQlVTeEhRVUZITzBGQlF5OUNMRTFCUVVrc1ZVRkJWeXhMUVVGSkxGTkJRVk1zVVVGQlVTeFRRVUZUTzBGQlJ6ZERMRmRCUVZNc1UwRkJVeXhOUVVGTkxGRkJRVkVzVVVGQlVTeEpRVUZKTEZkQlFWY3NRMEZCUXl4UlFVRlJMRWRCUVVjN1FVRkRMMFFzVVVGQlNTeFZRVUZWTEUxQlFVMDdRVUZEYUVJc1kwRkJVU3hMUVVGTExFMUJRVTBzYlVSQlFXMUVMRU5CUVVNN1FVRkRka1U3UVVGQlFTeEpRVU5LTzBGQlJVRXNVVUZCU1N4TlFVRk5MRkZCUVZFc1MwRkJTeXhIUVVGSE8wRkJRM1JDTEdsQ1FVRlhMRTFCUVUwc1QwRkJUenRCUVVOd1FpeGxRVUZQTEZGQlFWRXNSVUZCUlR0QlFVRkJMRTFCUTNKQ08wRkJRVUVzU1VGRFNpeFhRVUZYTEU5QlFVODdRVUZEWkN4VlFVRkpMRVZCUVVVc2FVSkJRV2xDUkN4VFFVRlJMRk5CUVZNN1FVRkRjRU1zWjBKQlFWRXNTVUZCU1N4VFFVRlRMRXRCUVVzN1FVRkJRU3hOUVVNNVFqdEJRVU5CTEdGQlFVOHNVVUZCVVN4TFFVRkxPMEZCUVVFc1NVRkRlRUk3UVVGQlFTeEZRVU5LTzBGQlIwRXNVVUZCVFN4clFrRkJhMElzVVVGQlVTeEpRVUZKTEVOQlFVTXNRMEZCUXl4TFFVRkxMRTlCUVU4c1RVRkJUVHRCUVVOd1JDeFZRVUZOTEV0QlFVc3NUMEZCVHl4UlFVRlJMRmRCUVZjc1IwRkJSeXhIUVVGSExFOUJRVTg3UVVGRGJFUXNWMEZCVHl4TlFVRk5MRTlCUVU4c1YwRkJWeXhGUVVGRk8wRkJRVUVzUlVGRGNrTXNRMEZCUXp0QlFVZEVMR0ZCUVZjc1EwRkJRME1zVFVGQlN5eExRVUZMTEV0QlFVc3NUMEZCVHl4UlFVRlJMR0ZCUVdFc1IwRkJSenRCUVVOMFJDeFJRVUZKTEdsQ1FVRnBRaXhWUVVGVk8wRkJRek5DTEdWQlFWTXNTMEZCU3l4RFFVRkRRU3hOUVVGTExFdEJRVXNzUTBGQlF6dEJRVUZCTEVsQlF6bENMRTlCUVU4N1FVRkRTQ3hoUVVGUExFOUJRVThzVVVGQlVTeEZRVUZGTEVOQlFVTkJMRWxCUVVjc1IwRkJSeXhOUVVGTkxFTkJRVU03UVVGQlFTeEpRVU14UXp0QlFVRkJMRVZCUTBvN1FVRkhRU3hSUVVGTkxHdENRVUZyUWl4VFFVRlRMRWxCUVVrc1EwRkJReXhEUVVGRExFMUJRVTBzVDBGQlR5eE5RVUZOTzBGQlEzUkVMRlZCUVUwc1ZVRkJWU3hSUVVGUkxGVkJRVlVzVFVGQlRUdEJRVU53UXl4VlFVRkpMRkZCUVZFc1RVRkJUU3hSUVVGUkxFbEJRVWtzUTBGQlF6dEJRVUZCTEVsQlEyNURMRU5CUVVNN1FVRkRSQ3hSUVVGSkxGRkJRVkVzVFVGQlRTeFJRVUZSTEVsQlFVa3NRMEZCUXp0QlFVTXZRaXhYUVVGUE8wRkJRVUVzUlVGRFdDeERRVUZETzBGQlIwUXNUVUZCU1N4blFrRkJaMElzVTBGQlV5eExRVUZMTEdkQ1FVRm5RaXhUUVVGVExFZEJRVWM3UVVGRE1VUXNZMEZCVlN4TlFVRk5PMEZCUTFvc2MwSkJRV2RDTEZGQlFWRXNRMEZCUXl4UFFVRlBMRWRCUVVjc1EwRkJRenRCUVVOd1F5eHpRa0ZCWjBJc1VVRkJVU3hEUVVGRExFOUJRVThzUjBGQlJ5eERRVUZETzBGQlFVRXNTVUZEZUVNc1EwRkJRenRCUVVGQkxFVkJRMHc3UVVGRlFTeE5RVUZKTEUxQlFVMDdRVUZEVml4VFFVRlBPMEZCUTFnN1FVRkhUeXhKUVVGTkxFOUJRVTg3T3p0QlN6TldjRUlzVDBGQlQwVXNZMEZCWVRzN08wRlNXWEJDTEVsQlFVa3NTMEZCU3p0QlFVbFVReXhOUVVGTExGTkJRVk1zV1VGQldUdEJRVWt4UWl4TlFVRk5MRTlCUVU4c2IwSkJRVzlDTEVWQlFVVXNTMEZCU3l4RFFVRkRMRVZCUVVVc1UwRkJVeXhKUVVGSkxFMUJRVTBzU1VGQlNTeExRVUZMTEVOQlFVTXNSVUZCUlN4TlFVRk5MRTFCUVUwc1RVRkJUVHRCUVhCQ05VWXNiME5CUVVGRExHMUNRVUZCTEdkQ1FVRkJReXhwUWtGQlFTeGxRVUZCUXl4blFrRkJRU3hwUkVGQlFVTXNTMEZCUVN4cFNVRkJRVU03UVVGelEwRXNiVUpCUVVNc1UwRkJVenRCUVVOV0xFbEJRVTBzVFVGQlRpeGxRVUZyUWtRc1RVRkJRU3hKUVVGSkxHRkJNRU5zUWl4elFrRkJReXhQUVVGUExFbEJRVWtzVFVGQlRTeEpRVkZzUWl4cFFrRkJReXhQUVVGUExFdEJRVXNzU1VGVFlpeG5Ra0ZCUXl4UFFVRlBMRXRCUVVzc1NVRlJZa1FzYVVKQlFVRXNRMEZCUXl4UFFVRlBMRTFCUVUwc1NVRlJaQ3hwUWtGQlF5eFBRVUZQTEUxQlFVMHNTVUZSWkVRc2EwSkJRVUVzUTBGQlF5eFBRVUZQTEUxQlFVMHNTVUZSWkN4clFrRkJReXhQUVVGUExFMUJRVTBzU1VGUlpFUXNiMEpCUVVFc1EwRkJReXhQUVVGUExFMUJRVTBzU1VGUlpDeHZRa0ZCUXl4UFFVRlBMRTFCUVUwc1NVRTBTR1FzWjBKQlFVTXNUMEZCVHl4UFFVRlBMRkZCUVZFc1NVRjJUMVJITEV0QlFXZENPMEZCUVVFc1JVRTBURGxDTEdOQlFXTTdRVUZEVml4VlFVRk5MRVZCUVVVc1QwRkJUMFVzUzBGQlNTeHBRa0ZCYVVJc2NVSkJRWEZDTEVOQlFVTTdRVUUzVEd4RkxITkNRVUZCUkN4UlFVRkJPMEZCUVVFN1FVRkhTU3h6UTBGQlowSTdRVUZEYUVJN1FVRkRRU3g1UTBGQmJVSTdRVUZEYmtJN1FVRkRRU3h6UTBGQlowSXNTVUZCU1N4TlFVRjFRanRCUVhkTWRrTXNkVUpCUVVzc1kwRkJaU3hKUVVGSkxGRkJRVkU3UVVGQlFTeE5RVU0xUWl4alFVRmpMRXRCUVVzc1kwRkJZeXhMUVVGTExFbEJRVWs3UVVGQlFTeE5RVU14UXl4TlFVRk5MRXRCUVVzc1MwRkJTeXhMUVVGTExFbEJRVWs3UVVGQlFTeE5RVU42UWl4VFFVRlRMRU5CUVVNc1UwRkJVeXhKUVVGSkxGRkJRVkVzUTBGQlF5eFpRVUZaTEV0QlFVc3NVVUZCVVN4TlFVRk5MRTlCUVU4c1EwRkJRenRCUVVGQkxFMUJRM1pGTEZWQlFWVXNUVUZCVFR0QlFVTmFMRmxCUVVrc1QwRkJUeXd3UWtGQk1FSXNTVUZCU1R0QlFVRkJMRTFCUXpkRE8wRkJRVUVzU1VGRFNpeERRVUZETzBGQlJVUXNkVUpCUVVzc05rSkJRVk1zWVVGQllTeEZRVUZGTEZGQlFWRXNhVUpCUVdsQ0xFMUJRVTA3UVVGRGVFUXNWMEZCU3l4UFFVRlBMRlZCUVZVN1FVRkJRU3hKUVVNeFFpeERRVUZETzBGQlJVUXNVMEZCU3l4UlFVRlJMR2RDUVVGblFpeERRVUZETEVkQlFVY3NWMEZCVnp0QlFVTjRReXhaUVVGTkxFMUJRVTBzVDBGQlR5eFJRVUZSTEcxQ1FVRnRRaXhOUVVGTkxFdEJRVXNzWTBGQll5eE5RVUZOTEVOQlFVTTdRVUZET1VVc1dVRkJUU3hOUVVGTkxFdEJRVXNzVVVGQlVTeHJRa0ZCYTBJc1EwRkJRMFVzU1VGQlJ5eFpRVUZaTzBGQlEzWkVMRmxCUVVrc1YwRkJWeXhSUVVGUk8wRkJRMjVDTEdsQ1FVRlBMRmRCUVZjc1IwRkJSenRCUVVOeVFpeGxRVUZMTEZkQlFWY3NSMEZCUnp0QlFVRkJMRkZCUTNaQ08wRkJRVUVzVFVGRFNpeERRVUZETzBGQlFVRXNTVUZEVEN4RFFVRkRPMEZCUlVRc2RVSkJRVXNzT0VKQlFWVXNVVUZCVVN4VlFVRlZMRU5CUVVNc1IwRkJSeXhGUVVGRkxFdEJRVXNzVFVGQlRUdEJRVU01UXl4alFVRlJMRTFCUVUwN1FVRkJRU3hSUVVOV0xFdEJRVXM3UVVGRFJDeGxRVUZMTEU5QlFVOHNWMEZCVnp0QlFVTjJRanRCUVVGQkxGRkJRMG9zUzBGQlN6dEJRVU5FTEdWQlFVc3NUMEZCVHl4WlFVRlpPMEZCUTNoQ08wRkJRVUVzVVVGRFNpeExRVUZMTzBGQlEwUXNaVUZCU3l4UFFVRlBMR05CUVdNN1FVRkRNVUk3UVVGQlFTeFJRVU5LTzBGQlEwazdRVUZCUVN4TlFVTlNPMEZCUVVFc1NVRkRTaXhEUVVGRE8wRkJRVUVzUlVGRFREdEJRVUZCTEVWQmFFNUJMRWxCUVVrc1pVRkJaVHRCUVVObUxGZEJRVThzYlVKQlFVczdRVUZCUVN4RlFVTm9RanRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTEVWQlMwRXNaVUZCWlR0QlFVTllMRlZCUVUwc1QwRkJUeXh0UWtGQlN5dzJRa0ZCVXl4aFFVRmhPMEZCUTNoRExGVkJRVTBzVDBGQlR5eEpRVUZKTEUxQlFXMUNPMEZCUlhCRExGRkJRVWtzVlVGQk9FSTdRVUZEYkVNc1VVRkJTU3hKUVVGSk8wRkJSVklzV1VGQlVTeFZRVUZWTEV0QlFVc3NVMEZCVXl4SFFVRkhMRTlCUVU4c1RVRkJUVHRCUVVNMVF5eFhRVUZMTEV0QlFVc3NUMEZCVHp0QlFVRkJMRWxCUTNKQ08wRkJSVUVzVjBGQlR6dEJRVUZCTEVWQlExZzdRVUZCUVN4RlFVZFJMR05CUVdNc1VVRkJiMEk3UVVGRGRFTXNVMEZCU3p0QlFVRkJMRVZCUTFRN1FVRkJRU3hGUVUxQkxFbEJRVWtzVjBGQkswSTdRVUZETDBJc1YwRkJUeXhMUVVGTExHRkJRV0U3UVVGQlFTeEZRVU0zUWp0QlFVRkJMRVZCVDBFc1NVRkJTU3hWUVVFMlFqdEJRVU0zUWl4WFFVRlBMRXRCUVVzc1dVRkJXVHRCUVVGQkxFVkJRelZDTzBGQlFVRXNSVUZOUVN4SlFVRkpMRk5CUVZNc1RVRkJZenRCUVVOMlFpeDFRa0ZCU3l3NFFrRkJWU3hsUVVGbE8wRkJRVUVzUlVGRGJFTTdRVUZCUVN4RlFVMUJMRWxCUVVrc1YwRkJWenRCUVVOWUxGZEJRVThzYlVKQlFVc3NPRUpCUVZVN1FVRkJRU3hGUVVNeFFqdEJRVUZCTEVWQlRVRXNTVUZCU1N4VlFVRlZMRTFCUVdNN1FVRkRlRUlzZFVKQlFVc3NPRUpCUVZVc2JVSkJRVzFDTzBGQlFVRXNSVUZEZEVNN1FVRkJRU3hGUVUxQkxFbEJRVWtzV1VGQldUdEJRVU5hTEZkQlFVOHNiVUpCUVVzc09FSkJRVlU3UVVGQlFTeEZRVU14UWp0QlFVRkJMRVZCVFVFc1NVRkJTU3haUVVGWkxFMUJRV003UVVGRE1VSXNkVUpCUVVzc09FSkJRVlVzY1VKQlFYRkNPMEZCUVVFc1JVRkRlRU03UVVGQlFTeEZRVTFCTEVsQlFVa3NZMEZCWXp0QlFVTmtMRmRCUVU4c2JVSkJRVXNzT0VKQlFWVTdRVUZCUVN4RlFVTXhRanRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRXNSVUZOUVN4WFFVRlhMRTFCUVdNN1FVRkRja0lzVjBGQlR5eExRVUZMTEZGQlFWRXNTMEZCU3l4RFFVRkRMRTFCUVUwc1JVRkJSU3hUUVVGVExFbEJRVWs3UVVGQlFTeEZRVU51UkR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUVzUlVGTlFTeGpRVUZqTEUxQlFXTTdRVUZEZUVJc1ZVRkJUU3hOUVVGTkxFdEJRVXNzVjBGQlZ5eEpRVUZKTzBGQlEyaERMRkZCUVVrc1EwRkJReXhKUVVGTExFOUJRVTBzVFVGQlRTeHRRMEZCYlVNc1NVRkJTU3hIUVVGSE8wRkJRMmhGTEZGQlFVa3NWVUZCVlN4RFFVRkRMRWxCUVVrN1FVRkJRU3hGUVVOMlFqdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJMRVZCUzBFc1dVRkJXVHRCUVVOU0xHVkJRVmNzV1VGQldTeHRRa0ZCU3l4blFrRkJaVHRCUVVOMlF5eFZRVUZKTEdGQlFXRXNORUpCUVRSQ0xHMUNRVUZMTERoQ1FVRlZMRkZCUVZFN1FVRkJRU3hKUVVONFJUdEJRVUZCTEVWQlEwbzdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQkxFVkJUVUVzVlVGQlZTeFBRVUZsTEZGQlFWRXNUMEZCVHp0QlFVTndReXhWUVVGTkxGZEJRVmNzU1VGQlNTeEpRVUZKTEZsQlFWazdRVUZGY2tNc1lVRkJVeXhSUVVGUkxHbENRVUZwUWl4RFFVRkRMRWRCUVVjc1UwRkJVeXhWUVVGVk8wRkJRM0pFTEZsQlFVMHNUMEZCVHl4UlFVRlJMRk5CUVZNc1IwRkJSeXhoUVVGaExFdEJRVXM3UVVGRGJrUXNXVUZCVFN4UFFVRlBMRkZCUVZFc2JVSkJRVzFDTEVWQlFVVXNVVUZCVVR0QlFVTnNSQ3haUVVGTkxGRkJRVkVzVVVGQlVTeHRRa0ZCYlVJc1JVRkJSU3hoUVVGaE8wRkJRM2hFTEdOQlFWRXNUVUZCVFN4aFFVRmhMRWxCUVVrc1NVRkJTU3hKUVVGSkxFbEJRVWtzUzBGQlN5eEpRVUZKTEUxQlFVMHNUMEZCVHl4RlFVRkZPMEZCUVVFc1NVRkRka1VzUTBGQlF6dEJRVVZFTEZGQlFVa3NUVUZCVHl4TlFVRkxMRlZCUVZVN1FVRkZNVUlzVVVGQlNWQXNUVUZCU3l4VlFVRlZMRTlCUVU5QkxFMUJRVXNzVTBGQlV5eE5RVUZOTEVkQlFVYzdRVUZETjBNc1pVRkJVeXhsUVVGbExFdEJRVXM3UVVGQlFTeEpRVU5xUXl4WFFVRlhMRTFCUVUwc1YwRkJWeXhoUVVGaExFZEJRVWM3UVVGRGVFTXNaVUZCVXl4dFFrRkJiVUlzVFVGQlRTeFJRVUZSTEdWQlFXVXNSVUZCUlN4RFFVRkRPMEZCUVVFc1NVRkRhRVVzVDBGQlR6dEJRVU5JTEdWQlFWTXNhVUpCUVdsQ0xFdEJRVXM3UVVGQlFTeEpRVU51UXp0QlFVVkJMRkZCUVVrc1lVRkJZVHRCUVVGQkxFMUJRMklzYlVKQlFVczdRVUZCUVN4TlFVTk1PMEZCUVVFc1RVRkRRU3hKUVVGSk8wRkJRVUVzU1VGRFVqdEJRVVZCTEhWQ1FVRkxMR1ZCUVdNc1MwRkJTeXhSUVVGUk8wRkJRVUVzUlVGRGNFTTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRU3hGUVV0QkxGVkJRVlVzVFVGQll6dEJRVU53UWl4UlFVRkpMRlZCUVZVc1owSkJRV2RDTEcxQ1FVRkxMRFJDUVVGUkxFVkJRVVVzWjBKQlFXZENMRWxCUVVrN1FVRkJRU3hGUVVOeVJUdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJMRVZCUzBFc1MwRkJTeXhQUVVGUExFZEJRVWM3UVVGRFdDeDFRa0ZCU3l4alFVRmhMRXRCUVVzN1FVRkRka0lzVlVGQlRTeExRVUZMTzBGQlExZ3NVMEZCU3l4SlFVRkpPMEZCUVVFc1JVRkRZanRCUVVGQkxFVkJPRU5STEZGQlFWRXNUVUZCWjBJc1ZVRkJjME03UVVGRGJFVXNVVUZCU1N4dFFrRkJTeXh6UWtGQmNVSXNSMEZCUnp0QlFVTTNRaXhsUVVGVExHRkJRV0VzUzBGQlN5eFpRVUZaTEhORFFVRnpRenRCUVVGQkxFbEJRMnBHTzBGQlEwRXNVMEZCU3p0QlFVRkJMRVZCUTFRN1FVRkJRU3hGUVVWQkxHMUNRVUZ0UWl4TFFVRjVRenRCUVVONFJDeFJRVUZKTEVsQlFVa3NWVUZCVlR0QlFVTmtMRmRCUVVzc1VVRkJVU3hKUVVGSkxHTkJRV01zUjBGQlJ5eERRVUZETEZGQlFWRTdRVUZEZGtNc1dVRkJTU3hqUVVGakxFMUJRVTBzU1VGQlNUdEJRVU0xUWl4WlFVRkpMRXRCUVVzN1FVRkJRU3hOUVVOaUxFTkJRVU03UVVGQlFTeEpRVU5NTEU5QlFVODdRVUZEU0N4WFFVRkxMRXRCUVVzN1FVRkRWaXg1UWtGQlN5eGpRVUZoTEUxQlFVMDdRVUZCUVN4UlFVTndRaXhOUVVGTkxFdEJRVXM3UVVGQlFTeE5RVU5tTEVOQlFVTTdRVUZEUkN4cFFrRkJWeXhEUVVGRExGbEJRVms3UVVGcVUzQkRMRmxCUVVGSk8wRkJhMU5uUWl4aFFVRkxMRkZCUVZFc1dVRkJXU3hQUVVGUE8wRkJRMmhETEZOQlFVRkJMRTFCUVVFc2JVSkJRVXNzVjBGQlRDeG5Ra0ZCUVVFc1NVRkJRU3hYUVVGaExFZEJRVWM3UVVGQlFTeE5RVU53UWl4RFFVRkRPMEZCUVVFc1NVRkRURHRCUVVWQkxGZEJRVTg3UVVGQlFTeEZRVU5ZTzBGQlFVRXNSVUZGUVN4TlFVRk5MRkZCUVhGQ08wRkJRM1pDTEZWQlFVMHNSVUZCUlN4TlFVRk5MR2RDUVVGblFpeGpRVUZqTEV0QlFVc3NUMEZCVHl4SFFVRkhMRWxCUVVrc1NVRkJTVHRCUVVWdVJTeDFRa0ZCU3l4UFFVRlJPMEZCUTJJc1YwRkJUeXhQUVVGUExFMUJRVTBzUjBGQlJ6dEJRVVYyUWl4UlFVRkpMR2RDUVVGblFqdEJRVU5vUWl4WFFVRkxMRkZCUVZFc1YwRkJWeXhEUVVGRExFZEJRVWNzVFVGQlRTeGhRVUZoTEdWQlFXVXNUVUZCVFN4UlFVRlJMRU5CUVVNN1FVRkJRU3hKUVVOcVJqdEJRVVZCTEZGQlFVa3NZVUZCWXl4dlFrRkJTeXhsUVVGblFqdEJRVU4yUXl4UlFVRkpMRWxCUVVzc1RVRkJTeXhWUVVGVkxFdEJRVXNzUzBGQlN6dEJRVU5zUXl4UlFVRkpMRTFCUVU4c1MwRkJTU3hWUVVGVkxFdEJRVXM3UVVGRk9VSXNVMEZCU3l4blFrRkJaMElzWTBGQll5eExRVUZMTzBGQlEzaERMSGRDUVVGdlFpeExRVUZMTEZsQlFWazdRVUZEY2tNc1UwRkJTeXhUUVVGVExGZEJRVmM3UVVGQlFTeEZRVU0zUWp0QlFVRkJMRVZCUlVFc1VVRkRTVWtzVTBGRFFTeFZRVU5OTzBGQlEwNHNVVUZCU1VFc1dVRkJWeXhWUVVGWExHOUNRVUZMTEd0Q1FVRk1MRzFDUVVGTExHOUNRVUZ2UWp0QlFVTnVSQ3hYUVVGUExFMUJRVTBzVVVGQlVVRXNVMEZCVVN4UlFVRlJPMEZCUVVFc1JVRkRla003UVVGRFNqdEJRVGRTUVVnc1UwRkJRU3hwUWtGQlFVUTdRVUZIU1R0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJVRW83UVVGVFVTeGxRVUZUTEZkQlFXbENPMEZCUXpGQ0xGRkJRVTBzVjBGQlZ5eEpRVUZKTEZOQlFWTXNXVUZCV1R0QlFVTXhReXhOUVVGSkxFTkJRVU1zVTBGQlZTeFBRVUZOTEUxQlFVMHNkMEpCUVhkQ08wRkJRMjVFTEZOQlFVODdRVUZEV0R0QlFVVkpMR05CUVZFc1YwRkJaMEk3UVVGRGVFSXNVVUZCVFN4VlFVRlZMRWxCUVVrc1VVRkJVU3haUVVGWk8wRkJRM2hETEUxQlFVa3NRMEZCUXl4UlFVRlRMRTlCUVUwc1RVRkJUU3gxUWtGQmRVSTdRVUZEYWtRc1UwRkJUenRCUVVOWU8wRkJkMEpCTEd0Q1FVRkJReXhSUVVGQkxFZEJRVkVzYVVKQlJGSXNiMEpCTVVORk8wRkJiVVJHTEd0Q1FVRkJRU3hSUVVGQkxFZEJRVWtzV1VGRVNpeGxRV3hFUlR0QlFUUkVSaXhyUWtGQlFVRXNVVUZCUVN4SFFVRkpMRmRCUkVvc1kwRXpSRVU3UVVGdlJVWXNhMEpCUVVGQkxGRkJRVUVzUjBGQlNTeFpRVVJLUml4blFrRnVSVVU3UVVFMFJVWXNhMEpCUVVGRkxGRkJRVUVzUjBGQlNTeFpRVVJLTEdWQk0wVkZPMEZCYjBaR0xHdENRVUZCUVN4UlFVRkJMRWRCUVVrc1lVRkVTa2dzYVVKQmJrWkZPMEZCTkVaR0xHdENRVUZCUnl4UlFVRkJMRWRCUVVrc1lVRkVTaXhuUWtFelJrVTdRVUZ2UjBZc2EwSkJRVUZCTEZGQlFVRXNSMEZCU1N4bFFVUktTaXh0UWtGdVIwVTdRVUUwUjBZc2EwSkJRVUZKTEZGQlFVRXNSMEZCU1N4bFFVUktMR3RDUVROSFJUdEJRWGRQUml4clFrRkJRVUVzVVVGQlFTeEhRVUZSTEZkQlJGSXNZMEYyVDBVN1FVRkJRU3hOUVVGT0xHdENRVUZCUVN4UlFVRkJMRlZCUkVFc2FVSkJRMDA3UVVGQlRpeHJRa0ZCUVVFc1VVRkJRU3hIUVVGTk8wRkJLMUpPTEVsQlFVMHNUVUZCVFN4SlFVRkpMRWxCUVVrN1FVRkRjRUlzU1VGQlR5eGpRVUZST3pzN1FWTjJWV1k3T3p0QlEwRkJMRTlCUVU4c1YwRkJWenRCUVVOc1FpeFBRVUZQU1N4VlFVRlRPMEZCUTJoQ0xFOUJRVTlETEZWQlFWTTdPenRCUTBab1FpeFBRVUZQUXl4VlFVRlRPMEZCUTJoQ0xFOUJRVTlETEZkQlFWVTdRVUZKYWtJc1NVRkJUU3hWUVVGVkxFbEJRVWtzV1VGQldUdEJRVXhvUXl4NVEwRkJRVU1zUzBGQlFTeHhRa0ZCUVVNc1VVRkJRVHRCUVd0Q1FTeDFRa0ZCUXl4VFFVRlRPMEZCUTBnc1NVRkJUU3hYUVVGT0xFMUJRVTBzYTBKQlFXZENSQ3hOUVVGQkxGRkJRVkVzVVVGRGFrTXNaVUZCUXl4UFFVRlBMRTFCUVUwc1NVRkxaQ3hsUVVGRExFOUJRVThzVFVGQlRTeEpRVXRrTEdGQlFVTXNUMEZCVHl4UlFVRlJMRTlCUVU4c1NVRllSVUVzUzBGQlpUdEJRVUZCTEVWQk5FZDRReXhaUVVGWkxFVkJRVVVzUzBGQlN5eEhRVUUyUWp0QlFVTTFReXhWUVVGTk8wRkJOMGRRTEhOQ1FVRkJReXhSUVVGQk8wRkJRVUU3UVVGblFrZ3NhVU5CUVZjc1NVRkJTU3haUVVGWk8wRkJRek5DTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCTUVaSkxGVkJRVTBzVlVGQlZ5eHRRa0ZCU3l4VlFVRlhReXhMUVVGSkxGZEJRVmM3UVVGQlFTeE5RVU0xUXp0QlFVRkJMRTFCUTBGQkxFdEJRVWtzWjBKQlFXZENMR0ZCUTJoQ1FTeExRVUZKTEdkQ1FVRm5RaXhqUVVOd1FrRXNTMEZCU1N4blFrRkJaMEk3UVVGQlFTeEpRVU0xUWp0QlFVVkJMSFZDUVVGTExGZEJRVmxCTEV0QlFVa3NhVUpCUVdsQ0xFbEJRVWtzVVVGQlVTeGxRVUZsTEVOQlFVVTdRVUZEYmtVc2RVSkJRVXNzV1VGQllVRXNTMEZCU1N4blFrRkJaMElzU1VGQlNTeFJRVUZSTEdkQ1FVRm5RaXhEUVVGRk8wRkJRM0JGTEhWQ1FVRkxMRmxCUVdGQkxFdEJRVWtzWjBKQlFXZENMRWxCUVVrc1VVRkJVU3huUWtGQlowSXNRMEZCUlR0QlFVVndSU3d3UWtGQlN5eHRRMEZCVEN4WFFVRnBRaXh0UWtGQlN6dEJRVU4wUWl3d1FrRkJTeXh0UTBGQlRDeFhRVUZwUWl4dFFrRkJTenRCUVVWMFFpeFpRVUZSTEZkQlFWY3NUVUZCVFN4RFFVRkRMRWRCUVVjc1VVRkJVVHRCUVVOcVF5eFZRVUZKTzBGQlEwRXNaMEpCUVZFc1dVRkJXU3hIUVVGSE8wRkJRVUVzVFVGRE0wSXNVVUZCVVR0QlFVRkJMRTFCUlZJN1FVRkZRU3hWUVVGSkxGRkJRVkVzWTBGQll5eEhRVUZITzBGQlEzcENMR0ZCUVVzc1MwRkJTeXhSUVVGUkxHZENRVUZuUWl4SFFVRkhMRXRCUVVzN1FVRkJRU3hOUVVNNVF6dEJRVVZCTEZWQlFVa3NVVUZCVVN4blFrRkJaMElzUjBGQlJ6dEJRVU16UWl4aFFVRkxMRXRCUVVzc1VVRkJVU3hoUVVGaExFZEJRVWNzU1VGQlNUdEJRVUZCTEUxQlF6RkRPMEZCUVVFc1NVRkRTaXhEUVVGRE8wRkJRVUVzUlVGRFREdEJRVUZCTEVWQmVrbFZMRTlCUVU4c1MwRkJZVHRCUVVNeFFpeFRRVUZMTzBGQlFVRXNSVUZEVkR0QlFVRkJMRVZCUjFVc1QwRkJUeXhMUVVGaE8wRkJRekZDTEZOQlFVczdRVUZCUVN4RlFVTlVPMEZCUVVFc1JVRkhWU3hMUVVGTExFMUJRV01zVlVGQmJVSTdRVUZETlVNc1UwRkJTeXhEUVVGRExFMUJRVTBzVVVGQlVUdEJRVUZCTEVWQlEzaENPMEZCUVVFc1JVRXdRa0VzVVVGRFNVTXNVMEZEUVN4VlFVTk5PMEZCUTA0c1YwRkJUeXhOUVVGTkxGRkJRVkZCTEZOQlFWRXNVVUZCVVR0QlFVRkJMRVZCUTNwRE8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRXNSVUZMUVN4UFFVRmhPMEZCUTFRc2RVSkJRVXNzVlVGQlV5eFhRVUZYTzBGQlFVRXNSVUZETjBJN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRXNSVUZQUVN4UFFVRlBRU3hUUVVGelFqdEJRVU42UWl4MVFrRkJTeXhWUVVGVExGbEJRVmxCTEU5QlFVMDdRVUZCUVN4RlFVTndRenRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJMRVZCVVVFc1RVRkJUU3hMUVVGNVF6dEJRVU16UXl4WFFVRlBMRWxCUVVrc1VVRkJVU3hEUVVGRExGTkJRVk1zVjBGQlZ6dEJRVU53UXl4NVFrRkJTeXhYUVVGVk8wRkJRVUVzVVVGRFdDeFJRVUZSTEU5QlFVOHNSMEZCUnp0QlFVRkJMRkZCUTJ4Q1F5eE5RVUZMTzBGQlFVRXNVVUZEVER0QlFVRkJMRkZCUTBFc1EwRkJReXhIUVVGSExGRkJRVkU3UVVGRFVpeGpRVUZKTzBGQlEwRXNiMEpCUVZFc2JVSkJRVXNzVjBGQlZTeHBRa0ZCYVVJc1IwRkJSeXhEUVVGRE8wRkJRVUVzVlVGRGFFUXNVMEZCVXl4UFFVRlBPMEZCUTFvc2JVSkJRVThzUzBGQlN6dEJRVUZCTEZWQlEyaENPMEZCUVVFc1VVRkRTanRCUVVGQkxFMUJRMG83UVVGQlFTeEpRVU5LTEVOQlFVTTdRVUZCUVN4RlFVTk1PMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTEVWQlQwRXNUVUZCVFN4WFFVRlhMRXRCUVRSQ08wRkJRM3BETEZkQlFVOHNTVUZCU1N4UlFVRlJMRU5CUVVNc1UwRkJVeXhYUVVGWE8wRkJRM0JETEhsQ1FVRkxMRmRCUVZVN1FVRkJRU3hSUVVOWUxHMUNRVUZMTEZWQlFWTXNUMEZCVHl4SFFVRkhPMEZCUVVFc1VVRkRlRUpCTEUxQlFVczdRVUZCUVN4UlFVTk1PMEZCUVVFc1VVRkRRU3hEUVVGRExFZEJRVWNzVVVGQlVUdEJRVU5TTEdOQlFVazdRVUZEUVN4dlFrRkJVU3hMUVVGTExHMUNRVUZMTEZkQlFWVXNhVUpCUVdsQ0xFZEJRVWNzUTBGQlF6dEJRVUZCTEZWQlEzSkVMRk5CUVZNc1QwRkJUenRCUVVOYUxHMUNRVUZQTEV0QlFVczdRVUZCUVN4VlFVTm9RanRCUVVGQkxGRkJRMG83UVVGQlFTeE5RVU5LTzBGQlFVRXNTVUZEU2l4RFFVRkRPMEZCUVVFc1JVRkRURHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVN4RlFYZERRU3hQUVVGUExGbEJRVmtzUzBGQlpUdEJRVU01UWl4WFFVRlBMRWxCUVVrc1UwRkJVU3hGUVVGRkxFMUJRVTBzU1VGQlNTeERRVUZETzBGQlFVRXNSVUZEY0VNN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTEVWQlRVRXNUMEZCVHl4WFFVRlhMRXRCUVdFN1FVRkRNMElzVlVGQlRTeERRVUZETEVWQlFVVXNTVUZCU1N4SlFVRkpRU3hOUVVGTExHbENRVUZwUWl4SFFVRkhPMEZCUXpGRExGZEJRVThzVTBGQlVTeFpRVUZaTEVsQlFVczdRVUZCUVN4RlFVTndRenRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRU3hGUVZWQkxFOUJRVThzVFVGQlRTeExRVUZsTzBGQlEzaENMRlZCUVUwc1ZVRkJWVVlzUzBGQlNTeFhRVUZYTzBGQlFVRXNUVUZETTBJN1FVRkJRU3hOUVVOQlFTeExRVUZKTEdkQ1FVRm5RaXhqUVVGalFTeExRVUZKTEdkQ1FVRm5RanRCUVVGQkxFbEJRekZFTzBGQlJVRXNWVUZCVFN4RFFVRkRMRVZCUVVVc1MwRkJTeXhIUVVGSExFbEJRVWtzVVVGQlVTeHBRa0ZCYVVJc1RVRkJUU3hKUVVGSk8wRkJRM2hFTEZGQlFVa3NVVUZCVVN4bFFVRmxMRWRCUVVjN1FVRkRNVUlzWVVGQlR5eEpRVUZKTEV0QlFVczdRVUZCUVN4SlFVTndRaXhQUVVGUE8wRkJRMGdzV1VGQlRTeEpRVUZKTEUxQlFVMHNSMEZCUnp0QlFVRkJMRWxCUTNaQ08wRkJRVUVzUlVGRFNqdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUVzUlVGVFFTeFBRVUZQTEV0QlFVc3NTMEZCWVR0QlFVTnlRaXhWUVVGTkxFTkJRVU1zUlVGQlJTeEpRVUZKTEVsQlFVbEZMRTFCUVVzc2FVSkJRV2xDTEVkQlFVYzdRVUZETVVNc1YwRkJUeXhUUVVGUkxFMUJRVTBzU1VGQlN6dEJRVUZCTEVWQlF6bENPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJMRVZCVlVFc1QwRkJUeXhYUVVGWExFdEJRV2RETzBGQlF6bERMRlZCUVUwc1ZVRkJWVVlzUzBGQlNTeFhRVUZYTzBGQlFVRXNUVUZETTBJN1FVRkJRU3hOUVVOQlFTeExRVUZKTEdkQ1FVRm5RaXhqUVVGalFTeExRVUZKTEdkQ1FVRm5RanRCUVVGQkxFbEJRekZFTzBGQlJVRXNWMEZCVHl4SlFVRkpMRkZCUVZFc1EwRkJReXhUUVVGVExGZEJRVmM3UVVGRGNFTXNZMEZCVVN4MVFrRkJkVUlzVFVGQlRTeE5RVUZOTEVOQlFVTXNSMEZCUnl4UlFVRlJPMEZCUTI1RUxGbEJRVWs3UVVGRFFTeG5Ra0ZCVFN4RFFVRkRMRVZCUVVVc1MwRkJTeXhIUVVGSExFbEJRVWtzVVVGQlVTeDNRa0ZCZDBJc1IwRkJSenRCUVVONFJDeGpRVUZKTEZGQlFWRXNaVUZCWlN4SFFVRkhPMEZCUXpGQ0xHMUNRVUZQTEZGQlFWRXNTVUZCU1N4TFFVRkxMRU5CUVVNN1FVRkJRU3hWUVVNM1FpeFBRVUZQTzBGQlEwZ3NiVUpCUVU4c1NVRkJTU3hOUVVGTkxFbEJRVWtzUzBGQlN5eERRVUZETEVOQlFVTTdRVUZCUVN4VlFVTm9RenRCUVVGQkxGRkJRMG9zVTBGQlV5eFBRVUZQTzBGQlExb3NhVUpCUVU4c1MwRkJTenRCUVVGQkxGRkJRMmhDTzBGQlFVRXNUVUZEU2l4RFFVRkRPMEZCUVVFc1NVRkRUQ3hEUVVGRE8wRkJRVUVzUlVGRFREdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUVzUlVGVFFTeFBRVUZQTEZWQlFWVXNTMEZCWVR0QlFVTXhRaXhWUVVGTkxFTkJRVU1zUlVGQlJTeEpRVUZKTEVsQlFVbEZMRTFCUVVzc2FVSkJRV2xDTEVkQlFVYzdRVUZETVVNc1YwRkJUeXhUUVVGUkxGZEJRVmNzU1VGQlN6dEJRVUZCTEVWQlEyNURPMEZCUTBvN1FVRXhUMDlJTEZOQlFVRXNhVUpCUVVGRU8wRkJaMEpJTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRndRa2M3UVVGelFrZ3NaMEpCUVZjc1UwRkJReXhSUVVFMlFqdEJRVU55UXl4VFFVRlBMR2RDUVVGblFra3NUVUZCU3l4clFrRkJhMElzVFVGQlRTeERRVUZETEVkQlFVY3NVVUZCVVR0QlFVTTFSQ3hSUVVGSk8wRkJRMEVzV1VGQlRTeERRVUZETEUxQlFVMHNTVUZCU1N4UFFVRlBMSE5DUVVGelFpeEhRVUZITzBGQlEycEVMRlZCUVVrc1YwRkJWeXhOUVVGTk8wRkJRMnBDTEZsQlFVa3NWMEZCVnl4dFFrRkJTeXhoUVVGWk8wRkJRelZDTEdWQlFVc3NUMEZCVHl4UFFVRlBMRXRCUVVzc1EwRkJRenRCUVVGQkxGRkJRemRDTEU5QlFVODdRVUZEU0N4bFFVRkxMRTlCUVU4c1QwRkJUeXhMUVVGTExFTkJRVU03UVVGQlFTeFJRVU0zUWp0QlFVTkJMRGhDUVVGTExHMURRVUZNTEZkQlFXbENPMEZCUVVFc1RVRkRja0k3UVVGQlFTeEpRVU5LTEZOQlFWTXNUMEZCVHp0QlFVTmFMR05CUVZFc1RVRkJUU3hMUVVGTE8wRkJRVUVzU1VGRGRrSTdRVUZCUVN4RlFVTktMRU5CUVVNN1FVRkRURHRCUVhCRFFTeHJRa0ZCUVVnc1VVRkJRU3hIUVVGVkxGVkJSRllzWVVGRVV6dEJRVTlVTEd0Q1FVRkJRU3hSUVVGQkxFZEJRVlVzVlVGRVZpeGhRVTVUTzBGQldWUXNhMEpCUVVGQkxGRkJRVUVzUjBGQlZTeFJRVVJXTEZkQldGTTdRVUZCUVN4WFFVRk9MR3RDUVVGQlFTeFJRVUZCTEdOQlJGQXNjVUpCUTJFN1FVRkJUaXhyUWtGQlFVRXNVVUZCUVN4SFFVRk5PMEZCUVU0c1NVRkJUU3hWUVVGT08wRkJhVkpCTEZOQlFWTXNWVUZCVlN4TFFVRjVRenRCUVVNdlJDeE5RVUZKTEUxQlFVMHNVVUZCVVN4SFFVRkhMRWRCUVVjN1FVRkRjRUlzVjBGQlR5eFJRVUZSTEZkQlFWY3NSMEZCUnp0QlFVRkJMRVZCUTJwRExFOUJRVTg3UVVGRFNDeFhRVUZQTEZGQlFWRXNWVUZCVlN4SFFVRkhPMEZCUVVFc1JVRkRhRU03UVVGRFNqczdPMEZETVZOQkxEaENRVUZCU1N4TFFVRkJMRzFDUVVGQlF6dEJRVmxCTEhGQ1FVRkRMRk5CUVZNN1FVRkRTQ3hKUVVGTkxGTkJRVTRzVFVGQlRTeG5Ra0ZCWTBRc1RVRkJRU3hSUVVGUkxGRkJSeTlDTEZsQlFVTXNUMEZCVHl4SlFVZFNMR3RDUVVGRExFOUJRVThzU1VGT1pVRXNTMEZCWlR0QlFVRkJMRVZCUVc1RE8wRkJRVUU3UVVGQlFTeHpRa0ZCUVVNc1VVRkJRVHRCUVVGQk8wRkJRVUVzUlVGSlR5eE5RVUZOTzBGQlFVRXNSVUZCUXp0QlFVRkJMRVZCUjFBc1dVRkJXVHRCUVVGQkxFVkJRVU03UVVGQlFTeEZRVVYyUWl4UFFVRlBMRk5CUVZORExGZEJRV3RDTEZWQlFYVkNPMEZCUTNKRUxGVkJRVTBzUlVGQlJTeFBRVUZQTEVsQlFVa3NTVUZCU1N4UFFVRk5MRWxCUVVrc1ZVRkJWU3hOUVVGTk8wRkJRemRETEZWQlFVa3NWVUZCVlN4aFFVRmhMRVZCUVVjc1YwRkJWU3hSUVVGUk8wRkJRMmhFTEZWQlFVa3NUMEZCVHl4aFFVRmhMRVZCUVVjc1VVRkJUeXhSUVVGUk8wRkJRVUVzU1VGRE9VTXNRMEZCUXp0QlFVTkVMRlZCUVUwc1dVRkJXU3hYUVVGWExFZEJRVWM3UVVGRGFFTXNWVUZCVFN4VFFVRlRMRmxCUVZrc1MwRkJTMEVzVTBGQlVUdEJRVU40UXl4WFFVRlBPMEZCUVVFc1JVRkRXRHRCUVVGQkxFVkJSVUVzVDBGQlR5eFJRVUZSUVN4WFFVRnJRaXhWUVVGMVFqdEJRVU53UkN4VlFVRk5MRVZCUVVVc1QwRkJUeXhKUVVGSkxFbEJRVWtzVDBGQlRTeEpRVUZKTEZWQlFWVXNUVUZCVFR0QlFVTTNReXhWUVVGSkxFOUJRVThzWVVGQllTeEZRVUZITEZGQlFVOHNVVUZCVVR0QlFVRkJMRWxCUXpsRExFTkJRVU03UVVGRFJDeFZRVUZOTEZOQlFWTXNWMEZCVnl4TFFVRkxRU3hUUVVGUk8wRkJRM1pETEZkQlFVODdRVUZCUVN4RlFVTllPMEZCUVVFc1JVRkZRU3hQUVVGUExFdEJRVXNzVlVGQmRVSTdRVUZETDBJc1ZVRkJUU3hGUVVGRkxFOUJRVThzU1VGQlNTeEpRVUZKTEU5QlFVMHNTVUZCU1N4VlFVRlZMRTFCUVUwN1FVRkROME1zVlVGQlNTeFBRVUZQTEdGQlFXRXNSVUZCUnl4UlFVRlBMRkZCUVZFN1FVRkJRU3hKUVVNNVF5eERRVUZETzBGQlEwUXNWVUZCVFN4VFFVRlRMRmRCUVZjc1IwRkJSenRCUVVNM1FpeFhRVUZQTzBGQlFVRXNSVUZEV0R0QlFVRkJMRVZCUlVFc1QwRkJaU3hKUVVGSkxFOUJRVzlDTEdGQlFUQkNPMEZCUXpkRUxGVkJRVTBzVVVGQlVTeEpRVUZKTEU5QlFVMDdRVUZEZUVJc1ZVRkJUU3hOUVVGTkxFMUJRVTBzVVVGQlVTeFBRVUZQTEUxQlFVMHNTMEZCU3l4UlFVRlJMRU5CUVVNN1FVRkRja1FzVlVGQlRTeFpRVUZaTEUxQlFVMHNVVUZCVVN4aFFVRmhMRTFCUVUwN1FVRkRMME1zV1VGQlRTeFhRVUZYTEVkQlFVYzdRVUZEY0VJc1dVRkJUU3hYUVVGWExGTkJRVk03UVVGRE1VSXNiMEpCUVdNN1FVRkJRU3hKUVVOc1FpeERRVUZETzBGQlEwUXNWMEZCVHl4RlFVRkZMRTlCUVU4c1MwRkJTeXhOUVVGTkxFMUJRVTBzU1VGQlNTeEZRVUZGTzBGQlFVRXNSVUZETTBNN1FVRkJRU3hGUVVWQkxGRkJRMGxETEZOQlEwRXNWVUZEVFR0QlFVTk9MRmRCUVU4c1RVRkJUU3hSUVVGUlFTeFRRVUZSTEZGQlFWRTdRVUZCUVN4RlFVTjZRenRCUVVGQkxFVkJSVUVzVTBGQlV6dEJRVU5NTEZOQlFVc3NWVUZCVlR0QlFVRkJMRVZCUTI1Q08wRkJRMG83UVVGNFJFOUdMRk5CUVVFc2FVSkJRVUZFTzBGQlNVZ3NhMEpCUVVGRExGRkJRVUVzUjBGQlZTeFBRVVJXTEZWQlNGTTdRVUZQVkN4clFrRkJRVUVzVVVGQlFTeEhRVUZWTEdGQlJGWXNaMEpCVGxNN1FVRkJRU3hUUVVGT0xHdENRVUZCUVN4UlFVRkJMRmxCUkZBc2JVSkJRMkU3UVVGQlRpeHJRa0ZCUVVFc1VVRkJRU3hIUVVGTk8wRkJRVTRzU1VGQlRTeFJRVUZPTzBGQk1FUkJMRWxCUVUwc1JVRkJSU3hWUVVGVkxGTkJRVk1zUzBGQlN5eEpRVUZKTzBGQmNVSndReXhUUVVGVExGZEJRMW9zVFVGRFFTeE5RVU5CTEZWQlEwRXNWMEZEVnp0QlFVTllMRTFCUVVrc1pVRkJaVHRCUVVOdVFpeE5RVUZKTEZGQlFUUkNPMEZCUTJoRExGRkJRVTBzWTBGQll5eHZRa0ZCU1N4SlFVRm5RanRCUVVWNFF5eFhRVUZUUnl4TFFVRkpMRTlCUVZVN1FVRkRia0lzVVVGQlNTeFZRVUZWTEdOQlFXTTdRVUZEZUVJc2NVSkJRV1U3UVVGRFppeFpRVUZOTEV0QlFVc3NWMEZCVnl4RlFVRkZMRkZCUVZFc1EwRkJReXhQUVVGUExFZEJRVWNzUTBGQlF6dEJRVUZCTEVsQlEyaEVPMEZCUVVFc1JVRkRTanRCUVVWQkxGZEJRVk1zVlVGQlZUdEJRVU5tTEZGQlFVa3NUMEZCVHl4aFFVRmhMRmxCUVZrN1FVRkRhRU1zV1VGQlRTeFJRVUZSTEZOQlFWTXNXVUZCV1R0QlFVTnVReXhWUVVGSkxHbENRVUZwUWl4VFFVRlRPMEZCUXpGQ0xHTkJRVTBzUzBGQlMwRXNTVUZCUnp0QlFVRkJMRTFCUTJ4Q0xFOUJRVTg3UVVGRFNDeFJRVUZCUVN4TFFVRkpMRXRCUVVzN1FVRkJRU3hOUVVOaU8wRkJRVUVzU1VGRFNpeFBRVUZQTzBGQlEwZ3NaMEpCUVZVc1VVRkJVU3hGUVVGRkxFdEJRVXNzUTBGQlF5eFhRVUZYTzBGQlEycERMRkZCUVVGQkxFdEJRVWtzV1VGQldTeFZRVUZWTEZGQlFWRXNXVUZCV1N4SlFVRkxMRTFCUVZrN1FVRkJRU3hOUVVOdVJTeERRVUZETzBGQlFVRXNTVUZEVER0QlFVRkJMRVZCUTBvN1FVRkZRU3hYUVVGVExGVkJRVlVzVlVGQmEwTTdRVUZEYWtRc1VVRkJTU3haUVVGWkxGTkJRVk1zUjBGQlJ6dEJRVU40UWl4cFFrRkJWeXhQUVVGUE8wRkJRMnhDTEdOQlFWRXNXVUZCV1N4VFFVRlRMRWxCUVVrN1FVRkJRU3hKUVVOeVF6dEJRVVZCTEdkQ1FVRlpMRWxCUVVrc1VVRkJVVHRCUVVWNFFpeFhRVUZQTEUxQlFVMDdRVUZEVkN4clFrRkJXU3hQUVVGUExGRkJRVkU3UVVGRE0wSXNWVUZCU1N4WlFVRlpMRk5CUVZNc1MwRkJTeXhQUVVGUE8wRkJRMnBETEhOQ1FVRmpMRXRCUVVzN1FVRkRia0lzWjBKQlFWRTdRVUZCUVN4TlFVTmFPMEZCUVVFc1NVRkRTanRCUVVGQkxFVkJRMG83UVVGRlFTeFRRVUZQTEVsQlFVa3NVMEZCVXl4TlFVRk5MR05CUVdNc1UwRkJVenRCUVVOeVJEczdPMEZETVVsQkxFOUJRVTlETEZkQlFWVTdPenRCUTBwcVFpeFBRVUZQTEdWQlFXVTdRVUZSVUN4VFFVRlNMRkZCUVhsQ0xFVkJRVVVzVjBGQlZ5eEpRVUZKTEZWQlFWVXNSMEZCUnl4SFFVRnBRanRCUVVNM1JTeFJRVUZOTEU5QlFVOHNWVUZCVlN4TFFVRkxMRmxCUVZrN1FVRkZlRU1zVVVGQlRTeFZRVUZWTEVsQlFVbERMRXRCUVVrc1NVRkJTU3hGUVVGRkxHRkJRV0ZCTEV0QlFVa3NXVUZCV1N4WlFVRlpMRkZCUVdsQ0xFTkJRVU03UVVGRGVrWXNVVUZCVFN4WlFVRjVRaXhEUVVGRE8wRkJSMmhETEZkQlFWTXNhMEpCUVd0Q08wRkJSVE5DTEdWQlFWY3NVVUZCVVN4WFFVRlhPMEZCUXpWQ0xHTkJRVkVzVDBGQlR5eEpRVUZKTzBGQlFVRXNTVUZEY2tJN1FVRkRRU3hqUVVGVkxGTkJRVk03UVVGSGJrSXNWVUZCVFN4UlFVRlJMRXRCUVVzc1ZVRkJWVHRCUVVNM1FpeGxRVUZYTEZGQlFWRXNUMEZCVHp0QlFVTjRRaXhaUVVGTkxFOUJRVThzUzBGQlN5eFZRVUZWTzBGQlF6VkNMRlZCUVVrc1EwRkJReXhMUVVGTk8wRkJSVmdzV1VGQlRTeFJRVUZSTEVsQlFVbEJMRXRCUVVrc1RVRkJUU3hGUVVGRkxFOUJRVThzVFVGQlRTeFpRVUZaTEZOQlFWTXNRMEZCUXp0QlFVTnFSU3haUVVGTkxGVkJRVlVzU1VGQlNVRXNTMEZCU1N4aFFVRmhMRVZCUVVVc1VVRkJVU3hGUVVGRkxFTkJRVU03UVVGRGJFUXNZMEZCVVN4UlFVRlJMRmRCUVZjc1RVRkJUVHRCUVVNdlFpeGpRVUZOTEZsQlFWa3NTMEZCU3l4bFFVRmxPMEZCUTNSRExGbEJRVWtzVjBGQlZ6dEJRVU5pTEdkQ1FVRk5MR05CUVdNc1NVRkJTVUVzUzBGQlNTeFpRVUZaTEVWQlFVVXNXVUZCV1N4WFFVRlhMRmRCUVZjc1RVRkJUU3hEUVVGRE8wRkJRMjVHTEhOQ1FVRlpMRmRCUVZjc1MwRkJTenRCUVVNMVFpeHpRa0ZCV1N4dlFrRkJiMElzV1VGQldTeExRVUZMTEdsQ1FVRnBRaXhEUVVGRE8wRkJRMjVGTEhOQ1FVRlpMRTFCUVUwN1FVRkJRU3hSUVVOd1FqdEJRVUZCTEUxQlEwWXNRMEZCUXp0QlFVTkVMRmxCUVUwc1pVRkJaU3hQUVVGUE8wRkJSVFZDTEdOQlFWRXNUMEZCVHl4TFFVRkxPMEZCUTNCQ0xHZENRVUZWTEV0QlFVc3NTMEZCU3p0QlFVRkJMRWxCUTNSQ08wRkJRVUVzUlVGRFJqdEJRVWxGTEd0Q1FVRm5RanRCUVVkb1FpeFBRVUZMTEZGQlFWRXNZMEZCWXl4bFFVRmxPMEZCUXpGRExFOUJRVXNzVVVGQlVTeG5Ra0ZCWjBJc1pVRkJaVHRCUVVVMVF5eFRRVUZQTzBGQlExUTdPenRCUTNaRVFTeFBRVUZQUXl4VlFVRlRPMEZCUTJoQ0xFOUJRVTlETEZsQlFWYzdPenRCUTBSc1FpeFBRVUZQUXl4VlFVRlRPMEZCUTJoQ0xFOUJRVTlETEZWQlFWTTdRVUZMYUVJc1NVRkJUU3hOUVVGTkxFMUJRVTBzVDBGQlR5eFZRVUZWTEVWQlFVVXNTMEZCU3l4RFFVRkRMRTFCUVUwc1JVRkJSU3hQUVVGUExFVkJRVVVzVFVGQlRTeE5RVUZOTEVsQlFVazdRVUZGTlVVc1NVRkJUU3hsUVVGbExFbEJRVWxETEV0QlFVa3NVVUZCVVR0QlFVVnlReXhKUVVGTkxFVkJRVVVzYTBKQlFXdENMRWxCUVVrc1UwRkJVenRCUVVGQkxFVkJRMjVETEZWQlFWVXNUVUZCVFR0QlFVTmFMRkZCUVVrc1UwRkJVMEVzUzBGQlNTeFBRVUZQTzBGQlEzQkNMRmxCUVUwc1QwRkJaMFE3UVVGQlFTeFJRVU5zUkR0QlFVRkJMRkZCUTBFN1FVRkJRU3hOUVVOS08wRkJRMEVzWVVGQlR6dEJRVUZCTEVsQlExZzdRVUZEUVN4UlFVRkpMRTlCUVU4c1UwRkJVeXhKUVVGSkxHRkJRV0U3UVVGRGFrTXNXVUZCVFN4UFFVRnpSRHRCUVVGQkxGRkJRM2hFTzBGQlFVRXNVVUZEUVR0QlFVRkJMRkZCUTBFN1FVRkJRU3hOUVVOS08wRkJRMEVzWVVGQlR6dEJRVUZCTEVsQlExZzdRVUZCUVN4RlFVTktPMEZCUVVFc1JVRkRRU3hQUVVGUExGRkJRVkVzUzBGQlN6dEJRVU5vUWl4UlFVRkpMRVZCUVVVc2EwSkJRV3RDUVN4TFFVRkpMRk5CUVZNN1FVRkRha01zWVVGQlR5eFJRVUZSTEV0QlFVc3NUVUZCVFN4eFFrRkJjVUlzVFVGQlRTeEZRVUZGTEVOQlFVTTdRVUZCUVN4SlFVTTFSRHRCUVVWQkxGVkJRVTBzVFVGQlRTeFBRVUZQTEd0Q1FVRnJRanRCUVVOeVF5eFJRVUZKTzBGQlJVb3NWVUZCVFVNc1ZVRkJVeXhEUVVGRFF5eFRRVUZuUWp0QlFVTTFRaXhWUVVGSkxFTkJRVU5CTEV0QlFVa3NVMEZCVXl4SFFVRkhMRXRCUVVzc1EwRkJRMEVzUzBGQlNTeFRRVUZUTEVkQlFVY3NSMEZCUnp0QlFVTXhReXhSUVVGQlFTeFBRVUZOTEU5QlFVOUJMRWxCUVVjN1FVRkJRU3hOUVVOd1FqdEJRVVZCTEZWQlFVa3NVMEZCVlN4TFFVRkpMR2RDUVVGblFpeFJRVUZSTzBGQlJURkRMR2xDUVVGWExFbEJRVWxHTEV0QlFVa3NXVUZCV1R0QlFVTXZRaXhsUVVGVExHbENRVUZwUWtVc1NVRkJSenRCUVVNM1FpeFZRVUZKTEdGQlFXRXNWVUZCVlVZc1MwRkJTU3cwUWtGQk5FSTdRVUZCUVN4SlFVTXZSRHRCUVVWQkxGRkJRVWtzWlVGQlpTeFZRVUZWTzBGQlEzcENMRTFCUVVGRExGRkJRVThzU1VGQlNTeEpRVUZKTEVOQlFVTTdRVUZEYUVJc1dVRkJUU3hWUVVGVkxFbEJRVWtzVlVGQlZTeE5RVUZOUVN4UlFVRlBMRWxCUVVrc1NVRkJTU3hEUVVGRExFTkJRVU03UVVGRGNrUXNaMEpCUVZVc1QwRkJUenRCUVVGQkxFbEJRM0pDTEU5QlFVODdRVUZEU0N4TlFVRkJRU3hSUVVGUExFZEJRVWM3UVVGQlFTeEpRVU5rTzBGQlFVRXNSVUZEU2p0QlFVRkJMRVZCUlVFc1UwRkJVeXhSUVVGUkxGZEJRVmM3UVVGRGVFSXNVVUZCU1N4RlFVRkZMR3RDUVVGclFrUXNTMEZCU1N4VFFVRlRPMEZCUTJwRExHRkJRVThzVVVGQlVTeExRVUZMTEUxQlFVMHNNa0pCUVRKQ0xFMUJRVTBzUlVGQlJTeERRVUZETzBGQlFVRXNTVUZEYkVVN1FVRkZRU3hSUVVGSkxIRkNRVUZ4UWl4VlFVRlZPMEZCUXk5Q0xHRkJRVThzWVVGQllTeFZRVUZWTEVsQlFVa3NSVUZCUlN4TlFVRk5MRXRCUVVzN1FVRkRMME1zV1VGQlRTeFZRVUZWTEZWQlFWVTdRVUZCUVN4UlFVTjBRaXhOUVVGUExFOUJRVThzWVVGQllTeFZRVUZWTEVsQlFVa3NSVUZCUlN4TlFVRk5MRXRCUVVzN1FVRkJRU3hOUVVNeFJEdEJRVU5CTEdkQ1FVRlZMRTlCUVU4N1FVRkJRU3hKUVVOeVFpeFBRVUZQTzBGQlEwZ3NZVUZCVHl4blFrRkJaMElzVlVGQlZTeE5RVUZOTEV0QlFVc3NRMEZCUXp0QlFVRkJMRWxCUTJwRU8wRkJRVUVzUlVGRFNqdEJRVUZCTEVWQlJVRXNVMEZCVXl4TlFVRk5PMEZCUTFnc1YwRkJUMEVzUzBGQlNTeE5RVUZOTEVsQlFVa3NTMEZCU3l4VFFVRlRMRU5CUVVNN1FVRkJRU3hGUVVONFF6dEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRU3hGUVU5QkxGbEJRVmtzVVVGQlVTeFBRVUZQTzBGQlEzWkNMRkZCUVVrc2EwSkJRV3RDUVN4TFFVRkpMRlZCUVZVc2FVSkJRV2xDUVN4TFFVRkpMR2xDUVVGcFFqdEJRVU4wUlN4aFFVRlBMRTlCUVU4c2EwSkJRV3RDTEV0QlFVczdRVUZCUVN4SlFVTjZRenRCUVVWQkxGRkJRVWtzWlVGQlpTeFZRVUZWTEU5QlFVOHNUMEZCVHl4aFFVRmhMRmxCUVZrN1FVRkRhRVVzWVVGQlR5eFBRVUZQTEZWQlFWVXNTVUZCU1R0QlFVRkJMRWxCUTJoRE8wRkJSVUVzVVVGQlNTeFpRVUZaTEZWQlFWVXNUMEZCVHl4UFFVRlBMRlZCUVZVc1dVRkJXVHRCUVVNeFJDeGhRVUZQTEU5QlFVOHNUMEZCVHl4TFFVRkxPMEZCUVVFc1NVRkRPVUk3UVVGRlFTeFZRVUZOTEUxQlFVMHNhVUpCUVdsQ0xFdEJRVXNzVTBGQlV5eE5RVUZOTEVWQlFVVTdRVUZCUVN4RlFVTjJSRHRCUVVGQkxFVkJRMEVzV1VGQldTeFJRVUZSTEU5QlFVODdRVUZEZGtJc1VVRkRTU3hwUWtGQmFVSkJMRXRCUVVrc1kwRkRja0lzYjBKQlFXOUNMRlZCUTNCQ0xFOUJRVThzVDBGQlR5eHRRa0ZCYlVJc1dVRkRia003UVVGRFJTeGhRVUZQTEU5QlFVOHNaVUZCWlN4TFFVRkxPMEZCUVVFc1NVRkRkRU03UVVGRlFTeFJRVU5KTEdsQ1FVRnBRa0VzUzBGQlNTeFZRVU55UWl4clFrRkJhMEpCTEV0QlFVa3NVMEZEZEVJc1RVRkJUU3hUUVVGVExFMUJRMllzVFVGQlRTeFRRVUZUTEZGQlEyWXNVVUZCVVN4TFFVRkxMRTFCUVUwc1UwRkRja0k3UVVGRFJTeGhRVUZQTEU5QlFVOHNWVUZCVlN4UFFVRlBMRTFCUVUwc1NVRkJTVHRCUVVGQkxFbEJRemRETzBGQlJVRXNVVUZCU1N4cFFrRkJhVUpCTEV0QlFVa3NWMEZCVnl4clFrRkJhMEpCTEV0QlFVa3NXVUZCV1R0QlFVTnNSU3hoUVVGUExFOUJRVThzV1VGQldTeExRVUZMTzBGQlFVRXNTVUZEYmtNN1FVRkZRU3hSUVVOSkxHbENRVUZwUWtjc1MwRkJTU3hqUVVOd1FpeHJRa0ZCYTBKSUxFdEJRVWtzWTBGQll5eHJRa0ZCYTBKQkxFdEJRVWtzWTBGRE4wUTdRVUZEUlN4aFFVRlBMRTlCUVU4c1pVRkJaU3hMUVVGTE8wRkJRVUVzU1VGRGRFTTdRVUZGUVN4UlFVRkpMR2xDUVVGcFFrY3NTMEZCU1N4WlFVRlpMR3RDUVVGclFrRXNTMEZCU1N4TlFVRk5PMEZCUVVFc1NVRkZha1U3UVVGRlFTeFJRVUZKTEdsQ1FVRnBRa2dzUzBGQlNTeFZRVUZWTEd0Q1FVRnJRa0VzUzBGQlNTeGhRVUZoTzBGQlEyeEZMR0ZCUVU4c1QwRkJUeXhYUVVGWExFdEJRVXM3UVVGQlFTeEpRVU5zUXp0QlFVVkJMRkZCUVVrc2FVSkJRV2xDUVN4TFFVRkpMR05CUVdNc2EwSkJRV3RDUVN4TFFVRkpMRlZCUVZVN1FVRkRia1VzWVVGQlR5eFBRVUZQTEZkQlFWY3NTMEZCU3p0QlFVRkJMRWxCUTJ4RE8wRkJSVUVzVVVGQlNTeHJRa0ZCYTBKQkxFdEJRVWtzVjBGQlZ6dEJRVU5xUXl4aFFVRlBMRTlCUVU4c1owSkJRV2RDTEdOQlFXTXNUMEZCVHl4UlFVRlJMRXRCUVVzc1EwRkJRenRCUVVGQkxFbEJRM0pGTzBGQlJVRXNWVUZCVFN4TlFVRk5MR05CUVdNc1MwRkJTeXhQUVVGUExFMUJRVTBzUlVGQlJUdEJRVUZCTEVWQlEyeEVPMEZCUTBvc1EwRkJRenM3TzBGRU1VbEVMRTlCUVU4c1QwRkJUeXh0UWtGQmJVSTdRVUZCUVN4RlFVTTNRaXhMUVVGTFNTeExRVUZKTzBGQlFVRXNSVUZEVkN4UlFVRlJRU3hMUVVGSk8wRkJRVUVzUlVGRFdpeFhRVUZYUVN4TFFVRkpPMEZCUVVFN1FVRkJRU3hGUVVWbUxHRkJRV0ZCTEV0QlFVazdRVUZCUVN4RlFVTnFRaXhQUVVGUFFTeExRVUZKTzBGQlFVRXNSVUZEV0N4UFFVRlBRU3hMUVVGSk8wRkJRVUVzUlVGRFdDeFBRVUZQUVN4TFFVRkpPMEZCUVVFc1JVRkRXQ3hWUVVGVlFTeExRVUZKTzBGQlFVRXNSVUZEWkN4WlFVRlpRU3hMUVVGSk8wRkJRVUVzUlVGRGFFSXNVMEZCVTBFc1MwRkJTVHRCUVVGQkxFVkJRMklzVTBGQlUwRXNTMEZCU1R0QlFVRkJMRVZCUTJJc1ZVRkJWVUVzUzBGQlNUdEJRVUZCTEVWQlEyUXNaMEpCUVdkQ1FTeExRVUZKTzBGQlFVRXNSVUZEY0VJc1VVRkJVVU1zVDBGQlRUdEJRVUZCTEVWQlEyUXNUMEZCVDBRc1MwRkJTVHRCUVVGQkxFVkJRMWdzVVVGQlVVRXNTMEZCU1R0QlFVRkJMRVZCUTFvc1kwRkJZMEVzUzBGQlNUdEJRVUZCTEVWQlEyeENMRkZCUVZGRExFOUJRVTA3UVVGRGJFSXNRMEZCUXpzN08wRkZlRUpqTEZOQlFWSXNaMEpCUVdsRE8wRkJRM1JETEZGQlFVMHNWVUZEU2l4dlFrRkJReXhoUVVGUkxFOUJRVTBzWlVGRFlpdzRRa0ZCUXl4WFFVRlJMRWRCUTFnN1FVRkhSaXhSUVVGTkxGTkJRMG83UVVGQlFTeEpRVUZETzBGQlFVRTdRVUZCUVN4TlFVTkRMRTlCUVUwN1FVRkJRU3hOUVVOT0xGZEJRVmRETEV0QlFVa3NWVUZCVlR0QlFVRkJMRTFCUlhoQ08wRkJRVUU3UVVGQlFTeEZRVU5JTzBGQlNVWXNWVUZCVVN4UlFVRlJMRkZCUVZFc1RVRkJUVHRCUVVNMVFpeFhRVUZQTEZsQlFWbEJMRXRCUVVrc1ZVRkJWVHRCUVVGQkxFVkJRMjVETEVOQlFVTTdRVUZGUkN4VlFVRlJMRkZCUVZFc1VVRkJVU3hOUVVGTk8wRkJRelZDTEZkQlFVOHNXVUZCV1VFc1MwRkJTU3hWUVVGVk8wRkJRVUVzUlVGRGJrTXNRMEZCUXp0QlFVVkVMRk5CUVU4N1FVRkRWRHM3TzBGRE5VSkJMRTlCUVU4c1VVRkJVVHRCUVVWQkxGTkJRVklzYTBKQlFXMURPMEZCUTNoRExGRkJRVTBzVVVGQlVTeEhRVUZITEZsQlFWazdRVUZETjBJc1VVRkJUU3hSUVVGUkxFbEJRVWxETEV0QlFVa3NUVUZCVFR0QlFVRkJMRWxCUXpGQ0xGRkJRVkZCTEV0QlFVa3NUVUZCVFR0QlFVRkJMRVZCUTNCQ0xFTkJRVU03UVVGRlJDeFJRVUZOTEdGQlFXRXNUVUZCVFR0QlFVTjJRaXhWUVVGTkxGVkJRVlVzVFVGQlRTeHZRa0ZCYjBJN1FVRkRNVU1zVVVGQlNTeERRVUZETEZGQlFWTTdRVUZGWkN4UlFVRkpMRkZCUVZFc1RVRkJUVHRCUVVOb1FpeFpRVUZOTEZGQlFWRTdRVUZCUVN4SlFVTm9RaXhYUVVGWExGRkJRVkVzVlVGQlZTeE5RVUZOTzBGQlEycERMRmxCUVUwc1VVRkJVVHRCUVVGQkxFbEJRMmhDTEZkQlFWY3NVVUZCVVN4VlFVRlZMRTFCUVUwN1FVRkRha01zV1VGQlRTeFJRVUZSTzBGQlFVRXNTVUZEYUVJc1QwRkJUenRCUVVOTUxGbEJRVTBzVVVGQlVUdEJRVUZCTEVsQlEyaENPMEZCUVVFc1JVRkRSanRCUVVkQkxHRkJRVmM3UVVGSFdDeFJRVUZOTEc5Q1FVRnZRaXhGUVVGRkxGRkJRVkVzYTBKQlFXdENMRlZCUVZVN1FVRkRhRVVzVVVGQlRTeHZRa0ZCYjBJc1JVRkJSU3hSUVVGUkxHZENRVUZuUWl4VlFVRlZPMEZCUlRsRUxGTkJRVTg3UVVGRFZEczdPMEZETDBKQkxFOUJRVThzWTBGQll6dEJRVVZPTEZOQlFWSXNiMEpCUVhGRE8wRkJRekZETEZGQlFVMHNUMEZCVHl4VFFVRlRMRmxCUVZrN1FVRkRiRU1zVFVGQlNTeFpRVUZaTzBGQlEyaENMRkZCUVUwc2NVSkJRVFpETEVOQlFVTTdRVUZGY0VRc1VVRkJUU3hQUVVGUExFbEJRVWxETEV0QlFVa3NUVUZCVFR0QlFVRkJMRWxCUTNwQ0xFOUJRVTg3UVVGQlFUdEJRVUZCTEVWQlExUXNRMEZCUXp0QlFVVkVMRkZCUVUwc1UwRkJVeXhKUVVGSlFTeExRVUZKTEU5QlFVODdRVUZCUVN4SlFVTTFRaXhSUVVGUlFTeExRVUZKTEUxQlFVMDdRVUZCUVN4SlFVTnNRaXhQUVVGUE8wRkJRVUVzUlVGRFZDeERRVUZETzBGQlJVUXNVMEZCVHl4alFVRmpMRzFDUVVGdFFqdEJRVVY0UXl4VFFVRlBMRkZCUVZFc1YwRkJWeXhOUVVGTk8wRkJRemxDTEZGQlFVa3NWVUZCVlN4TFFVRkxMRmxCUVZrN1FVRkRMMElzWlVGQlZ5eFZRVUZWTEZOQlFWRTdRVUZEZWtJc1ZVRkJSeXhYUVVGVk8wRkJRMVFzWTBGQlRTeExRVUZMTEcxQ1FVRnRRaXhQUVVGUExFOUJRVTg3UVVGRE5VTXNZVUZCU3l4UlFVRlJMR3REUVVGclF5eEZRVUZGTEdOQlFXTXNUMEZCVHl4UFFVRlBMRVZCUVVVN1FVRkRMMFVzWlVGQlR5eHRRa0ZCYlVJc1QwRkJUeXhQUVVGUE8wRkJRVUVzVFVGRE5VTXNUMEZEU1R0QlFVTkJMREpDUVVGdFFpeFBRVUZQTEU5QlFVOHNTVUZCU1N4UFFVRlBMRlZCUVZVN1FVRkRkRVFzWVVGQlN5eFJRVUZSTEc5RVFVRnZSQ3hQUVVGUExFOUJRVThzUlVGQlJUdEJRVUZCTEUxQlEzSkdPMEZCUVVFc1NVRkRTanRCUVVWQkxHZENRVUZaTEVOQlFVTTdRVUZEWWl4VFFVRkxMRkZCUVZFc1dVRkJXU3hYUVVGTk8wRkJRVUVzUlVGRGFrTXNRMEZCUXp0QlFVVkVMRk5CUVU4N1FVRkRWRHM3TzBGRGNrTkJMRTlCUVU4c1lVRkJZVHRCUVVOd1FpeFBRVUZQUXl4WFFVRlZPMEZCUlVZc1UwRkJVaXh0UWtGQmIwTTdRVUZEZWtNc1VVRkJUU3hWUVVGVkxGRkJRVkVzV1VGQldUdEJRVU53UXl4UlFVRk5MRkZCUVZFc1NVRkJTVU1zUzBGQlNTeE5RVUZOTzBGQlFVRXNTVUZETVVJc1VVRkJVVUVzUzBGQlNTeE5RVUZOTzBGQlFVRXNSVUZEY0VJc1EwRkJRenRCUVVWRUxGRkJRVTBzWVVGQllTeE5RVUZOTzBGQlEzWkNMRmxCUVZFc1VVRkJVU3haUVVGWkxFZEJRVWM3UVVGQlFUdEJRVUZCTEUxQlJUTkNMRXRCUVVzN1FVRkRSQ3hqUVVGTkxGRkJRVkU3UVVGRFpEdEJRVUZCTzBGQlFVRXNUVUZGU2l4TFFVRkxPMEZCUTBRc1dVRkJTU3hYUVVGWExGRkJRVkVzUzBGQlN6dEJRVU0xUWl4WlFVRkpMRmRCUVZjc1NVRkJSenRCUVVOa0xHZENRVUZOTEZGQlFWRTdRVUZCUVN4UlFVTnNRaXhYUVVOUkxGZEJRVmNzU1VGQlJ6dEJRVU5zUWl4blFrRkJUU3hSUVVGUk8wRkJRVUVzVVVGRGJFSXNWMEZEVVN4WFFVRlhMRWxCUVVjN1FVRkRiRUlzWjBKQlFVMHNVVUZCVVR0QlFVRkJMRkZCUTJ4Q0xGZEJRMUVzVjBGQlZ5eEpRVUZITzBGQlEyeENMR2RDUVVGTkxGRkJRVkU3UVVGQlFTeFJRVU5zUWl4WFFVTlJMRmRCUVZjc1IwRkJSVHRCUVVOcVFpeG5Ra0ZCVFN4UlFVRlJPMEZCUVVFc1VVRkRiRUk3UVVGRFFUdEJRVUZCTzBGQlFVRXNUVUZGU2p0QlFVTkpMR05CUVUwc1VVRkJVVHRCUVVOa08wRkJRVUVzU1VGRFVqdEJRVUZCTEVWQlEwWTdRVUZIUlN4aFFVRlhPMEZCUjFnc1ZVRkJVU3hSUVVGUkxHMUNRVUZ0UWl4VlFVRlZPMEZCUXpkRExGVkJRVkVzVVVGQlVTeHBRa0ZCYVVJc1ZVRkJWVHRCUVVNelF5eFZRVUZSTEZGQlFWRXNiVUpCUVcxQ0xGVkJRVlU3UVVGSE4wTXNSVUZCUVVRc1RVRkJTeXhaUVVGWlFTeE5RVUZMTEd0Q1FVRnJRaXhMUVVGTkxFMUJRVTA3UVVGRGNFUXNVVUZCU1N4UlFVRlJMRmxCUVZrc1RVRkJUU3hIUVVGSE8wRkJRemRDTEdsQ1FVRlhPMEZCUVVFc1NVRkRaanRCUVVOQkxGZEJRVTg3UVVGQlFTeEZRVU5RTEVOQlFVTTdRVUZGUkN4VFFVRlBPMEZCUTFnN096dEJRM3BFUVN4UFFVRlBMR1ZCUVdVN096dEJRMFZRTEZOQlFWSXNWVUZEVEN4UlFVTkJMR2RDUVVOWk8wRkJRMW9zVVVGQlRTeGhRVUZoTEU5QlFVOHNVMEZCVXl4TFFVRkxPMEZCUlhoRExGRkJRVTBzWTBGQll5eEpRVUZKUlN4TFFVRkpMRTFCUVUwN1FVRkJRU3hKUVVOb1F5eFBRVUZQTEU5QlFVOHNZMEZCWXl4SlFVRkpMR05CUVdNN1FVRkJRU3hKUVVNNVF5eFJRVUZSUVN4TFFVRkpMRTFCUVUwN1FVRkJRU3hKUVVOc1FpeFJRVUZSTzBGQlFVRXNSVUZEVml4RFFVRkRPMEZCUTBRc1kwRkJXU3hqUVVGakxHRkJRV0U3UVVGSGRrTXNVVUZCVFN4bFFVRmxMRWxCUVVsQkxFdEJRVWtzVDBGQlR6dEJRVUZCTEVsQlEyeERMRTlCUVU4c1QwRkJUeXhqUVVGakxFbEJRVWtzWlVGQlpUdEJRVUZCTEVsQlF5OURMRkZCUVZGQkxFdEJRVWtzVFVGQlRUdEJRVUZCTEVWQlEzQkNMRU5CUVVNN1FVRkZSQ3hOUVVGSkxGRkJRVEpETzBGQlJTOURMR1ZCUVdFc1VVRkJVU3hYUVVGWExFMUJRVTA3UVVGRGNFTXNVVUZCU1N4UFFVRlBMR05CUVdNc1IwRkJSenRCUVVNeFFpeFZRVUZKTzBGQlEwWXNaVUZCVHl4clFrRkJhMElzU1VGQlNUdEJRVUZCTEUxQlF5OUNMRk5CUVZNc1MwRkJTenRCUVVOYUxHTkJRVTBzYzBKQlFYTkNMRWRCUVVjc1JVRkJSVHRCUVVGQkxFMUJRMjVETzBGQlFVRXNTVUZGUml4UFFVRlBPMEZCUTB3c1ZVRkJTVHRCUVVOR0xHVkJRVThzWlVGQlpTeEpRVUZKTzBGQlF6RkNMRzlDUVVGWkxGRkJRVkU3UVVGRGNFSXNaMEpCUVZFc1VVRkJVU3hMUVVGUExFMUJRVTA3UVVGRE0wSXNZMEZCUnl4RFFVRkRMRTlCUVU4c1kwRkJZeXhIUVVGRk8wRkJRM3BDTEhkQ1FVRlpMRkZCUVZFN1FVRkJRU3hWUVVOMFFqdEJRVU5CTEd0Q1FVRlJPMEZCUVVFc1VVRkRWaXhEUVVGRE8wRkJRVUVzVFVGRFNDeFRRVUZUTEV0QlFVczdRVUZEV2l4alFVRk5MSE5DUVVGelFpeEhRVUZITEVWQlFVVTdRVUZCUVN4TlFVTnVRenRCUVVGQkxFbEJRMFk3UVVGQlFTeEZRVU5HTEVOQlFVTTdRVUZIUkN4VFFVRlBMRkZCUVZFc2NVSkJRWEZDTEUxQlFVMDdRVUZEZUVNc1VVRkJSeXhQUVVGUExHTkJRV01zUjBGQlJUdEJRVU40UWl4VlFVRkhMRTlCUVUwN1FVRkRVQ3hqUVVGTkxFOUJRVTg3UVVGRFlpeG5Ra0ZCVVR0QlFVRkJMRTFCUTFZN1FVRkRRU3hWUVVGSkxHVkJRV2RDTEdkQ1FVRmxPMEZCUVVFc1NVRkRja003UVVGQlFTeEZRVU5HTEVOQlFVTTdRVUZIUkN4UlFVRk5MRmRCUVZjc1NVRkJTVUVzUzBGQlNTeFRRVUZUTzBGQlFVRXNTVUZEYUVNc1kwRkJZenRCUVVGQkxFbEJRMlFzYVVKQlFXbENRU3hMUVVGSkxIVkNRVUYxUWp0QlFVRkJMRWxCUXpWRExIRkNRVUZ4UWp0QlFVRkJPMEZCUVVFc1JVRkRka0lzUTBGQlF6dEJRVU5FTEZkQlFWTXNWVUZCVlN4WlFVRlpPMEZCUlM5Q0xGRkJRVTBzWVVGQllTeEpRVUZKUVN4TFFVRkpMRTFCUVUwN1FVRkJRU3hKUVVNdlFpeFBRVUZQTzBGQlFVRXNTVUZEVUN4UlFVRlJRU3hMUVVGSkxFMUJRVTA3UVVGQlFTeEpRVU5zUWl4UlFVRlJPMEZCUVVFc1JVRkRWaXhEUVVGRE8wRkJSVVFzVVVGQlRTeGhRVUZoTEVsQlFVbEJMRXRCUVVrc1NVRkJTVHRCUVVGQkxFbEJRemRDTEdGQlFXRkJMRXRCUVVrc1dVRkJXVHRCUVVGQkxFbEJRemRDTEZOQlFWTTdRVUZCUVN4RlFVTllMRU5CUVVNN1FVRkRSQ3hoUVVGWExFOUJRVThzVlVGQlZUdEJRVU0xUWl4aFFVRlhMRTlCUVU4c1YwRkJWenRCUVVjM1FpeFJRVUZOTEZOQlFWTXNTVUZCU1VFc1MwRkJTU3hQUVVGUE8wRkJRVUVzU1VGRE5VSXNUMEZCVHp0QlFVRkJMRWxCUTFBc1VVRkJVVUVzUzBGQlNTeE5RVUZOTzBGQlFVRXNSVUZEY0VJc1EwRkJRenRCUVVWRUxGTkJRVThzVVVGQlVTeFhRVUZYTEUxQlFVMDdRVUZGT1VJc1lVRkJVeXhsUVVGbExFTkJRVU1zVTBGQlV6dEJRVUZCTEVWQlEzQkRMRU5CUVVNN1FVRkhSQ3hSUVVGTkxGbEJRVmtzU1VGQlNVRXNTMEZCU1N4SlFVRkpPMEZCUVVFc1NVRkROVUlzWVVGQllVRXNTMEZCU1N4WlFVRlpPMEZCUVVFc1NVRkROMElzVTBGQlV6dEJRVUZCTEVWQlExZ3NRMEZCUXp0QlFVVkVMRmxCUVZVc1QwRkJUeXhOUVVGTk8wRkJRM1pDTEZsQlFWVXNUMEZCVHl4UlFVRlJPMEZCUTNwQ0xGbEJRVlVzWTBGQll5eFhRVUZYTzBGQlJXNURMRk5CUVU4N1FVRkRWRHM3TzBGRWFrZGxMRk5CUVZJc1kwRkJLMElzV1VGQmQwSTdRVUZETVVRc1VVRkJUU3haUVVGWkxGVkJRVlVzV1VGQldUdEJRVU40UXl4UlFVRk5MRlZCUVZVc1ZVRkJWU3haUVVGWk8wRkJRM1JETEZGQlFVMHNiVUpCUVhWRExFTkJRVU03UVVGRE9VTXNVVUZCVFN4blFrRkJiME1zUTBGQlF6dEJRVU16UXl4UlFVRk5MRzlDUVVGM1F5eERRVUZETzBGQlJ5OURMRkZCUVUwc1ZVRkJWU3hKUVVGSlF5eExRVUZKTEVsQlFVa3NSVUZCUlN4aFFVRmhRU3hMUVVGSkxGbEJRVmtzVlVGQlZTeFRRVUZUTEVWQlFVVXNRMEZCUXp0QlFVZHFSaXhSUVVGTkxGZEJRVmNzU1VGQlNVRXNTMEZCU1N4SlFVRkpMRVZCUVVVc1lVRkJZVUVzUzBGQlNTeFpRVUZaTEZsQlFWa3NVMEZCVXl4RlFVRkZMRU5CUVVNN1FVRkRjRVlzVjBGQlV5eFBRVUZQTEZWQlFWVTdRVUZETVVJc1YwRkJVeXhQUVVGUExFbEJRVWxCTEV0QlFVa3NUVUZCVFN4RlFVRkRMRTlCUVU4c1lVRkJZU3hSUVVGUlFTeExRVUZKTEUxQlFVMHNUVUZCU3l4RFFVRkRMRU5CUVVNN1FVRkhOVVVzVVVGQlRTeHRRa0ZCYlVJc1NVRkJTVUVzUzBGQlNTeEpRVUZKTEVWQlFVVXNZVUZCWVVFc1MwRkJTU3haUVVGWkxGVkJRVlVzVTBGQlV5eEZRVUZGTEVOQlFVTTdRVUZETVVZc2JVSkJRV2xDTEU5QlFVOHNTVUZCU1VFc1MwRkJTU3hOUVVGTkxFVkJRVU1zVDBGQlR5eHJRa0ZCYTBJc1VVRkJVVUVzUzBGQlNTeE5RVUZOTEU5QlFVOHNXVUZCV1N4RFFVRkRMRmxCUVZrc1JVRkJReXhEUVVGRExFTkJRVU03UVVGSGNrZ3NVVUZCVFN4MVFrRkJkVUlzU1VGQlNVRXNTMEZCU1N4SlFVRkpMRVZCUVVVc1lVRkJZVUVzUzBGQlNTeFpRVUZaTEZWQlFWVXNVMEZCVXl4RlFVRkZMRU5CUVVNN1FVRkRPVVlzZFVKQlFYRkNMRTlCUVU4c1NVRkJTVUVzUzBGQlNTeE5RVUZOTEVWQlFVTXNUMEZCVHl4alFVRmpMRkZCUVZGQkxFdEJRVWtzVFVGQlRTeFBRVUZQTEZsQlFWa3NRMEZCUXl4WlFVRlpMRVZCUVVNc1EwRkJReXhEUVVGRE8wRkJSWEpJTEUxQlFVazdRVUZEUVN4aFFVRlRMR2RDUVVGblFqdEJRVUZCTEVWQlF6ZENMRk5CUVZNc1MwRkJTenRCUVVOV0xGVkJRVTBzT0VKQlFUaENMRWRCUVVjc1JVRkJSVHRCUVVGQkxFVkJRemRETzBGQlIwRXNWMEZCVXl4dFFrRkJhMEk3UVVGRmRrSXNjVUpCUVdsQ0xGTkJRVk03UVVGRE1VSXNhMEpCUVdNc1UwRkJVenRCUVVOMlFpeGxRVUZWTEZWQlFWVXNWVUZCVlN4WlFVRlpMRWRCUVVVN1FVRkRlRU1zVlVGQlJ5eFBRVUZQTEZkQlFWY3NSMEZCUlR0QlFVTnVRaXhaUVVGSExFOUJRVThzWTBGQll5eEhRVUZGTzBGQlEzUkNMREpDUVVGcFFpeExRVUZMTEUxQlFVMDdRVUZCUVN4UlFVTm9ReXhQUVVOSk8wRkJRMEVzZDBKQlFXTXNTMEZCU3l4TlFVRk5PMEZCUVVFc1VVRkROMEk3UVVGQlFTeE5RVU5LTzBGQlFVRXNTVUZEU2p0QlFVRkJMRVZCUTBvN1FVRkhRU3hYUVVGVExIVkNRVUZ6UWp0QlFVVXpRaXh6UWtGQmEwSXNVMEZCVXp0QlFVTXpRaXhsUVVGVkxGVkJRVlVzVlVGQlZTeFpRVUZaTEVkQlFVVTdRVUZEZUVNc1ZVRkJSeXhEUVVGRExFOUJRVThzVjBGQlZ5eEhRVUZGTzBGQlEzQkNMREJDUVVGclFpeExRVUZMTEUxQlFVMDdRVUZCUVN4TlFVTnFRenRCUVVGQkxFbEJRMG83UVVGQlFTeEZRVU5LTzBGQlIwRXNWMEZCVXl4MVFrRkJjMEk3UVVGRE0wSXNjVUpCUVdsQ08wRkJSV3BDTEZWQlFVMHNVVUZCVVN4cFFrRkJhVUlzWjBKQlFXZENPMEZCUXk5RExGRkJRVWtzVVVGQlVTeFBRVUZQTEdsQ1FVRnBRaXhMUVVGTE8wRkJRM3BETEZkQlFVMHNUMEZCVFR0QlFVTlNMRmxCUVUwc1QwRkJUeXhOUVVGTkxHbENRVUZwUWp0QlFVTndReXgxUWtGQmFVSXNUMEZCVHl4TFFVRkxPMEZCUXpkQ0xHTkJRVkU3UVVGQlFTeEpRVU5hTzBGQlEwRXNaVUZCVlN4VlFVRlZMR3RDUVVGcFFqdEJRVU5xUXl4WlFVRk5MRmxCUVZrc1ZVRkJWU3hSUVVGUkxHOUNRVUZ2UWp0QlFVTjRSQ3gxUWtGQmFVSXNUMEZCVHl4VFFVRlRPMEZCUVVFc1NVRkRja003UVVGRFFTeGxRVUZWTEZWQlFWVXNaVUZCWXp0QlFVTTVRaXhaUVVGTkxGbEJRVmtzVlVGQlZTeFJRVUZSTEc5Q1FVRnZRanRCUVVONFJDeDFRa0ZCYVVJc1QwRkJUeXhUUVVGVE8wRkJRVUVzU1VGRGNrTTdRVUZCUVN4RlFVTktPMEZCUjBFc1YwRkJVeXd5UWtGQk1FSTdRVUZETDBJc1ZVRkJUU3hSUVVGUkxIRkNRVUZ4UWl4blFrRkJaMEk3UVVGRGJrUXNVVUZCU1N4UlFVRlJMRTlCUVU4c2FVSkJRV2xDTEV0QlFVczdRVUZEZWtNc1YwRkJUU3hQUVVGTk8wRkJRMUlzV1VGQlRTeFBRVUZQTEUxQlFVMHNhVUpCUVdsQ08wRkJRM0JETERKQ1FVRnhRaXhQUVVGUExFdEJRVXM3UVVGRGFrTXNZMEZCVVR0QlFVRkJMRWxCUTFvN1FVRkZRU3g1UWtGQmNVSTdRVUZEY2tJc1pVRkJWU3hWUVVGVkxHMUNRVUZyUWp0QlFVTnNReXhaUVVGTkxGbEJRVmtzVlVGQlZTeFJRVUZSTEdsQ1FVRnBRanRCUVVOeVJDd3lRa0ZCY1VJc1QwRkJUeXhUUVVGVE8wRkJRVUVzU1VGRGVrTTdRVUZCUVN4RlFVTktPMEZCUjBFc1YwRkJVeXh2UWtGQmJVSTdRVUZEZUVJc2VVSkJRWEZDTzBGQlEzSkNMRFpDUVVGNVFqdEJRVUZCTEVWQlF6ZENPMEZCUjBFc2RVSkJRWEZDTzBGQlIzSkNMREpDUVVGNVFqdEJRVVY2UWl4VlFVRlJMRTlCUVU4c1VVRkJVVHRCUVVOMlFpeFZRVUZSTEU5QlFVOHNaMEpCUVdkQ08wRkJReTlDTEZWQlFWRXNUMEZCVHl4SlFVRkpRU3hMUVVGSkxGVkJRVlVzUlVGQlJTeGhRVUZoUVN4TFFVRkpMRmxCUVZrc1dVRkJXU3haUVVGWkxFTkJRVU1zVjBGQlZ5eEZRVUZETEVOQlFVTXNRMEZCUXp0QlFVTjJSeXhWUVVGUkxFOUJRVThzYjBKQlFXOUNPMEZCUjI1RExGRkJRVTBzVjBGQlZ5eEpRVUZKUVN4TFFVRkpMR1ZCUVdVN1FVRkJRU3hKUVVOd1F5eFRRVUZUTzBGQlFVRTdRVUZCUVN4SlFVTlVMRk5CUVZNN1FVRkJRVHRCUVVGQkxFbEJRMVFzYlVKQlFXMUNPMEZCUVVFN1FVRkJRU3hGUVVOMlFpeERRVUZETzBGQlJVUXNWMEZCVXl4alFVRmpMR1ZCUVdVN1FVRkRkRU1zVjBGQlV5eFZRVUZWTEU5QlFVODdRVUZITVVJc1YwRkJVeXhwUWtGQmFVSXNTVUZCU1N4SFFVRkhPMEZCUldwRExGZEJRVk1zVVVGQlVTeDFRa0ZCZFVJc1RVRkJTenRCUVVONlF5dzJRa0ZCZVVJN1FVRkJRU3hGUVVNM1FpeERRVUZETzBGQlVVUXNVMEZCVHp0QlFVTllPenM3UVVWNlNXVXNVMEZCVWl4bFFVRm5RenRCUVVOeVF5eFJRVUZOTEdOQlFXTXNTVUZCU1VNc1MwRkJTU3hSUVVGUk8wRkJRM0JETEdOQlFWa3NZMEZCWXl4aFFVRmhPMEZCUzNaRExGRkJRVTBzVVVGQlVTeEpRVUZKUVN4TFFVRkpMRTFCUVUwN1FVRkJRU3hKUVVNeFFpeHBRa0ZCYVVKQkxFdEJRVWtzYjBKQlFXOUNPMEZCUVVFc1NVRkRla01zY1VKQlFYRkNPMEZCUVVFN1FVRkJRU3hGUVVOMlFpeERRVUZETzBGQlJVUXNVVUZCVFN4cFFrRkJhVUlzUzBGQlN6dEJRVU0xUWl4UlFVRk5MRmxCUVZrc1MwRkJTenRCUVVOMlFpeFJRVUZOTEdOQlFXTXNhMEpCUVd0Q08wRkJSWFJETEdOQlFWa3NWVUZCVlN4TFFVRkxPMEZCUnpOQ0xGRkJRVTBzV1VGQldTeEpRVUZKUVN4TFFVRkpMRWxCUVVrc1JVRkJSU3hoUVVGaFFTeExRVUZKTEZsQlFWa3NXVUZCV1N4VFFVRlRMRVZCUVVVc1EwRkJRenRCUVVOeVJpeFpRVUZWTEZkQlFWZEJMRXRCUVVrc1RVRkJUU3hMUVVGTE8wRkJSM0JETEZGQlFVMHNZVUZCWVN4SlFVRkpRU3hMUVVGSkxFOUJRVThzUlVGQlJTeFBRVUZQTEV0QlFVc3NRMEZCUXp0QlFVTnFSQ3hoUVVGWExGRkJRVkVzVjBGQlZ5eE5RVUZOTzBGQlEyeERMRlZCUVUwc2EwSkJRV3RDUVN4TFFVRkpMRzlDUVVGdlFqdEJRVU5vUkN4VlFVRk5MR3RDUVVGclFpeFRRVUZUTzBGQlFVRXNSVUZEYmtNc1EwRkJRenRCUVVkRUxGRkJRVTBzWjBKQlFXZENMR05CUVdNc1ZVRkJWVHRCUVVVNVF5eFJRVUZOTEZWQlFWVXNWMEZCVnl4TlFVRk5PMEZCUTJwRExGRkJRVTBzVlVGQlZTeGxRVUZsTEZkQlFWYzdRVUZITVVNc1VVRkJUU3hyUWtGQmEwSXNTVUZCU1VFc1MwRkJTU3hQUVVGUExFVkJRVVVzVDBGQlR5eFRRVUZKTEVOQlFVTTdRVUZEY2tRc1VVRkJUU3huUWtGQlowSXNTVUZCU1VFc1MwRkJTU3hQUVVGUExFVkJRVVVzVDBGQlR5eFpRVUZMTEVOQlFVTTdRVUZEY0VRc1VVRkJUU3hsUVVGbExFbEJRVWxCTEV0QlFVa3NUMEZCVHl4RlFVRkZMRTlCUVU4c1UwRkJTU3hEUVVGRE8wRkJRMnhFTEZGQlFVMHNaVUZCWlN4SlFVRkpRU3hMUVVGSkxFOUJRVThzUlVGQlJTeFBRVUZQTEZsQlFVc3NRMEZCUXp0QlFVVnVSQ3hyUWtGQlowSXNVVUZCVVN4WFFVRlhMRTFCUVUwN1FVRkRka01zVlVGQlRTeHJRa0ZCYTBKQkxFdEJRVWtzYjBKQlFXOUNPMEZCUTJoRUxGVkJRVTBzYTBKQlFXdENMR0ZCUVdFN1FVRkJRU3hGUVVOMlF5eERRVUZETzBGQlJVUXNaMEpCUVdNc1VVRkJVU3hYUVVGWExFMUJRVTA3UVVGRGNrTXNZMEZCVlN4RFFVRkRMSE5DUVVGelFpeERRVUZETEVWQlEycERMRXRCUVVzc1EwRkJReXhSUVVGUkxGRkJRVkVzU1VGQlNTeEhRVUZITEVOQlFVTXNSVUZET1VJc1RVRkJUU3hEUVVGRExGRkJRVkVzVVVGQlVTeE5RVUZOTEVkQlFVY3NRMEZCUXp0QlFVRkJMRVZCUTNCRExFTkJRVU03UVVGRlJDeGxRVUZoTEZGQlFWRXNWMEZCVnl4TlFVRk5PMEZCUTNCRExHTkJRVlVzUTBGQlF5eFRRVUZUTEcxQ1FVRnRRaXhOUVVGTkxGTkJRVk1zUTBGQlF5eEZRVU4wUkN4TFFVRkxMRU5CUVVNc1VVRkJVU3hSUVVGUkxFbEJRVWtzUjBGQlJ5eERRVUZETEVWQlF6bENMRTFCUVUwc1EwRkJReXhSUVVGUkxGRkJRVkVzVFVGQlRTeEhRVUZITEVOQlFVTTdRVUZCUVN4RlFVTndReXhEUVVGRE8wRkJSVVFzWlVGQllTeFJRVUZSTEZkQlFWY3NUVUZCVFR0QlFVTndReXhqUVVGVkxFTkJRVU1zWlVGQlpTeERRVUZETEVWQlF6RkNMRXRCUVVzc1EwRkJReXhSUVVGUkxGRkJRVkVzU1VGQlNTeEhRVUZITEVOQlFVTXNSVUZET1VJc1RVRkJUU3hEUVVGRExGRkJRVkVzVVVGQlVTeE5RVUZOTEVkQlFVY3NRMEZCUXp0QlFVRkJMRVZCUTNCRExFTkJRVU03UVVGRlJDeFpRVUZWTEU5QlFVOHNaVUZCWlR0QlFVTm9ReXhaUVVGVkxFOUJRVThzWVVGQllUdEJRVU01UWl4WlFVRlZMRTlCUVU4c1dVRkJXVHRCUVVNM1FpeFpRVUZWTEU5QlFVOHNXVUZCV1R0QlFVVTNRaXhqUVVGWkxGRkJRVkVzVlVGQlZTeE5RVUZMTzBGQlF5OUNMRlZCUVUwc2EwSkJRV3RDTEZOQlFWTTdRVUZCUVN4RlFVTnlReXhEUVVGRE8wRkJSVVFzVTBGQlR6dEJRVU5VT3pzN1FWWndSV1VzVTBGQlVpeEpRVUZ4UWl4WlFVRjVRanRCUVVOdVJDeFJRVUZOTEU5QlFVOHNWMEZCVnl4SlFVRkpMRXRCUVUwc2EwSkJRV3RDTzBGQlEzQkVMRkZCUVUwc1QwRkJUeXhYUVVGWExFbEJRVWtzUzBGQlRTeHJRa0ZCYTBJN1FVRkRjRVFzVVVGQlRTeEZRVUZGTEZGQlFWRXNUVUZCVFN4TlFVRk5MRWxCUVVrc1RVRkJUVHRCUVVOMFF5eFJRVUZOTEdOQlFXTXNSMEZCUjBNc1RVRkJTeXhuUWtGQlowSXNRMEZCUXp0QlFVVTNReXhUUVVORk8wRkJRVUVzU1VGQlF6dEJRVUZCTzBGQlFVRXNUVUZEUXl4VFFVRlBPMEZCUVVFc1RVRkRVQ3hOUVVGTE8wRkJRVUVzVFVGRFRDeFBRVUZOTzBGQlFVRXNUVUZEVGp0QlFVRkJMRTFCUTBFc1lVRkJZU3hOUVVGTkxGbEJRVms3UVVGQlFTeE5RVU12UWl4UlFVRlJMRk5CUVZNc1QwRkJUenRCUVVGQkxFMUJRM2hDTEdGQlFXRTdRVUZCUVN4TlFVVmlMQ3RDUVVGRExHVkJRVlVzVTBGQlVTeGhRVU5xUWp0QlFVRkJPMEZCUVVFc1ZVRkJRenRCUVVGQk8wRkJRVUVzV1VGRFF5eFBRVUZOTzBGQlFVRXNXVUZEVGl4UFFVRk5PMEZCUVVFc1dVRkRUaXhYUVVGWExFMUJRVTBzVlVGQlZTeFJRVUZSTzBGQlFVRXNXVUZEYmtNc1UwRkJUenRCUVVGQkxGbEJRMUFzVVVGQlVVTXNTMEZCU1N4TlFVRk5PMEZCUVVFc1dVRkZiRUk3UVVGQlFTeGpRVUZETzBGQlFVRTdRVUZCUVN4blFrRkRReXhOUVVGTkxFZEJRVWNzVjBGQlZ6dEJRVUZCTEdkQ1FVTndRaXhYUVVGWE8wRkJRVUU3UVVGQlFTeFpRVU5pTzBGQlFVRTdRVUZCUVN4UlFVTkdPMEZCUVVFc1VVRkRRU3h2UWtGQlF5eFRRVUZKTEU5QlFVMHNWVUZCVXp0QlFVRkJMRkZCUTNCQ0xIRkNRVUZETEZOQlFVa3NUMEZCVFN4UFFVRk5MRkZCUVZGQkxFdEJRVWtzVFVGQlRTeExRVU5xUXp0QlFVRkJMRGhDUVVGRExHbENRVUZqTzBGQlFVRXNWVUZEWmp0QlFVRkJMRmxCUVVNN1FVRkJRVHRCUVVGQkxHTkJRME1zVDBGQlRUdEJRVUZCTEdOQlEwNHNWMEZCVjBFc1MwRkJTU3hWUVVGVk8wRkJRVUVzWTBGRmVrSTdRVUZCUVN4eFEwRkJReXhUUVVGSkxHRkJRV0ZCTEV0QlFVa3NXVUZCV1N4WlFVRlpMRk5CUVZNc1IwRkRja1E3UVVGQlFTeHpRMEZCUXl4dlFrRkJhVUk3UVVGQlFTeHJRa0ZEYkVJc2IwSkJRVU1zYlVKQlFXZENPMEZCUVVFc2JVSkJRMjVDTzBGQlFVRXNaMEpCUTBFc2IwSkJRVU1zWjBKQlFXRTdRVUZCUVR0QlFVRkJPMEZCUVVFc1ZVRkRhRUk3UVVGQlFTeFZRVU5CTEhGQ1FVRkRMR2RDUVVGWExFOUJRVTBzV1VGRGFFSTdRVUZCUVN4cFEwRkJReXhUUVVGSkxHRkJRV0ZCTEV0QlFVa3NXVUZCV1N4VlFVTm9RenRCUVVGQkxHdERRVUZETEZkQlFVMHNUMEZCVHl4TlFVRk5MRkZCUVZGQkxFdEJRVWtzVFVGQlRTeExRVUZKTzBGQlFVRXNZMEZETVVNc2IwSkJRVU1zVjBGQlRTeFBRVUZQTEUxQlFVMHNVVUZCVVVFc1MwRkJTU3hOUVVGTkxFdEJRVWs3UVVGQlFTeGxRVU0xUXp0QlFVRkJMRmxCUTBFc2IwSkJRVU1zWVVGRFF5dzRRa0ZCUTBFc1MwRkJTU3hWUVVGS0xFVkJRV0VzUjBGRGFFSTdRVUZCUVN4aFFVTkdPMEZCUVVFc1ZVRkRRU3h2UWtGQlF5eHhRa0ZCYTBJN1FVRkJRU3hYUVVOeVFqdEJRVUZCTEZOQlEwWTdRVUZCUVR0QlFVRkJMRVZCUTBZN1FVRkZTanM3TzBGWGJFVkJMRTlCUVU4c1dVRkJXVHRCUVVkS0xGTkJRVklzWVVGQk9FSXNXVUZCZVVJN1FVRkROVVFzVVVGQlRTeEZRVUZGTEU5QlFVOHNTVUZCU1N4SlFVRkpMRTFCUVUwN1FVRkROMElzVVVGQlRTeFRRVUZUTEU5QlFVOHNXVUZCV1R0QlFVZHNReXhSUVVGTkxITkNRVUZwUkN4dlFrRkJTU3hKUVVGSk8wRkJSeTlFTEZOQlFVOHNVVUZCVVN4WlFVRlpMRU5CUVVNc1IwRkJSeXhQUVVGUE8wRkJRM0JETEZWQlFVMHNTVUZCU1N4UFFVRlBMR2xDUVVGcFFpeEZRVUZGTzBGQlEzQkRMRkZCUVVrc1EwRkJReXhGUVVGSE8wRkJRMUlzVlVGQlRTeFJRVUZSTEVWQlFVVXNWVUZCVlN4RlFVRkZMR2RDUVVGblFqdEJRVU0xUXl4UlFVRkpMRmxCUVZrc1RVRkJUU3haUVVGWkxFdEJRVXM3UVVGRmRrTXNVVUZCU1N4VlFVRlZMRTFCUVUwc1pVRkJaU3hMUVVGTE8wRkJSWGhETEZWQlFVMHNZMEZEU2p0QlFVRkJMRTFCUVVNN1FVRkJRVHRCUVVGQkxGRkJRME1zVFVGQlRTeG5Ra0ZCWjBJc1JVRkJSVHRCUVVGQkxGRkJRM2hDTEU5QlFVMDdRVUZCUVN4UlFVTk9PMEZCUVVFc1VVRkRRU3hSUVVGUkxFMUJRVTA3UVVGQlFTeFJRVU5rTEdGQlFXRXNUVUZCVFN4WlFVRlpPMEZCUVVFc1VVRkRMMElzWVVGQllUdEJRVUZCTEZGQlJXSXNLMEpCUVVNc1UwRkJTU3hoUVVGaFF5eExRVUZKTEZsQlFWa3NWVUZET1VJN1FVRkJRU3dyUWtGQlF5eFRRVUZKTEdGQlFXRkJMRXRCUVVrc1dVRkJXU3haUVVNMVFqdEJRVUZCTEhWQ1FVTkdPMEZCUVVFc1kwRkJRenRCUVVGQk8wRkJRVUVzWjBKQlEwY3NWVUZCVlR0QlFVRkJPMEZCUVVFc1dVRkRaRHRCUVVGQkxGbEJSVUVzYjBKQlFVTXNWMEZCVFN4UFFVRlBMRVZCUVVVc1UwRkJVVHRCUVVGQkxHRkJRelZDTzBGQlFVRXNWVUZEUVN4eFFrRkJReXhUUVVGSkxHRkJRV0ZCTEV0QlFVa3NXVUZCV1N4WlFVTTFRanRCUVVGQkxIbENRVU5HTzBGQlFVRXNZMEZCUXp0QlFVRkJPMEZCUVVFc1owSkJRMGNzVFVGQlRUdEJRVUZCTzBGQlFVRXNXVUZEVmp0QlFVRkJMRmxCUlVFc2NVSkJRVU1zVTBGQlNTeGhRVUZoUVN4TFFVRkpMRmxCUVZrc1ZVRkRPVUk3UVVGQlFTeHJRMEZCUXl4WFFVRk5MRTlCUVU4c1JVRkJSU3hUUVVGVExFOUJRVTBzVjBGQlZTeFJRVUZSUVN4TFFVRkpMRTFCUVUwc1MwRkJTVHRCUVVGQkxHTkJReTlFTEc5Q1FVRkRMRmRCUVUwc1QwRkJUeXhGUVVGRkxFMUJRVTBzVDBGQlRTeFJRVUZQTEZGQlFWRkJMRXRCUVVrc1RVRkJUU3hMUVVGSk8wRkJRVUVzWlVGRE4wUTdRVUZCUVN4aFFVTktPMEZCUVVFc1YwRkRTanRCUVVGQk8wRkJRVUVzU1VGRFJqdEJRVWxHTEdkQ1FVRlpMRXRCUVVzN1FVRkRha0lzZDBKQlFXOUNMRWxCUVVrc1NVRkJTU3hYUVVGWE8wRkJSM1pETEdWQlFWY3NUVUZCVFR0QlFVTm1MR3RDUVVGWkxGRkJRVkU3UVVGRGNFSXNNRUpCUVc5Q0xFOUJRVThzUlVGQlJUdEJRVUZCTEVsQlF5OUNMRWRCUVVjc1IwRkJTVHRCUVVGQkxFVkJRMVFzUTBGQlF6dEJRVWRFTEZOQlFVOHNVVUZCVVN4WlFVRlpMRU5CUVVNc1IwRkJSeXhQUVVGUE8wRkJRM0JETEZWQlFVMHNZMEZCWXl4dlFrRkJiMElzU1VGQlNTeEZRVUZGTzBGQlF6bERMRkZCUVVrc1lVRkJZVHRCUVVObUxHdENRVUZaTEZGQlFWRTdRVUZEY0VJc01FSkJRVzlDTEU5QlFVOHNSVUZCUlR0QlFVRkJMRWxCUXk5Q08wRkJRVUVzUlVGRFJpeERRVUZETzBGQlIwUXNVMEZCVHp0QlFVTlVPenM3UVVOMFJVRXNXVUZCU1N4TlFVRk5PMEZCUVVFc1JVRkRVaXhMUVVGTE8wRkJRVUVzUlVGRFRDeFBRVUZQTzBGQlEwd3NWVUZCVFN4WFFVRlhMRmxCUVVrc1lVRkJZVHRCUVVWc1F5eGhRVUZUTEVsQlFVa3NRMEZCUXl4WlFVRlpPMEZCUlhoQ0xGVkJRVWtzVDBGQlR6dEJRVUZCTEVsQlEySXNRMEZCUXp0QlFVTkVMR2xDUVVGaExGTkJRVk1zUTBGQlF5eERRVUZETzBGQlFVRXNSVUZETVVJN1FVRkRSaXhEUVVGRE95SXNDaUFnSW01aGJXVnpJam9nV3lKd1lYUmphQ0lzSUNKQ2JIVmxkRzl2ZEdnaUxDQWlTSGx3Y214aGJtUWlMQ0FpVG05MGFXWmtJaXdnSWxkd0lpd2dJbk51WVd0bGFXWjVJaXdnSW5OdVlXdGxhV1o1SWl3Z0ltZGxkSFJsY2lJc0lDSnpaWFIwWlhJaUxDQWljMlYwSWl3Z0luTnBaMjVoYkU1aGJXVWlMQ0FpYzJsbmJtRnNJaXdnSWtkTWFXSWlMQ0FpUjJsdklpd2dJa2RNYVdJaUxDQWlSMDlpYW1WamRDSXNJQ0pIVEdsaUlpd2dJa2RQWW1wbFkzUWlMQ0FpYzJsbmJtRnNJaXdnSW5aaGJIVmxJaXdnSW5ScGJXVnZkWFFpTENBaWMyVjBJaXdnSW01aGJXVWlMQ0FpWVhKbmN5SXNJQ0pmWVNJc0lDSmhjSEFpTENBaVIwOWlhbVZqZENJc0lDSkhUMkpxWldOMElpd2dJbDloSWl3Z0luTnBaMjVoYkNJc0lDSkhUMkpxWldOMElpd2dJa2RwYnlJc0lDSkhUR2xpSWl3Z0lrZFBZbXBsWTNRaUxDQWlSMDlpYW1WamRDSXNJQ0pyWlhraUxDQWliMkpxWldOMElpd2dJa2RQWW1wbFkzUWlMQ0FpUjB4cFlpSXNJQ0pmWTNWeWMyOXlWR2hsYldWZlpHVmpJaXdnSWw5cFkyOXVWR2hsYldWZlpHVmpJaXdnSWw5bmRHdFVhR1Z0WlY5a1pXTWlMQ0FpWDJFaUxDQWlYMmx1YVhRaUxDQWlSMmx2SWl3Z0lsOGlMQ0FpYzJsbmJtRnNJaXdnSWtkMGF5SXNJQ0pIWkdzaUxDQWlSMmx2SWl3Z0lrZE1hV0lpTENBaVgyRWlMQ0FpWDJsdWFYUWlMQ0FpUjJsdklpd2dJbk5wWjI1aGJDSXNJQ0pIVEdsaUlpd2dJbDloSWl3Z0lsOXBibWwwSWl3Z0ltbHVkR1Z5ZG1Gc0lpd2dJbk5wWjI1aGJDSXNJQ0p6WlhRaUxDQWlSMHhwWWlJc0lDSkhkR3NpTENBaVIzUnJJaXdnSWtGemRHRnNJaXdnSWtkMGF5SXNJQ0pIYVc4aUxDQWlSM1JySWl3Z0luTmxkSFJsY2lJc0lDSmpjM01pTENBaVIybHZJaXdnSWtkMGF5SXNJQ0pCYzNSaGJDSXNJQ0pIZEdzaUxDQWlSM1JySWl3Z0lrZDBheUlzSUNKSFRHbGlJaXdnSWtkMGF5SXNJQ0pIZEdzaUxDQWlSM1JySWl3Z0lrZDBheUlzSUNKSFRHbGlJaXdnSWtkMGF5SXNJQ0pIZEdzaVhRcDlDZz09Cg==
EOF

LD_PRELOAD="/usr/lib/libgtk4-layer-shell.so" /usr/bin/gjs -m $file $@