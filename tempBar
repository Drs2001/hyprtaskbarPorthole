#!/usr/bin/bash
file="${XDG_RUNTIME_DIR:-/tmp}/dmFyIF-ags.js"

/bin/cat <<EOF | /bin/base64 --decode > $file
dmFyIF9fY3JlYXRlID0gT2JqZWN0LmNyZWF0ZTsKdmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTsKdmFyIF9fZ2V0T3duUHJvcERlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOwp2YXIgX19rbm93blN5bWJvbCA9IChuYW1lLCBzeW1ib2wpID0+IChzeW1ib2wgPSBTeW1ib2xbbmFtZV0pID8gc3ltYm9sIDogU3ltYm9sLmZvcigiU3ltYm9sLiIgKyBuYW1lKTsKdmFyIF9fdHlwZUVycm9yID0gKG1zZykgPT4gewogIHRocm93IFR5cGVFcnJvcihtc2cpOwp9Owp2YXIgX19kZWZOb3JtYWxQcm9wID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWU7CnZhciBfX25hbWUgPSAodGFyZ2V0LCB2YWx1ZSkgPT4gX19kZWZQcm9wKHRhcmdldCwgIm5hbWUiLCB7IHZhbHVlLCBjb25maWd1cmFibGU6IHRydWUgfSk7CnZhciBfX2RlY29yYXRvclN0YXJ0ID0gKGJhc2UpID0+IFssICwgLCBfX2NyZWF0ZShiYXNlPy5bX19rbm93blN5bWJvbCgibWV0YWRhdGEiKV0gPz8gbnVsbCldOwp2YXIgX19kZWNvcmF0b3JTdHJpbmdzID0gWyJjbGFzcyIsICJtZXRob2QiLCAiZ2V0dGVyIiwgInNldHRlciIsICJhY2Nlc3NvciIsICJmaWVsZCIsICJ2YWx1ZSIsICJnZXQiLCAic2V0Il07CnZhciBfX2V4cGVjdEZuID0gKGZuKSA9PiBmbiAhPT0gdm9pZCAwICYmIHR5cGVvZiBmbiAhPT0gImZ1bmN0aW9uIiA/IF9fdHlwZUVycm9yKCJGdW5jdGlvbiBleHBlY3RlZCIpIDogZm47CnZhciBfX2RlY29yYXRvckNvbnRleHQgPSAoa2luZCwgbmFtZSwgZG9uZSwgbWV0YWRhdGEsIGZucykgPT4gKHsga2luZDogX19kZWNvcmF0b3JTdHJpbmdzW2tpbmRdLCBuYW1lLCBtZXRhZGF0YSwgYWRkSW5pdGlhbGl6ZXI6IChmbikgPT4gZG9uZS5fID8gX190eXBlRXJyb3IoIkFscmVhZHkgaW5pdGlhbGl6ZWQiKSA6IGZucy5wdXNoKF9fZXhwZWN0Rm4oZm4gfHwgbnVsbCkpIH0pOwp2YXIgX19kZWNvcmF0b3JNZXRhZGF0YSA9IChhcnJheSwgdGFyZ2V0KSA9PiBfX2RlZk5vcm1hbFByb3AodGFyZ2V0LCBfX2tub3duU3ltYm9sKCJtZXRhZGF0YSIpLCBhcnJheVszXSk7CnZhciBfX3J1bkluaXRpYWxpemVycyA9IChhcnJheSwgZmxhZ3MsIHNlbGYsIHZhbHVlKSA9PiB7CiAgZm9yICh2YXIgaSA9IDAsIGZucyA9IGFycmF5W2ZsYWdzID4+IDFdLCBuID0gZm5zICYmIGZucy5sZW5ndGg7IGkgPCBuOyBpKyspIGZsYWdzICYgMSA/IGZuc1tpXS5jYWxsKHNlbGYpIDogdmFsdWUgPSBmbnNbaV0uY2FsbChzZWxmLCB2YWx1ZSk7CiAgcmV0dXJuIHZhbHVlOwp9Owp2YXIgX19kZWNvcmF0ZUVsZW1lbnQgPSAoYXJyYXksIGZsYWdzLCBuYW1lLCBkZWNvcmF0b3JzLCB0YXJnZXQsIGV4dHJhKSA9PiB7CiAgdmFyIGZuLCBpdCwgZG9uZSwgY3R4LCBhY2Nlc3MsIGsgPSBmbGFncyAmIDcsIHMgPSAhIShmbGFncyAmIDgpLCBwID0gISEoZmxhZ3MgJiAxNik7CiAgdmFyIGogPSBrID4gMyA/IGFycmF5Lmxlbmd0aCArIDEgOiBrID8gcyA/IDEgOiAyIDogMCwga2V5ID0gX19kZWNvcmF0b3JTdHJpbmdzW2sgKyA1XTsKICB2YXIgaW5pdGlhbGl6ZXJzID0gayA+IDMgJiYgKGFycmF5W2ogLSAxXSA9IFtdKSwgZXh0cmFJbml0aWFsaXplcnMgPSBhcnJheVtqXSB8fCAoYXJyYXlbal0gPSBbXSk7CiAgdmFyIGRlc2MgPSBrICYmICghcCAmJiAhcyAmJiAodGFyZ2V0ID0gdGFyZ2V0LnByb3RvdHlwZSksIGsgPCA1ICYmIChrID4gMyB8fCAhcCkgJiYgX19nZXRPd25Qcm9wRGVzYyhrIDwgNCA/IHRhcmdldCA6IHsgZ2V0IFtuYW1lXSgpIHsKICAgIHJldHVybiBfX3ByaXZhdGVHZXQodGhpcywgZXh0cmEpOwogIH0sIHNldCBbbmFtZV0oeCkgewogICAgcmV0dXJuIF9fcHJpdmF0ZVNldCh0aGlzLCBleHRyYSwgeCk7CiAgfSB9LCBuYW1lKSk7CiAgayA/IHAgJiYgayA8IDQgJiYgX19uYW1lKGV4dHJhLCAoayA+IDIgPyAic2V0ICIgOiBrID4gMSA/ICJnZXQgIiA6ICIiKSArIG5hbWUpIDogX19uYW1lKHRhcmdldCwgbmFtZSk7CiAgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHsKICAgIGN0eCA9IF9fZGVjb3JhdG9yQ29udGV4dChrLCBuYW1lLCBkb25lID0ge30sIGFycmF5WzNdLCBleHRyYUluaXRpYWxpemVycyk7CiAgICBpZiAoaykgewogICAgICBjdHguc3RhdGljID0gcywgY3R4LnByaXZhdGUgPSBwLCBhY2Nlc3MgPSBjdHguYWNjZXNzID0geyBoYXM6IHAgPyAoeCkgPT4gX19wcml2YXRlSW4odGFyZ2V0LCB4KSA6ICh4KSA9PiBuYW1lIGluIHggfTsKICAgICAgaWYgKGsgXiAzKSBhY2Nlc3MuZ2V0ID0gcCA/ICh4KSA9PiAoayBeIDEgPyBfX3ByaXZhdGVHZXQgOiBfX3ByaXZhdGVNZXRob2QpKHgsIHRhcmdldCwgayBeIDQgPyBleHRyYSA6IGRlc2MuZ2V0KSA6ICh4KSA9PiB4W25hbWVdOwogICAgICBpZiAoayA+IDIpIGFjY2Vzcy5zZXQgPSBwID8gKHgsIHkpID0+IF9fcHJpdmF0ZVNldCh4LCB0YXJnZXQsIHksIGsgXiA0ID8gZXh0cmEgOiBkZXNjLnNldCkgOiAoeCwgeSkgPT4geFtuYW1lXSA9IHk7CiAgICB9CiAgICBpdCA9ICgwLCBkZWNvcmF0b3JzW2ldKShrID8gayA8IDQgPyBwID8gZXh0cmEgOiBkZXNjW2tleV0gOiBrID4gNCA/IHZvaWQgMCA6IHsgZ2V0OiBkZXNjLmdldCwgc2V0OiBkZXNjLnNldCB9IDogdGFyZ2V0LCBjdHgpLCBkb25lLl8gPSAxOwogICAgaWYgKGsgXiA0IHx8IGl0ID09PSB2b2lkIDApIF9fZXhwZWN0Rm4oaXQpICYmIChrID4gNCA/IGluaXRpYWxpemVycy51bnNoaWZ0KGl0KSA6IGsgPyBwID8gZXh0cmEgPSBpdCA6IGRlc2Nba2V5XSA9IGl0IDogdGFyZ2V0ID0gaXQpOwogICAgZWxzZSBpZiAodHlwZW9mIGl0ICE9PSAib2JqZWN0IiB8fCBpdCA9PT0gbnVsbCkgX190eXBlRXJyb3IoIk9iamVjdCBleHBlY3RlZCIpOwogICAgZWxzZSBfX2V4cGVjdEZuKGZuID0gaXQuZ2V0KSAmJiAoZGVzYy5nZXQgPSBmbiksIF9fZXhwZWN0Rm4oZm4gPSBpdC5zZXQpICYmIChkZXNjLnNldCA9IGZuKSwgX19leHBlY3RGbihmbiA9IGl0LmluaXQpICYmIGluaXRpYWxpemVycy51bnNoaWZ0KGZuKTsKICB9CiAgcmV0dXJuIGsgfHwgX19kZWNvcmF0b3JNZXRhZGF0YShhcnJheSwgdGFyZ2V0KSwgZGVzYyAmJiBfX2RlZlByb3AodGFyZ2V0LCBuYW1lLCBkZXNjKSwgcCA/IGsgXiA0ID8gZXh0cmEgOiBkZXNjIDogdGFyZ2V0Owp9Owp2YXIgX19hY2Nlc3NDaGVjayA9IChvYmosIG1lbWJlciwgbXNnKSA9PiBtZW1iZXIuaGFzKG9iaikgfHwgX190eXBlRXJyb3IoIkNhbm5vdCAiICsgbXNnKTsKdmFyIF9fcHJpdmF0ZUluID0gKG1lbWJlciwgb2JqKSA9PiBPYmplY3Qob2JqKSAhPT0gb2JqID8gX190eXBlRXJyb3IoJ0Nhbm5vdCB1c2UgdGhlICJpbiIgb3BlcmF0b3Igb24gdGhpcyB2YWx1ZScpIDogbWVtYmVyLmhhcyhvYmopOwp2YXIgX19wcml2YXRlR2V0ID0gKG9iaiwgbWVtYmVyLCBnZXR0ZXIyKSA9PiAoX19hY2Nlc3NDaGVjayhvYmosIG1lbWJlciwgInJlYWQgZnJvbSBwcml2YXRlIGZpZWxkIiksIGdldHRlcjIgPyBnZXR0ZXIyLmNhbGwob2JqKSA6IG1lbWJlci5nZXQob2JqKSk7CnZhciBfX3ByaXZhdGVBZGQgPSAob2JqLCBtZW1iZXIsIHZhbHVlKSA9PiBtZW1iZXIuaGFzKG9iaikgPyBfX3R5cGVFcnJvcigiQ2Fubm90IGFkZCB0aGUgc2FtZSBwcml2YXRlIG1lbWJlciBtb3JlIHRoYW4gb25jZSIpIDogbWVtYmVyIGluc3RhbmNlb2YgV2Vha1NldCA/IG1lbWJlci5hZGQob2JqKSA6IG1lbWJlci5zZXQob2JqLCB2YWx1ZSk7CnZhciBfX3ByaXZhdGVTZXQgPSAob2JqLCBtZW1iZXIsIHZhbHVlLCBzZXR0ZXIyKSA9PiAoX19hY2Nlc3NDaGVjayhvYmosIG1lbWJlciwgIndyaXRlIHRvIHByaXZhdGUgZmllbGQiKSwgc2V0dGVyMiA/IHNldHRlcjIuY2FsbChvYmosIHZhbHVlKSA6IG1lbWJlci5zZXQob2JqLCB2YWx1ZSksIHZhbHVlKTsKdmFyIF9fcHJpdmF0ZU1ldGhvZCA9IChvYmosIG1lbWJlciwgbWV0aG9kKSA9PiAoX19hY2Nlc3NDaGVjayhvYmosIG1lbWJlciwgImFjY2VzcyBwcml2YXRlIG1ldGhvZCIpLCBtZXRob2QpOwoKLy8gLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvb3ZlcnJpZGVzLnRzCmZ1bmN0aW9uIHNuYWtlaWZ5KHN0cikgewogIHJldHVybiBzdHIucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgIiQxXyQyIikucmVwbGFjZUFsbCgiLSIsICJfIikudG9Mb3dlckNhc2UoKTsKfQphc3luYyBmdW5jdGlvbiBzdXBwcmVzcyhtb2QsIHBhdGNoMikgewogIHJldHVybiBtb2QudGhlbigobSkgPT4gcGF0Y2gyKG0uZGVmYXVsdCkpLmNhdGNoKCgpID0+IHZvaWQgMCk7Cn0KZnVuY3Rpb24gcGF0Y2gocHJvdG8sIHByb3ApIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkocHJvdG8sIHByb3AsIHsKICAgIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXNbYGdldF8ke3NuYWtlaWZ5KHByb3ApfWBdKCk7CiAgICB9CiAgfSk7Cn0KYXdhaXQgc3VwcHJlc3MoaW1wb3J0KCJnaTovL0FzdGFsQXBwcyIpLCAoeyBBcHBzLCBBcHBsaWNhdGlvbiB9KSA9PiB7CiAgcGF0Y2goQXBwcy5wcm90b3R5cGUsICJsaXN0Iik7CiAgcGF0Y2goQXBwbGljYXRpb24ucHJvdG90eXBlLCAia2V5d29yZHMiKTsKICBwYXRjaChBcHBsaWNhdGlvbi5wcm90b3R5cGUsICJjYXRlZ29yaWVzIik7Cn0pOwphd2FpdCBzdXBwcmVzcyhpbXBvcnQoImdpOi8vQXN0YWxCYXR0ZXJ5IiksICh7IFVQb3dlciB9KSA9PiB7CiAgcGF0Y2goVVBvd2VyLnByb3RvdHlwZSwgImRldmljZXMiKTsKfSk7CmF3YWl0IHN1cHByZXNzKGltcG9ydCgiZ2k6Ly9Bc3RhbEJsdWV0b290aCIpLCAoeyBBZGFwdGVyLCBCbHVldG9vdGgsIERldmljZSB9KSA9PiB7CiAgcGF0Y2goQWRhcHRlci5wcm90b3R5cGUsICJ1dWlkcyIpOwogIHBhdGNoKEJsdWV0b290aC5wcm90b3R5cGUsICJhZGFwdGVycyIpOwogIHBhdGNoKEJsdWV0b290aC5wcm90b3R5cGUsICJkZXZpY2VzIik7CiAgcGF0Y2goRGV2aWNlLnByb3RvdHlwZSwgInV1aWRzIik7Cn0pOwphd2FpdCBzdXBwcmVzcyhpbXBvcnQoImdpOi8vQXN0YWxIeXBybGFuZCIpLCAoeyBIeXBybGFuZDogSHlwcmxhbmQyLCBNb25pdG9yLCBXb3Jrc3BhY2UgfSkgPT4gewogIHBhdGNoKEh5cHJsYW5kMi5wcm90b3R5cGUsICJiaW5kcyIpOwogIHBhdGNoKEh5cHJsYW5kMi5wcm90b3R5cGUsICJtb25pdG9ycyIpOwogIHBhdGNoKEh5cHJsYW5kMi5wcm90b3R5cGUsICJ3b3Jrc3BhY2VzIik7CiAgcGF0Y2goSHlwcmxhbmQyLnByb3RvdHlwZSwgImNsaWVudHMiKTsKICBwYXRjaChNb25pdG9yLnByb3RvdHlwZSwgImF2YWlsYWJsZU1vZGVzIik7CiAgcGF0Y2goTW9uaXRvci5wcm90b3R5cGUsICJhdmFpbGFibGVfbW9kZXMiKTsKICBwYXRjaChXb3Jrc3BhY2UucHJvdG90eXBlLCAiY2xpZW50cyIpOwp9KTsKYXdhaXQgc3VwcHJlc3MoaW1wb3J0KCJnaTovL0FzdGFsTXByaXMiKSwgKHsgTXByaXMsIFBsYXllciB9KSA9PiB7CiAgcGF0Y2goTXByaXMucHJvdG90eXBlLCAicGxheWVycyIpOwogIHBhdGNoKFBsYXllci5wcm90b3R5cGUsICJzdXBwb3J0ZWRfdXJpX3NjaGVtZXMiKTsKICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCAic3VwcG9ydGVkVXJpU2NoZW1lcyIpOwogIHBhdGNoKFBsYXllci5wcm90b3R5cGUsICJzdXBwb3J0ZWRfbWltZV90eXBlcyIpOwogIHBhdGNoKFBsYXllci5wcm90b3R5cGUsICJzdXBwb3J0ZWRNaW1lVHlwZXMiKTsKICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCAiY29tbWVudHMiKTsKfSk7CmF3YWl0IHN1cHByZXNzKGltcG9ydCgiZ2k6Ly9Bc3RhbE5ldHdvcmsiKSwgKHsgV2lmaSB9KSA9PiB7CiAgcGF0Y2goV2lmaS5wcm90b3R5cGUsICJhY2Nlc3NfcG9pbnRzIik7CiAgcGF0Y2goV2lmaS5wcm90b3R5cGUsICJhY2Nlc3NQb2ludHMiKTsKfSk7CmF3YWl0IHN1cHByZXNzKGltcG9ydCgiZ2k6Ly9Bc3RhbE5vdGlmZCIpLCAoeyBOb3RpZmQ6IE5vdGlmZDIsIE5vdGlmaWNhdGlvbiB9KSA9PiB7CiAgcGF0Y2goTm90aWZkMi5wcm90b3R5cGUsICJub3RpZmljYXRpb25zIik7CiAgcGF0Y2goTm90aWZpY2F0aW9uLnByb3RvdHlwZSwgImFjdGlvbnMiKTsKfSk7CmF3YWl0IHN1cHByZXNzKGltcG9ydCgiZ2k6Ly9Bc3RhbFBvd2VyUHJvZmlsZXMiKSwgKHsgUG93ZXJQcm9maWxlcyB9KSA9PiB7CiAgcGF0Y2goUG93ZXJQcm9maWxlcy5wcm90b3R5cGUsICJhY3Rpb25zIik7Cn0pOwphd2FpdCBzdXBwcmVzcyhpbXBvcnQoImdpOi8vQXN0YWxXcCIpLCAoeyBXcDogV3AyLCBBdWRpbywgVmlkZW8gfSkgPT4gewogIHBhdGNoKFdwMi5wcm90b3R5cGUsICJkZXZpY2VzIik7CiAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCAic3RyZWFtcyIpOwogIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgInJlY29yZGVycyIpOwogIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgIm1pY3JvcGhvbmVzIik7CiAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCAic3BlYWtlcnMiKTsKICBwYXRjaChBdWRpby5wcm90b3R5cGUsICJkZXZpY2VzIik7CiAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCAic3RyZWFtcyIpOwogIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgInJlY29yZGVycyIpOwogIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgInNpbmtzIik7CiAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCAic291cmNlcyIpOwogIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgImRldmljZXMiKTsKfSk7CmF3YWl0IHN1cHByZXNzKGltcG9ydCgiZ2k6Ly9Bc3RhbFRyYXkiKSwgKHsgVHJheSB9KSA9PiB7CiAgcGF0Y2goVHJheS5wcm90b3R5cGUsICJpdGVtcyIpOwp9KTsKCi8vIC4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9nb2JqZWN0LnRzCmltcG9ydCBHT2JqZWN0IGZyb20gImdpOi8vR09iamVjdCI7CmltcG9ydCBHTGliIGZyb20gImdpOi8vR0xpYiI7CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvdXRpbC50cwpmdW5jdGlvbiBrZWJhYmlmeShzdHIpIHsKICByZXR1cm4gc3RyLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csICIkMS0kMiIpLnJlcGxhY2VBbGwoIl8iLCAiLSIpLnRvTG93ZXJDYXNlKCk7Cn0KZnVuY3Rpb24gc25ha2VpZnkyKHN0cikgewogIHJldHVybiBzdHIucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgIiQxLSQyIikucmVwbGFjZUFsbCgiLSIsICJfIikudG9Mb3dlckNhc2UoKTsKfQpmdW5jdGlvbiB4bWwoeyBuYW1lLCBhdHRyaWJ1dGVzLCBjaGlsZHJlbiB9KSB7CiAgbGV0IGJ1aWxkZXIgPSBgPCR7bmFtZX1gOwogIGNvbnN0IGF0dHJzID0gT2JqZWN0LmVudHJpZXMoYXR0cmlidXRlcyA/PyBbXSk7CiAgaWYgKGF0dHJzLmxlbmd0aCA+IDApIHsKICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIGF0dHJzKSB7CiAgICAgIGJ1aWxkZXIgKz0gYCAke2tleX09IiR7dmFsdWV9ImA7CiAgICB9CiAgfQogIGlmIChjaGlsZHJlbiAmJiBjaGlsZHJlbi5sZW5ndGggPiAwKSB7CiAgICBidWlsZGVyICs9ICI+IjsKICAgIGZvciAoY29uc3Qgbm9kZSBvZiBjaGlsZHJlbikgewogICAgICBidWlsZGVyICs9IHhtbChub2RlKTsKICAgIH0KICAgIGJ1aWxkZXIgKz0gYDwvJHtuYW1lfT5gOwogIH0gZWxzZSB7CiAgICBidWlsZGVyICs9ICIgLz4iOwogIH0KICByZXR1cm4gYnVpbGRlcjsKfQpmdW5jdGlvbiBzZXQob2JqLCBwcm9wLCB2YWx1ZSkgewogIGNvbnN0IGtleSA9IHNuYWtlaWZ5Mihwcm9wKTsKICBjb25zdCBnZXR0ZXIyID0gYGdldF8ke2tleX1gOwogIGNvbnN0IHNldHRlcjIgPSBgc2V0XyR7a2V5fWA7CiAgbGV0IGN1cnJlbnQ7CiAgaWYgKGdldHRlcjIgaW4gb2JqICYmIHR5cGVvZiBvYmpbZ2V0dGVyMl0gPT09ICJmdW5jdGlvbiIpIHsKICAgIGN1cnJlbnQgPSBvYmpbZ2V0dGVyMl0oKTsKICB9IGVsc2UgewogICAgY3VycmVudCA9IG9ialtwcm9wXTsKICB9CiAgaWYgKGN1cnJlbnQgIT09IHZhbHVlKSB7CiAgICBpZiAoc2V0dGVyMiBpbiBvYmogJiYgdHlwZW9mIG9ialtzZXR0ZXIyXSA9PT0gImZ1bmN0aW9uIikgewogICAgICA7CiAgICAgIG9ialtzZXR0ZXIyXSh2YWx1ZSk7CiAgICB9IGVsc2UgewogICAgICBPYmplY3QuYXNzaWduKG9iaiwgeyBbcHJvcF06IHZhbHVlIH0pOwogICAgfQogIH0KfQoKLy8gLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2dvYmplY3QudHMKdmFyIHByaXYgPSBTeW1ib2woImdvYmplY3QgcHJpdmF0ZSIpOwp2YXIgeyBkZWZpbmVQcm9wZXJ0eSwgZnJvbUVudHJpZXMsIGVudHJpZXMgfSA9IE9iamVjdDsKdmFyIHsgT2JqZWN0OiBHT2JqLCByZWdpc3RlckNsYXNzIH0gPSBHT2JqZWN0Owp2YXIgU2lnbmFsRmxhZ3MgPSBHT2JqZWN0LlNpZ25hbEZsYWdzOwp2YXIgQWNjdW11bGF0b3JUeXBlID0gR09iamVjdC5BY2N1bXVsYXRvclR5cGU7CnZhciBQYXJhbVNwZWMgPSBHT2JqZWN0LlBhcmFtU3BlYzsKdmFyIFBhcmFtRmxhZ3MgPSBHT2JqZWN0LlBhcmFtRmxhZ3M7CmZ1bmN0aW9uIGFzc2VydEZpZWxkKGN0eCkgewogIGlmIChjdHgucHJpdmF0ZSkgdGhyb3cgRXJyb3IoInByaXZhdGUgZmllbGRzIGFyZSBub3Qgc3VwcG9ydGVkIik7CiAgaWYgKGN0eC5zdGF0aWMpIHRocm93IEVycm9yKCJzdGF0aWMgZmllbGRzIGFyZSBub3Qgc3VwcG9ydGVkIik7CiAgaWYgKHR5cGVvZiBjdHgubmFtZSAhPT0gInN0cmluZyIpIHsKICAgIHRocm93IEVycm9yKCJvbmx5IHN0cmluZ3MgY2FuIGJlIGdvYmplY3QgcHJvcGVydHkga2V5cyIpOwogIH0KICByZXR1cm4gY3R4Lm5hbWU7Cn0KZnVuY3Rpb24gZ2V0dGVyKHR5cGVEZWNsYXJhdGlvbikgewogIHJldHVybiBmdW5jdGlvbihnZXQsIGN0eCkgewogICAgY29uc3QgZmllbGROYW1lID0gYXNzZXJ0RmllbGQoY3R4KTsKICAgIGNvbnN0IG1ldGEgPSBjdHgubWV0YWRhdGE7CiAgICBjb25zdCBwcm9wcyA9IG1ldGEucHJvcGVydGllcyA/Pz0ge307CiAgICBpZiAoZmllbGROYW1lIGluIHByb3BzKSB7CiAgICAgIGNvbnN0IHsgZmxhZ3MsIHR5cGUgfSA9IHByb3BzW2ZpZWxkTmFtZV07CiAgICAgIHByb3BzW2ZpZWxkTmFtZV0gPSB7IGZsYWdzOiBmbGFncyB8IFBhcmFtRmxhZ3MuUkVBREFCTEUsIHR5cGUgfTsKICAgIH0gZWxzZSB7CiAgICAgIHByb3BzW2ZpZWxkTmFtZV0gPSB7IGZsYWdzOiBQYXJhbUZsYWdzLlJFQURBQkxFLCB0eXBlOiB0eXBlRGVjbGFyYXRpb24gfTsKICAgIH0KICAgIHJldHVybiBnZXQ7CiAgfTsKfQpmdW5jdGlvbiBzZXR0ZXIodHlwZURlY2xhcmF0aW9uKSB7CiAgcmV0dXJuIGZ1bmN0aW9uKHNldDIsIGN0eCkgewogICAgY29uc3QgZmllbGROYW1lID0gYXNzZXJ0RmllbGQoY3R4KTsKICAgIGNvbnN0IG1ldGEgPSBjdHgubWV0YWRhdGE7CiAgICBjb25zdCBwcm9wcyA9IG1ldGEucHJvcGVydGllcyA/Pz0ge307CiAgICBpZiAoZmllbGROYW1lIGluIHByb3BzKSB7CiAgICAgIGNvbnN0IHsgZmxhZ3MsIHR5cGUgfSA9IHByb3BzW2ZpZWxkTmFtZV07CiAgICAgIHByb3BzW2ZpZWxkTmFtZV0gPSB7IGZsYWdzOiBmbGFncyB8IFBhcmFtRmxhZ3MuV1JJVEFCTEUsIHR5cGUgfTsKICAgIH0gZWxzZSB7CiAgICAgIHByb3BzW2ZpZWxkTmFtZV0gPSB7IGZsYWdzOiBQYXJhbUZsYWdzLldSSVRBQkxFLCB0eXBlOiB0eXBlRGVjbGFyYXRpb24gfTsKICAgIH0KICAgIHJldHVybiBzZXQyOwogIH07Cn0KZnVuY3Rpb24gc2lnbmFsKC4uLmFyZ3MpIHsKICByZXR1cm4gZnVuY3Rpb24obWV0aG9kLCBjdHgpIHsKICAgIGlmIChjdHgucHJpdmF0ZSkgdGhyb3cgRXJyb3IoInByaXZhdGUgZmllbGRzIGFyZSBub3Qgc3VwcG9ydGVkIik7CiAgICBpZiAoY3R4LnN0YXRpYykgdGhyb3cgRXJyb3IoInN0YXRpYyBmaWVsZHMgYXJlIG5vdCBzdXBwb3J0ZWQiKTsKICAgIGlmICh0eXBlb2YgY3R4Lm5hbWUgIT09ICJzdHJpbmciKSB7CiAgICAgIHRocm93IEVycm9yKCJvbmx5IHN0cmluZ3MgY2FuIGJlIGdvYmplY3Qgc2lnbmFscyIpOwogICAgfQogICAgY29uc3Qgc2lnbmFsTmFtZTIgPSBrZWJhYmlmeShjdHgubmFtZSk7CiAgICBjb25zdCBtZXRhID0gY3R4Lm1ldGFkYXRhOwogICAgY29uc3Qgc2lnbmFscyA9IG1ldGEuc2lnbmFscyA/Pz0ge307CiAgICBpZiAoQXJyYXkuaXNBcnJheShhcmdzWzBdKSkgewogICAgICBjb25zdCBbcGFyYW1zLCByZXR1cm5UeXBlLCBvcHRpb25zXSA9IGFyZ3M7CiAgICAgIHNpZ25hbHNbc2lnbmFsTmFtZTJdID0gewogICAgICAgIG1ldGhvZCwKICAgICAgICBkZWZhdWx0OiBvcHRpb25zPy5kZWZhdWx0ID8/IHRydWUsCiAgICAgICAgcGFyYW1fdHlwZXM6IHBhcmFtcy5tYXAoKGkpID0+ICIkZ3R5cGUiIGluIGkgPyBpLiRndHlwZSA6IGkpLAogICAgICAgIC4uLnJldHVyblR5cGUgJiYgewogICAgICAgICAgcmV0dXJuX3R5cGU6ICIkZ3R5cGUiIGluIHJldHVyblR5cGUgPyByZXR1cm5UeXBlLiRndHlwZSA6IHJldHVyblR5cGUKICAgICAgICB9LAogICAgICAgIC4uLm9wdGlvbnM/LmZsYWdzICYmIHsKICAgICAgICAgIGZsYWdzOiBvcHRpb25zLmZsYWdzCiAgICAgICAgfSwKICAgICAgICAuLi50eXBlb2Ygb3B0aW9ucz8uYWNjdW11bGF0b3IgPT09ICJudW1iZXIiICYmIHsKICAgICAgICAgIGFjY3VtdWxhdG9yOiBvcHRpb25zLmFjY3VtdWxhdG9yCiAgICAgICAgfQogICAgICB9OwogICAgfSBlbHNlIHsKICAgICAgY29uc3QgcGFyYW1zID0gYXJnczsKICAgICAgc2lnbmFsc1tzaWduYWxOYW1lMl0gPSB7CiAgICAgICAgbWV0aG9kLAogICAgICAgIGRlZmF1bHQ6IHRydWUsCiAgICAgICAgcGFyYW1fdHlwZXM6IHBhcmFtcy5tYXAoKGkpID0+ICIkZ3R5cGUiIGluIGkgPyBpLiRndHlwZSA6IGkpCiAgICAgIH07CiAgICB9CiAgICByZXR1cm4gZnVuY3Rpb24oLi4ucGFyYW1zKSB7CiAgICAgIHJldHVybiB0aGlzLmVtaXQoc2lnbmFsTmFtZTIsIC4uLnBhcmFtcyk7CiAgICB9OwogIH07Cn0KdmFyIE1BWElOVCA9IDIgKiogMzEgLSAxOwp2YXIgTUlOSU5UID0gLSgyICoqIDMxKTsKdmFyIE1BWFVJTlQgPSAyICoqIDMyIC0gMTsKdmFyIE1BWEZMT0FUID0gMzQwMjgyMzVlMzE7CnZhciBNSU5GTE9BVCA9IC0zNDAyODIzNWUzMTsKdmFyIE1JTklOVDY0ID0gTnVtYmVyLk1JTl9TQUZFX0lOVEVHRVI7CnZhciBNQVhJTlQ2NCA9IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSOwpmdW5jdGlvbiBwc3BlY0Zyb21HVHlwZSh0eXBlLCBuYW1lLCBmbGFncykgewogIHN3aXRjaCAodHlwZSkgewogICAgY2FzZSBHT2JqZWN0LlRZUEVfQk9PTEVBTjoKICAgICAgcmV0dXJuIFBhcmFtU3BlYy5ib29sZWFuKG5hbWUsICIiLCAiIiwgZmxhZ3MsIGZhbHNlKTsKICAgIGNhc2UgR09iamVjdC5UWVBFX1NUUklORzoKICAgICAgcmV0dXJuIFBhcmFtU3BlYy5zdHJpbmcobmFtZSwgIiIsICIiLCBmbGFncywgIiIpOwogICAgY2FzZSBHT2JqZWN0LlRZUEVfSU5UOgogICAgICByZXR1cm4gUGFyYW1TcGVjLmludChuYW1lLCAiIiwgIiIsIGZsYWdzLCBNSU5JTlQsIE1BWElOVCwgMCk7CiAgICBjYXNlIEdPYmplY3QuVFlQRV9VSU5UOgogICAgICByZXR1cm4gUGFyYW1TcGVjLnVpbnQobmFtZSwgIiIsICIiLCBmbGFncywgMCwgTUFYVUlOVCwgMCk7CiAgICBjYXNlIEdPYmplY3QuVFlQRV9JTlQ2NDoKICAgICAgcmV0dXJuIFBhcmFtU3BlYy5pbnQ2NChuYW1lLCAiIiwgIiIsIGZsYWdzLCBNSU5JTlQ2NCwgTUFYSU5UNjQsIDApOwogICAgY2FzZSBHT2JqZWN0LlRZUEVfVUlOVDY0OgogICAgICByZXR1cm4gUGFyYW1TcGVjLnVpbnQ2NChuYW1lLCAiIiwgIiIsIGZsYWdzLCAwLCBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUiwgMCk7CiAgICBjYXNlIEdPYmplY3QuVFlQRV9GTE9BVDoKICAgICAgcmV0dXJuIFBhcmFtU3BlYy5mbG9hdChuYW1lLCAiIiwgIiIsIGZsYWdzLCBNSU5GTE9BVCwgTUFYRkxPQVQsIDApOwogICAgY2FzZSBHT2JqZWN0LlRZUEVfRE9VQkxFOgogICAgICByZXR1cm4gUGFyYW1TcGVjLmRvdWJsZShuYW1lLCAiIiwgIiIsIGZsYWdzLCBOdW1iZXIuTUlOX1ZBTFVFLCBOdW1iZXIuTUlOX1ZBTFVFLCAwKTsKICAgIGNhc2UgR09iamVjdC5UWVBFX0pTT0JKRUNUOgogICAgICByZXR1cm4gUGFyYW1TcGVjLmpzb2JqZWN0KG5hbWUsICIiLCAiIiwgZmxhZ3MpOwogICAgY2FzZSBHT2JqZWN0LlRZUEVfVkFSSUFOVDoKICAgICAgcmV0dXJuIFBhcmFtU3BlYy5vYmplY3QobmFtZSwgIiIsICIiLCBmbGFncywgR0xpYi5WYXJpYW50KTsKICAgIGNhc2UgR09iamVjdC5UWVBFX0VOVU06CiAgICBjYXNlIEdPYmplY3QuVFlQRV9JTlRFUkZBQ0U6CiAgICBjYXNlIEdPYmplY3QuVFlQRV9CT1hFRDoKICAgIGNhc2UgR09iamVjdC5UWVBFX1BPSU5URVI6CiAgICBjYXNlIEdPYmplY3QuVFlQRV9QQVJBTToKICAgIGNhc2UgR09iamVjdC50eXBlX2Zyb21fbmFtZSgiR1R5cGUiKToKICAgICAgdGhyb3cgRXJyb3IoYGNhbm5vdCBndWVzcyBQYXJhbVNwZWMgZnJvbSBHVHlwZSAiJHt0eXBlfSJgKTsKICAgIGNhc2UgR09iamVjdC5UWVBFX09CSkVDVDoKICAgIGRlZmF1bHQ6CiAgICAgIHJldHVybiBQYXJhbVNwZWMub2JqZWN0KG5hbWUsICIiLCAiIiwgZmxhZ3MsIHR5cGUpOwogIH0KfQpmdW5jdGlvbiBwc3BlYyhuYW1lLCBmbGFncywgZGVjbGFyYXRpb24pIHsKICBpZiAoZGVjbGFyYXRpb24gaW5zdGFuY2VvZiBQYXJhbVNwZWMpIHJldHVybiBkZWNsYXJhdGlvbjsKICBpZiAoZGVjbGFyYXRpb24gPT09IE9iamVjdCB8fCBkZWNsYXJhdGlvbiA9PT0gRnVuY3Rpb24gfHwgZGVjbGFyYXRpb24gPT09IEFycmF5KSB7CiAgICByZXR1cm4gUGFyYW1TcGVjLmpzb2JqZWN0KG5hbWUsICIiLCAiIiwgZmxhZ3MpOwogIH0KICBpZiAoZGVjbGFyYXRpb24gPT09IFN0cmluZykgewogICAgcmV0dXJuIFBhcmFtU3BlYy5zdHJpbmcobmFtZSwgIiIsICIiLCBmbGFncywgIiIpOwogIH0KICBpZiAoZGVjbGFyYXRpb24gPT09IE51bWJlcikgewogICAgcmV0dXJuIFBhcmFtU3BlYy5kb3VibGUobmFtZSwgIiIsICIiLCBmbGFncywgLU51bWJlci5NQVhfVkFMVUUsIE51bWJlci5NQVhfVkFMVUUsIDApOwogIH0KICBpZiAoZGVjbGFyYXRpb24gPT09IEJvb2xlYW4pIHsKICAgIHJldHVybiBQYXJhbVNwZWMuYm9vbGVhbihuYW1lLCAiIiwgIiIsIGZsYWdzLCBmYWxzZSk7CiAgfQogIGlmICgiJGd0eXBlIiBpbiBkZWNsYXJhdGlvbikgewogICAgcmV0dXJuIHBzcGVjRnJvbUdUeXBlKGRlY2xhcmF0aW9uLiRndHlwZSwgbmFtZSwgZmxhZ3MpOwogIH0KICBpZiAodHlwZW9mIGRlY2xhcmF0aW9uID09PSAiZnVuY3Rpb24iKSB7CiAgICByZXR1cm4gZGVjbGFyYXRpb24obmFtZSwgZmxhZ3MpOwogIH0KICB0aHJvdyBFcnJvcigiaW52YWxpZCBQcm9wZXJ0eVR5cGVEZWNsYXJhdGlvbiIpOwp9CmZ1bmN0aW9uIHJlZ2lzdGVyKG9wdGlvbnMgPSB7fSkgewogIHJldHVybiBmdW5jdGlvbihjbHMsIGN0eCkgewogICAgY29uc3QgdCA9IG9wdGlvbnMuVGVtcGxhdGU7CiAgICBpZiAodHlwZW9mIHQgPT09ICJzdHJpbmciICYmICF0LnN0YXJ0c1dpdGgoInJlc291cmNlOi8vIikgJiYgIXQuc3RhcnRzV2l0aCgiZmlsZTovLyIpKSB7CiAgICAgIG9wdGlvbnMuVGVtcGxhdGUgPSBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUodCk7CiAgICB9CiAgICBjb25zdCBtZXRhID0gY3R4Lm1ldGFkYXRhOwogICAgY29uc3QgcHJvcHMgPSBmcm9tRW50cmllcygKICAgICAgZW50cmllcyhtZXRhLnByb3BlcnRpZXMgPz8ge30pLm1hcCgoW2ZpZWxkTmFtZSwgeyBmbGFncywgdHlwZSB9XSkgPT4gewogICAgICAgIGNvbnN0IGtleSA9IGtlYmFiaWZ5KGZpZWxkTmFtZSk7CiAgICAgICAgY29uc3Qgc3BlYyA9IHBzcGVjKGtleSwgZmxhZ3MsIHR5cGUpOwogICAgICAgIHJldHVybiBba2V5LCBzcGVjXTsKICAgICAgfSkKICAgICk7CiAgICBjb25zdCBzaWduYWxzID0gZnJvbUVudHJpZXMoCiAgICAgIGVudHJpZXMobWV0YS5zaWduYWxzID8/IHt9KS5tYXAoKFtzaWduYWxOYW1lMiwgeyBkZWZhdWx0OiBkZWYsIG1ldGhvZCwgLi4uc2lnbmFsMiB9XSkgPT4gewogICAgICAgIGlmIChkZWYpIHsKICAgICAgICAgIGRlZmluZVByb3BlcnR5KGNscy5wcm90b3R5cGUsIGBvbl8ke3NpZ25hbE5hbWUyLnJlcGxhY2VBbGwoIi0iLCAiXyIpfWAsIHsKICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsCiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsCiAgICAgICAgICAgIHZhbHVlOiBtZXRob2QKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgICByZXR1cm4gW3NpZ25hbE5hbWUyLCBzaWduYWwyXTsKICAgICAgfSkKICAgICk7CiAgICBkZWxldGUgbWV0YS5wcm9wZXJ0aWVzOwogICAgZGVsZXRlIG1ldGEuc2lnbmFsczsKICAgIHJlZ2lzdGVyQ2xhc3MoeyAuLi5vcHRpb25zLCBQcm9wZXJ0aWVzOiBwcm9wcywgU2lnbmFsczogc2lnbmFscyB9LCBjbHMpOwogIH07Cn0KRnVuY3Rpb24uJGd0eXBlID0gT2JqZWN0LiRndHlwZTsKQXJyYXkuJGd0eXBlID0gT2JqZWN0LiRndHlwZTsKRGF0ZS4kZ3R5cGUgPSBPYmplY3QuJGd0eXBlOwpNYXAuJGd0eXBlID0gT2JqZWN0LiRndHlwZTsKU2V0LiRndHlwZSA9IE9iamVjdC4kZ3R5cGU7CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9ndGs0L2FwcC50cwppbXBvcnQgR0xpYjQgZnJvbSAiZ2k6Ly9HTGliP3ZlcnNpb249Mi4wIjsKaW1wb3J0IEd0ayBmcm9tICJnaTovL0d0az92ZXJzaW9uPTQuMCI7CmltcG9ydCBHZGsgZnJvbSAiZ2k6Ly9HZGs/dmVyc2lvbj00LjAiOwppbXBvcnQgR2lvMyBmcm9tICJnaTovL0dpbz92ZXJzaW9uPTIuMCI7CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvZGJ1cy50cwppbXBvcnQgR2lvIGZyb20gImdpOi8vR2lvIjsKaW1wb3J0IEdMaWIyIGZyb20gImdpOi8vR0xpYiI7CmltcG9ydCBHT2JqZWN0MiBmcm9tICJnaTovL0dPYmplY3QiOwp2YXIgREVGQVVMVF9USU1FT1VUID0gMWU0Owp2YXIgVmFyaWFudCA9IEdMaWIyLlZhcmlhbnQ7CnZhciBpbmZvID0gU3ltYm9sKCJkYnVzIGludGVyZmFjZSBpbmZvIik7CnZhciBpbnRlcm5hbHMgPSBTeW1ib2woImRidXMgaW50ZXJmYWNlIGludGVybmFscyIpOwp2YXIgcmVtb3RlTWV0aG9kID0gU3ltYm9sKCJwcm94eSByZW1vdGVNZXRob2QiKTsKdmFyIHJlbW90ZU1ldGhvZEFzeW5jID0gU3ltYm9sKCJwcm94eSByZW1vdGVNZXRob2RBc3luYyIpOwp2YXIgcmVtb3RlUHJvcGVydHlTZXQgPSBTeW1ib2woInByb3h5IHJlbW90ZVByb3BlcnR5U2V0Iik7CnZhciBfYTsKdmFyIFNlcnZpY2UgPSBjbGFzcyBleHRlbmRzIEdPYmplY3QyLk9iamVjdCB7CiAgY29uc3RydWN0b3IoKSB7CiAgICBzdXBlcigpOwogICAgdGhpc1tfYV0gPSB7CiAgICAgIHByaXY6IHt9LAogICAgICBvblN0b3A6IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCkKICAgIH07CiAgICBjb25zdCBzZXJ2aWNlID0gdGhpcy5jb25zdHJ1Y3RvcjsKICAgIGlmICghc2VydmljZVtpbmZvXSkgdGhyb3cgRXJyb3IoIm1pc3NpbmcgaW50ZXJmYWNlIGluZm8iKTsKICAgIHRoaXMuI2luZm8gPSBzZXJ2aWNlW2luZm9dOwogIH0KICBzdGF0aWMgewogICAgR09iamVjdDIucmVnaXN0ZXJDbGFzcyh0aGlzKTsKICB9CiAgI2luZm87CiAgbm90aWZ5KHByb3BlcnR5TmFtZSkgewogICAgY29uc3QgcHJvcCA9IHRoaXMuI2luZm8ubG9va3VwX3Byb3BlcnR5KHByb3BlcnR5TmFtZSk7CiAgICBpZiAocHJvcCAmJiB0aGlzW2ludGVybmFsc10uZGJ1c09iamVjdCkgewogICAgICB0aGlzW2ludGVybmFsc10uZGJ1c09iamVjdC5lbWl0X3Byb3BlcnR5X2NoYW5nZWQoCiAgICAgICAgcHJvcGVydHlOYW1lLAogICAgICAgIG5ldyBHTGliMi5WYXJpYW50KHByb3Auc2lnbmF0dXJlLCB0aGlzW3Byb3BlcnR5TmFtZV0pCiAgICAgICk7CiAgICB9CiAgICBzdXBlci5ub3RpZnkocHJvcCA/IGtlYmFiaWZ5KHByb3BlcnR5TmFtZSkgOiBwcm9wZXJ0eU5hbWUpOwogIH0KICBlbWl0KG5hbWUsIC4uLnBhcmFtcykgewogICAgY29uc3Qgc2lnbmFsMiA9IHRoaXMuI2luZm8ubG9va3VwX3NpZ25hbChuYW1lKTsKICAgIGlmIChzaWduYWwyICYmIHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0KSB7CiAgICAgIGNvbnN0IHNpZ25hdHVyZSA9IGAoJHtzaWduYWwyLmFyZ3MubWFwKChhKSA9PiBhLnNpZ25hdHVyZSkuam9pbigiIil9KWA7CiAgICAgIHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0LmVtaXRfc2lnbmFsKG5hbWUsIG5ldyBHTGliMi5WYXJpYW50KHNpZ25hdHVyZSwgcGFyYW1zKSk7CiAgICB9CiAgICByZXR1cm4gc3VwZXIuZW1pdChzaWduYWwyID8ga2ViYWJpZnkobmFtZSkgOiBuYW1lLCAuLi5wYXJhbXMpOwogIH0KICAvLyBzZXJ2ZXIKICAjaGFuZGxlUHJvcGVydHlHZXQoXywgcHJvcGVydHlOYW1lKSB7CiAgICBjb25zdCBwcm9wID0gdGhpcy4jaW5mby5sb29rdXBfcHJvcGVydHkocHJvcGVydHlOYW1lKTsKICAgIGlmICghcHJvcCkgewogICAgICB0aHJvdyBFcnJvcihgJHt0aGlzLmNvbnN0cnVjdG9yLm5hbWV9IGhhcyBubyBleHBvcnRlZCBwcm9wZXJ0eTogIiR7cHJvcGVydHlOYW1lfSJgKTsKICAgIH0KICAgIGNvbnN0IHZhbHVlID0gdGhpc1twcm9wZXJ0eU5hbWVdOwogICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gInVuZGVmaW5lZCIpIHsKICAgICAgcmV0dXJuIG5ldyBHTGliMi5WYXJpYW50KHByb3Auc2lnbmF0dXJlLCB2YWx1ZSk7CiAgICB9IGVsc2UgewogICAgICByZXR1cm4gbnVsbDsKICAgIH0KICB9CiAgLy8gc2VydmVyCiAgI2hhbmRsZVByb3BlcnR5U2V0KF8sIHByb3BlcnR5TmFtZSwgdmFsdWUpIHsKICAgIGNvbnN0IG5ld1ZhbHVlID0gdmFsdWUuZGVlcFVucGFjaygpOwogICAgY29uc3QgcHJvcCA9IHRoaXMuI2luZm8ubG9va3VwX3Byb3BlcnR5KHByb3BlcnR5TmFtZSk7CiAgICBpZiAoIXByb3ApIHsKICAgICAgdGhyb3cgRXJyb3IoYCR7dGhpcy5jb25zdHJ1Y3Rvci5uYW1lfSBoYXMgbm8gcHJvcGVydHk6ICIke3Byb3BlcnR5TmFtZX0iYCk7CiAgICB9CiAgICBpZiAodGhpc1twcm9wZXJ0eU5hbWVdICE9PSBuZXdWYWx1ZSkgewogICAgICB0aGlzW3Byb3BlcnR5TmFtZV0gPSB2YWx1ZS5kZWVwVW5wYWNrKCk7CiAgICB9CiAgfQogIC8vIHNlcnZlcgogICNyZXR1cm5FcnJvcihlcnJvciwgaW52b2NhdGlvbikgewogICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBHTGliMi5FcnJvcikgewogICAgICByZXR1cm4gaW52b2NhdGlvbi5yZXR1cm5fZ2Vycm9yKGVycm9yKTsKICAgIH0KICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEVycm9yKSB7CiAgICAgIHJldHVybiBpbnZvY2F0aW9uLnJldHVybl9kYnVzX2Vycm9yKAogICAgICAgIGVycm9yLm5hbWUuaW5jbHVkZXMoIi4iKSA/IGVycm9yLm5hbWUgOiBgZ2pzLkpTRXJyb3IuJHtlcnJvci5uYW1lfWAsCiAgICAgICAgZXJyb3IubWVzc2FnZQogICAgICApOwogICAgfQogICAgaW52b2NhdGlvbi5yZXR1cm5fZGJ1c19lcnJvcigiZ2pzLkRCdXNTZXJ2aWNlLlVua25vd25FcnJvciIsIGAke2Vycm9yfWApOwogIH0KICAvLyBzZXJ2ZXIKICAjcmV0dXJuVmFsdWUodmFsdWUsIG1ldGhvZE5hbWUsIGludm9jYXRpb24pIHsKICAgIGlmICh2YWx1ZSA9PT0gbnVsbCB8fCB2YWx1ZSA9PT0gdm9pZCAwKSB7CiAgICAgIHJldHVybiBpbnZvY2F0aW9uLnJldHVybl92YWx1ZShuZXcgR0xpYjIuVmFyaWFudCgiKCkiLCBbXSkpOwogICAgfQogICAgY29uc3QgYXJncyA9IHRoaXMuI2luZm8ubG9va3VwX21ldGhvZChtZXRob2ROYW1lKT8ub3V0X2FyZ3MgPz8gW107CiAgICBjb25zdCBzaWduYXR1cmUgPSBgKCR7YXJncy5tYXAoKGFyZykgPT4gYXJnLnNpZ25hdHVyZSkuam9pbigiIil9KWA7CiAgICBpZiAoIUFycmF5LmlzQXJyYXkodmFsdWUpKSB0aHJvdyBFcnJvcigidmFsdWUgaGFzIHRvIGJlIGEgdHVwbGUiKTsKICAgIGludm9jYXRpb24ucmV0dXJuX3ZhbHVlKG5ldyBHTGliMi5WYXJpYW50KHNpZ25hdHVyZSwgdmFsdWUpKTsKICB9CiAgLy8gc2VydmVyCiAgI2hhbmRsZU1ldGhvZENhbGwoXywgbWV0aG9kTmFtZSwgcGFyYW1ldGVycywgaW52b2NhdGlvbikgewogICAgdHJ5IHsKICAgICAgY29uc3QgdmFsdWUgPSB0aGlzW21ldGhvZE5hbWVdKAogICAgICAgIC4uLnBhcmFtZXRlcnMuZGVlcFVucGFjaygpCiAgICAgICk7CiAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEdMaWIyLlZhcmlhbnQpIHsKICAgICAgICBpbnZvY2F0aW9uLnJldHVybl92YWx1ZSh2YWx1ZSk7CiAgICAgIH0gZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBQcm9taXNlKSB7CiAgICAgICAgdmFsdWUudGhlbigodmFsdWUyKSA9PiB0aGlzLiNyZXR1cm5WYWx1ZSh2YWx1ZTIsIG1ldGhvZE5hbWUsIGludm9jYXRpb24pKS5jYXRjaCgoZXJyb3IpID0+IHRoaXMuI3JldHVybkVycm9yKGVycm9yLCBpbnZvY2F0aW9uKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4jcmV0dXJuVmFsdWUodmFsdWUsIG1ldGhvZE5hbWUsIGludm9jYXRpb24pOwogICAgICB9CiAgICB9IGNhdGNoIChlcnJvcikgewogICAgICB0aGlzLiNyZXR1cm5FcnJvcihlcnJvciwgaW52b2NhdGlvbik7CiAgICB9CiAgfQogIC8vIHNlcnZlcgogIGFzeW5jIHNlcnZlKHsKICAgIGJ1c1R5cGUgPSBHaW8uQnVzVHlwZS5TRVNTSU9OLAogICAgbmFtZSA9IHRoaXMuI2luZm8ubmFtZSwKICAgIG9iamVjdFBhdGggPSAiLyIgKyB0aGlzLiNpbmZvLm5hbWUuc3BsaXQoIi4iKS5qb2luKCIvIiksCiAgICBmbGFncyA9IEdpby5CdXNOYW1lT3duZXJGbGFncy5OT05FLAogICAgdGltZW91dDogdGltZW91dDIgPSBERUZBVUxUX1RJTUVPVVQKICB9ID0ge30pIHsKICAgIGNvbnN0IGltcGwgPSBuZXcgR2lvLkRCdXNFeHBvcnRlZE9iamVjdCgKICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBtaXNzaW5nIGNvbnN0cnVjdG9yIHR5cGUKICAgICAgeyBnX2ludGVyZmFjZV9pbmZvOiB0aGlzLiNpbmZvIH0KICAgICk7CiAgICBpbXBsLmNvbm5lY3QoImhhbmRsZS1tZXRob2QtY2FsbCIsIHRoaXMuI2hhbmRsZU1ldGhvZENhbGwuYmluZCh0aGlzKSk7CiAgICBpbXBsLmNvbm5lY3QoImhhbmRsZS1wcm9wZXJ0eS1nZXQiLCB0aGlzLiNoYW5kbGVQcm9wZXJ0eUdldC5iaW5kKHRoaXMpKTsKICAgIGltcGwuY29ubmVjdCgiaGFuZGxlLXByb3BlcnR5LXNldCIsIHRoaXMuI2hhbmRsZVByb3BlcnR5U2V0LmJpbmQodGhpcykpOwogICAgdGhpcy4jaW5mby5jYWNoZV9idWlsZCgpOwogICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgbGV0IHNvdXJjZSA9IHRpbWVvdXQyID4gMCA/IHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgIHJlamVjdChFcnJvcihgc2VydmUgdGltZWQgb3V0YCkpOwogICAgICAgIHNvdXJjZSA9IG51bGw7CiAgICAgIH0sIHRpbWVvdXQyKSA6IG51bGw7CiAgICAgIGNvbnN0IGNsZWFyID0gKCkgPT4gewogICAgICAgIGlmIChzb3VyY2UpIHsKICAgICAgICAgIGNsZWFyVGltZW91dChzb3VyY2UpOwogICAgICAgICAgc291cmNlID0gbnVsbDsKICAgICAgICB9CiAgICAgIH07CiAgICAgIGNvbnN0IGJ1c0lkID0gR2lvLmJ1c19vd25fbmFtZSgKICAgICAgICBidXNUeXBlLAogICAgICAgIG5hbWUsCiAgICAgICAgZmxhZ3MsCiAgICAgICAgKGNvbm4pID0+IHsKICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgIGltcGwuZXhwb3J0KGNvbm4sIG9iamVjdFBhdGgpOwogICAgICAgICAgICB0aGlzW2ludGVybmFsc10uZGJ1c09iamVjdCA9IGltcGw7CiAgICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5vblN0b3AuYWRkKCgpID0+IHsKICAgICAgICAgICAgICBHaW8uYnVzX3Vub3duX25hbWUoYnVzSWQpOwogICAgICAgICAgICAgIGltcGwudW5leHBvcnQoKTsKICAgICAgICAgICAgICB0aGlzLiNpbmZvLmNhY2hlX3JlbGVhc2UoKTsKICAgICAgICAgICAgICBkZWxldGUgdGhpc1tpbnRlcm5hbHNdLmRidXNPYmplY3Q7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICByZXNvbHZlKHRoaXMpOwogICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGNsZWFyLAogICAgICAgIGNsZWFyCiAgICAgICk7CiAgICB9KTsKICB9CiAgLy8gcHJveHkKICAjaGFuZGxlUHJvcGVydGllc0NoYW5nZWQoXywgY2hhbmdlZCwgaW52YWxpZGF0ZWQpIHsKICAgIGNvbnN0IHNldDIgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldChbLi4uT2JqZWN0LmtleXMoY2hhbmdlZC5kZWVwVW5wYWNrKCkpLCAuLi5pbnZhbGlkYXRlZF0pOwogICAgZm9yIChjb25zdCBwcm9wIG9mIHNldDIudmFsdWVzKCkpIHsKICAgICAgdGhpcy5ub3RpZnkocHJvcCk7CiAgICB9CiAgfQogIC8vIHByb3h5CiAgI2hhbmRsZVNpZ25hbChfLCBfc2VuZGVyLCBzaWduYWwyLCBwYXJhbWV0ZXJzKSB7CiAgICB0aGlzLmVtaXQoa2ViYWJpZnkoc2lnbmFsMiksIC4uLnBhcmFtZXRlcnMuZGVlcFVucGFjaygpKTsKICB9CiAgLy8gcHJveHkKICAjcmVtb3RlTWV0aG9kUGFyYW1zKG1ldGhvZE5hbWUsIGFyZ3MpIHsKICAgIGNvbnN0IHsgcHJveHkgfSA9IHRoaXNbaW50ZXJuYWxzXTsKICAgIGlmICghcHJveHkpIHRocm93IEVycm9yKCJpbnZhbGlkIHJlbW90ZU1ldGhvZCBpbnZvY2F0aW9uOiBub3QgYSBwcm94eSIpOwogICAgY29uc3QgbWV0aG9kID0gdGhpcy4jaW5mby5sb29rdXBfbWV0aG9kKG1ldGhvZE5hbWUpOwogICAgaWYgKCFtZXRob2QpIHRocm93IEVycm9yKCJtZXRob2Qgbm90IGZvdW5kIik7CiAgICBjb25zdCBzaWduYXR1cmUgPSBgKCR7bWV0aG9kLmluX2FyZ3MubWFwKChhKSA9PiBhLnNpZ25hdHVyZSkuam9pbigiIil9KWA7CiAgICByZXR1cm4gWwogICAgICBtZXRob2ROYW1lLAogICAgICBuZXcgR0xpYjIuVmFyaWFudChzaWduYXR1cmUsIGFyZ3MpLAogICAgICBHaW8uREJ1c0NhbGxGbGFncy5OT05FLAogICAgICBERUZBVUxUX1RJTUVPVVQsCiAgICAgIG51bGwKICAgIF07CiAgfQogIC8vIHByb3h5CiAgWyhpbmZvLCBfYSA9IGludGVybmFscywgcmVtb3RlTWV0aG9kKV0obWV0aG9kTmFtZSwgYXJncykgewogICAgY29uc3QgcGFyYW1zID0gdGhpcy4jcmVtb3RlTWV0aG9kUGFyYW1zKG1ldGhvZE5hbWUsIGFyZ3MpOwogICAgcmV0dXJuIHRoaXNbaW50ZXJuYWxzXS5wcm94eS5jYWxsX3N5bmMoLi4ucGFyYW1zKTsKICB9CiAgLy8gcHJveHkKICBbcmVtb3RlTWV0aG9kQXN5bmNdKG1ldGhvZE5hbWUsIGFyZ3MpIHsKICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgcGFyYW1zID0gdGhpcy4jcmVtb3RlTWV0aG9kUGFyYW1zKG1ldGhvZE5hbWUsIGFyZ3MpOwogICAgICAgIHRoaXNbaW50ZXJuYWxzXS5wcm94eS5jYWxsKC4uLnBhcmFtcywgKF8sIHJlcykgPT4gewogICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgcmVzb2x2ZSh0aGlzW2ludGVybmFsc10ucHJveHkuY2FsbF9maW5pc2gocmVzKSk7CiAgICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgICByZWplY3QoZXJyb3IpOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgIH0KICAgIH0pOwogIH0KICAvLyBwcm94eQogIFtyZW1vdGVQcm9wZXJ0eVNldF0obmFtZSwgdmFsdWUpIHsKICAgIGNvbnN0IHByb3h5ID0gdGhpc1tpbnRlcm5hbHNdLnByb3h5OwogICAgY29uc3QgcHJvcCA9IHRoaXMuI2luZm8ubG9va3VwX3Byb3BlcnR5KG5hbWUpOwogICAgY29uc3QgdmFyaWFudCA9IG5ldyBHTGliMi5WYXJpYW50KHByb3Auc2lnbmF0dXJlLCB2YWx1ZSk7CiAgICBwcm94eS5zZXRfY2FjaGVkX3Byb3BlcnR5KG5hbWUsIHZhcmlhbnQpOwogICAgcHJveHkuY2FsbCgKICAgICAgIm9yZy5mcmVlZGVza3RvcC5EQnVzLlByb3BlcnRpZXMuU2V0IiwKICAgICAgbmV3IEdMaWIyLlZhcmlhbnQoIihzc3YpIiwgW3Byb3h5LmdJbnRlcmZhY2VOYW1lLCBuYW1lLCB2YXJpYW50XSksCiAgICAgIEdpby5EQnVzQ2FsbEZsYWdzLk5PTkUsCiAgICAgIC0xLAogICAgICBudWxsLAogICAgICAoXywgcmVzKSA9PiB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIHByb3h5LmNhbGxfZmluaXNoKHJlcyk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgY29uc29sZS5lcnJvcihlKTsKICAgICAgICB9CiAgICAgIH0KICAgICk7CiAgfQogIC8vIHByb3h5CiAgYXN5bmMgcHJveHkoewogICAgYnVzID0gR2lvLkRCdXMuc2Vzc2lvbiwKICAgIG5hbWUgPSB0aGlzLiNpbmZvLm5hbWUsCiAgICBvYmplY3RQYXRoID0gIi8iICsgdGhpcy4jaW5mby5uYW1lLnNwbGl0KCIuIikuam9pbigiLyIpLAogICAgZmxhZ3MgPSBHaW8uREJ1c1Byb3h5RmxhZ3MuTk9ORSwKICAgIHRpbWVvdXQ6IHRpbWVvdXQyID0gREVGQVVMVF9USU1FT1VUCiAgfSA9IHt9KSB7CiAgICBjb25zdCBwcm94eSA9IG5ldyBHaW8uREJ1c1Byb3h5KHsKICAgICAgZ0Nvbm5lY3Rpb246IGJ1cywKICAgICAgZ0ludGVyZmFjZU5hbWU6IHRoaXMuI2luZm8ubmFtZSwKICAgICAgZ0ludGVyZmFjZUluZm86IHRoaXMuI2luZm8sCiAgICAgIGdOYW1lOiBuYW1lLAogICAgICBnRmxhZ3M6IGZsYWdzLAogICAgICBnT2JqZWN0UGF0aDogb2JqZWN0UGF0aAogICAgfSk7CiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgICBjb25zdCBjYW5jYWxsYWJsZSA9IG5ldyBHaW8uQ2FuY2VsbGFibGUoKTsKICAgICAgbGV0IHNvdXJjZSA9IHRpbWVvdXQyID4gMCA/IHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgIHJlamVjdChFcnJvcihgcHJveHkgdGltZWQgb3V0YCkpOwogICAgICAgIHNvdXJjZSA9IG51bGw7CiAgICAgICAgY2FuY2FsbGFibGUuY2FuY2VsKCk7CiAgICAgIH0sIHRpbWVvdXQyKSA6IG51bGw7CiAgICAgIHByb3h5LmluaXRfYXN5bmMoR0xpYjIuUFJJT1JJVFlfREVGQVVMVCwgY2FuY2FsbGFibGUsIChfLCByZXMpID0+IHsKICAgICAgICB0cnkgewogICAgICAgICAgaWYgKHNvdXJjZSkgewogICAgICAgICAgICBjbGVhclRpbWVvdXQoc291cmNlKTsKICAgICAgICAgICAgc291cmNlID0gbnVsbDsKICAgICAgICAgIH0KICAgICAgICAgIHByb3h5LmluaXRfZmluaXNoKHJlcyk7CiAgICAgICAgICB0aGlzW2ludGVybmFsc10ucHJveHkgPSBwcm94eTsKICAgICAgICAgIGNvbnN0IGlkcyA9IFsKICAgICAgICAgICAgcHJveHkuY29ubmVjdCgiZy1zaWduYWwiLCB0aGlzLiNoYW5kbGVTaWduYWwuYmluZCh0aGlzKSksCiAgICAgICAgICAgIHByb3h5LmNvbm5lY3QoCiAgICAgICAgICAgICAgImctcHJvcGVydGllcy1jaGFuZ2VkIiwKICAgICAgICAgICAgICB0aGlzLiNoYW5kbGVQcm9wZXJ0aWVzQ2hhbmdlZC5iaW5kKHRoaXMpCiAgICAgICAgICAgICkKICAgICAgICAgIF07CiAgICAgICAgICB0aGlzW2ludGVybmFsc10ub25TdG9wLmFkZCgoKSA9PiB7CiAgICAgICAgICAgIGlkcy5mb3JFYWNoKChpZCkgPT4gcHJveHkuZGlzY29ubmVjdChpZCkpOwogICAgICAgICAgICBkZWxldGUgdGhpc1tpbnRlcm5hbHNdLnByb3h5OwogICAgICAgICAgfSk7CiAgICAgICAgICByZXNvbHZlKHRoaXMpOwogICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICByZWplY3QoZXJyb3IpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9KTsKICB9CiAgc3RvcCgpIHsKICAgIGNvbnN0IHsgb25TdG9wIH0gPSB0aGlzW2ludGVybmFsc107CiAgICBmb3IgKGNvbnN0IGNiIG9mIG9uU3RvcC52YWx1ZXMoKSkgewogICAgICBvblN0b3AuZGVsZXRlKGNiKTsKICAgICAgY2IoKTsKICAgIH0KICB9Cn07CmZ1bmN0aW9uIGlmYWNlKG5hbWUsIG9wdGlvbnMpIHsKICByZXR1cm4gZnVuY3Rpb24oY2xzLCBjdHgpIHsKICAgIGNvbnN0IG1ldGEgPSBjdHgubWV0YWRhdGE7CiAgICBpZiAoIW1ldGEpIHRocm93IEVycm9yKGAke2Nscy5uYW1lfSBpcyBub3QgYW4gaW50ZXJmYWNlYCk7CiAgICBjb25zdCB7IGRidXNNZXRob2RzID0ge30sIGRidXNTaWduYWxzID0ge30sIGRidXNQcm9wZXJ0aWVzID0ge30gfSA9IG1ldGE7CiAgICBjb25zdCBpbmZvWG1sID0geG1sKHsKICAgICAgbmFtZTogIm5vZGUiLAogICAgICBjaGlsZHJlbjogWwogICAgICAgIHsKICAgICAgICAgIG5hbWU6ICJpbnRlcmZhY2UiLAogICAgICAgICAgYXR0cmlidXRlczogeyBuYW1lIH0sCiAgICAgICAgICBjaGlsZHJlbjogWwogICAgICAgICAgICAuLi5PYmplY3QuZW50cmllcyhkYnVzTWV0aG9kcykubWFwKChbbmFtZTIsIGFyZ3NdKSA9PiAoewogICAgICAgICAgICAgIG5hbWU6ICJtZXRob2QiLAogICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHsgbmFtZTogbmFtZTIgfSwKICAgICAgICAgICAgICBjaGlsZHJlbjogYXJncy5tYXAoKGFyZykgPT4gKHsgbmFtZTogImFyZyIsIGF0dHJpYnV0ZXM6IGFyZyB9KSkKICAgICAgICAgICAgfSkpLAogICAgICAgICAgICAuLi5PYmplY3QuZW50cmllcyhkYnVzU2lnbmFscykubWFwKChbbmFtZTIsIGFyZ3NdKSA9PiAoewogICAgICAgICAgICAgIG5hbWU6ICJzaWduYWwiLAogICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHsgbmFtZTogbmFtZTIgfSwKICAgICAgICAgICAgICBjaGlsZHJlbjogYXJncy5tYXAoKGFyZykgPT4gKHsgbmFtZTogImFyZyIsIGF0dHJpYnV0ZXM6IGFyZyB9KSkKICAgICAgICAgICAgfSkpLAogICAgICAgICAgICAuLi5PYmplY3QudmFsdWVzKGRidXNQcm9wZXJ0aWVzKS5tYXAoKHsgbmFtZTogbmFtZTIsIHR5cGUsIHJlYWQsIHdyaXRlIH0pID0+ICh7CiAgICAgICAgICAgICAgbmFtZTogInByb3BlcnR5IiwKICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiB7CiAgICAgICAgICAgICAgICAuLi5uYW1lMiAmJiB7IG5hbWU6IG5hbWUyIH0sCiAgICAgICAgICAgICAgICB0eXBlLAogICAgICAgICAgICAgICAgYWNjZXNzOiAocmVhZCA/ICJyZWFkIiA6ICIiKSArICh3cml0ZSA/ICJ3cml0ZSIgOiAiIikKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pKQogICAgICAgICAgXQogICAgICAgIH0KICAgICAgXQogICAgfSk7CiAgICBPYmplY3QuYXNzaWduKGNscywgeyBbaW5mb106IEdpby5EQnVzSW50ZXJmYWNlSW5mby5uZXdfZm9yX3htbChpbmZvWG1sKSB9KTsKICAgIHJlZ2lzdGVyKG9wdGlvbnMpKGNscywgY3R4KTsKICB9Owp9CmZ1bmN0aW9uIGluc3RhbGxNZXRob2QoYXJncywgbWV0aG9kLCBjdHgpIHsKICBjb25zdCBuYW1lID0gY3R4Lm5hbWU7CiAgY29uc3QgbWV0YSA9IGN0eC5tZXRhZGF0YTsKICBjb25zdCBtZXRob2RzID0gbWV0YS5kYnVzTWV0aG9kcyA/Pz0ge307CiAgaWYgKHR5cGVvZiBuYW1lICE9PSAic3RyaW5nIikgewogICAgdGhyb3cgRXJyb3IoIm9ubHkgc3RyaW5nIG5hbWVkIG1ldGhvZHMgYXJlIGFsbG93ZWQiKTsKICB9CiAgY29uc3QgW2luQXJncywgb3V0QXJncyA9IFtdXSA9IEFycmF5LmlzQXJyYXkoYXJnc1swXSkgPyBhcmdzIDogW2FyZ3NdOwogIG1ldGhvZHNbbmFtZV0gPSBbCiAgICAuLi5pbkFyZ3MubWFwKChhcmcpID0+ICh7CiAgICAgIGRpcmVjdGlvbjogImluIiwKICAgICAgLi4udHlwZW9mIGFyZyA9PT0gInN0cmluZyIgPyB7IHR5cGU6IGFyZyB9IDogYXJnCiAgICB9KSksCiAgICAuLi5vdXRBcmdzLm1hcCgoYXJnKSA9PiAoewogICAgICBkaXJlY3Rpb246ICJvdXQiLAogICAgICAuLi50eXBlb2YgYXJnID09PSAic3RyaW5nIiA/IHsgdHlwZTogYXJnIH0gOiBhcmcKICAgIH0pKQogIF07CiAgcmV0dXJuIG5hbWU7Cn0KZnVuY3Rpb24gbWV0aG9kQXN5bmMoLi4uYXJncykgewogIHJldHVybiBmdW5jdGlvbihtZXRob2QsIGN0eCkgewogICAgY29uc3QgbmFtZSA9IGluc3RhbGxNZXRob2QoYXJncywgbWV0aG9kLCBjdHgpOwogICAgcmV0dXJuIGFzeW5jIGZ1bmN0aW9uKC4uLmFyZ3MyKSB7CiAgICAgIGlmICh0aGlzW2ludGVybmFsc10ucHJveHkpIHsKICAgICAgICBjb25zdCB2YWx1ZSA9IGF3YWl0IHRoaXNbcmVtb3RlTWV0aG9kQXN5bmNdKG5hbWUsIGFyZ3MyKTsKICAgICAgICByZXR1cm4gdmFsdWUuZGVlcFVucGFjaygpOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBtZXRob2QuYXBwbHkodGhpcywgYXJnczIpOwogICAgICB9CiAgICB9OwogIH07Cn0KCi8vIC4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2FwcC9kYnVzLnRzCnZhciBfUmVxdWVzdF9kZWMsIF9RdWl0X2RlYywgX1RvZ2dsZVdpbmRvd19kZWMsIF9JbnNwZWN0b3JfZGVjLCBfYTIsIF9BcHBEQnVzX2RlY29yYXRvcnMsIF9pbml0OwpfQXBwREJ1c19kZWNvcmF0b3JzID0gW2lmYWNlKCJpby5Bc3RhbC5BcHBsaWNhdGlvbiIpXTsKdmFyIF9BcHBEQnVzID0gY2xhc3MgX0FwcERCdXMgZXh0ZW5kcyAoX2EyID0gU2VydmljZSwgX0luc3BlY3Rvcl9kZWMgPSBbbWV0aG9kQXN5bmMoKV0sIF9Ub2dnbGVXaW5kb3dfZGVjID0gW21ldGhvZEFzeW5jKCJzIildLCBfUXVpdF9kZWMgPSBbbWV0aG9kQXN5bmMoKV0sIF9SZXF1ZXN0X2RlYyA9IFttZXRob2RBc3luYyhbImFzIl0sIFsicyJdKV0sIF9hMikgewogIGNvbnN0cnVjdG9yKGltcGwpIHsKICAgIHN1cGVyKCk7CiAgICBfX3J1bkluaXRpYWxpemVycyhfaW5pdCwgNSwgdGhpcyk7CiAgICB0aGlzLmltcGwgPSB2b2lkIDA7CiAgICB0aGlzLmltcGwgPSBpbXBsOwogIH0KICBhc3luYyBJbnNwZWN0b3IoKSB7CiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMuaW1wbC5pbnNlY3RvcigpKTsKICB9CiAgYXN5bmMgVG9nZ2xlV2luZG93KG5hbWUpIHsKICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5pbXBsLnRvZ2dsZVdpbmRvdyhuYW1lKSk7CiAgfQogIGFzeW5jIFF1aXQoKSB7CiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMuaW1wbC5xdWl0KCkpOwogIH0KICBhc3luYyBSZXF1ZXN0KGFyZ3YpIHsKICAgIHJldHVybiB0aGlzLmltcGwucmVxdWVzdChhcmd2KS50aGVuKChyZXMpID0+IFtyZXNdKTsKICB9CiAgc3RhdGljIHByb3h5KGluc3RhbmNlTmFtZSkgewogICAgY29uc3QgYXBwMiA9IG5ldyBfQXBwREJ1cyh7CiAgICAgIGluc2VjdG9yKCkgewogICAgICB9LAogICAgICB0b2dnbGVXaW5kb3coKSB7CiAgICAgIH0sCiAgICAgIHF1aXQoKSB7CiAgICAgIH0sCiAgICAgIHJlcXVlc3Q6ICgpID0+IFByb21pc2UucmVqZWN0KCkKICAgIH0pOwogICAgcmV0dXJuIGFwcDIucHJveHkoewogICAgICBuYW1lOiAiaW8uQXN0YWwuIiArIGluc3RhbmNlTmFtZQogICAgfSk7CiAgfQp9OwpfaW5pdCA9IF9fZGVjb3JhdG9yU3RhcnQoX2EyKTsKX19kZWNvcmF0ZUVsZW1lbnQoX2luaXQsIDEsICJJbnNwZWN0b3IiLCBfSW5zcGVjdG9yX2RlYywgX0FwcERCdXMpOwpfX2RlY29yYXRlRWxlbWVudChfaW5pdCwgMSwgIlRvZ2dsZVdpbmRvdyIsIF9Ub2dnbGVXaW5kb3dfZGVjLCBfQXBwREJ1cyk7Cl9fZGVjb3JhdGVFbGVtZW50KF9pbml0LCAxLCAiUXVpdCIsIF9RdWl0X2RlYywgX0FwcERCdXMpOwpfX2RlY29yYXRlRWxlbWVudChfaW5pdCwgMSwgIlJlcXVlc3QiLCBfUmVxdWVzdF9kZWMsIF9BcHBEQnVzKTsKX0FwcERCdXMgPSBfX2RlY29yYXRlRWxlbWVudChfaW5pdCwgMCwgIkFwcERCdXMiLCBfQXBwREJ1c19kZWNvcmF0b3JzLCBfQXBwREJ1cyk7Cl9fcnVuSW5pdGlhbGl6ZXJzKF9pbml0LCAxLCBfQXBwREJ1cyk7CnZhciBBcHBEQnVzID0gX0FwcERCdXM7CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9ndGs0L2FwcC50cwppbXBvcnQgeyBzZXRDb25zb2xlTG9nRG9tYWluIH0gZnJvbSAiY29uc29sZSI7CmltcG9ydCB7IGV4aXQsIHByb2dyYW1BcmdzIH0gZnJvbSAic3lzdGVtIjsKCi8vIC4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvanN4LnRzCmltcG9ydCBHT2JqZWN0NSBmcm9tICJnaTovL0dPYmplY3QiOwoKLy8gLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9GcmFnbWVudC50cwppbXBvcnQgR09iamVjdDMgZnJvbSAiZ2k6Ly9HT2JqZWN0IjsKdmFyIF9hMywgX2I7CnZhciBGcmFnbWVudCA9IGNsYXNzIF9GcmFnbWVudCBleHRlbmRzIEdPYmplY3QzLk9iamVjdCB7CiAgc3RhdGljIHsKICAgIHRoaXNbX2JdID0gewogICAgICBhcHBlbmQ6IHsgcGFyYW1fdHlwZXM6IFtHT2JqZWN0My5UWVBFX09CSkVDVF0gfSwKICAgICAgcmVtb3ZlOiB7IHBhcmFtX3R5cGVzOiBbR09iamVjdDMuVFlQRV9PQkpFQ1RdIH0KICAgIH07CiAgfQogIHN0YXRpYyB7CiAgICB0aGlzW19hM10gPSB7CiAgICAgIGNoaWxkcmVuOiBHT2JqZWN0My5QYXJhbVNwZWMuanNvYmplY3QoImNoaWxkcmVuIiwgIiIsICIiLCBHT2JqZWN0My5QYXJhbUZsYWdzLlJFQURBQkxFKQogICAgfTsKICB9CiAgc3RhdGljIHsKICAgIEdPYmplY3QzLnJlZ2lzdGVyQ2xhc3ModGhpcyk7CiAgfQogICpbKF9iID0gR09iamVjdDMuc2lnbmFscywgX2EzID0gR09iamVjdDMucHJvcGVydGllcywgU3ltYm9sLml0ZXJhdG9yKV0oKSB7CiAgICB5aWVsZCogdGhpcy5fY2hpbGRyZW47CiAgfQogIGFwcGVuZChjaGlsZCkgewogICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgX0ZyYWdtZW50KSB7CiAgICAgIHRocm93IEVycm9yKGBuZXN0aW5nIEZyYWdtZW50cyBhcmUgbm90IHlldCBzdXBwb3J0ZWRgKTsKICAgIH0KICAgIHRoaXMuX2NoaWxkcmVuLnB1c2goY2hpbGQpOwogICAgdGhpcy5lbWl0KCJhcHBlbmQiLCBjaGlsZCk7CiAgICB0aGlzLm5vdGlmeSgiY2hpbGRyZW4iKTsKICB9CiAgcmVtb3ZlKGNoaWxkKSB7CiAgICBjb25zdCBpbmRleCA9IHRoaXMuX2NoaWxkcmVuLmZpbmRJbmRleCgoaSkgPT4gaSA9PT0gY2hpbGQpOwogICAgdGhpcy5fY2hpbGRyZW4uc3BsaWNlKGluZGV4LCAxKTsKICAgIHRoaXMuZW1pdCgicmVtb3ZlIiwgY2hpbGQpOwogICAgdGhpcy5ub3RpZnkoImNoaWxkcmVuIik7CiAgfQogIGNvbnN0cnVjdG9yKHsgY2hpbGRyZW4gPSBbXSB9ID0ge30pIHsKICAgIHN1cGVyKCk7CiAgICB0aGlzLl9jaGlsZHJlbiA9IEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW4gOiBbY2hpbGRyZW5dOwogIH0KICBjb25uZWN0KHNpZ25hbDIsIGNhbGxiYWNrKSB7CiAgICByZXR1cm4gc3VwZXIuY29ubmVjdChzaWduYWwyLCBjYWxsYmFjayk7CiAgfQp9OwoKLy8gLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9zdGF0ZS50cwppbXBvcnQgR09iamVjdDQgZnJvbSAiZ2k6Ly9HT2JqZWN0IjsKaW1wb3J0IEdpbzIgZnJvbSAiZ2k6Ly9HaW8iOwppbXBvcnQgR0xpYjMgZnJvbSAiZ2k6Ly9HTGliIjsKdmFyIGVtcHR5ID0gU3ltYm9sKCJlbXB0eSBjb21wdXRlZCB2YWx1ZSIpOwp2YXIgQWNjZXNzb3IgPSBjbGFzcyBfQWNjZXNzb3IgZXh0ZW5kcyBGdW5jdGlvbiB7CiAgc3RhdGljIHsKICAgIHRoaXMuJGd0eXBlID0gR09iamVjdDQuVFlQRV9KU09CSkVDVDsKICB9CiAgI2dldDsKICAjc3Vic2NyaWJlOwogIGNvbnN0cnVjdG9yKGdldCwgc3Vic2NyaWJlKSB7CiAgICBzdXBlcigicmV0dXJuIGFyZ3VtZW50cy5jYWxsZWUuX2NhbGwuYXBwbHkoYXJndW1lbnRzLmNhbGxlZSwgYXJndW1lbnRzKSIpOwogICAgdGhpcy4jc3Vic2NyaWJlID0gc3Vic2NyaWJlID8/ICgoKSA9PiAoKSA9PiB2b2lkIDApOwogICAgdGhpcy4jZ2V0ID0gZ2V0OwogIH0KICAvKioKICAgKiBTdWJzY3JpYmUgZm9yIHZhbHVlIGNoYW5nZXMuCiAgICogQHBhcmFtIGNhbGxiYWNrIFRoZSBmdW5jdGlvbiB0byBydW4gd2hlbiB0aGUgY3VycmVudCB2YWx1ZSBjaGFuZ2VzLgogICAqIEByZXR1cm5zIFVuc3Vic2NyaWJlIGZ1bmN0aW9uLgogICAqLwogIHN1YnNjcmliZShjYWxsYmFjaykgewogICAgcmV0dXJuIHRoaXMuI3N1YnNjcmliZShjYWxsYmFjayk7CiAgfQogIC8qKgogICAqIEByZXR1cm5zIFRoZSBjdXJyZW50IHZhbHVlLgogICAqLwogIGdldCgpIHsKICAgIHJldHVybiB0aGlzLiNnZXQoKTsKICB9CiAgLyoqCiAgICogQ3JlYXRlIGEgbmV3IGBBY2Nlc3NvcmAgdGhhdCBhcHBsaWVzIGEgdHJhbnNmb3JtYXRpb24gb24gaXRzIHZhbHVlLgogICAqIEBwYXJhbSB0cmFuc2Zvcm0gVGhlIHRyYW5zZm9ybWF0aW9uIHRvIGFwcGx5LiBTaG91bGQgYmUgYSBwdXJlIGZ1bmN0aW9uLgogICAqLwogIGFzKHRyYW5zZm9ybSkgewogICAgcmV0dXJuIG5ldyBfQWNjZXNzb3IoKCkgPT4gdHJhbnNmb3JtKHRoaXMuI2dldCgpKSwgdGhpcy4jc3Vic2NyaWJlKTsKICB9CiAgX2NhbGwodHJhbnNmb3JtKSB7CiAgICBsZXQgdmFsdWUgPSBlbXB0eTsKICAgIGxldCB1bnN1YjsKICAgIGNvbnN0IHN1YnNjcmliZXJzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTsKICAgIGNvbnN0IHN1YnNjcmliZSA9IChjYWxsYmFjaykgPT4gewogICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkgewogICAgICAgIHVuc3ViID0gdGhpcy5zdWJzY3JpYmUoKCkgPT4gewogICAgICAgICAgY29uc3QgbmV3VmFsdWUgPSB0cmFuc2Zvcm0odGhpcy5nZXQoKSk7CiAgICAgICAgICBpZiAodmFsdWUgIT09IG5ld1ZhbHVlKSB7CiAgICAgICAgICAgIHZhbHVlID0gbmV3VmFsdWU7CiAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQogICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spOwogICAgICByZXR1cm4gKCkgPT4gewogICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjayk7CiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHsKICAgICAgICAgIHZhbHVlID0gZW1wdHk7CiAgICAgICAgICB1bnN1YigpOwogICAgICAgIH0KICAgICAgfTsKICAgIH07CiAgICBjb25zdCBnZXQgPSAoKSA9PiB7CiAgICAgIHJldHVybiB2YWx1ZSAhPT0gZW1wdHkgPyB2YWx1ZSA6IHRyYW5zZm9ybSh0aGlzLmdldCgpKTsKICAgIH07CiAgICByZXR1cm4gbmV3IF9BY2Nlc3NvcihnZXQsIHN1YnNjcmliZSk7CiAgfQogIHRvU3RyaW5nKCkgewogICAgcmV0dXJuIGBBY2Nlc3Nvcjwke3RoaXMuZ2V0KCl9PmA7CiAgfQogIFtTeW1ib2wudG9QcmltaXRpdmVdKCkgewogICAgY29uc29sZS53YXJuKCJBY2Nlc3NvciBpbXBsaWNpdGx5IGNvbnZlcnRlZCB0byBhIHByaW1pdGl2ZSB2YWx1ZS4iKTsKICAgIHJldHVybiB0aGlzLnRvU3RyaW5nKCk7CiAgfQp9OwoKLy8gLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9lbnYudHMKZnVuY3Rpb24gY29uZmlndWUoY29uZikgewogIHJldHVybiBPYmplY3QuYXNzaWduKGVudiwgY29uZik7Cn0KZnVuY3Rpb24gbWlzc2luZ0ltcGwoKSB7CiAgdGhyb3cgRXJyb3IoIm1pc3NpbmcgaW1wbCIpOwp9CnZhciBlbnYgPSB7CiAgaW50cmluc2ljRWxlbWVudHM6IHt9LAogIHRleHROb2RlOiBtaXNzaW5nSW1wbCwKICBhcHBlbmRDaGlsZDogbWlzc2luZ0ltcGwsCiAgcmVtb3ZlQ2hpbGQ6IG1pc3NpbmdJbXBsLAogIHNldENzczogbWlzc2luZ0ltcGwsCiAgc2V0Q2xhc3M6IG1pc3NpbmdJbXBsLAogIGluaXRQcm9wczogKCkgPT4gdm9pZCAwLAogIGRlZmF1bHRDbGVhbnVwOiAoKSA9PiB2b2lkIDAKfTsKCi8vIC4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvc2NvcGUudHMKdmFyIFNjb3BlID0gY2xhc3MgX1Njb3BlIHsKICBjb25zdHJ1Y3RvcihwYXJlbnQpIHsKICAgIHRoaXMuY29udGV4dHMgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpOwogICAgdGhpcy5jbGVhbnVwcyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7CiAgICB0aGlzLm1vdW50cyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgU2V0KCk7CiAgICB0aGlzLm1vdW50ZWQgPSBmYWxzZTsKICAgIHRoaXMucGFyZW50ID0gcGFyZW50OwogIH0KICBvbkNsZWFudXAoY2FsbGJhY2spIHsKICAgIHRoaXMuY2xlYW51cHM/LmFkZChjYWxsYmFjayk7CiAgfQogIG9uTW91bnQoY2FsbGJhY2spIHsKICAgIGlmICh0aGlzLnBhcmVudCAmJiAhdGhpcy5wYXJlbnQubW91bnRlZCkgewogICAgICB0aGlzLnBhcmVudC5vbk1vdW50KGNhbGxiYWNrKTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMubW91bnRzLmFkZChjYWxsYmFjayk7CiAgICB9CiAgfQogIHJ1bihmbikgewogICAgY29uc3QgcHJldiA9IF9TY29wZS5jdXJyZW50OwogICAgX1Njb3BlLmN1cnJlbnQgPSB0aGlzOwogICAgdHJ5IHsKICAgICAgcmV0dXJuIGZuKCk7CiAgICB9IGZpbmFsbHkgewogICAgICB0aGlzLm1vdW50cy5mb3JFYWNoKChjYikgPT4gY2IoKSk7CiAgICAgIHRoaXMubW91bnRzLmNsZWFyKCk7CiAgICAgIHRoaXMubW91bnRlZCA9IHRydWU7CiAgICAgIF9TY29wZS5jdXJyZW50ID0gcHJldjsKICAgIH0KICB9CiAgZGlzcG9zZSgpIHsKICAgIHRoaXMuY2xlYW51cHMuZm9yRWFjaCgoY2IpID0+IGNiKCkpOwogICAgdGhpcy5jbGVhbnVwcy5jbGVhcigpOwogICAgdGhpcy5jb250ZXh0cy5jbGVhcigpOwogICAgZGVsZXRlIHRoaXMucGFyZW50OwogIH0KfTsKZnVuY3Rpb24gb25DbGVhbnVwKGNsZWFudXApIHsKICBpZiAoIVNjb3BlLmN1cnJlbnQpIHsKICAgIGNvbnNvbGUuZXJyb3IoRXJyb3IoIm91dCBvZiB0cmFja2luZyBjb250ZXh0OiB3aWxsIG5vdCBiZSBhYmxlIHRvIGNsZWFudXAiKSk7CiAgfQogIFNjb3BlLmN1cnJlbnQ/Lm9uQ2xlYW51cChjbGVhbnVwKTsKfQpmdW5jdGlvbiBjcmVhdGVSb290KGZuKSB7CiAgY29uc3Qgc2NvcGUgPSBuZXcgU2NvcGUobnVsbCk7CiAgcmV0dXJuIHNjb3BlLnJ1bigoKSA9PiBmbigoKSA9PiBzY29wZS5kaXNwb3NlKCkpKTsKfQoKLy8gLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9qc3gudHMKdmFyIGd0a1R5cGUgPSBTeW1ib2woImd0ayBidWlsZGVyIHR5cGUiKTsKdmFyIGFwcGVuZENoaWxkID0gU3ltYm9sKCJKU1ggYWRkIGNoaWxkIG1ldGhvZCIpOwp2YXIgcmVtb3ZlQ2hpbGQgPSBTeW1ib2woIkpTWCBhZGQgcmVtb3ZlIG1ldGhvZCIpOwpmdW5jdGlvbiBnZXRUeXBlKG9iamVjdCkgewogIHJldHVybiBndGtUeXBlIGluIG9iamVjdCA/IG9iamVjdFtndGtUeXBlXSA6IG51bGw7Cn0KZnVuY3Rpb24gaXNHT2JqZWN0Q3RvcihjdG9yKSB7CiAgcmV0dXJuIGN0b3IucHJvdG90eXBlIGluc3RhbmNlb2YgR09iamVjdDUuT2JqZWN0Owp9CmZ1bmN0aW9uIGlzRnVuY3Rpb25DdG9yKGN0b3IpIHsKICByZXR1cm4gdHlwZW9mIGN0b3IgPT09ICJmdW5jdGlvbiIgJiYgIWlzR09iamVjdEN0b3IoY3Rvcik7Cn0KZnVuY3Rpb24gc2lnbmFsTmFtZShrZXkpIHsKICBjb25zdCBbc2lnLCBkZXRhaWxdID0ga2ViYWJpZnkoa2V5LnNsaWNlKDIpKS5zcGxpdCgiOiIpOwogIGlmIChzaWcuc3RhcnRzV2l0aCgibm90aWZ5LSIpKSB7CiAgICByZXR1cm4gYG5vdGlmeTo6JHtzaWcuc2xpY2UoNyl9YDsKICB9CiAgcmV0dXJuIGRldGFpbCA/IGAke3NpZ306OiR7ZGV0YWlsfWAgOiBzaWc7Cn0KZnVuY3Rpb24gcmVtb3ZlKHBhcmVudCwgY2hpbGQpIHsKICBpZiAocGFyZW50IGluc3RhbmNlb2YgRnJhZ21lbnQpIHsKICAgIHBhcmVudC5yZW1vdmUoY2hpbGQpOwogICAgcmV0dXJuOwogIH0KICBpZiAocmVtb3ZlQ2hpbGQgaW4gcGFyZW50ICYmIHR5cGVvZiBwYXJlbnRbcmVtb3ZlQ2hpbGRdID09PSAiZnVuY3Rpb24iKSB7CiAgICBwYXJlbnRbcmVtb3ZlQ2hpbGRdKGNoaWxkKTsKICAgIHJldHVybjsKICB9CiAgZW52LnJlbW92ZUNoaWxkKHBhcmVudCwgY2hpbGQpOwp9CmZ1bmN0aW9uIGFwcGVuZChwYXJlbnQsIGNoaWxkKSB7CiAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIEZyYWdtZW50KSB7CiAgICBwYXJlbnQuYXBwZW5kKGNoaWxkKTsKICAgIHJldHVybjsKICB9CiAgaWYgKGNoaWxkIGluc3RhbmNlb2YgRnJhZ21lbnQpIHsKICAgIGZvciAoY29uc3QgY2ggb2YgY2hpbGQpIHsKICAgICAgYXBwZW5kKHBhcmVudCwgY2gpOwogICAgfQogICAgY29uc3QgYXBwZW5kSGFuZGxlciA9IGNoaWxkLmNvbm5lY3QoImFwcGVuZCIsIChfLCBjaCkgPT4gewogICAgICBpZiAoIShjaCBpbnN0YW5jZW9mIEdPYmplY3Q1Lk9iamVjdCkpIHsKICAgICAgICByZXR1cm4gY29uc29sZS5lcnJvcihUeXBlRXJyb3IoYGNhbm5vdCBhZGQgJHtjaH0gdG8gJHtwYXJlbnR9YCkpOwogICAgICB9CiAgICAgIGFwcGVuZChwYXJlbnQsIGNoKTsKICAgIH0pOwogICAgY29uc3QgcmVtb3ZlSGFuZGxlciA9IGNoaWxkLmNvbm5lY3QoInJlbW92ZSIsIChfLCBjaCkgPT4gewogICAgICBpZiAoIShjaCBpbnN0YW5jZW9mIEdPYmplY3Q1Lk9iamVjdCkpIHsKICAgICAgICByZXR1cm4gY29uc29sZS5lcnJvcihUeXBlRXJyb3IoYGNhbm5vdCByZW1vdmUgJHtjaH0gZnJvbSAke3BhcmVudH1gKSk7CiAgICAgIH0KICAgICAgcmVtb3ZlKHBhcmVudCwgY2gpOwogICAgfSk7CiAgICBvbkNsZWFudXAoKCkgPT4gewogICAgICBjaGlsZC5kaXNjb25uZWN0KGFwcGVuZEhhbmRsZXIpOwogICAgICBjaGlsZC5kaXNjb25uZWN0KHJlbW92ZUhhbmRsZXIpOwogICAgfSk7CiAgICByZXR1cm47CiAgfQogIGlmIChhcHBlbmRDaGlsZCBpbiBwYXJlbnQgJiYgdHlwZW9mIHBhcmVudFthcHBlbmRDaGlsZF0gPT09ICJmdW5jdGlvbiIpIHsKICAgIHBhcmVudFthcHBlbmRDaGlsZF0oY2hpbGQsIGdldFR5cGUoY2hpbGQpKTsKICAgIHJldHVybjsKICB9CiAgZW52LmFwcGVuZENoaWxkKHBhcmVudCwgY2hpbGQpOwp9CmZ1bmN0aW9uIHNldFR5cGUob2JqZWN0LCB0eXBlKSB7CiAgaWYgKGd0a1R5cGUgaW4gb2JqZWN0ICYmIG9iamVjdFtndGtUeXBlXSAhPT0gIiIpIHsKICAgIGNvbnNvbGUud2FybihgdHlwZSBvdmVycmlkZW4gZnJvbSAke29iamVjdFtndGtUeXBlXX0gdG8gJHt0eXBlfSBvbiAke29iamVjdH1gKTsKICB9CiAgT2JqZWN0LmFzc2lnbihvYmplY3QsIHsgW2d0a1R5cGVdOiB0eXBlIH0pOwp9CmZ1bmN0aW9uIGpzeChjdG9yLCBpbnByb3BzLCBrZXkpIHsKICBjb25zdCB7ICQsICR0eXBlLCAkY29uc3RydWN0b3IsIGNoaWxkcmVuLCAuLi5yZXN0IH0gPSBpbnByb3BzOwogIGNvbnN0IHByb3BzID0gcmVzdDsKICBpZiAoa2V5KSBPYmplY3QuYXNzaWduKHByb3BzLCB7IGtleSB9KTsKICBjb25zdCBkZWZlclByb3BzID0gZW52LmluaXRQcm9wcyhjdG9yLCBwcm9wcykgPz8gW107CiAgY29uc3QgZGVmZXJyZWRQcm9wcyA9IHt9OwogIGZvciAoY29uc3QgW2tleTIsIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhwcm9wcykpIHsKICAgIGlmICh2YWx1ZSA9PT0gdm9pZCAwKSB7CiAgICAgIGRlbGV0ZSBwcm9wc1trZXkyXTsKICAgIH0KICAgIGlmIChkZWZlclByb3BzLmluY2x1ZGVzKGtleTIpKSB7CiAgICAgIGRlZmVycmVkUHJvcHNba2V5Ml0gPSBwcm9wc1trZXkyXTsKICAgICAgZGVsZXRlIHByb3BzW2tleTJdOwogICAgfQogIH0KICBpZiAodHlwZW9mIGN0b3IgPT09ICJzdHJpbmciKSB7CiAgICBpZiAoY3RvciBpbiBlbnYuaW50cmluc2ljRWxlbWVudHMpIHsKICAgICAgY3RvciA9IGVudi5pbnRyaW5zaWNFbGVtZW50c1tjdG9yXTsKICAgIH0gZWxzZSB7CiAgICAgIHRocm93IEVycm9yKGB1bmtub3duIGludHJpbnNpYyBlbGVtZW50ICIke2N0b3J9ImApOwogICAgfQogIH0KICBpZiAoaXNGdW5jdGlvbkN0b3IoY3RvcikpIHsKICAgIGNvbnN0IG9iamVjdDIgPSBjdG9yKHsgY2hpbGRyZW4sIC4uLnByb3BzIH0pOwogICAgaWYgKCR0eXBlKSBzZXRUeXBlKG9iamVjdDIsICR0eXBlKTsKICAgICQ/LihvYmplY3QyKTsKICAgIHJldHVybiBvYmplY3QyOwogIH0KICBjb25zdCB7IGNzcywgY2xhc3M6IGNsYXNzTmFtZSB9ID0gcHJvcHM7CiAgZGVsZXRlIHByb3BzLmNzczsKICBkZWxldGUgcHJvcHMuY2xhc3M7CiAgY29uc3Qgc2lnbmFscyA9IFtdOwogIGNvbnN0IGJpbmRpbmdzID0gW107CiAgZm9yIChjb25zdCBba2V5MiwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkgewogICAgaWYgKGtleTIuc3RhcnRzV2l0aCgib24iKSkgewogICAgICBzaWduYWxzLnB1c2goW2tleTIsIHZhbHVlXSk7CiAgICAgIGRlbGV0ZSBwcm9wc1trZXkyXTsKICAgIH0KICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7CiAgICAgIGJpbmRpbmdzLnB1c2goW2tleTIsIHZhbHVlXSk7CiAgICAgIHByb3BzW2tleTJdID0gdmFsdWUuZ2V0KCk7CiAgICB9CiAgfQogIGNvbnN0IG9iamVjdCA9ICRjb25zdHJ1Y3RvciA/ICRjb25zdHJ1Y3Rvcihwcm9wcykgOiBuZXcgY3Rvcihwcm9wcyk7CiAgaWYgKCRjb25zdHJ1Y3RvcikgT2JqZWN0LmFzc2lnbihvYmplY3QsIHByb3BzKTsKICBpZiAoJHR5cGUpIHNldFR5cGUob2JqZWN0LCAkdHlwZSk7CiAgaWYgKGNzcykgZW52LnNldENzcyhvYmplY3QsIGNzcyk7CiAgaWYgKGNsYXNzTmFtZSkgZW52LnNldENsYXNzKG9iamVjdCwgY2xhc3NOYW1lKTsKICBmb3IgKGxldCBjaGlsZCBvZiBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuIDogW2NoaWxkcmVuXSkgewogICAgaWYgKGNoaWxkID09PSB0cnVlKSB7CiAgICAgIGNvbnNvbGUud2FybihFcnJvcigiVHJ5aW5nIHRvIGFkZCBib29sZWFuIHZhbHVlIG9mIGB0cnVlYCBhcyBhIGNoaWxkLiIpKTsKICAgICAgY29udGludWU7CiAgICB9CiAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZCkpIHsKICAgICAgZm9yIChjb25zdCBjaCBvZiBjaGlsZCkgewogICAgICAgIGFwcGVuZChvYmplY3QsIGNoKTsKICAgICAgfQogICAgfSBlbHNlIGlmIChjaGlsZCkgewogICAgICBpZiAoIShjaGlsZCBpbnN0YW5jZW9mIEdPYmplY3Q1Lk9iamVjdCkpIHsKICAgICAgICBjaGlsZCA9IGVudi50ZXh0Tm9kZShjaGlsZCk7CiAgICAgIH0KICAgICAgYXBwZW5kKG9iamVjdCwgY2hpbGQpOwogICAgfQogIH0KICBjb25zdCBkaXNwb3NlSGFuZGxlcnMgPSBzaWduYWxzLm1hcCgoW3NpZywgaGFuZGxlcl0pID0+IHsKICAgIGNvbnN0IGlkID0gb2JqZWN0LmNvbm5lY3Qoc2lnbmFsTmFtZShzaWcpLCBoYW5kbGVyKTsKICAgIHJldHVybiAoKSA9PiBvYmplY3QuZGlzY29ubmVjdChpZCk7CiAgfSk7CiAgZm9yIChjb25zdCBba2V5MiwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGRlZmVycmVkUHJvcHMpKSB7CiAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3NvcikgewogICAgICBiaW5kaW5ncy5wdXNoKFtrZXkyLCB2YWx1ZV0pOwogICAgfSBlbHNlIHsKICAgICAgT2JqZWN0LmFzc2lnbihvYmplY3QsIHsgW2tleTJdOiB2YWx1ZSB9KTsKICAgIH0KICB9CiAgY29uc3QgZGlzcG9zZUJpbmRpbmdzID0gYmluZGluZ3MubWFwKChbcHJvcCwgYmluZGluZ10pID0+IHsKICAgIGNvbnN0IGRpc3Bvc2UgPSBiaW5kaW5nLnN1YnNjcmliZSgoKSA9PiB7CiAgICAgIHNldChvYmplY3QsIHByb3AsIGJpbmRpbmcuZ2V0KCkpOwogICAgfSk7CiAgICBzZXQob2JqZWN0LCBwcm9wLCBiaW5kaW5nLmdldCgpKTsKICAgIHJldHVybiBkaXNwb3NlOwogIH0pOwogIGlmIChkaXNwb3NlQmluZGluZ3MubGVuZ3RoID4gMCB8fCBkaXNwb3NlSGFuZGxlcnMubGVuZ3RoID4gMCkgewogICAgb25DbGVhbnVwKCgpID0+IHsKICAgICAgZGlzcG9zZUhhbmRsZXJzLmZvckVhY2goKGNiKSA9PiBjYigpKTsKICAgICAgZGlzcG9zZUJpbmRpbmdzLmZvckVhY2goKGNiKSA9PiBjYigpKTsKICAgIH0pOwogIH0KICAkPy4ob2JqZWN0KTsKICByZXR1cm4gb2JqZWN0Owp9CnZhciBqc3hzID0ganN4OwoKLy8gLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9UaGlzLnRzCmltcG9ydCBHT2JqZWN0NiBmcm9tICJnaTovL0dPYmplY3QiOwoKLy8gLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvZ3RrNC9hcHAudHMKR3RrLmluaXQoKTsKR0xpYjQudW5zZXRlbnYoIkxEX1BSRUxPQUQiKTsKYXdhaXQgaW1wb3J0KCJnaTovL0Fkdz92ZXJzaW9uPTEiKS50aGVuKCh7IGRlZmF1bHQ6IEFkdyB9KSA9PiBBZHcuaW5pdCgpKS5jYXRjaCgoKSA9PiB2b2lkIDApOwp2YXIgX3JlcXVlc3RfZGVjLCBfY3Vyc29yVGhlbWVfZGVjLCBfY3Vyc29yVGhlbWVfZGVjMiwgX2ljb25UaGVtZV9kZWMsIF9pY29uVGhlbWVfZGVjMiwgX2d0a1RoZW1lX2RlYywgX2d0a1RoZW1lX2RlYzIsIF93aW5kb3dzX2RlYywgX21vbml0b3JzX2RlYywgX3dpbmRvd1RvZ2dsZWRfZGVjLCBfYTQsIF9BcHBfZGVjb3JhdG9ycywgX2luc3RhbmNlTmFtZSwgX21haW4sIF9yZXF1ZXN0SGFuZGxlcnMsIF9kYnVzU2VydmljZSwgX2Nzc1Byb3ZpZGVycywgX0FwcF9pbnN0YW5jZXMsIHNldHRpbmdzX2dldCwgZGlzcGxheV9nZXQsIF9pbml0MjsKX0FwcF9kZWNvcmF0b3JzID0gW3JlZ2lzdGVyKCldOwp2YXIgQXBwID0gY2xhc3MgZXh0ZW5kcyAoX2E0ID0gR3RrLkFwcGxpY2F0aW9uLCBfd2luZG93VG9nZ2xlZF9kZWMgPSBbc2lnbmFsKEd0ay5XaW5kb3cpXSwgX21vbml0b3JzX2RlYyA9IFtnZXR0ZXIoQXJyYXkpXSwgX3dpbmRvd3NfZGVjID0gW2dldHRlcihBcnJheSldLCBfZ3RrVGhlbWVfZGVjMiA9IFtzZXR0ZXIoU3RyaW5nKV0sIF9ndGtUaGVtZV9kZWMgPSBbZ2V0dGVyKFN0cmluZyldLCBfaWNvblRoZW1lX2RlYzIgPSBbc2V0dGVyKFN0cmluZyldLCBfaWNvblRoZW1lX2RlYyA9IFtnZXR0ZXIoU3RyaW5nKV0sIF9jdXJzb3JUaGVtZV9kZWMyID0gW3NldHRlcihTdHJpbmcpXSwgX2N1cnNvclRoZW1lX2RlYyA9IFtnZXR0ZXIoU3RyaW5nKV0sIF9yZXF1ZXN0X2RlYyA9IFtzaWduYWwoQXJyYXksIEZ1bmN0aW9uKV0sIF9hNCkgewogIGNvbnN0cnVjdG9yKCkgewogICAgc3VwZXIoeyBmbGFnczogR2lvMy5BcHBsaWNhdGlvbkZsYWdzLkhBTkRMRVNfQ09NTUFORF9MSU5FIH0pOwogICAgX19ydW5Jbml0aWFsaXplcnMoX2luaXQyLCA1LCB0aGlzKTsKICAgIF9fcHJpdmF0ZUFkZCh0aGlzLCBfQXBwX2luc3RhbmNlcyk7CiAgICBfX3ByaXZhdGVBZGQodGhpcywgX2luc3RhbmNlTmFtZSwgImFncyIpOwogICAgX19wcml2YXRlQWRkKHRoaXMsIF9tYWluKTsKICAgIF9fcHJpdmF0ZUFkZCh0aGlzLCBfcmVxdWVzdEhhbmRsZXJzLCAwKTsKICAgIF9fcHJpdmF0ZUFkZCh0aGlzLCBfZGJ1c1NlcnZpY2UpOwogICAgX19wcml2YXRlQWRkKHRoaXMsIF9jc3NQcm92aWRlcnMsIG5ldyBBcnJheSgpKTsKICAgIF9fcHJpdmF0ZVNldCh0aGlzLCBfZGJ1c1NlcnZpY2UsIG5ldyBBcHBEQnVzKHsKICAgICAgdG9nZ2xlV2luZG93OiB0aGlzLnRvZ2dsZV93aW5kb3cuYmluZCh0aGlzKSwKICAgICAgcXVpdDogdGhpcy5xdWl0LmJpbmQodGhpcyksCiAgICAgIHJlcXVlc3Q6IChhcmd2KSA9PiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gdGhpcy5yZXF1ZXN0KGFyZ3YsIHJlc29sdmUpKSwKICAgICAgaW5zZWN0b3I6ICgpID0+IHsKICAgICAgICBHdGsuV2luZG93LnNldF9pbnRlcmFjdGl2ZV9kZWJ1Z2dpbmcodHJ1ZSk7CiAgICAgIH0KICAgIH0pKTsKICAgIF9fcHJpdmF0ZUdldCh0aGlzLCBfQXBwX2luc3RhbmNlcywgZGlzcGxheV9nZXQpLmdldF9tb25pdG9ycygpLmNvbm5lY3QoIml0ZW1zLWNoYW5nZWQiLCAoKSA9PiB7CiAgICAgIHRoaXMubm90aWZ5KCJtb25pdG9ycyIpOwogICAgfSk7CiAgICB0aGlzLmNvbm5lY3QoIndpbmRvdy1hZGRlZCIsIChfLCB3aW5kb3cpID0+IHsKICAgICAgY29uc3QgaWQxID0gd2luZG93LmNvbm5lY3QoIm5vdGlmeTo6dmlzaWJsZSIsICgpID0+IHRoaXMud2luZG93VG9nZ2xlZCh3aW5kb3cpKTsKICAgICAgY29uc3QgaWQyID0gdGhpcy5jb25uZWN0KCJ3aW5kb3ctcmVtb3ZlZCIsIChfMiwgcmVtb3ZlZCkgPT4gewogICAgICAgIGlmIChyZW1vdmVkID09IHdpbmRvdykgewogICAgICAgICAgd2luZG93LmRpc2Nvbm5lY3QoaWQxKTsKICAgICAgICAgIHRoaXMuZGlzY29ubmVjdChpZDIpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9KTsKICAgIF9fcHJpdmF0ZUdldCh0aGlzLCBfQXBwX2luc3RhbmNlcywgc2V0dGluZ3NfZ2V0KS5jb25uZWN0KCJub3RpZnkiLCAoXywgeyBuYW1lIH0pID0+IHsKICAgICAgc3dpdGNoIChuYW1lKSB7CiAgICAgICAgY2FzZSAiZ3RrLXRoZW1lLW5hbWUiOgogICAgICAgICAgdGhpcy5ub3RpZnkoImd0ay10aGVtZSIpOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAiZ3RrLWljb24tdGhlbWUtbmFtZSI6CiAgICAgICAgICB0aGlzLm5vdGlmeSgiaWNvbi10aGVtZSIpOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAiZ3RrLWN1cnNvci10aGVtZS1uYW1lIjoKICAgICAgICAgIHRoaXMubm90aWZ5KCJjdXJzb3ItdGhlbWUiKTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICBicmVhazsKICAgICAgfQogICAgfSk7CiAgfQogIGdldCBpbnN0YW5jZU5hbWUoKSB7CiAgICByZXR1cm4gX19wcml2YXRlR2V0KHRoaXMsIF9pbnN0YW5jZU5hbWUpOwogIH0KICAvKioKICAgKiBHZXQgYWxsIG1vbml0b3JzIGZyb20ge0BsaW5rIEdkay5EaXNwbGF5fS4KICAgKi8KICBnZXRfbW9uaXRvcnMoKSB7CiAgICBjb25zdCBtb25zID0gX19wcml2YXRlR2V0KHRoaXMsIF9BcHBfaW5zdGFuY2VzLCBkaXNwbGF5X2dldCkuZ2V0X21vbml0b3JzKCk7CiAgICBjb25zdCBsaXN0ID0gbmV3IEFycmF5KCk7CiAgICBsZXQgbW9uaXRvciA9IG51bGw7CiAgICBsZXQgaSA9IDA7CiAgICB3aGlsZSAoKG1vbml0b3IgPSBtb25zLmdldF9pdGVtKGkrKykpICE9PSBudWxsKSB7CiAgICAgIGxpc3QucHVzaChtb25pdG9yKTsKICAgIH0KICAgIHJldHVybiBsaXN0OwogIH0KICB3aW5kb3dUb2dnbGVkKHdpbmRvdykgewogICAgdm9pZCB3aW5kb3c7CiAgfQogIGdldCBtb25pdG9ycygpIHsKICAgIHJldHVybiB0aGlzLmdldF9tb25pdG9ycygpOwogIH0KICBnZXQgd2luZG93cygpIHsKICAgIHJldHVybiB0aGlzLmdldF93aW5kb3dzKCk7CiAgfQogIHNldCBndGtUaGVtZShuYW1lKSB7CiAgICBfX3ByaXZhdGVHZXQodGhpcywgX0FwcF9pbnN0YW5jZXMsIHNldHRpbmdzX2dldCkuZ3RrVGhlbWVOYW1lID0gbmFtZTsKICB9CiAgZ2V0IGd0a1RoZW1lKCkgewogICAgcmV0dXJuIF9fcHJpdmF0ZUdldCh0aGlzLCBfQXBwX2luc3RhbmNlcywgc2V0dGluZ3NfZ2V0KS5ndGtUaGVtZU5hbWU7CiAgfQogIHNldCBpY29uVGhlbWUobmFtZSkgewogICAgX19wcml2YXRlR2V0KHRoaXMsIF9BcHBfaW5zdGFuY2VzLCBzZXR0aW5nc19nZXQpLmd0a0ljb25UaGVtZU5hbWUgPSBuYW1lOwogIH0KICBnZXQgaWNvblRoZW1lKCkgewogICAgcmV0dXJuIF9fcHJpdmF0ZUdldCh0aGlzLCBfQXBwX2luc3RhbmNlcywgc2V0dGluZ3NfZ2V0KS5ndGtJY29uVGhlbWVOYW1lOwogIH0KICBzZXQgY3Vyc29yVGhlbWUobmFtZSkgewogICAgX19wcml2YXRlR2V0KHRoaXMsIF9BcHBfaW5zdGFuY2VzLCBzZXR0aW5nc19nZXQpLmd0a0N1cnNvclRoZW1lTmFtZSA9IG5hbWU7CiAgfQogIGdldCBjdXJzb3JUaGVtZSgpIHsKICAgIHJldHVybiBfX3ByaXZhdGVHZXQodGhpcywgX0FwcF9pbnN0YW5jZXMsIHNldHRpbmdzX2dldCkuZ3RrQ3Vyc29yVGhlbWVOYW1lOwogIH0KICAvKioKICAgKiBHZXQgYSB3aW5kb3cgYnkgaXRzIHtAbGluayBHdGsuV2lkZ2V0LnByb3RvdHlwZS5uYW1lfSB0aGF0IGhhcyBiZWVuIGFkZGVkIHRvIHRoaXMgYXBwCiAgICogdXNpbmcge0BsaW5rIEd0ay5BcHBsaWNhdGlvbi5wcm90b3R5cGUuYWRkX3dpbmRvd30uCiAgICovCiAgZ2V0X3dpbmRvdyhuYW1lKSB7CiAgICByZXR1cm4gdGhpcy53aW5kb3dzLmZpbmQoKHcpID0+IHcubmFtZSA9PT0gbmFtZSk7CiAgfQogIC8qKgogICAqIFRvZ2dsZSB0aGUgdmlzaWJpbGl0eSBvZiBhIHdpbmRvdyBieSBpdHMge0BsaW5rIEd0ay5XaWRnZXQucHJvdG90eXBlLm5hbWV9CiAgICogdGhhdCBoYXMgYmVlbiBhZGRlZCB0byB0aGlzIGFwcCB1c2luZyB7QGxpbmsgR3RrLkFwcGxpY2F0aW9uLnByb3RvdHlwZS5hZGRfd2luZG93fS4KICAgKi8KICB0b2dnbGVfd2luZG93KG5hbWUpIHsKICAgIGNvbnN0IHdpbiA9IHRoaXMuZ2V0X3dpbmRvdyhuYW1lKTsKICAgIGlmICghd2luKSB0aHJvdyBFcnJvcihgbm8gd2luZG93IHJlZ2lzdGVyZWQgd2l0aCBuYW1lICIke25hbWV9ImApOwogICAgd2luLnZpc2libGUgPSAhd2luLnZpc2libGU7CiAgfQogIC8qKgogICAqIFJlc2V0IHByZXZpb3VzbHkgc2V0IGNzcyBwcm92aWRlcnMgd2l0aCB7QGxpbmsgQXBwLnByb3RvdHlwZS5hcHBseV9jc3N9LgogICAqLwogIHJlc2V0X2NzcygpIHsKICAgIGZvciAoY29uc3QgcHJvdmlkZXIgb2YgX19wcml2YXRlR2V0KHRoaXMsIF9jc3NQcm92aWRlcnMpKSB7CiAgICAgIEd0ay5TdHlsZUNvbnRleHQucmVtb3ZlX3Byb3ZpZGVyX2Zvcl9kaXNwbGF5KF9fcHJpdmF0ZUdldCh0aGlzLCBfQXBwX2luc3RhbmNlcywgZGlzcGxheV9nZXQpLCBwcm92aWRlcik7CiAgICB9CiAgfQogIC8qKgogICAqIEFkZCBhIG5ldyB7QGxpbmsgR3RrLkNzc1Byb3ZpZGVyfS4KICAgKiBAcGFyYW0gc3R5bGUgQ3NzIHN0cmluZyBvciBhIHBhdGggdG8gYSBjc3MgZmlsZS4KICAgKi8KICBhcHBseV9jc3Moc3R5bGUsIHJlc2V0ID0gZmFsc2UpIHsKICAgIGNvbnN0IHByb3ZpZGVyID0gbmV3IEd0ay5Dc3NQcm92aWRlcigpOwogICAgcHJvdmlkZXIuY29ubmVjdCgicGFyc2luZy1lcnJvciIsIChfLCBzZWN0aW9uLCBlcnJvcikgPT4gewogICAgICBjb25zdCBuYW1lID0gc2VjdGlvbi5nZXRfZmlsZSgpPy5nZXRfYmFzZW5hbWUoKSA/PyAiIjsKICAgICAgY29uc3QgbGluZSA9IHNlY3Rpb24uZ2V0X3N0YXJ0X2xvY2F0aW9uKCkubGluZXMgKyAxOwogICAgICBjb25zdCBjaGFycyA9IHNlY3Rpb24uZ2V0X3N0YXJ0X2xvY2F0aW9uKCkubGluZV9jaGFycyArIDE7CiAgICAgIGNvbnNvbGUuZXJyb3IoYENTUyBFcnJvciAke25hbWV9OiR7bGluZX06JHtjaGFyc30gJHtlcnJvci5tZXNzYWdlfWApOwogICAgfSk7CiAgICBpZiAocmVzZXQpIHRoaXMucmVzZXRfY3NzKCk7CiAgICBpZiAoR0xpYjQuZmlsZV90ZXN0KHN0eWxlLCBHTGliNC5GaWxlVGVzdC5FWElTVFMpKSB7CiAgICAgIHByb3ZpZGVyLmxvYWRfZnJvbV9wYXRoKHN0eWxlKTsKICAgIH0gZWxzZSBpZiAoc3R5bGUuc3RhcnRzV2l0aCgicmVzb3VyY2U6Ly8iKSkgewogICAgICBwcm92aWRlci5sb2FkX2Zyb21fcmVzb3VyY2Uoc3R5bGUucmVwbGFjZSgicmVzb3VyY2U6Ly8iLCAiIikpOwogICAgfSBlbHNlIHsKICAgICAgcHJvdmlkZXIubG9hZF9mcm9tX3N0cmluZyhzdHlsZSk7CiAgICB9CiAgICBHdGsuU3R5bGVDb250ZXh0LmFkZF9wcm92aWRlcl9mb3JfZGlzcGxheSgKICAgICAgX19wcml2YXRlR2V0KHRoaXMsIF9BcHBfaW5zdGFuY2VzLCBkaXNwbGF5X2dldCksCiAgICAgIHByb3ZpZGVyLAogICAgICBHdGsuU1RZTEVfUFJPVklERVJfUFJJT1JJVFlfVVNFUgogICAgKTsKICAgIF9fcHJpdmF0ZUdldCh0aGlzLCBfY3NzUHJvdmlkZXJzKS5wdXNoKHByb3ZpZGVyKTsKICB9CiAgLyoqCiAgICogU2hvcnRjdXQgZm9yIHtAbGluayBHdGsuSWNvblRoZW1lLnByb3RvdHlwZS5hZGRfc2VhcmNoX3BhdGh9LgogICAqLwogIGFkZF9pY29ucyhwYXRoKSB7CiAgICBHdGsuSWNvblRoZW1lLmdldF9mb3JfZGlzcGxheShfX3ByaXZhdGVHZXQodGhpcywgX0FwcF9pbnN0YW5jZXMsIGRpc3BsYXlfZ2V0KSkuYWRkX3NlYXJjaF9wYXRoKHBhdGgpOwogIH0KICAvKioKICAgKiBRdWl0IGFuZCBleGl0IHRoZSBhcHBsaWNhdGlvbi4KICAgKi8KICBxdWl0KGNvZGUgPSAwKSB7CiAgICBfX3ByaXZhdGVHZXQodGhpcywgX2RidXNTZXJ2aWNlKS5zdG9wKCk7CiAgICBzdXBlci5xdWl0KCk7CiAgICBleGl0KGNvZGUpOwogIH0KICByZXF1ZXN0KGFyZ3MsIHJlc3BvbnNlKSB7CiAgICBpZiAoX19wcml2YXRlR2V0KHRoaXMsIF9yZXF1ZXN0SGFuZGxlcnMpID09PSAwKSB7CiAgICAgIHJlc3BvbnNlKGBpbnN0YW5jZSAiJHt0aGlzLmluc3RhbmNlTmFtZX0iIGhhcyBubyByZXF1ZXN0IGhhbmRsZXIgaW1wbGVtZW50ZWRgKTsKICAgIH0KICAgIHZvaWQgYXJnczsKICB9CiAgdmZ1bmNfY29tbWFuZF9saW5lKGNtZCkgewogICAgaWYgKGNtZC5pc1JlbW90ZSkgewogICAgICB0aGlzLnJlcXVlc3QoY21kLmdldF9hcmd1bWVudHMoKSwgKHN0cikgPT4gewogICAgICAgIGNtZC5wcmludF9saXRlcmFsKHN0ciArICJcbiIpOwogICAgICAgIGNtZC5kb25lKCk7CiAgICAgIH0pOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy5ob2xkKCk7CiAgICAgIF9fcHJpdmF0ZUdldCh0aGlzLCBfZGJ1c1NlcnZpY2UpLnNlcnZlKHsKICAgICAgICBuYW1lOiB0aGlzLmFwcGxpY2F0aW9uSWQKICAgICAgfSk7CiAgICAgIGNyZWF0ZVJvb3QoKGRpc3Bvc2UpID0+IHsKICAgICAgICB2YXIgX2E3OwogICAgICAgIHRoaXMuY29ubmVjdCgic2h1dGRvd24iLCBkaXNwb3NlKTsKICAgICAgICAoX2E3ID0gX19wcml2YXRlR2V0KHRoaXMsIF9tYWluKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hNy5jYWxsKHRoaXMsIC4uLnByb2dyYW1BcmdzKTsKICAgICAgfSk7CiAgICB9CiAgICByZXR1cm4gMDsKICB9CiAgc3RhcnQoY29uZmlnKSB7CiAgICBjb25zdCB7IG1haW4sIHJlcXVlc3RIYW5kbGVyLCBpbnN0YW5jZU5hbWUsIGNzcywgaWNvbnMsIC4uLmNmZyB9ID0gY29uZmlnOwogICAgX19wcml2YXRlU2V0KHRoaXMsIF9tYWluLCBtYWluKTsKICAgIE9iamVjdC5hc3NpZ24odGhpcywgY2ZnKTsKICAgIGlmIChyZXF1ZXN0SGFuZGxlcikgewogICAgICB0aGlzLmNvbm5lY3QoInJlcXVlc3QiLCAoXywgYXJncywgcmVzcG9uc2UpID0+IHJlcXVlc3RIYW5kbGVyKGFyZ3MsIHJlc3BvbnNlKSk7CiAgICB9CiAgICBpZiAoaW5zdGFuY2VOYW1lKSBfX3ByaXZhdGVTZXQodGhpcywgX2luc3RhbmNlTmFtZSwgaW5zdGFuY2VOYW1lKTsKICAgIGlmIChjc3MpIHRoaXMuYXBwbHlfY3NzKGNzcywgZmFsc2UpOwogICAgaWYgKGljb25zKSBhcHAuYWRkX2ljb25zKGljb25zKTsKICAgIHRoaXMuYXBwbGljYXRpb25JZCA9ICJpby5Bc3RhbC4iICsgdGhpcy5pbnN0YW5jZU5hbWU7CiAgICBzZXRDb25zb2xlTG9nRG9tYWluKHRoaXMuaW5zdGFuY2VOYW1lKTsKICAgIHRoaXMucnVuQXN5bmMocHJvZ3JhbUFyZ3MpOwogIH0KICBjb25uZWN0KHNpZ25hbDIsIGNhbGxiYWNrKSB7CiAgICBpZiAoc2lnbmFsMiA9PT0gInJlcXVlc3QiKSBfX3ByaXZhdGVTZXQodGhpcywgX3JlcXVlc3RIYW5kbGVycywgX19wcml2YXRlR2V0KHRoaXMsIF9yZXF1ZXN0SGFuZGxlcnMpICsgMSk7CiAgICByZXR1cm4gc3VwZXIuY29ubmVjdChzaWduYWwyLCBjYWxsYmFjayk7CiAgfQp9OwpfaW5pdDIgPSBfX2RlY29yYXRvclN0YXJ0KF9hNCk7Cl9pbnN0YW5jZU5hbWUgPSBuZXcgV2Vha01hcCgpOwpfbWFpbiA9IG5ldyBXZWFrTWFwKCk7Cl9yZXF1ZXN0SGFuZGxlcnMgPSBuZXcgV2Vha01hcCgpOwpfZGJ1c1NlcnZpY2UgPSBuZXcgV2Vha01hcCgpOwpfY3NzUHJvdmlkZXJzID0gbmV3IFdlYWtNYXAoKTsKX0FwcF9pbnN0YW5jZXMgPSBuZXcgV2Vha1NldCgpOwpzZXR0aW5nc19nZXQgPSBmdW5jdGlvbigpIHsKICBjb25zdCBzZXR0aW5ncyA9IEd0ay5TZXR0aW5ncy5nZXRfZGVmYXVsdCgpOwogIGlmICghc2V0dGluZ3MpIHRocm93IEVycm9yKCJjb3VsZCBub3QgZ2V0IHNldHRpbmdzIik7CiAgcmV0dXJuIHNldHRpbmdzOwp9OwpkaXNwbGF5X2dldCA9IGZ1bmN0aW9uKCkgewogIGNvbnN0IGRpc3BsYXkgPSBHZGsuRGlzcGxheS5nZXRfZGVmYXVsdCgpOwogIGlmICghZGlzcGxheSkgdGhyb3cgRXJyb3IoImNvdWxkIG5vdCBnZXQgZGlzcGxheSIpOwogIHJldHVybiBkaXNwbGF5Owp9OwpfX2RlY29yYXRlRWxlbWVudChfaW5pdDIsIDEsICJ3aW5kb3dUb2dnbGVkIiwgX3dpbmRvd1RvZ2dsZWRfZGVjLCBBcHApOwpfX2RlY29yYXRlRWxlbWVudChfaW5pdDIsIDIsICJtb25pdG9ycyIsIF9tb25pdG9yc19kZWMsIEFwcCk7Cl9fZGVjb3JhdGVFbGVtZW50KF9pbml0MiwgMiwgIndpbmRvd3MiLCBfd2luZG93c19kZWMsIEFwcCk7Cl9fZGVjb3JhdGVFbGVtZW50KF9pbml0MiwgMywgImd0a1RoZW1lIiwgX2d0a1RoZW1lX2RlYzIsIEFwcCk7Cl9fZGVjb3JhdGVFbGVtZW50KF9pbml0MiwgMiwgImd0a1RoZW1lIiwgX2d0a1RoZW1lX2RlYywgQXBwKTsKX19kZWNvcmF0ZUVsZW1lbnQoX2luaXQyLCAzLCAiaWNvblRoZW1lIiwgX2ljb25UaGVtZV9kZWMyLCBBcHApOwpfX2RlY29yYXRlRWxlbWVudChfaW5pdDIsIDIsICJpY29uVGhlbWUiLCBfaWNvblRoZW1lX2RlYywgQXBwKTsKX19kZWNvcmF0ZUVsZW1lbnQoX2luaXQyLCAzLCAiY3Vyc29yVGhlbWUiLCBfY3Vyc29yVGhlbWVfZGVjMiwgQXBwKTsKX19kZWNvcmF0ZUVsZW1lbnQoX2luaXQyLCAyLCAiY3Vyc29yVGhlbWUiLCBfY3Vyc29yVGhlbWVfZGVjLCBBcHApOwpfX2RlY29yYXRlRWxlbWVudChfaW5pdDIsIDEsICJyZXF1ZXN0IiwgX3JlcXVlc3RfZGVjLCBBcHApOwpBcHAgPSBfX2RlY29yYXRlRWxlbWVudChfaW5pdDIsIDAsICJBcHAiLCBfQXBwX2RlY29yYXRvcnMsIEFwcCk7Cl9fcnVuSW5pdGlhbGl6ZXJzKF9pbml0MiwgMSwgQXBwKTsKdmFyIGFwcCA9IG5ldyBBcHAoKTsKdmFyIGFwcF9kZWZhdWx0ID0gYXBwOwoKLy8gc2FzczovaG9tZS9keWxhbi9Qcm9qZWN0cy9oeXBydGFza2JhcldpbmRvd3Mvc3R5bGUuc2Nzcwp2YXIgc3R5bGVfZGVmYXVsdCA9ICJ3aW5kb3cuQmFyIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGNvbG9yOiBAdGhlbWVfZmdfY29sb3I7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxud2luZG93LkJhciA+IGNlbnRlcmJveCB7XG4gIGJhY2tncm91bmQ6IEB0aGVtZV9iZ19jb2xvcjtcbn1cbndpbmRvdy5CYXIgYnV0dG9uIHtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBtYXJnaW4tdG9wOiA0cHg7XG4gIG1hcmdpbi1ib3R0b206IDZweDtcbn1cbndpbmRvdy5CYXIgLnN0YXJ0YnV0dG9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxud2luZG93LkJhciAuc3RhcnRidXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDgpO1xuICBib3gtc2hhZG93OiAwIDJweCA2cHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcbn1cbndpbmRvdy5CYXIgLnN0YXJ0YnV0dG9uIGltYWdlIHtcbiAgcGFkZGluZzogMC4zcmVtO1xufVxud2luZG93LkJhciAudXRpbGl0aWVzIGJ1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxud2luZG93LkJhciAudXRpbGl0aWVzIGJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wOCk7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xufVxud2luZG93LkJhciAudXRpbGl0aWVzIGxhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAxcmVtO1xufVxud2luZG93LkJhciAuZGF0ZXRpbWUgYnV0dG9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG53aW5kb3cuQmFyIC5kYXRldGltZSBidXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDgpO1xuICBib3gtc2hhZG93OiAwIDJweCA2cHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcbn1cbndpbmRvdy5CYXIgLmRhdGV0aW1lIGxhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zaXplOiAwLjlyZW07XG59XG53aW5kb3cuQmFyIC5oaWRld2luZG93c2J1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBtYXJnaW4tcmlnaHQ6IDNweDtcbiAgcGFkZGluZzogMC4ycmVtO1xufVxud2luZG93LkJhciAuaGlkZXdpbmRvd3NidXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDgpO1xuICBib3gtc2hhZG93OiAwIDJweCA2cHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcbn1cblxuLnN5c3RyYXlidXR0b24gYnV0dG9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAyMDBtcyBlYXNlLCBib3gtc2hhZG93IDE1MG1zIGVhc2U7XG59XG4uc3lzdHJheWJ1dHRvbiBidXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDgpO1xuICBib3gtc2hhZG93OiAwIDJweCA2cHggcmdiYSgwLCAwLCAwLCAwLjI1KTtcbn1cbi5zeXN0cmF5YnV0dG9uIGJ1dHRvbjphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTYpO1xuICBib3gtc2hhZG93OiAwIDFweCAzcHggcmdiYSgwLCAwLCAwLCAwLjMpO1xufVxuXG4uc3lzdHJheW1lbnUgPiBjb250ZW50cyB7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgcGFkZGluZzogMHJlbTtcbn1cbi5zeXN0cmF5bWVudSA+IGNvbnRlbnRzID4gYm94IHtcbiAgcGFkZGluZzogMXJlbTtcbn1cbi5zeXN0cmF5bWVudSA+IGFycm93IHtcbiAgLWd0ay1pY29uLXNvdXJjZTogbm9uZTsgLyogcmVtb3ZlIHRoZSBhcnJvdyBncmFwaGljICovXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG53aW5kb3cuTm90aWZpY2F0aW9uIHtcbiAgYmFja2dyb3VuZDogQHRoZW1lX2JnX2NvbG9yO1xuICBjb2xvcjogI2ZmZjtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICBwYWRkaW5nOiA4cHg7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMS4yO1xufVxud2luZG93Lk5vdGlmaWNhdGlvbiBpbWFnZSB7XG4gIC1ndGstaWNvbi1zaXplOiAzMnB4O1xufVxud2luZG93Lk5vdGlmaWNhdGlvbiAuc3VtbWFyeSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufSI7CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9ndGs0L2luZGV4LnRzCmltcG9ydCBBc3RhbCBmcm9tICJnaTovL0FzdGFsP3ZlcnNpb249NC4wIjsKaW1wb3J0IEd0azIgZnJvbSAiZ2k6Ly9HdGs/dmVyc2lvbj00LjAiOwppbXBvcnQgR2RrMiBmcm9tICJnaTovL0dkaz92ZXJzaW9uPTQuMCI7CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9wcm9jZXNzLnRzCmltcG9ydCBHaW80IGZyb20gImdpOi8vR2lvP3ZlcnNpb249Mi4wIjsKaW1wb3J0IEdMaWI1IGZyb20gImdpOi8vR0xpYj92ZXJzaW9uPTIuMCI7CnZhciBlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7CnZhciBfZXhpdF9kZWMsIF9zdGRlcnJfZGVjLCBfc3Rkb3V0X2RlYywgX2E1LCBfUHJvY2Vzc19kZWNvcmF0b3JzLCBfaW5pdDMsIF9lbmNvZGVyLCBfb3V0U3RyZWFtLCBfZXJyU3RyZWFtLCBfaW5TdHJlYW0sIF9wcm9jZXNzLCBfUHJvY2Vzc19pbnN0YW5jZXMsIHJlYWRTdHJlYW1fZm47Cl9Qcm9jZXNzX2RlY29yYXRvcnMgPSBbcmVnaXN0ZXIoKV07CnZhciBfUHJvY2VzcyA9IGNsYXNzIF9Qcm9jZXNzIGV4dGVuZHMgKF9hNSA9IEdPYmplY3QuT2JqZWN0LCBfc3Rkb3V0X2RlYyA9IFtzaWduYWwoU3RyaW5nKV0sIF9zdGRlcnJfZGVjID0gW3NpZ25hbChTdHJpbmcpXSwgX2V4aXRfZGVjID0gW3NpZ25hbChOdW1iZXIsIEJvb2xlYW4pXSwgX2E1KSB7CiAgY29uc3RydWN0b3IoeyBhcmd2IH0pIHsKICAgIHN1cGVyKCk7CiAgICBfX3J1bkluaXRpYWxpemVycyhfaW5pdDMsIDUsIHRoaXMpOwogICAgX19wcml2YXRlQWRkKHRoaXMsIF9Qcm9jZXNzX2luc3RhbmNlcyk7CiAgICBfX3ByaXZhdGVBZGQodGhpcywgX2VuY29kZXIsIG5ldyBUZXh0RW5jb2RlcigpKTsKICAgIF9fcHJpdmF0ZUFkZCh0aGlzLCBfb3V0U3RyZWFtKTsKICAgIF9fcHJpdmF0ZUFkZCh0aGlzLCBfZXJyU3RyZWFtKTsKICAgIF9fcHJpdmF0ZUFkZCh0aGlzLCBfaW5TdHJlYW0pOwogICAgX19wcml2YXRlQWRkKHRoaXMsIF9wcm9jZXNzKTsKICAgIGNvbnN0IHByb2Nlc3MgPSBfX3ByaXZhdGVTZXQodGhpcywgX3Byb2Nlc3MsIEdpbzQuU3VicHJvY2Vzcy5uZXcoCiAgICAgIGFyZ3YsCiAgICAgIEdpbzQuU3VicHJvY2Vzc0ZsYWdzLlNURElOX1BJUEUgfCBHaW80LlN1YnByb2Nlc3NGbGFncy5TVERPVVRfUElQRSB8IEdpbzQuU3VicHJvY2Vzc0ZsYWdzLlNUREVSUl9QSVBFCiAgICApKTsKICAgIF9fcHJpdmF0ZVNldCh0aGlzLCBfaW5TdHJlYW0sIEdpbzQuRGF0YU91dHB1dFN0cmVhbS5uZXcocHJvY2Vzcy5nZXRfc3RkaW5fcGlwZSgpKSk7CiAgICBfX3ByaXZhdGVTZXQodGhpcywgX291dFN0cmVhbSwgR2lvNC5EYXRhSW5wdXRTdHJlYW0ubmV3KHByb2Nlc3MuZ2V0X3N0ZG91dF9waXBlKCkpKTsKICAgIF9fcHJpdmF0ZVNldCh0aGlzLCBfZXJyU3RyZWFtLCBHaW80LkRhdGFJbnB1dFN0cmVhbS5uZXcocHJvY2Vzcy5nZXRfc3RkZXJyX3BpcGUoKSkpOwogICAgX19wcml2YXRlTWV0aG9kKHRoaXMsIF9Qcm9jZXNzX2luc3RhbmNlcywgcmVhZFN0cmVhbV9mbikuY2FsbCh0aGlzLCBfX3ByaXZhdGVHZXQodGhpcywgX291dFN0cmVhbSkpOwogICAgX19wcml2YXRlTWV0aG9kKHRoaXMsIF9Qcm9jZXNzX2luc3RhbmNlcywgcmVhZFN0cmVhbV9mbikuY2FsbCh0aGlzLCBfX3ByaXZhdGVHZXQodGhpcywgX2VyclN0cmVhbSkpOwogICAgcHJvY2Vzcy53YWl0X2FzeW5jKG51bGwsIChfLCByZXMpID0+IHsKICAgICAgdHJ5IHsKICAgICAgICBwcm9jZXNzLndhaXRfZmluaXNoKHJlcyk7CiAgICAgIH0gY2F0Y2ggewogICAgICB9CiAgICAgIGlmIChwcm9jZXNzLmdldF9pZl9leGl0ZWQoKSkgewogICAgICAgIHRoaXMuZXhpdChwcm9jZXNzLmdldF9leGl0X3N0YXR1cygpLCBmYWxzZSk7CiAgICAgIH0KICAgICAgaWYgKHByb2Nlc3MuZ2V0X2lmX3NpZ25hbGVkKCkpIHsKICAgICAgICB0aGlzLmV4aXQocHJvY2Vzcy5nZXRfdGVybV9zaWcoKSwgdHJ1ZSk7CiAgICAgIH0KICAgIH0pOwogIH0KICBzdGRvdXQob3V0KSB7CiAgICB2b2lkIG91dDsKICB9CiAgc3RkZXJyKGVycikgewogICAgdm9pZCBlcnI7CiAgfQogIGV4aXQoY29kZSwgc2lnbmFsZWQpIHsKICAgIHZvaWQgW2NvZGUsIHNpZ25hbGVkXTsKICB9CiAgY29ubmVjdChzaWduYWwyLCBjYWxsYmFjaykgewogICAgcmV0dXJuIHN1cGVyLmNvbm5lY3Qoc2lnbmFsMiwgY2FsbGJhY2spOwogIH0KICAvKioKICAgKiBGb3JjZSBxdWl0IHRoZSBzdWJwcm9jZXNzLgogICAqLwogIGtpbGwoKSB7CiAgICBfX3ByaXZhdGVHZXQodGhpcywgX3Byb2Nlc3MpLmZvcmNlX2V4aXQoKTsKICB9CiAgLyoqCiAgICogU2VuZCBhIHNpZ25hbCB0byB0aGUgc3VicHJvY2Vzcy4KICAgKgogICAqIEBwYXJhbSBzaWduYWwgU2lnbmFsIG51bWJlciB0byBiZSBzZW50CiAgICovCiAgc2lnbmFsKHNpZ25hbDIpIHsKICAgIF9fcHJpdmF0ZUdldCh0aGlzLCBfcHJvY2Vzcykuc2VuZF9zaWduYWwoc2lnbmFsMik7CiAgfQogIC8qKgogICAqIFdyaXRlIGEgbGluZSB0byB0aGUgc3VicHJvY2Vzcycgc3RkaW4gc3luY2hyb25vdXNseS4KICAgKiBTZWUge0BsaW5rIEdpby5EYXRhT3V0cHV0U3RyZWFtLnByb3RvdHlwZS53cml0ZV9ieXRlc19hc3luY30KICAgKgogICAqIEBwYXJhbSBzdHIgU3RyaW5nIHRvIGJlIHdyaXR0ZW4gdG8gc3RkaW4KICAgKi8KICB3cml0ZShzdHIpIHsKICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAgIF9fcHJpdmF0ZUdldCh0aGlzLCBfaW5TdHJlYW0pLndyaXRlX2J5dGVzX2FzeW5jKAogICAgICAgIGVuY29kZXIuZW5jb2RlKHN0ciksCiAgICAgICAgR0xpYjUuUFJJT1JJVFlfREVGQVVMVCwKICAgICAgICBudWxsLAogICAgICAgIChfLCByZXMpID0+IHsKICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgIHJlc29sdmUoX19wcml2YXRlR2V0KHRoaXMsIF9pblN0cmVhbSkud3JpdGVfYWxsX2ZpbmlzaChyZXMpKTsKICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICApOwogICAgfSk7CiAgfQogIC8qKgogICAqIFdyaXRlIGEgbGluZSB0byB0aGUgc3VicHJvY2Vzcycgc3RkaW4gYXN5bmNocm9ub3VzbHkuCiAgICoKICAgKiBAcGFyYW0gc3RyIFN0cmluZyB0byBiZSB3cml0dGVuIHRvIHN0ZGluCiAgICovCiAgYXN5bmMgd3JpdGVBc3luYyhzdHIpIHsKICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAgIF9fcHJpdmF0ZUdldCh0aGlzLCBfaW5TdHJlYW0pLndyaXRlX2FsbF9hc3luYygKICAgICAgICBfX3ByaXZhdGVHZXQodGhpcywgX2VuY29kZXIpLmVuY29kZShzdHIpLAogICAgICAgIEdMaWI1LlBSSU9SSVRZX0RFRkFVTFQsCiAgICAgICAgbnVsbCwKICAgICAgICAoXywgcmVzKSA9PiB7CiAgICAgICAgICB0cnkgewogICAgICAgICAgICByZXNvbHZlKHZvaWQgX19wcml2YXRlR2V0KHRoaXMsIF9pblN0cmVhbSkud3JpdGVfYWxsX2ZpbmlzaChyZXMpKTsKICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICApOwogICAgfSk7CiAgfQogIC8qKgogICAqIFN0YXJ0IGEgbmV3IHN1YnByb2Nlc3Mgd2l0aCB0aGUgZ2l2ZW4gY29tbWFuZC4KICAgKiBUaGUgZmlyc3QgZWxlbWVudCBvZiB0aGUgdmVjdG9yIGlzIGV4ZWN1dGVkIHdpdGggdGhlIHJlbWFpbmluZwogICAqIGVsZW1lbnRzIGFzIHRoZSBhcmd1bWVudCBsaXN0LgogICAqLwogIHN0YXRpYyBzdWJwcm9jZXNzdihjbWQpIHsKICAgIHJldHVybiBuZXcgX1Byb2Nlc3MoeyBhcmd2OiBjbWQgfSk7CiAgfQogIC8qKgogICAqIFN0YXJ0IGEgbmV3IHN1YnByb2Nlc3Mgd2l0aCB0aGUgZ2l2ZW4gY29tbWFuZAogICAqIHdoaWNoIGlzIHBhcnNlZCB1c2luZyB7QGxpbmsgR0xpYi5zaGVsbF9wYXJzZV9hcmd2fS4KICAgKi8KICBzdGF0aWMgc3VicHJvY2VzcyhjbWQpIHsKICAgIGNvbnN0IFssIGFyZ3ZdID0gR0xpYjUuc2hlbGxfcGFyc2VfYXJndihjbWQpOwogICAgcmV0dXJuIF9Qcm9jZXNzLnN1YnByb2Nlc3N2KGFyZ3YpOwogIH0KICAvKioKICAgKiBFeGVjdXRlIGEgY29tbWFuZCBzeW5jaHJvbm91c2x5LgogICAqIFRoZSBmaXJzdCBlbGVtZW50IG9mIHRoZSB2ZWN0b3IgaXMgZXhlY3V0ZWQgd2l0aCB0aGUgcmVtYWluaW5nCiAgICogZWxlbWVudHMgYXMgdGhlIGFyZ3VtZW50IGxpc3QuCiAgICoKICAgKiBAdGhyb3dzIHN0ZGVycgogICAqIEByZXR1cm4gc3Rkb3V0IG9mIHRoZSBzdWJwcm9jZXNzCiAgICovCiAgc3RhdGljIGV4ZWN2KGNtZCkgewogICAgY29uc3QgcHJvY2VzcyA9IEdpbzQuU3VicHJvY2Vzcy5uZXcoCiAgICAgIGNtZCwKICAgICAgR2lvNC5TdWJwcm9jZXNzRmxhZ3MuU1RERVJSX1BJUEUgfCBHaW80LlN1YnByb2Nlc3NGbGFncy5TVERPVVRfUElQRQogICAgKTsKICAgIGNvbnN0IFssIG91dCwgZXJyXSA9IHByb2Nlc3MuY29tbXVuaWNhdGVfdXRmOChudWxsLCBudWxsKTsKICAgIGlmIChwcm9jZXNzLmdldF9zdWNjZXNzZnVsKCkpIHsKICAgICAgcmV0dXJuIG91dC50cmltKCk7CiAgICB9IGVsc2UgewogICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyKTsKICAgIH0KICB9CiAgLyoqCiAgICogRXhlY3V0ZSBhIGNvbW1hbmQgc3luY2hyb25vdXNseS4KICAgKiBUaGUgY29tbWFuZCBpcyBwYXJzZWQgdXNpbmcge0BsaW5rIEdMaWIuc2hlbGxfcGFyc2VfYXJndn0uCiAgICoKICAgKiBAdGhyb3dzIHN0ZGVycgogICAqIEByZXR1cm4gc3Rkb3V0IG9mIHRoZSBzdWJwcm9jZXNzCiAgICovCiAgc3RhdGljIGV4ZWMoY21kKSB7CiAgICBjb25zdCBbLCBhcmd2XSA9IEdMaWI1LnNoZWxsX3BhcnNlX2FyZ3YoY21kKTsKICAgIHJldHVybiBfUHJvY2Vzcy5leGVjdihhcmd2KTsKICB9CiAgLyoqCiAgICogRXhlY3V0ZSBhIGNvbW1hbmQgYXN5bmNocm9ub3VzbHkuCiAgICogVGhlIGZpcnN0IGVsZW1lbnQgb2YgdGhlIHZlY3RvciBpcyBleGVjdXRlZCB3aXRoIHRoZSByZW1haW5pbmcKICAgKiBlbGVtZW50cyBhcyB0aGUgYXJndW1lbnQgbGlzdC4KICAgKgogICAqIEB0aHJvd3Mgc3RkZXJyCiAgICogQHJldHVybiBzdGRvdXQgb2YgdGhlIHN1YnByb2Nlc3MKICAgKi8KICBzdGF0aWMgZXhlY0FzeW5jdihjbWQpIHsKICAgIGNvbnN0IHByb2Nlc3MgPSBHaW80LlN1YnByb2Nlc3MubmV3KAogICAgICBjbWQsCiAgICAgIEdpbzQuU3VicHJvY2Vzc0ZsYWdzLlNUREVSUl9QSVBFIHwgR2lvNC5TdWJwcm9jZXNzRmxhZ3MuU1RET1VUX1BJUEUKICAgICk7CiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgICBwcm9jZXNzLmNvbW11bmljYXRlX3V0ZjhfYXN5bmMobnVsbCwgbnVsbCwgKF8sIHJlcykgPT4gewogICAgICAgIHRyeSB7CiAgICAgICAgICBjb25zdCBbLCBvdXQsIGVycl0gPSBwcm9jZXNzLmNvbW11bmljYXRlX3V0ZjhfZmluaXNoKHJlcyk7CiAgICAgICAgICBpZiAocHJvY2Vzcy5nZXRfc3VjY2Vzc2Z1bCgpKSB7CiAgICAgICAgICAgIHJldHVybiByZXNvbHZlKG91dC50cmltKCkpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihlcnIudHJpbSgpKSk7CiAgICAgICAgICB9CiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0pOwogIH0KICAvKioKICAgKiBFeGVjdXRlIGEgY29tbWFuZCBhc3luY2hyb25vdXNseS4KICAgKiBUaGUgY29tbWFuZCBpcyBwYXJzZWQgdXNpbmcge0BsaW5rIEdMaWIuc2hlbGxfcGFyc2VfYXJndn0uCiAgICoKICAgKiBAdGhyb3dzIHN0ZGVycgogICAqIEByZXR1cm4gc3Rkb3V0IG9mIHRoZSBzdWJwcm9jZXNzCiAgICovCiAgc3RhdGljIGV4ZWNBc3luYyhjbWQpIHsKICAgIGNvbnN0IFssIGFyZ3ZdID0gR0xpYjUuc2hlbGxfcGFyc2VfYXJndihjbWQpOwogICAgcmV0dXJuIF9Qcm9jZXNzLmV4ZWNBc3luY3YoYXJndik7CiAgfQp9OwpfaW5pdDMgPSBfX2RlY29yYXRvclN0YXJ0KF9hNSk7Cl9lbmNvZGVyID0gbmV3IFdlYWtNYXAoKTsKX291dFN0cmVhbSA9IG5ldyBXZWFrTWFwKCk7Cl9lcnJTdHJlYW0gPSBuZXcgV2Vha01hcCgpOwpfaW5TdHJlYW0gPSBuZXcgV2Vha01hcCgpOwpfcHJvY2VzcyA9IG5ldyBXZWFrTWFwKCk7Cl9Qcm9jZXNzX2luc3RhbmNlcyA9IG5ldyBXZWFrU2V0KCk7CnJlYWRTdHJlYW1fZm4gPSBmdW5jdGlvbihzdHJlYW0pIHsKICBzdHJlYW0ucmVhZF9saW5lX2FzeW5jKEdMaWI1LlBSSU9SSVRZX0RFRkFVTFQsIG51bGwsIChfLCByZXMpID0+IHsKICAgIHRyeSB7CiAgICAgIGNvbnN0IFtvdXRwdXRdID0gc3RyZWFtLnJlYWRfbGluZV9maW5pc2hfdXRmOChyZXMpOwogICAgICBpZiAob3V0cHV0ICE9PSBudWxsKSB7CiAgICAgICAgaWYgKHN0cmVhbSA9PT0gX19wcml2YXRlR2V0KHRoaXMsIF9lcnJTdHJlYW0pKSB7CiAgICAgICAgICB0aGlzLnN0ZGVycihvdXRwdXQudHJpbSgpKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5zdGRvdXQob3V0cHV0LnRyaW0oKSk7CiAgICAgICAgfQogICAgICAgIF9fcHJpdmF0ZU1ldGhvZCh0aGlzLCBfUHJvY2Vzc19pbnN0YW5jZXMsIHJlYWRTdHJlYW1fZm4pLmNhbGwodGhpcywgc3RyZWFtKTsKICAgICAgfQogICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICB9CiAgfSk7Cn07Cl9fZGVjb3JhdGVFbGVtZW50KF9pbml0MywgMSwgInN0ZG91dCIsIF9zdGRvdXRfZGVjLCBfUHJvY2Vzcyk7Cl9fZGVjb3JhdGVFbGVtZW50KF9pbml0MywgMSwgInN0ZGVyciIsIF9zdGRlcnJfZGVjLCBfUHJvY2Vzcyk7Cl9fZGVjb3JhdGVFbGVtZW50KF9pbml0MywgMSwgImV4aXQiLCBfZXhpdF9kZWMsIF9Qcm9jZXNzKTsKX1Byb2Nlc3MgPSBfX2RlY29yYXRlRWxlbWVudChfaW5pdDMsIDAsICJQcm9jZXNzIiwgX1Byb2Nlc3NfZGVjb3JhdG9ycywgX1Byb2Nlc3MpOwpfX3J1bkluaXRpYWxpemVycyhfaW5pdDMsIDEsIF9Qcm9jZXNzKTsKdmFyIFByb2Nlc3MgPSBfUHJvY2VzczsKZnVuY3Rpb24gZXhlY0FzeW5jKGNtZCkgewogIGlmIChBcnJheS5pc0FycmF5KGNtZCkpIHsKICAgIHJldHVybiBQcm9jZXNzLmV4ZWNBc3luY3YoY21kKTsKICB9IGVsc2UgewogICAgcmV0dXJuIFByb2Nlc3MuZXhlY0FzeW5jKGNtZCk7CiAgfQp9CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi90aW1lLnRzCnZhciBfY2FuY2VsbGVkX2RlYywgX25vd19kZWMsIF9hNiwgX1RpbWVyX2RlY29yYXRvcnMsIF9pbml0NDsKX1RpbWVyX2RlY29yYXRvcnMgPSBbcmVnaXN0ZXIoKV07CnZhciBfVGltZXIgPSBjbGFzcyBfVGltZXIgZXh0ZW5kcyAoX2E2ID0gR09iamVjdC5PYmplY3QsIF9ub3dfZGVjID0gW3NpZ25hbCgpXSwgX2NhbmNlbGxlZF9kZWMgPSBbc2lnbmFsKCldLCBfYTYpIHsKICBjb25zdHJ1Y3RvcigpIHsKICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7CiAgICBfX3J1bkluaXRpYWxpemVycyhfaW5pdDQsIDUsIHRoaXMpOwogIH0KICBub3coKSB7CiAgfQogIGNhbmNlbGxlZCgpIHsKICB9CiAgc3RhdGljIGludGVydmFsKGludGVydmFsMiwgY2FsbGJhY2spIHsKICAgIGNvbnN0IHsgdGltZXIsIG5vdyB9ID0gX1RpbWVyLm5ldyhjYWxsYmFjaywgKCkgPT4gewogICAgICBpZiAoaW1tZWRpYXRlLmlzX2Rlc3Ryb3llZCgpKSBpbW1lZGlhdGUuZGVzdHJveSgpOwogICAgICBpZiAoc291cmNlLmlzX2Rlc3Ryb3llZCgpKSBzb3VyY2UuZGVzdHJveSgpOwogICAgfSk7CiAgICBjb25zdCBpbW1lZGlhdGUgPSBzZXRUaW1lb3V0KG5vdyk7CiAgICBjb25zdCBzb3VyY2UgPSBzZXRJbnRlcnZhbChub3csIGludGVydmFsMik7CiAgICByZXR1cm4gdGltZXI7CiAgfQogIHN0YXRpYyB0aW1lb3V0KGludGVydmFsMiwgY2FsbGJhY2spIHsKICAgIGNvbnN0IHsgdGltZXIsIG5vdyB9ID0gX1RpbWVyLm5ldyhjYWxsYmFjaywgKCkgPT4gewogICAgICBpZiAoc291cmNlLmlzX2Rlc3Ryb3llZCgpKSBzb3VyY2UuZGVzdHJveSgpOwogICAgfSk7CiAgICBjb25zdCBzb3VyY2UgPSBzZXRUaW1lb3V0KG5vdywgaW50ZXJ2YWwyKTsKICAgIHJldHVybiB0aW1lcjsKICB9CiAgc3RhdGljIGlkbGUoY2FsbGJhY2spIHsKICAgIGNvbnN0IHsgdGltZXIsIG5vdyB9ID0gX1RpbWVyLm5ldyhjYWxsYmFjaywgKCkgPT4gewogICAgICBpZiAoc291cmNlLmlzX2Rlc3Ryb3llZCgpKSBzb3VyY2UuZGVzdHJveSgpOwogICAgfSk7CiAgICBjb25zdCBzb3VyY2UgPSBzZXRUaW1lb3V0KG5vdyk7CiAgICByZXR1cm4gdGltZXI7CiAgfQogIHN0YXRpYyBuZXcob25Ob3csIG9uQ2FuY2VsbGVkKSB7CiAgICBjb25zdCB0aW1lciA9IG5ldyBfVGltZXIoKTsKICAgIGNvbnN0IG5vdyA9IHRpbWVyLmNvbm5lY3QoIm5vdyIsICgpID0+IHZvaWQgb25Ob3c/LigpKTsKICAgIGNvbnN0IGNhbmNlbGxlZCA9IHRpbWVyLmNvbm5lY3QoImNhbmNlbGxlZCIsICgpID0+IHsKICAgICAgdGltZXIuZGlzY29ubmVjdChub3cpOwogICAgICB0aW1lci5kaXNjb25uZWN0KGNhbmNlbGxlZCk7CiAgICAgIG9uQ2FuY2VsbGVkPy4oKTsKICAgIH0pOwogICAgcmV0dXJuIHsgdGltZXIsIG5vdzogKCkgPT4gdGltZXIubm93KCkgfTsKICB9CiAgY29ubmVjdChzaWduYWwyLCBjYWxsYmFjaykgewogICAgcmV0dXJuIHN1cGVyLmNvbm5lY3Qoc2lnbmFsMiwgY2FsbGJhY2spOwogIH0KICBjYW5jZWwoKSB7CiAgICB0aGlzLmNhbmNlbGxlZCgpOwogIH0KfTsKX2luaXQ0ID0gX19kZWNvcmF0b3JTdGFydChfYTYpOwpfX2RlY29yYXRlRWxlbWVudChfaW5pdDQsIDEsICJub3ciLCBfbm93X2RlYywgX1RpbWVyKTsKX19kZWNvcmF0ZUVsZW1lbnQoX2luaXQ0LCAxLCAiY2FuY2VsbGVkIiwgX2NhbmNlbGxlZF9kZWMsIF9UaW1lcik7Cl9UaW1lciA9IF9fZGVjb3JhdGVFbGVtZW50KF9pbml0NCwgMCwgIlRpbWVyIiwgX1RpbWVyX2RlY29yYXRvcnMsIF9UaW1lcik7Cl9fcnVuSW5pdGlhbGl6ZXJzKF9pbml0NCwgMSwgX1RpbWVyKTsKdmFyIFRpbWVyID0gX1RpbWVyOwp2YXIgeyBpbnRlcnZhbCwgdGltZW91dCwgaWRsZSB9ID0gVGltZXI7CmZ1bmN0aW9uIGNyZWF0ZVBvbGwoaW5pdCwgaXZhbCwgZXhlY09yRm4sIHRyYW5zZm9ybSkgewogIGxldCBjdXJyZW50VmFsdWUgPSBpbml0OwogIGxldCB0aW1lciA9IG51bGw7CiAgY29uc3Qgc3Vic2NyaWJlcnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpOwogIGZ1bmN0aW9uIHNldDIodmFsdWUpIHsKICAgIGlmICh2YWx1ZSAhPT0gY3VycmVudFZhbHVlKSB7CiAgICAgIGN1cnJlbnRWYWx1ZSA9IHZhbHVlOwogICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSk7CiAgICB9CiAgfQogIGZ1bmN0aW9uIGNvbXB1dGUoKSB7CiAgICBpZiAodHlwZW9mIGV4ZWNPckZuID09PSAiZnVuY3Rpb24iKSB7CiAgICAgIGNvbnN0IHZhbHVlID0gZXhlY09yRm4oY3VycmVudFZhbHVlKTsKICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgUHJvbWlzZSkgewogICAgICAgIHZhbHVlLnRoZW4oc2V0Mik7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgc2V0Mih2YWx1ZSk7CiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIGV4ZWNBc3luYyhleGVjT3JGbikudGhlbigoc3Rkb3V0KSA9PiB7CiAgICAgICAgc2V0Mih0cmFuc2Zvcm0gPyB0cmFuc2Zvcm0oc3Rkb3V0LCBjdXJyZW50VmFsdWUpIDogc3Rkb3V0KTsKICAgICAgfSk7CiAgICB9CiAgfQogIGZ1bmN0aW9uIHN1YnNjcmliZShjYWxsYmFjaykgewogICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHsKICAgICAgc2V0VGltZW91dChjb21wdXRlKTsKICAgICAgdGltZXIgPSBzZXRJbnRlcnZhbChjb21wdXRlLCBpdmFsKTsKICAgIH0KICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjayk7CiAgICByZXR1cm4gKCkgPT4gewogICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spOwogICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCAmJiB0aW1lcikgewogICAgICAgIGNsZWFySW50ZXJ2YWwodGltZXIpOwogICAgICAgIHRpbWVyID0gbnVsbDsKICAgICAgfQogICAgfTsKICB9CiAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiBjdXJyZW50VmFsdWUsIHN1YnNjcmliZSk7Cn0KCi8vIHdpZGdldC9CYXIudHN4CmltcG9ydCBHTGliNyBmcm9tICJnaTovL0dMaWIiOwoKLy8gd2lkZ2V0L1N5c3RlbVRyYXkvU3lzVHJheS50c3gKaW1wb3J0IEFzdGFsVHJheSBmcm9tICJnaTovL0FzdGFsVHJheSI7CmZ1bmN0aW9uIFN5c1RyYXkoeyBpY29uU2l6ZSA9IDE2LCBzcGFjaW5nID0gMTAgfSkgewogIGNvbnN0IHRyYXkgPSBBc3RhbFRyYXkuVHJheS5nZXRfZGVmYXVsdCgpOwogIGNvbnN0IHRyYXlCb3ggPSBuZXcgR3RrMi5Cb3goeyBvcmllbnRhdGlvbjogR3RrMi5PcmllbnRhdGlvbi5IT1JJWk9OVEFMLCBzcGFjaW5nIH0pOwogIGNvbnN0IHRyYXlJY29ucyA9IFtdOwogIGZ1bmN0aW9uIHVwZGF0ZVRyYXlJdGVtcygpIHsKICAgIGZvciAoY29uc3QgaWNvbiBvZiB0cmF5SWNvbnMpIHsKICAgICAgdHJheUJveC5yZW1vdmUoaWNvbik7CiAgICB9CiAgICB0cmF5SWNvbnMubGVuZ3RoID0gMDsKICAgIGNvbnN0IGl0ZW1zID0gdHJheS5nZXRfaXRlbXMoKTsKICAgIGZvciAoY29uc3QgaXRlbSBvZiBpdGVtcykgewogICAgICBjb25zdCBpY29uID0gaXRlbS5nZXRfZ2ljb24oKTsKICAgICAgaWYgKCFpY29uKSBjb250aW51ZTsKICAgICAgY29uc3QgaW1hZ2UgPSBuZXcgR3RrMi5JbWFnZSh7IGdpY29uOiBpY29uLCBwaXhlbF9zaXplOiBpY29uU2l6ZSB9KTsKICAgICAgY29uc3QgZ2VzdHVyZSA9IG5ldyBHdGsyLkdlc3R1cmVDbGljayh7IGJ1dHRvbjogMyB9KTsKICAgICAgZ2VzdHVyZS5jb25uZWN0KCJwcmVzc2VkIiwgKCkgPT4gewogICAgICAgIGNvbnN0IG1lbnVNb2RlbCA9IGl0ZW0uZ2V0X21lbnVfbW9kZWwoKTsKICAgICAgICBpZiAobWVudU1vZGVsKSB7CiAgICAgICAgICBjb25zdCBwb3BvdmVyTWVudSA9IG5ldyBHdGsyLlBvcG92ZXJNZW51KHsgbWVudV9tb2RlbDogbWVudU1vZGVsLCBoYXNfYXJyb3c6IGZhbHNlIH0pOwogICAgICAgICAgcG9wb3Zlck1lbnUuc2V0X3BhcmVudChpbWFnZSk7CiAgICAgICAgICBwb3BvdmVyTWVudS5pbnNlcnRfYWN0aW9uX2dyb3VwKCJkYnVzbWVudSIsIGl0ZW0uZ2V0X2FjdGlvbl9ncm91cCgpKTsKICAgICAgICAgIHBvcG92ZXJNZW51LnBvcHVwKCk7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgaW1hZ2UuYWRkX2NvbnRyb2xsZXIoZ2VzdHVyZSk7CiAgICAgIHRyYXlCb3guYXBwZW5kKGltYWdlKTsKICAgICAgdHJheUljb25zLnB1c2goaW1hZ2UpOwogICAgfQogIH0KICB1cGRhdGVUcmF5SXRlbXMoKTsKICB0cmF5LmNvbm5lY3QoIml0ZW0tYWRkZWQiLCB1cGRhdGVUcmF5SXRlbXMpOwogIHRyYXkuY29ubmVjdCgiaXRlbS1yZW1vdmVkIiwgdXBkYXRlVHJheUl0ZW1zKTsKICByZXR1cm4gdHJheUJveDsKfQoKLy8gLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvZ3RrNC9qc3gtcnVudGltZS50cwppbXBvcnQgR3RrNCBmcm9tICJnaTovL0d0az92ZXJzaW9uPTQuMCI7CmltcG9ydCBBc3RhbDIgZnJvbSAiZ2k6Ly9Bc3RhbD92ZXJzaW9uPTQuMCI7CgovLyAuLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvZ3RrNC9qc3gtcnVudGltZS50cwppbXBvcnQgR3RrMyBmcm9tICJnaTovL0d0az92ZXJzaW9uPTQuMCI7CmltcG9ydCBHaW81IGZyb20gImdpOi8vR2lvP3ZlcnNpb249Mi4wIjsKdmFyIGFkdyA9IGF3YWl0IGltcG9ydCgiZ2k6Ly9BZHciKS50aGVuKChtKSA9PiBtLmRlZmF1bHQpLmNhdGNoKCgpID0+IG51bGwpOwp2YXIgZHVtbXlCdWlsZGVyID0gbmV3IEd0azMuQnVpbGRlcigpOwp2YXIgeyBpbnRyaW5zaWNFbGVtZW50cyB9ID0gY29uZmlndWUoewogIGluaXRQcm9wcyhjdG9yKSB7CiAgICBpZiAoY3RvciA9PT0gR3RrMy5TdGFjaykgewogICAgICBjb25zdCBrZXlzID0gWwogICAgICAgICJ2aXNpYmxlQ2hpbGROYW1lIiwKICAgICAgICAidmlzaWJsZV9jaGlsZF9uYW1lIgogICAgICBdOwogICAgICByZXR1cm4ga2V5czsKICAgIH0KICAgIGlmIChhZHcgJiYgY3RvciA9PT0gYWR3LlRvZ2dsZUdyb3VwKSB7CiAgICAgIGNvbnN0IGtleXMgPSBbCiAgICAgICAgImFjdGl2ZSIsCiAgICAgICAgImFjdGl2ZU5hbWUiLAogICAgICAgICJhY3RpdmVfbmFtZSIKICAgICAgXTsKICAgICAgcmV0dXJuIGtleXM7CiAgICB9CiAgfSwKICBzZXRDc3Mob2JqZWN0LCBjc3MpIHsKICAgIGlmICghKG9iamVjdCBpbnN0YW5jZW9mIEd0azMuV2lkZ2V0KSkgewogICAgICByZXR1cm4gY29uc29sZS53YXJuKEVycm9yKGBjYW5ub3Qgc2V0IGNzcyBvbiAke29iamVjdH1gKSk7CiAgICB9CiAgICBjb25zdCBjdHggPSBvYmplY3QuZ2V0X3N0eWxlX2NvbnRleHQoKTsKICAgIGxldCBwcm92aWRlcjsKICAgIGNvbnN0IHNldHRlcjIgPSAoY3NzMikgPT4gewogICAgICBpZiAoIWNzczIuaW5jbHVkZXMoInsiKSB8fCAhY3NzMi5pbmNsdWRlcygifSIpKSB7CiAgICAgICAgY3NzMiA9IGAqIHsgJHtjc3MyfSB9YDsKICAgICAgfQogICAgICBpZiAocHJvdmlkZXIpIGN0eC5yZW1vdmVfcHJvdmlkZXIocHJvdmlkZXIpOwogICAgICBwcm92aWRlciA9IG5ldyBHdGszLkNzc1Byb3ZpZGVyKCk7CiAgICAgIHByb3ZpZGVyLmxvYWRfZnJvbV9zdHJpbmcoY3NzMik7CiAgICAgIGN0eC5hZGRfcHJvdmlkZXIocHJvdmlkZXIsIEd0azMuU1RZTEVfUFJPVklERVJfUFJJT1JJVFlfVVNFUik7CiAgICB9OwogICAgaWYgKGNzcyBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7CiAgICAgIHNldHRlcjIoY3NzLmdldCgpKTsKICAgICAgY29uc3QgZGlzcG9zZSA9IGNzcy5zdWJzY3JpYmUoKCkgPT4gc2V0dGVyMihjc3MuZ2V0KCkpKTsKICAgICAgb25DbGVhbnVwKGRpc3Bvc2UpOwogICAgfSBlbHNlIHsKICAgICAgc2V0dGVyMihjc3MpOwogICAgfQogIH0sCiAgc2V0Q2xhc3Mob2JqZWN0LCBjbGFzc05hbWUpIHsKICAgIGlmICghKG9iamVjdCBpbnN0YW5jZW9mIEd0azMuV2lkZ2V0KSkgewogICAgICByZXR1cm4gY29uc29sZS53YXJuKEVycm9yKGBjYW5ub3Qgc2V0IGNsYXNzTmFtZSBvbiAke29iamVjdH1gKSk7CiAgICB9CiAgICBpZiAoY2xhc3NOYW1lIGluc3RhbmNlb2YgQWNjZXNzb3IpIHsKICAgICAgb2JqZWN0LmNzc0NsYXNzZXMgPSBjbGFzc05hbWUuZ2V0KCkuc3BsaXQoL1xzKy8pOwogICAgICBjb25zdCBkaXNwb3NlID0gY2xhc3NOYW1lLnN1YnNjcmliZSgKICAgICAgICAoKSA9PiBvYmplY3QuY3NzQ2xhc3NlcyA9IGNsYXNzTmFtZS5nZXQoKS5zcGxpdCgvXHMrLykKICAgICAgKTsKICAgICAgb25DbGVhbnVwKGRpc3Bvc2UpOwogICAgfSBlbHNlIHsKICAgICAgb2JqZWN0LnNldF9jc3NfY2xhc3NlcyhjbGFzc05hbWUuc3BsaXQoL1xzKy8pKTsKICAgIH0KICB9LAogIHRleHROb2RlKHRleHQpIHsKICAgIHJldHVybiBHdGszLkxhYmVsLm5ldyh0ZXh0LnRvU3RyaW5nKCkpOwogIH0sCiAgLy8gYHNldF9jaGlsZGAgYW5kIGVzcGVjaWFsbHkgYHJlbW92ZWAgbWlnaHQgYmUgd2F5IHRvbyBnZW5lcmljIGFuZCB0aGVyZSBtaWdodAogIC8vIGJlIGNhc2VzIHdoZXJlIGl0IGRvZXMgbm90IGFjdHVhbGx5IGRvIHdoYXQgd2Ugd2FudCBpdCB0byBkbwogIC8vCiAgLy8gaWYgdGhlcmUgaXMgYSB1c2VjYXNlIGZvciBlaXRoZXIgb2YgdGhlc2UgdHdvIHRoYXQgZG9lcyBzb21ldGhpbmcgZWxzZSB0aGFuCiAgLy8gd2UgZXhwZWN0IGl0IHRvIGRvIGhlcmUgaW4gYSBKU1ggY29udGV4dCB3ZSBoYXZlIHRvIGNoZWNrIGZvciBrbm93biBpbnN0YW5jZXMKICByZW1vdmVDaGlsZChwYXJlbnQsIGNoaWxkKSB7CiAgICBpZiAocGFyZW50IGluc3RhbmNlb2YgR3RrMy5XaWRnZXQgJiYgY2hpbGQgaW5zdGFuY2VvZiBHdGszLkV2ZW50Q29udHJvbGxlcikgewogICAgICByZXR1cm4gcGFyZW50LnJlbW92ZV9jb250cm9sbGVyKGNoaWxkKTsKICAgIH0KICAgIGlmICgic2V0X2NoaWxkIiBpbiBwYXJlbnQgJiYgdHlwZW9mIHBhcmVudC5zZXRfY2hpbGQgPT0gImZ1bmN0aW9uIikgewogICAgICByZXR1cm4gcGFyZW50LnNldF9jaGlsZChudWxsKTsKICAgIH0KICAgIGlmICgicmVtb3ZlIiBpbiBwYXJlbnQgJiYgdHlwZW9mIHBhcmVudC5yZW1vdmUgPT0gImZ1bmN0aW9uIikgewogICAgICByZXR1cm4gcGFyZW50LnJlbW92ZShjaGlsZCk7CiAgICB9CiAgICB0aHJvdyBFcnJvcihgY2Fubm90IHJlbW92ZSAke2NoaWxkfSBmcm9tICR7cGFyZW50fWApOwogIH0sCiAgYXBwZW5kQ2hpbGQocGFyZW50LCBjaGlsZCkgewogICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrMy5BZGp1c3RtZW50ICYmICJzZXRfYWRqdXN0bWVudCIgaW4gcGFyZW50ICYmIHR5cGVvZiBwYXJlbnQuc2V0X2FkanVzdG1lbnQgPT09ICJmdW5jdGlvbiIpIHsKICAgICAgcmV0dXJuIHBhcmVudC5zZXRfYWRqdXN0bWVudChjaGlsZCk7CiAgICB9CiAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHdGszLldpZGdldCAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHdGszLlN0YWNrICYmIGNoaWxkLm5hbWUgIT09ICIiICYmIGNoaWxkLm5hbWUgIT09IG51bGwgJiYgZ2V0VHlwZShjaGlsZCkgPT09ICJuYW1lZCIpIHsKICAgICAgcmV0dXJuIHBhcmVudC5hZGRfbmFtZWQoY2hpbGQsIGNoaWxkLm5hbWUpOwogICAgfQogICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrMy5Qb3BvdmVyICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0azMuTWVudUJ1dHRvbikgewogICAgICByZXR1cm4gcGFyZW50LnNldF9wb3BvdmVyKGNoaWxkKTsKICAgIH0KICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEdpbzUuTWVudU1vZGVsICYmIChwYXJlbnQgaW5zdGFuY2VvZiBHdGszLk1lbnVCdXR0b24gfHwgcGFyZW50IGluc3RhbmNlb2YgR3RrMy5Qb3BvdmVyTWVudSkpIHsKICAgICAgcmV0dXJuIHBhcmVudC5zZXRfbWVudV9tb2RlbChjaGlsZCk7CiAgICB9CiAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHaW81Lk1lbnVJdGVtICYmIHBhcmVudCBpbnN0YW5jZW9mIEdpbzUuTWVudSkgewogICAgfQogICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrMy5XaW5kb3cgJiYgcGFyZW50IGluc3RhbmNlb2YgR3RrMy5BcHBsaWNhdGlvbikgewogICAgICByZXR1cm4gcGFyZW50LmFkZF93aW5kb3coY2hpbGQpOwogICAgfQogICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrMy5UZXh0QnVmZmVyICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0azMuVGV4dFZpZXcpIHsKICAgICAgcmV0dXJuIHBhcmVudC5zZXRfYnVmZmVyKGNoaWxkKTsKICAgIH0KICAgIGlmIChwYXJlbnQgaW5zdGFuY2VvZiBHdGszLkJ1aWxkYWJsZSkgewogICAgICByZXR1cm4gcGFyZW50LnZmdW5jX2FkZF9jaGlsZChkdW1teUJ1aWxkZXIsIGNoaWxkLCBnZXRUeXBlKGNoaWxkKSk7CiAgICB9CiAgICB0aHJvdyBFcnJvcihgY2Fubm90IGFkZCAke2NoaWxkfSB0byAke3BhcmVudH1gKTsKICB9Cn0pOwoKLy8gLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvZ3RrNC9qc3gtcnVudGltZS50cwpPYmplY3QuYXNzaWduKGludHJpbnNpY0VsZW1lbnRzLCB7CiAgYm94OiBHdGs0LkJveCwKICBidXR0b246IEd0azQuQnV0dG9uLAogIGNlbnRlcmJveDogR3RrNC5DZW50ZXJCb3gsCiAgLy8gY2lyY3VsYXJwcm9ncmVzczogQXN0YWwuQ2lyY3VsYXJQcm9ncmVzcywKICBkcmF3aW5nYXJlYTogR3RrNC5EcmF3aW5nQXJlYSwKICBlbnRyeTogR3RrNC5FbnRyeSwKICBpbWFnZTogR3RrNC5JbWFnZSwKICBsYWJlbDogR3RrNC5MYWJlbCwKICBsZXZlbGJhcjogR3RrNC5MZXZlbEJhciwKICBtZW51YnV0dG9uOiBHdGs0Lk1lbnVCdXR0b24sCiAgb3ZlcmxheTogR3RrNC5PdmVybGF5LAogIHBvcG92ZXI6IEd0azQuUG9wb3ZlciwKICByZXZlYWxlcjogR3RrNC5SZXZlYWxlciwKICBzY3JvbGxlZHdpbmRvdzogR3RrNC5TY3JvbGxlZFdpbmRvdywKICBzbGlkZXI6IEFzdGFsMi5TbGlkZXIsCiAgc3RhY2s6IEd0azQuU3RhY2ssCiAgc3dpdGNoOiBHdGs0LlN3aXRjaCwKICB0b2dnbGVidXR0b246IEd0azQuVG9nZ2xlQnV0dG9uLAogIHdpbmRvdzogQXN0YWwyLldpbmRvdwp9KTsKCi8vIHdpZGdldC9TeXN0ZW1UcmF5L1N5c1RyYXlCdXR0b24udHN4CmZ1bmN0aW9uIFN5c1RyYXlCdXR0b24oKSB7CiAgY29uc3QgcG9wb3ZlciA9IC8qIEBfX1BVUkVfXyAqLyBqc3goInBvcG92ZXIiLCB7IGNsYXNzOiAic3lzdHJheW1lbnUiLCBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeChTeXNUcmF5LCB7fSkgfSk7CiAgY29uc3QgYnV0dG9uID0gLyogQF9fUFVSRV9fICovIGpzeCgKICAgICJtZW51YnV0dG9uIiwKICAgIHsKICAgICAgY2xhc3M6ICJzeXN0cmF5YnV0dG9uIiwKICAgICAgZGlyZWN0aW9uOiBHdGsyLkFycm93VHlwZS5VUCwKICAgICAgY2hpbGRyZW46IHBvcG92ZXIKICAgIH0KICApOwogIHBvcG92ZXIuY29ubmVjdCgic2hvdyIsICgpID0+IHsKICAgIGJ1dHRvbi5kaXJlY3Rpb24gPSBHdGsyLkFycm93VHlwZS5ET1dOOwogIH0pOwogIHBvcG92ZXIuY29ubmVjdCgiaGlkZSIsICgpID0+IHsKICAgIGJ1dHRvbi5kaXJlY3Rpb24gPSBHdGsyLkFycm93VHlwZS5VUDsKICB9KTsKICByZXR1cm4gYnV0dG9uOwp9CgovLyB3aWRnZXQvVXRpbGl0aWVzL3ZvbHVtZWluZGljYXRvci50c3gKaW1wb3J0IFdwIGZyb20gImdpOi8vQXN0YWxXcCI7CmZ1bmN0aW9uIFZvbHVtZUluZGljYXRvcigpIHsKICBjb25zdCBhdWRpbyA9IFdwLmdldF9kZWZhdWx0KCk7CiAgY29uc3QgbGFiZWwgPSBuZXcgR3RrMi5MYWJlbCh7CiAgICBoYWxpZ246IEd0azIuQWxpZ24uRU5ECiAgfSk7CiAgY29uc3QgdXBkYXRlSWNvbiA9ICgpID0+IHsKICAgIGNvbnN0IHNwZWFrZXIgPSBhdWRpby5nZXRfZGVmYXVsdF9zcGVha2VyKCk7CiAgICBpZiAoIXNwZWFrZXIpIHJldHVybjsKICAgIGlmIChzcGVha2VyLm11dGUpIHsKICAgICAgbGFiZWwubGFiZWwgPSAiXHVFRUU4IjsKICAgIH0gZWxzZSBpZiAoc3BlYWtlci52b2x1bWUgPD0gMC4zMykgewogICAgICBsYWJlbC5sYWJlbCA9ICJcdUYwMjYiOwogICAgfSBlbHNlIGlmIChzcGVha2VyLnZvbHVtZSA8PSAwLjY2KSB7CiAgICAgIGxhYmVsLmxhYmVsID0gIlx1RjAyNyI7CiAgICB9IGVsc2UgewogICAgICBsYWJlbC5sYWJlbCA9ICJcdUYwMjgiOwogICAgfQogIH07CiAgdXBkYXRlSWNvbigpOwogIGF1ZGlvLmdldF9kZWZhdWx0X3NwZWFrZXIoKS5jb25uZWN0KCJub3RpZnk6OnZvbHVtZSIsIHVwZGF0ZUljb24pOwogIGF1ZGlvLmdldF9kZWZhdWx0X3NwZWFrZXIoKS5jb25uZWN0KCJub3RpZnk6Om11dGUiLCB1cGRhdGVJY29uKTsKICByZXR1cm4gbGFiZWw7Cn0KCi8vIHdpZGdldC9IaWRlV2luZG93c0J1dHRvbi50c3gKaW1wb3J0IEh5cHJsYW5kIGZyb20gImdpOi8vQXN0YWxIeXBybGFuZCI7CmZ1bmN0aW9uIEhpZGVXaW5kb3dzQnV0dG9uKCkgewogIGNvbnN0IGh5cHIgPSBIeXBybGFuZC5nZXRfZGVmYXVsdCgpOwogIGxldCBhcmVIaWRkZW4gPSBmYWxzZTsKICBjb25zdCB3aW5kb3dXb3Jrc3BhY2VNYXAgPSB7fTsKICBjb25zdCBpY29uID0gbmV3IEd0azIuTGFiZWwoewogICAgbGFiZWw6ICJcdUYwNkUiCiAgICAvLyBvcGVuIGV5ZQogIH0pOwogIGNvbnN0IGJ1dHRvbiA9IG5ldyBHdGsyLkJ1dHRvbih7CiAgICBoYWxpZ246IEd0azIuQWxpZ24uRU5ELAogICAgY2hpbGQ6IGljb24KICB9KTsKICBidXR0b24uYWRkX2Nzc19jbGFzcygiaGlkZXdpbmRvd3NidXR0b24iKTsKICBidXR0b24uY29ubmVjdCgiY2xpY2tlZCIsICgpID0+IHsKICAgIGxldCBjbGllbnRzID0gaHlwci5nZXRfY2xpZW50cygpOwogICAgZm9yIChjb25zdCBjbGllbnQgb2YgY2xpZW50cykgewogICAgICBpZiAoYXJlSGlkZGVuKSB7CiAgICAgICAgY29uc3Qgd3MgPSB3aW5kb3dXb3Jrc3BhY2VNYXBbY2xpZW50LmFkZHJlc3NdOwogICAgICAgIGh5cHIubWVzc2FnZShgZGlzcGF0Y2ggbW92ZXRvd29ya3NwYWNlc2lsZW50ICR7d3N9LGFkZHJlc3M6MHgke2NsaWVudC5hZGRyZXNzfWApOwogICAgICAgIGRlbGV0ZSB3aW5kb3dXb3Jrc3BhY2VNYXBbY2xpZW50LmFkZHJlc3NdOwogICAgICB9IGVsc2UgewogICAgICAgIHdpbmRvd1dvcmtzcGFjZU1hcFtjbGllbnQuYWRkcmVzc10gPSBjbGllbnQud29ya3NwYWNlLmlkOwogICAgICAgIGh5cHIubWVzc2FnZShgZGlzcGF0Y2ggbW92ZXRvd29ya3NwYWNlc2lsZW50IHNwZWNpYWwsYWRkcmVzczoweCR7Y2xpZW50LmFkZHJlc3N9YCk7CiAgICAgIH0KICAgIH0KICAgIGFyZUhpZGRlbiA9ICFhcmVIaWRkZW47CiAgICBpY29uLmxhYmVsID0gYXJlSGlkZGVuID8gIlx1RjA3MCIgOiAiXHVGMDZFIjsKICB9KTsKICByZXR1cm4gYnV0dG9uOwp9CgovLyB3aWRnZXQvVXRpbGl0aWVzL25ldHdvcmtpbmRpY2F0b3IudHN4CmltcG9ydCBOZXR3b3JrIGZyb20gImdpOi8vQXN0YWxOZXR3b3JrIjsKaW1wb3J0IEdMaWI2IGZyb20gImdpOi8vR0xpYiI7CmZ1bmN0aW9uIE5ldHdvcmtJbmRpY2F0b3IoKSB7CiAgY29uc3QgbmV0d29yayA9IE5ldHdvcmsuZ2V0X2RlZmF1bHQoKTsKICBjb25zdCBsYWJlbCA9IG5ldyBHdGsyLkxhYmVsKHsKICAgIGhhbGlnbjogR3RrMi5BbGlnbi5FTkQKICB9KTsKICBjb25zdCB1cGRhdGVJY29uID0gKCkgPT4gewogICAgc3dpdGNoIChuZXR3b3JrLmdldF9wcmltYXJ5KCkpIHsKICAgICAgLy8gV2lyZWQgY29ubmVjdGlvbgogICAgICBjYXNlIDE6CiAgICAgICAgbGFiZWwubGFiZWwgPSAiXHV7RjAwMDJ9IjsKICAgICAgICBicmVhazsKICAgICAgLy8gV2lmaSBjb25uZWN0aW9uCiAgICAgIGNhc2UgMjoKICAgICAgICBsZXQgc3RyZW5ndGggPSBuZXR3b3JrLndpZmkuc3RyZW5ndGg7CiAgICAgICAgaWYgKHN0cmVuZ3RoID4gODApIHsKICAgICAgICAgIGxhYmVsLmxhYmVsID0gIlx1e0YwOTI4fSI7CiAgICAgICAgfSBlbHNlIGlmIChzdHJlbmd0aCA+IDYwKSB7CiAgICAgICAgICBsYWJlbC5sYWJlbCA9ICJcdXtGMDkyNX0iOwogICAgICAgIH0gZWxzZSBpZiAoc3RyZW5ndGggPiA0MCkgewogICAgICAgICAgbGFiZWwubGFiZWwgPSAiXHV7RjA5MjJ9IjsKICAgICAgICB9IGVsc2UgaWYgKHN0cmVuZ3RoID4gMjApIHsKICAgICAgICAgIGxhYmVsLmxhYmVsID0gIlx1e0YwOTFGfSI7CiAgICAgICAgfSBlbHNlIGlmIChzdHJlbmd0aCA+IDApIHsKICAgICAgICAgIGxhYmVsLmxhYmVsID0gIlx1e0YwOTJGfSI7CiAgICAgICAgfQogICAgICAgIGJyZWFrOwogICAgICAvLyBObyBjb25uZWN0aW9uIGRlZmF1bHQKICAgICAgZGVmYXVsdDoKICAgICAgICBsYWJlbC5sYWJlbCA9ICJcdXtGMDkyRX0iOwogICAgICAgIGJyZWFrOwogICAgfQogIH07CiAgdXBkYXRlSWNvbigpOwogIG5ldHdvcmsuY29ubmVjdCgibm90aWZ5OjpwcmltYXJ5IiwgdXBkYXRlSWNvbik7CiAgbmV0d29yay5jb25uZWN0KCJub3RpZnk6OnN0YXRlIiwgdXBkYXRlSWNvbik7CiAgbmV0d29yay5jb25uZWN0KCJub3RpZnk6OmRldmljZXMiLCB1cGRhdGVJY29uKTsKICBHTGliNi50aW1lb3V0X2FkZChHTGliNi5QUklPUklUWV9ERUZBVUxULCAxZTMsICgpID0+IHsKICAgIGlmIChuZXR3b3JrLmdldF9wcmltYXJ5KCkgPT09IDIpIHsKICAgICAgdXBkYXRlSWNvbigpOwogICAgfQogICAgcmV0dXJuIHRydWU7CiAgfSk7CiAgcmV0dXJuIGxhYmVsOwp9CgovLyB3aWRnZXQvVXRpbGl0aWVzL3V0aWxpdGllc3RyYXkudHN4CmZ1bmN0aW9uIFV0aWxzVHJheSh7IGljb25TaXplID0gMTYsIHNwYWNpbmcgPSAxMCB9KSB7CiAgY29uc3QgYnV0dG9uQm94ID0gbmV3IEd0azIuQm94KHsgb3JpZW50YXRpb246IEd0azIuT3JpZW50YXRpb24uSE9SSVpPTlRBTCwgc3BhY2luZzogNiB9KTsKICBjb25zdCBjb250ZW50Qm94ID0gbmV3IEd0azIuQm94KHsgb3JpZW50YXRpb246IEd0azIuT3JpZW50YXRpb24uVkVSVElDQUwsIHNwYWNpbmc6IDYgfSk7CiAgY29uc3QgbWFpbkJveCA9IG5ldyBHdGsyLkJveCh7IG9yaWVudGF0aW9uOiBHdGsyLk9yaWVudGF0aW9uLlZFUlRJQ0FMLCBzcGFjaW5nOiA2IH0pOwogIG1haW5Cb3guYXBwZW5kKGJ1dHRvbkJveCk7CiAgY29uc3QgYmx1ZXRvb3RoV2lkZ2V0ID0gbmV3IEd0azIuQnV0dG9uKHsgbGFiZWw6ICJcdUYyOTQiIH0pOwogIGNvbnN0IG5ldHdvcmtXaWRnZXQgPSBuZXcgR3RrMi5CdXR0b24oeyBsYWJlbDogIlx1e0YwMDAyfSIgfSk7CiAgY29uc3Qgdm9sdW1lV2lkZ2V0ID0gbmV3IEd0azIuQnV0dG9uKHsgbGFiZWw6ICJcdUYwMjgiIH0pOwogIGNvbnN0IHN5c3RlbVdpZGdldCA9IG5ldyBHdGsyLkJ1dHRvbih7IGxhYmVsOiAiXHV7RjAzNUJ9IiB9KTsKICBibHVldG9vdGhXaWRnZXQuY29ubmVjdCgiY2xpY2tlZCIsICgpID0+IHsKICAgIGV4ZWNBc3luYyhbImJsdWViZXJyeSJdKS50aGVuKChvdXQpID0+IGNvbnNvbGUubG9nKG91dCkpLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSk7CiAgfSk7CiAgbmV0d29ya1dpZGdldC5jb25uZWN0KCJjbGlja2VkIiwgKCkgPT4gewogICAgZXhlY0FzeW5jKFsibm0tY29ubmVjdGlvbi1lZGl0b3IiXSkudGhlbigob3V0KSA9PiBjb25zb2xlLmxvZyhvdXQpKS5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKGVycikpOwogIH0pOwogIHZvbHVtZVdpZGdldC5jb25uZWN0KCJjbGlja2VkIiwgKCkgPT4gewogICAgZXhlY0FzeW5jKFsia2l0dHkiLCAiLS1jbGFzcz1XaXJlbWl4IiwgIi1lIiwgIndpcmVtaXgiXSkudGhlbigob3V0KSA9PiBjb25zb2xlLmxvZyhvdXQpKS5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKGVycikpOwogIH0pOwogIHN5c3RlbVdpZGdldC5jb25uZWN0KCJjbGlja2VkIiwgKCkgPT4gewogICAgZXhlY0FzeW5jKFsibWlzc2lvbmNlbnRlciJdKS50aGVuKChvdXQpID0+IGNvbnNvbGUubG9nKG91dCkpLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSk7CiAgfSk7CiAgYnV0dG9uQm94LmFwcGVuZChibHVldG9vdGhXaWRnZXQpOwogIGJ1dHRvbkJveC5hcHBlbmQobmV0d29ya1dpZGdldCk7CiAgYnV0dG9uQm94LmFwcGVuZCh2b2x1bWVXaWRnZXQpOwogIGJ1dHRvbkJveC5hcHBlbmQoc3lzdGVtV2lkZ2V0KTsKICByZXR1cm4gbWFpbkJveDsKfQoKLy8gd2lkZ2V0L0Jhci50c3gKZnVuY3Rpb24gQmFyKGdka21vbml0b3IpIHsKICBjb25zdCB0aW1lID0gY3JlYXRlUG9sbCgiIiwgMWUzLCAnZGF0ZSAiKyVsOiVNICVwIicpOwogIGNvbnN0IGRhdGUgPSBjcmVhdGVQb2xsKCIiLCAxZTMsICdkYXRlICIrJW0vJWQvJVkiJyk7CiAgY29uc3QgeyBCT1RUT00sIExFRlQsIFJJR0hUIH0gPSBBc3RhbC5XaW5kb3dBbmNob3I7CiAgY29uc3QgQVNTRVRTX1BBVEggPSBgJHtHTGliNy5nZXRfY3VycmVudF9kaXIoKX0vYXNzZXRzYDsKICByZXR1cm4gLyogQF9fUFVSRV9fICovIGpzeCgKICAgICJ3aW5kb3ciLAogICAgewogICAgICB2aXNpYmxlOiB0cnVlLAogICAgICBuYW1lOiAiYmFyIiwKICAgICAgY2xhc3M6ICJCYXIiLAogICAgICBnZGttb25pdG9yLAogICAgICBleGNsdXNpdml0eTogQXN0YWwuRXhjbHVzaXZpdHkuRVhDTFVTSVZFLAogICAgICBhbmNob3I6IEJPVFRPTSB8IExFRlQgfCBSSUdIVCwKICAgICAgYXBwbGljYXRpb246IGFwcF9kZWZhdWx0LAogICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeHMoImNlbnRlcmJveCIsIHsgY3NzTmFtZTogImNlbnRlcmJveCIsIGNoaWxkcmVuOiBbCiAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeCgKICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgewogICAgICAgICAgICBjbGFzczogInN0YXJ0YnV0dG9uIiwKICAgICAgICAgICAgJHR5cGU6ICJzdGFydCIsCiAgICAgICAgICAgIG9uQ2xpY2tlZDogKCkgPT4gZXhlY0FzeW5jKCJ3YWxrZXIiKSwKICAgICAgICAgICAgaGV4cGFuZDogdHJ1ZSwKICAgICAgICAgICAgaGFsaWduOiBHdGsyLkFsaWduLlNUQVJULAogICAgICAgICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeCgKICAgICAgICAgICAgICAiaW1hZ2UiLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGZpbGU6IGAke0FTU0VUU19QQVRIfS9hcmNoX2JsdWUucG5nYCwKICAgICAgICAgICAgICAgIHBpeGVsU2l6ZTogMjAKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkKICAgICAgICAgIH0KICAgICAgICApLAogICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goImJveCIsIHsgJHR5cGU6ICJjZW50ZXIiIH0pLAogICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hzKCJib3giLCB7ICR0eXBlOiAiZW5kIiwgaGFsaWduOiBHdGsyLkFsaWduLkVORCwgY2hpbGRyZW46IFsKICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goU3lzVHJheUJ1dHRvbiwge30pLAogICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeHMoCiAgICAgICAgICAgICJtZW51YnV0dG9uIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGNsYXNzOiAidXRpbGl0aWVzIiwKICAgICAgICAgICAgICBkaXJlY3Rpb246IEd0azIuQXJyb3dUeXBlLk5PTkUsCiAgICAgICAgICAgICAgY2hpbGRyZW46IFsKICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3hzKCJib3giLCB7IG9yaWVudGF0aW9uOiBHdGsyLk9yaWVudGF0aW9uLkhPUklaT05UQUwsIHNwYWNpbmc6IDYsIGNoaWxkcmVuOiBbCiAgICAgICAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goTmV0d29ya0luZGljYXRvciwge30pLAogICAgICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KFZvbHVtZUluZGljYXRvciwge30pCiAgICAgICAgICAgICAgICBdIH0pLAogICAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeCgicG9wb3ZlciIsIHsgY2xhc3M6ICJzeXN0cmF5bWVudSIsIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KFV0aWxzVHJheSwge30pIH0pCiAgICAgICAgICAgICAgXQogICAgICAgICAgICB9CiAgICAgICAgICApLAogICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeHMoIm1lbnVidXR0b24iLCB7IGNsYXNzOiAiZGF0ZXRpbWUiLCBjaGlsZHJlbjogWwogICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4cygiYm94IiwgeyBvcmllbnRhdGlvbjogR3RrMi5PcmllbnRhdGlvbi5WRVJUSUNBTCwgY2hpbGRyZW46IFsKICAgICAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4KCJsYWJlbCIsIHsgbGFiZWw6IHRpbWUsIGhhbGlnbjogR3RrMi5BbGlnbi5FTkQgfSksCiAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeCgibGFiZWwiLCB7IGxhYmVsOiBkYXRlLCBoYWxpZ246IEd0azIuQWxpZ24uRU5EIH0pCiAgICAgICAgICAgIF0gfSksCiAgICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goInBvcG92ZXIiLCB7IGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi8ganN4KEd0azIuQ2FsZW5kYXIsIHt9KSB9KQogICAgICAgICAgXSB9KSwKICAgICAgICAgIC8qIEBfX1BVUkVfXyAqLyBqc3goSGlkZVdpbmRvd3NCdXR0b24sIHt9KQogICAgICAgIF0gfSkKICAgICAgXSB9KQogICAgfQogICk7Cn0KCi8vIHdpZGdldC9Ob3RpZmljYXRpb24udHN4CmltcG9ydCBOb3RpZmQgZnJvbSAiZ2k6Ly9Bc3RhbE5vdGlmZCI7CmZ1bmN0aW9uIE5vdGlmZFdpZGdldChnZGttb25pdG9yKSB7CiAgY29uc3QgeyBSSUdIVCwgVE9QIH0gPSBBc3RhbC5XaW5kb3dBbmNob3I7CiAgY29uc3Qgbm90aWZkID0gTm90aWZkLmdldF9kZWZhdWx0KCk7CiAgY29uc3QgYWN0aXZlTm90aWZpY2F0aW9ucyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7CiAgbm90aWZkLmNvbm5lY3QoIm5vdGlmaWVkIiwgKF8sIGlkKSA9PiB7CiAgICBjb25zdCBuID0gbm90aWZkLmdldF9ub3RpZmljYXRpb24oaWQpOwogICAgaWYgKCFuKSByZXR1cm47CiAgICBjb25zdCBoaW50cyA9IG4uZ2V0X2hpbnRzKCkucmVjdXJzaXZlVW5wYWNrKCk7CiAgICBsZXQgaW1hZ2VQYXRoID0gaGludHNbImltYWdlLXBhdGgiXSB8fCBudWxsOwogICAgbGV0IGFwcEljb24gPSBoaW50c1siZGVza3RvcC1lbnRyeSJdIHx8IG51bGw7CiAgICBjb25zdCBub3RpZldpbmRvdyA9IC8qIEBfX1BVUkVfXyAqLyBqc3goCiAgICAgICJ3aW5kb3ciLAogICAgICB7CiAgICAgICAgbmFtZTogYG5vdGlmaWNhdGlvbi0ke2lkfWAsCiAgICAgICAgY2xhc3M6ICJOb3RpZmljYXRpb24iLAogICAgICAgIGdka21vbml0b3IsCiAgICAgICAgYW5jaG9yOiBUT1AgfCBSSUdIVCwKICAgICAgICBleGNsdXNpdml0eTogQXN0YWwuRXhjbHVzaXZpdHkuSUdOT1JFLAogICAgICAgIGFwcGxpY2F0aW9uOiBhcHBfZGVmYXVsdCwKICAgICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovIGpzeHMoImJveCIsIHsgb3JpZW50YXRpb246IEd0azIuT3JpZW50YXRpb24uVkVSVElDQUwsIGNoaWxkcmVuOiBbCiAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4cygiYm94IiwgeyBvcmllbnRhdGlvbjogR3RrMi5PcmllbnRhdGlvbi5IT1JJWk9OVEFMLCBjaGlsZHJlbjogWwogICAgICAgICAgICBhcHBJY29uICYmIC8qIEBfX1BVUkVfXyAqLyBqc3goCiAgICAgICAgICAgICAgImltYWdlIiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBpY29uTmFtZTogYXBwSWNvbgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgKSwKICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeCgibGFiZWwiLCB7IGxhYmVsOiBuLmFwcE5hbWUgfSkKICAgICAgICAgIF0gfSksCiAgICAgICAgICAvKiBAX19QVVJFX18gKi8ganN4cygiYm94IiwgeyBvcmllbnRhdGlvbjogR3RrMi5PcmllbnRhdGlvbi5IT1JJWk9OVEFMLCBjaGlsZHJlbjogWwogICAgICAgICAgICBpbWFnZVBhdGggJiYgLyogQF9fUFVSRV9fICovIGpzeCgKICAgICAgICAgICAgICAiaW1hZ2UiLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGZpbGU6IGltYWdlUGF0aAogICAgICAgICAgICAgIH0KICAgICAgICAgICAgKSwKICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeHMoImJveCIsIHsgb3JpZW50YXRpb246IEd0azIuT3JpZW50YXRpb24uVkVSVElDQUwsIGNoaWxkcmVuOiBbCiAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeCgibGFiZWwiLCB7IGxhYmVsOiBuLnN1bW1hcnksIGNsYXNzOiAic3VtbWFyeSIsIGhhbGlnbjogR3RrMi5BbGlnbi5FTkQgfSksCiAgICAgICAgICAgICAgLyogQF9fUFVSRV9fICovIGpzeCgibGFiZWwiLCB7IGxhYmVsOiBuLmJvZHksIGNsYXNzOiAiYm9keSIsIGhhbGlnbjogR3RrMi5BbGlnbi5FTkQgfSkKICAgICAgICAgICAgXSB9KQogICAgICAgICAgXSB9KQogICAgICAgIF0gfSkKICAgICAgfQogICAgKTsKICAgIG5vdGlmV2luZG93LnNob3coKTsKICAgIGFjdGl2ZU5vdGlmaWNhdGlvbnMuc2V0KGlkLCBub3RpZldpbmRvdyk7CiAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgbm90aWZXaW5kb3cuZGVzdHJveSgpOwogICAgICBhY3RpdmVOb3RpZmljYXRpb25zLmRlbGV0ZShpZCk7CiAgICB9LCA1ZTMpOwogIH0pOwogIG5vdGlmZC5jb25uZWN0KCJyZXNvbHZlZCIsIChfLCBpZCkgPT4gewogICAgY29uc3Qgbm90aWZXaW5kb3cgPSBhY3RpdmVOb3RpZmljYXRpb25zLmdldChpZCk7CiAgICBpZiAobm90aWZXaW5kb3cpIHsKICAgICAgbm90aWZXaW5kb3cuZGVzdHJveSgpOwogICAgICBhY3RpdmVOb3RpZmljYXRpb25zLmRlbGV0ZShpZCk7CiAgICB9CiAgfSk7CiAgcmV0dXJuIG51bGw7Cn0KCi8vIGFwcC50cwphcHBfZGVmYXVsdC5zdGFydCh7CiAgY3NzOiBzdHlsZV9kZWZhdWx0LAogIG1haW4oKSB7CiAgICBjb25zdCBtb25pdG9ycyA9IGFwcF9kZWZhdWx0LmdldF9tb25pdG9ycygpOwogICAgbW9uaXRvcnMubWFwKChtb25pdG9yKSA9PiB7CiAgICAgIEJhcihtb25pdG9yKTsKICAgIH0pOwogICAgTm90aWZkV2lkZ2V0KG1vbml0b3JzWzBdKTsKICB9Cn0pOwovLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV3b2dJQ0oyWlhKemFXOXVJam9nTXl3S0lDQWljMjkxY21ObGN5STZJRnNpTGk0dkxpNHZMaTR2TGk0dmRYTnlMM05vWVhKbEwyRm5jeTlxY3k5c2FXSXZiM1psY25KcFpHVnpMblJ6SWl3Z0lpNHVMeTR1THk0dUx5NHVMM1Z6Y2k5emFHRnlaUzloWjNNdmFuTXZibTlrWlY5dGIyUjFiR1Z6TDJkdWFXMHZaR2x6ZEM5bmIySnFaV04wTG5Seklpd2dJaTR1THk0dUx5NHVMeTR1TDNWemNpOXphR0Z5WlM5aFozTXZhbk12Ym05a1pWOXRiMlIxYkdWekwyZHVhVzB2WkdsemRDOTFkR2xzTG5Seklpd2dJaTR1THk0dUx5NHVMeTR1TDNWemNpOXphR0Z5WlM5aFozTXZhbk12YkdsaUwyZDBhelF2WVhCd0xuUnpJaXdnSWk0dUx5NHVMeTR1THk0dUwzVnpjaTl6YUdGeVpTOWhaM012YW5NdmJtOWtaVjl0YjJSMWJHVnpMMmR1YVcwdlpHbHpkQzlrWW5WekxuUnpJaXdnSWk0dUx5NHVMeTR1THk0dUwzVnpjaTl6YUdGeVpTOWhaM012YW5NdmJHbGlMMkZ3Y0M5a1luVnpMblJ6SWl3Z0lpNHVMeTR1THk0dUx5NHVMM1Z6Y2k5emFHRnlaUzloWjNNdmFuTXZibTlrWlY5dGIyUjFiR1Z6TDJkdWFXMHZaR2x6ZEM5cWMzZ3Zhbk40TG5Seklpd2dJaTR1THk0dUx5NHVMeTR1TDNWemNpOXphR0Z5WlM5aFozTXZhbk12Ym05a1pWOXRiMlIxYkdWekwyZHVhVzB2WkdsemRDOXFjM2d2Um5KaFoyMWxiblF1ZEhNaUxDQWlMaTR2TGk0dkxpNHZMaTR2ZFhOeUwzTm9ZWEpsTDJGbmN5OXFjeTl1YjJSbFgyMXZaSFZzWlhNdloyNXBiUzlrYVhOMEwycHplQzl6ZEdGMFpTNTBjeUlzSUNJdUxpOHVMaTh1TGk4dUxpOTFjM0l2YzJoaGNtVXZZV2R6TDJwekwyNXZaR1ZmYlc5a2RXeGxjeTluYm1sdEwyUnBjM1F2YW5ONEwyVnVkaTUwY3lJc0lDSXVMaTh1TGk4dUxpOHVMaTkxYzNJdmMyaGhjbVV2WVdkekwycHpMMjV2WkdWZmJXOWtkV3hsY3k5bmJtbHRMMlJwYzNRdmFuTjRMM05qYjNCbExuUnpJaXdnSWk0dUx5NHVMeTR1THk0dUwzVnpjaTl6YUdGeVpTOWhaM012YW5NdmJtOWtaVjl0YjJSMWJHVnpMMmR1YVcwdlpHbHpkQzlxYzNndlZHaHBjeTUwY3lJc0lDSnpZWE56T2k5b2IyMWxMMlI1YkdGdUwxQnliMnBsWTNSekwyaDVjSEowWVhOclltRnlWMmx1Wkc5M2N5OXpkSGxzWlM1elkzTnpJaXdnSWk0dUx5NHVMeTR1THk0dUwzVnpjaTl6YUdGeVpTOWhaM012YW5NdmJHbGlMMmQwYXpRdmFXNWtaWGd1ZEhNaUxDQWlMaTR2TGk0dkxpNHZMaTR2ZFhOeUwzTm9ZWEpsTDJGbmN5OXFjeTlzYVdJdmNISnZZMlZ6Y3k1MGN5SXNJQ0l1TGk4dUxpOHVMaTh1TGk5MWMzSXZjMmhoY21VdllXZHpMMnB6TDJ4cFlpOTBhVzFsTG5Seklpd2dJbmRwWkdkbGRDOUNZWEl1ZEhONElpd2dJbmRwWkdkbGRDOVRlWE4wWlcxVWNtRjVMMU41YzFSeVlYa3VkSE40SWl3Z0lpNHVMeTR1THk0dUx5NHVMM1Z6Y2k5emFHRnlaUzloWjNNdmFuTXZiR2xpTDJkMGF6UXZhbk40TFhKMWJuUnBiV1V1ZEhNaUxDQWlMaTR2TGk0dkxpNHZMaTR2ZFhOeUwzTm9ZWEpsTDJGbmN5OXFjeTl1YjJSbFgyMXZaSFZzWlhNdloyNXBiUzlrYVhOMEwyZDBhelF2YW5ONExYSjFiblJwYldVdWRITWlMQ0FpZDJsa1oyVjBMMU41YzNSbGJWUnlZWGt2VTNselZISmhlVUoxZEhSdmJpNTBjM2dpTENBaWQybGtaMlYwTDFWMGFXeHBkR2xsY3k5MmIyeDFiV1ZwYm1ScFkyRjBiM0l1ZEhONElpd2dJbmRwWkdkbGRDOUlhV1JsVjJsdVpHOTNjMEoxZEhSdmJpNTBjM2dpTENBaWQybGtaMlYwTDFWMGFXeHBkR2xsY3k5dVpYUjNiM0pyYVc1a2FXTmhkRzl5TG5SemVDSXNJQ0ozYVdSblpYUXZWWFJwYkdsMGFXVnpMM1YwYVd4cGRHbGxjM1J5WVhrdWRITjRJaXdnSW5kcFpHZGxkQzlPYjNScFptbGpZWFJwYjI0dWRITjRJaXdnSW1Gd2NDNTBjeUpkTEFvZ0lDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNklGc2lMeW9xWEc0Z0tpQlhiM0pyWVhKdmRXNWtJR1p2Y2lCY0lrTmhiaWQwSUdOdmJuWmxjblFnYm05dUxXNTFiR3dnY0c5cGJuUmxjaUIwYnlCS1V5QjJZV3gxWlNCY0lseHVJQ292WEc1Y2JtVjRjRzl5ZENCN2ZWeHVYRzVtZFc1amRHbHZiaUJ6Ym1GclpXbG1lU2h6ZEhJNklITjBjbWx1WnlrZ2UxeHVJQ0FnSUhKbGRIVnliaUJ6ZEhKY2JpQWdJQ0FnSUNBZ0xuSmxjR3hoWTJVb0x5aGJZUzE2WFNrb1cwRXRXbDBwTDJjc0lGd2lKREZmSkRKY0lpbGNiaUFnSUNBZ0lDQWdMbkpsY0d4aFkyVkJiR3dvWENJdFhDSXNJRndpWDF3aUtWeHVJQ0FnSUNBZ0lDQXVkRzlNYjNkbGNrTmhjMlVvS1Z4dWZWeHVYRzVoYzNsdVl5Qm1kVzVqZEdsdmJpQnpkWEJ3Y21WemN6eFVQaWh0YjJRNklGQnliMjFwYzJVOGV5QmtaV1poZFd4ME9pQlVJSDArTENCd1lYUmphRG9nS0cwNklGUXBJRDArSUhadmFXUXBJSHRjYmlBZ0lDQnlaWFIxY200Z2JXOWtMblJvWlc0b0tHMHBJRDArSUhCaGRHTm9LRzB1WkdWbVlYVnNkQ2twTG1OaGRHTm9LQ2dwSUQwK0lIWnZhV1FnTUNsY2JuMWNibHh1Wm5WdVkzUnBiMjRnY0dGMFkyZzhVQ0JsZUhSbGJtUnpJRzlpYW1WamRENG9jSEp2ZEc4NklGQXNJSEJ5YjNBNklFVjRkSEpoWTNROGEyVjViMllnVUN3Z2MzUnlhVzVuUGlrZ2UxeHVJQ0FnSUU5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGVTaHdjbTkwYnl3Z2NISnZjQ3dnZTF4dUlDQWdJQ0FnSUNCblpYUW9LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjMXRnWjJWMFh5UjdjMjVoYTJWcFpua29jSEp2Y0NsOVlGMG9LVnh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJSDBwWEc1OVhHNWNibUYzWVdsMElITjFjSEJ5WlhOektHbHRjRzl5ZENoY0ltZHBPaTh2UVhOMFlXeEJjSEJ6WENJcExDQW9leUJCY0hCekxDQkJjSEJzYVdOaGRHbHZiaUI5S1NBOVBpQjdYRzRnSUNBZ2NHRjBZMmdvUVhCd2N5NXdjbTkwYjNSNWNHVXNJRndpYkdsemRGd2lLVnh1SUNBZ0lIQmhkR05vS0VGd2NHeHBZMkYwYVc5dUxuQnliM1J2ZEhsd1pTd2dYQ0pyWlhsM2IzSmtjMXdpS1Z4dUlDQWdJSEJoZEdOb0tFRndjR3hwWTJGMGFXOXVMbkJ5YjNSdmRIbHdaU3dnWENKallYUmxaMjl5YVdWelhDSXBYRzU5S1Z4dVhHNWhkMkZwZENCemRYQndjbVZ6Y3locGJYQnZjblFvWENKbmFUb3ZMMEZ6ZEdGc1FtRjBkR1Z5ZVZ3aUtTd2dLSHNnVlZCdmQyVnlJSDBwSUQwK0lIdGNiaUFnSUNCd1lYUmphQ2hWVUc5M1pYSXVjSEp2ZEc5MGVYQmxMQ0JjSW1SbGRtbGpaWE5jSWlsY2JuMHBYRzVjYm1GM1lXbDBJSE4xY0hCeVpYTnpLR2x0Y0c5eWRDaGNJbWRwT2k4dlFYTjBZV3hDYkhWbGRHOXZkR2hjSWlrc0lDaDdJRUZrWVhCMFpYSXNJRUpzZFdWMGIyOTBhQ3dnUkdWMmFXTmxJSDBwSUQwK0lIdGNiaUFnSUNCd1lYUmphQ2hCWkdGd2RHVnlMbkJ5YjNSdmRIbHdaU3dnWENKMWRXbGtjMXdpS1Z4dUlDQWdJSEJoZEdOb0tFSnNkV1YwYjI5MGFDNXdjbTkwYjNSNWNHVXNJRndpWVdSaGNIUmxjbk5jSWlsY2JpQWdJQ0J3WVhSamFDaENiSFZsZEc5dmRHZ3VjSEp2ZEc5MGVYQmxMQ0JjSW1SbGRtbGpaWE5jSWlsY2JpQWdJQ0J3WVhSamFDaEVaWFpwWTJVdWNISnZkRzkwZVhCbExDQmNJblYxYVdSelhDSXBYRzU5S1Z4dVhHNWhkMkZwZENCemRYQndjbVZ6Y3locGJYQnZjblFvWENKbmFUb3ZMMEZ6ZEdGc1NIbHdjbXhoYm1SY0lpa3NJQ2g3SUVoNWNISnNZVzVrTENCTmIyNXBkRzl5TENCWGIzSnJjM0JoWTJVZ2ZTa2dQVDRnZTF4dUlDQWdJSEJoZEdOb0tFaDVjSEpzWVc1a0xuQnliM1J2ZEhsd1pTd2dYQ0ppYVc1a2Mxd2lLVnh1SUNBZ0lIQmhkR05vS0VoNWNISnNZVzVrTG5CeWIzUnZkSGx3WlN3Z1hDSnRiMjVwZEc5eWMxd2lLVnh1SUNBZ0lIQmhkR05vS0VoNWNISnNZVzVrTG5CeWIzUnZkSGx3WlN3Z1hDSjNiM0pyYzNCaFkyVnpYQ0lwWEc0Z0lDQWdjR0YwWTJnb1NIbHdjbXhoYm1RdWNISnZkRzkwZVhCbExDQmNJbU5zYVdWdWRITmNJaWxjYmlBZ0lDQndZWFJqYUNoTmIyNXBkRzl5TG5CeWIzUnZkSGx3WlN3Z1hDSmhkbUZwYkdGaWJHVk5iMlJsYzF3aUtWeHVJQ0FnSUhCaGRHTm9LRTF2Ym1sMGIzSXVjSEp2ZEc5MGVYQmxMQ0JjSW1GMllXbHNZV0pzWlY5dGIyUmxjMXdpS1Z4dUlDQWdJSEJoZEdOb0tGZHZjbXR6Y0dGalpTNXdjbTkwYjNSNWNHVXNJRndpWTJ4cFpXNTBjMXdpS1Z4dWZTbGNibHh1WVhkaGFYUWdjM1Z3Y0hKbGMzTW9hVzF3YjNKMEtGd2laMms2THk5QmMzUmhiRTF3Y21selhDSXBMQ0FvZXlCTmNISnBjeXdnVUd4aGVXVnlJSDBwSUQwK0lIdGNiaUFnSUNCd1lYUmphQ2hOY0hKcGN5NXdjbTkwYjNSNWNHVXNJRndpY0d4aGVXVnljMXdpS1Z4dUlDQWdJSEJoZEdOb0tGQnNZWGxsY2k1d2NtOTBiM1I1Y0dVc0lGd2ljM1Z3Y0c5eWRHVmtYM1Z5YVY5elkyaGxiV1Z6WENJcFhHNGdJQ0FnY0dGMFkyZ29VR3hoZVdWeUxuQnliM1J2ZEhsd1pTd2dYQ0p6ZFhCd2IzSjBaV1JWY21sVFkyaGxiV1Z6WENJcFhHNGdJQ0FnY0dGMFkyZ29VR3hoZVdWeUxuQnliM1J2ZEhsd1pTd2dYQ0p6ZFhCd2IzSjBaV1JmYldsdFpWOTBlWEJsYzF3aUtWeHVJQ0FnSUhCaGRHTm9LRkJzWVhsbGNpNXdjbTkwYjNSNWNHVXNJRndpYzNWd2NHOXlkR1ZrVFdsdFpWUjVjR1Z6WENJcFhHNGdJQ0FnY0dGMFkyZ29VR3hoZVdWeUxuQnliM1J2ZEhsd1pTd2dYQ0pqYjIxdFpXNTBjMXdpS1Z4dWZTbGNibHh1WVhkaGFYUWdjM1Z3Y0hKbGMzTW9hVzF3YjNKMEtGd2laMms2THk5QmMzUmhiRTVsZEhkdmNtdGNJaWtzSUNoN0lGZHBabWtnZlNrZ1BUNGdlMXh1SUNBZ0lIQmhkR05vS0ZkcFpta3VjSEp2ZEc5MGVYQmxMQ0JjSW1GalkyVnpjMTl3YjJsdWRITmNJaWxjYmlBZ0lDQndZWFJqYUNoWGFXWnBMbkJ5YjNSdmRIbHdaU3dnWENKaFkyTmxjM05RYjJsdWRITmNJaWxjYm4wcFhHNWNibUYzWVdsMElITjFjSEJ5WlhOektHbHRjRzl5ZENoY0ltZHBPaTh2UVhOMFlXeE9iM1JwWm1SY0lpa3NJQ2g3SUU1dmRHbG1aQ3dnVG05MGFXWnBZMkYwYVc5dUlIMHBJRDArSUh0Y2JpQWdJQ0J3WVhSamFDaE9iM1JwWm1RdWNISnZkRzkwZVhCbExDQmNJbTV2ZEdsbWFXTmhkR2x2Ym5OY0lpbGNiaUFnSUNCd1lYUmphQ2hPYjNScFptbGpZWFJwYjI0dWNISnZkRzkwZVhCbExDQmNJbUZqZEdsdmJuTmNJaWxjYm4wcFhHNWNibUYzWVdsMElITjFjSEJ5WlhOektHbHRjRzl5ZENoY0ltZHBPaTh2UVhOMFlXeFFiM2RsY2xCeWIyWnBiR1Z6WENJcExDQW9leUJRYjNkbGNsQnliMlpwYkdWeklIMHBJRDArSUh0Y2JpQWdJQ0J3WVhSamFDaFFiM2RsY2xCeWIyWnBiR1Z6TG5CeWIzUnZkSGx3WlN3Z1hDSmhZM1JwYjI1elhDSXBYRzU5S1Z4dVhHNWhkMkZwZENCemRYQndjbVZ6Y3locGJYQnZjblFvWENKbmFUb3ZMMEZ6ZEdGc1YzQmNJaWtzSUNoN0lGZHdMQ0JCZFdScGJ5d2dWbWxrWlc4Z2ZTa2dQVDRnZTF4dUlDQWdJSEJoZEdOb0tGZHdMbkJ5YjNSdmRIbHdaU3dnWENKa1pYWnBZMlZ6WENJcFhHNGdJQ0FnY0dGMFkyZ29RWFZrYVc4dWNISnZkRzkwZVhCbExDQmNJbk4wY21WaGJYTmNJaWxjYmlBZ0lDQndZWFJqYUNoQmRXUnBieTV3Y205MGIzUjVjR1VzSUZ3aWNtVmpiM0prWlhKelhDSXBYRzRnSUNBZ2NHRjBZMmdvUVhWa2FXOHVjSEp2ZEc5MGVYQmxMQ0JjSW0xcFkzSnZjR2h2Ym1WelhDSXBYRzRnSUNBZ2NHRjBZMmdvUVhWa2FXOHVjSEp2ZEc5MGVYQmxMQ0JjSW5Od1pXRnJaWEp6WENJcFhHNGdJQ0FnY0dGMFkyZ29RWFZrYVc4dWNISnZkRzkwZVhCbExDQmNJbVJsZG1salpYTmNJaWxjYmlBZ0lDQndZWFJqYUNoV2FXUmxieTV3Y205MGIzUjVjR1VzSUZ3aWMzUnlaV0Z0YzF3aUtWeHVJQ0FnSUhCaGRHTm9LRlpwWkdWdkxuQnliM1J2ZEhsd1pTd2dYQ0p5WldOdmNtUmxjbk5jSWlsY2JpQWdJQ0J3WVhSamFDaFdhV1JsYnk1d2NtOTBiM1I1Y0dVc0lGd2ljMmx1YTNOY0lpbGNiaUFnSUNCd1lYUmphQ2hXYVdSbGJ5NXdjbTkwYjNSNWNHVXNJRndpYzI5MWNtTmxjMXdpS1Z4dUlDQWdJSEJoZEdOb0tGWnBaR1Z2TG5CeWIzUnZkSGx3WlN3Z1hDSmtaWFpwWTJWelhDSXBYRzU5S1Z4dVhHNWhkMkZwZENCemRYQndjbVZ6Y3locGJYQnZjblFvWENKbmFUb3ZMMEZ6ZEdGc1ZISmhlVndpS1N3Z0tIc2dWSEpoZVNCOUtTQTlQaUI3WEc0Z0lDQWdjR0YwWTJnb1ZISmhlUzV3Y205MGIzUjVjR1VzSUZ3aWFYUmxiWE5jSWlsY2JuMHBYRzRpTENBaUx5b3FYRzRnS2lCSmJpQjBhR1VnWm5WMGRYSmxJRWtnZDI5MWJHUWdiR2xyWlNCMGJ5QnRZV3RsSUhSNWNHVWdaR1ZqYkdGeVlYUnBiMjRnYVc0Z1pHVmpiM0poZEc5eWN5QnZjSFJwYjI1aGJGeHVJQ29nWVc1a0lHbHVabVZ5SUdsMElHWnliMjBnZEhsd1pYTmpjbWx3ZENCMGVYQmxjeUJoZENCMGNtRnVjM0JwYkdVZ2RHbHRaUzRnUTNWeWNtVnVkR3g1TENCM1pTQmpiM1ZzWkZ4dUlDb2daV2wwYUdWeUlIVnpaU0J6ZEdGblpTQXlJR1JsWTI5eVlYUnZjbk1nZDJsMGFDQjBhR1VnWENKbGJXbDBSR1ZqYjNKaGRHOXlUV1YwWVdSaGRHRmNJaUJoYm1SY2JpQXFJRndpWlhod1pYSnBiV1Z1ZEdGc1JHVmpiM0poZEc5eWMxd2lJSFJ6WTI5dVptbG5JRzl3ZEdsdmJuTXVJRWh2ZDJWMlpYSXNJRzFsZEdGa1lYUmhJR2x6SUc1dmRDQnpkWEJ3YjNKMFpXUmNiaUFxSUdKNUlHVnpZblZwYkdRZ2QyaHBZMmdnYVhNZ2QyaGhkQ0JKSjIwZ2JXOXpkR3g1SUhSaGNtZGxkR2x1WnlCaGN5QjBhR1VnWW5WdVpHeGxjaUJtYjNJZ2NHVnlabTl5YldGdVkyVmNiaUFxSUhKbFlYTnZibk11SUdoMGRIQnpPaTh2WjJsMGFIVmlMbU52YlM5bGRtRnVkeTlsYzJKMWFXeGtMMmx6YzNWbGN5OHlOVGRjYmlBcUlFaHZkMlYyWlhJc0lFa2dZbVZzYVdWMlpTQjBhR0YwSUhkbElITm9iM1ZzWkNCdWIzUWdkWE5sSUhOMFlXZGxJRElnWVc1NWJXOXlaU3hjYmlBcUlITnZJRWtuYlNCM1lXbDBhVzVuSUdadmNpQmhJR0psZEhSbGNpQmhiSFJsY201aGRHbDJaUzVjYmlBcUwxeHVYRzVwYlhCdmNuUWdSMDlpYW1WamRDQm1jbTl0SUZ3aVoyazZMeTlIVDJKcVpXTjBYQ0pjYm1sdGNHOXlkQ0JIVEdsaUlHWnliMjBnWENKbmFUb3ZMMGRNYVdKY0lseHVhVzF3YjNKMElIc2daR1ZtYVc1bFVISnZjR1Z5ZEhsSFpYUjBaWElzSUd0bFltRmlhV1o1SUgwZ1puSnZiU0JjSWk0dmRYUnBiQzVxYzF3aVhHNWNibU52Ym5OMElIQnlhWFlnUFNCVGVXMWliMndvWENKbmIySnFaV04wSUhCeWFYWmhkR1ZjSWlsY2JtTnZibk4wSUhzZ1pHVm1hVzVsVUhKdmNHVnlkSGtzSUdaeWIyMUZiblJ5YVdWekxDQmxiblJ5YVdWeklIMGdQU0JQWW1wbFkzUmNibU52Ym5OMElIc2dUMkpxWldOME9pQkhUMkpxTENCeVpXZHBjM1JsY2tOc1lYTnpJSDBnUFNCSFQySnFaV04wWEc1Y2JtVjRjRzl5ZENCN0lFZFBZbXBsWTNRZ1lYTWdaR1ZtWVhWc2RDQjlYRzVsZUhCdmNuUWdleUJIVDJKcUlHRnpJRTlpYW1WamRDQjlYRzVjYm1WNGNHOXlkQ0JqYjI1emRDQlRhV2R1WVd4R2JHRm5jeUE5SUVkUFltcGxZM1F1VTJsbmJtRnNSbXhoWjNOY2JtVjRjRzl5ZENCMGVYQmxJRk5wWjI1aGJFWnNZV2R6SUQwZ1IwOWlhbVZqZEM1VGFXZHVZV3hHYkdGbmMxeHVYRzVsZUhCdmNuUWdZMjl1YzNRZ1FXTmpkVzExYkdGMGIzSlVlWEJsSUQwZ1IwOWlhbVZqZEM1QlkyTjFiWFZzWVhSdmNsUjVjR1ZjYm1WNGNHOXlkQ0IwZVhCbElFRmpZM1Z0ZFd4aGRHOXlWSGx3WlNBOUlFZFBZbXBsWTNRdVFXTmpkVzExYkdGMGIzSlVlWEJsWEc1Y2JtVjRjRzl5ZENCMGVYQmxJRkJoY21GdFUzQmxZenhVSUQwZ2RXNXJibTkzYmo0Z1BTQkhUMkpxWldOMExsQmhjbUZ0VTNCbFl6eFVQbHh1Wlhod2IzSjBJR052Ym5OMElGQmhjbUZ0VTNCbFl5QTlJRWRQWW1wbFkzUXVVR0Z5WVcxVGNHVmpYRzVjYm1WNGNHOXlkQ0IwZVhCbElGQmhjbUZ0Um14aFozTWdQU0JIVDJKcVpXTjBMbEJoY21GdFJteGhaM05jYm1WNGNHOXlkQ0JqYjI1emRDQlFZWEpoYlVac1lXZHpJRDBnUjA5aWFtVmpkQzVRWVhKaGJVWnNZV2R6WEc1Y2JtVjRjRzl5ZENCMGVYQmxJRWRVZVhCbFBGUWdQU0IxYm10dWIzZHVQaUE5SUVkUFltcGxZM1F1UjFSNWNHVThWRDVjYmx4dWRIbHdaU0JIVDJKcUlEMGdSMDlpYW1WamRDNVBZbXBsWTNSY2JseHVhVzUwWlhKbVlXTmxJRWRQWW1wUWNtbDJZWFJsSUdWNGRHVnVaSE1nUjA5aWFpQjdYRzRnSUNBZ1czQnlhWFpkT2lCU1pXTnZjbVE4YzNSeWFXNW5MQ0JoYm5rK1hHNTlYRzVjYm5SNWNHVWdUV1YwWVNBOUlIdGNiaUFnSUNCd2NtOXdaWEowYVdWelB6b2dlMXh1SUNBZ0lDQWdJQ0JiWm1sbGJHUk9ZVzFsT2lCemRISnBibWRkT2lCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JtYkdGbmN6b2dVR0Z5WVcxR2JHRm5jMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nVUhKdmNHVnlkSGxVZVhCbFJHVmpiR0Z5WVhScGIyNDhkVzVyYm05M2JqNWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnSUNCemFXZHVZV3h6UHpvZ2UxeHVJQ0FnSUNBZ0lDQmJhMlY1T2lCemRISnBibWRkT2lCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JrWldaaGRXeDBQem9nWW05dmJHVmhibHh1SUNBZ0lDQWdJQ0FnSUNBZ1pteGhaM00vT2lCVGFXZHVZV3hHYkdGbmMxeHVJQ0FnSUNBZ0lDQWdJQ0FnWVdOamRXMTFiR0YwYjNJL09pQkJZMk4xYlhWc1lYUnZjbFI1Y0dWY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJsOTBlWEJsUHpvZ1IxUjVjR1ZjYmlBZ0lDQWdJQ0FnSUNBZ0lIQmhjbUZ0WDNSNWNHVnpQem9nUVhKeVlYazhSMVI1Y0dVK1hHNGdJQ0FnSUNBZ0lDQWdJQ0J0WlhSb2IyUTZJQ2d1TGk1aGNtYzZJR0Z1ZVZ0ZEtTQTlQaUIxYm10dWIzZHVYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzU5WEc1Y2JuUjVjR1VnUTI5dWRHVjRkQ0E5SUhzZ2NISnBkbUYwWlRvZ1ptRnNjMlU3SUhOMFlYUnBZem9nWm1Gc2MyVTdJRzVoYldVNklITjBjbWx1WnlCOVhHNTBlWEJsSUZCeWIzQmxjblI1UTI5dWRHVjRkRHhVUGlBOUlFTnNZWE56Um1sbGJHUkVaV052Y21GMGIzSkRiMjUwWlhoMFBFZFBZbW9zSUZRK0lDWWdRMjl1ZEdWNGRGeHVkSGx3WlNCSFpYUjBaWEpEYjI1MFpYaDBQRlErSUQwZ1EyeGhjM05IWlhSMFpYSkVaV052Y21GMGIzSkRiMjUwWlhoMFBFZFBZbW9zSUZRK0lDWWdRMjl1ZEdWNGRGeHVkSGx3WlNCVFpYUjBaWEpEYjI1MFpYaDBQRlErSUQwZ1EyeGhjM05UWlhSMFpYSkVaV052Y21GMGIzSkRiMjUwWlhoMFBFZFBZbW9zSUZRK0lDWWdRMjl1ZEdWNGRGeHVkSGx3WlNCVGFXZHVZV3hEYjI1MFpYaDBQRlFnWlhoMFpXNWtjeUFvS1NBOVBpQmhibmsrSUQwZ1EyeGhjM05OWlhSb2IyUkVaV052Y21GMGIzSkRiMjUwWlhoMFBFZFBZbW9zSUZRK0lDWWdRMjl1ZEdWNGRGeHVYRzUwZVhCbElGTnBaMjVoYkU5d2RHbHZibk1nUFNCN1hHNGdJQ0FnWkdWbVlYVnNkRDg2SUdKdmIyeGxZVzVjYmlBZ0lDQm1iR0ZuY3o4NklGTnBaMjVoYkVac1lXZHpYRzRnSUNBZ1lXTmpkVzExYkdGMGIzSS9PaUJCWTJOMWJYVnNZWFJ2Y2xSNWNHVmNibjFjYmx4dWRIbHdaU0JRY205d1pYSjBlVlI1Y0dWRVpXTnNZWEpoZEdsdmJqeFVQaUE5WEc0Z0lDQWdmQ0FvS0c1aGJXVTZJSE4wY21sdVp5d2dabXhoWjNNNklGQmhjbUZ0Um14aFozTXBJRDArSUZCaGNtRnRVM0JsWXp4VVBpbGNiaUFnSUNCOElGQmhjbUZ0VTNCbFl6eFVQbHh1SUNBZ0lId2dleUFrWjNSNWNHVTZJRWRVZVhCbFBGUStJSDFjYmx4dVpuVnVZM1JwYjI0Z1lYTnpaWEowUm1sbGJHUW9YRzRnSUNBZ1kzUjRPaUJEYkdGemMwWnBaV3hrUkdWamIzSmhkRzl5UTI5dWRHVjRkQ0I4SUVOc1lYTnpSMlYwZEdWeVJHVmpiM0poZEc5eVEyOXVkR1Y0ZENCOElFTnNZWE56VTJWMGRHVnlSR1ZqYjNKaGRHOXlRMjl1ZEdWNGRDeGNiaWs2SUhOMGNtbHVaeUI3WEc0Z0lDQWdhV1lnS0dOMGVDNXdjbWwyWVhSbEtTQjBhSEp2ZHlCRmNuSnZjaWhjSW5CeWFYWmhkR1VnWm1sbGJHUnpJR0Z5WlNCdWIzUWdjM1Z3Y0c5eWRHVmtYQ0lwWEc0Z0lDQWdhV1lnS0dOMGVDNXpkR0YwYVdNcElIUm9jbTkzSUVWeWNtOXlLRndpYzNSaGRHbGpJR1pwWld4a2N5QmhjbVVnYm05MElITjFjSEJ2Y25SbFpGd2lLVnh1WEc0Z0lDQWdhV1lnS0hSNWNHVnZaaUJqZEhndWJtRnRaU0FoUFQwZ1hDSnpkSEpwYm1kY0lpa2dlMXh1SUNBZ0lDQWdJQ0IwYUhKdmR5QkZjbkp2Y2loY0ltOXViSGtnYzNSeWFXNW5jeUJqWVc0Z1ltVWdaMjlpYW1WamRDQndjbTl3WlhKMGVTQnJaWGx6WENJcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnY21WMGRYSnVJR04wZUM1dVlXMWxYRzU5WEc1Y2JpOHFLbHh1SUNvZ1JHVm1hVzVsY3lCaElISmxZV1JoWW14bElDcGhibVFxSUhkeWFYUmxZV0pzWlNCd2NtOXdaWEowZVNCMGJ5QmlaU0J5WldkcGMzUmxjbVZrSUhkb1pXNGdkWE5wYm1jZ2RHaGxJSHRBYkdsdWF5QnlaV2RwYzNSbGNuMGdaR1ZqYjNKaGRHOXlMbHh1SUNwY2JpQXFJRVY0WVcxd2JHVTZYRzRnS2lCZ1lHQjBjMXh1SUNvZ1kyeGhjM01nZTF4dUlDb2dJQ0FnSUZ4Y1FIQnliM0JsY25SNUtGTjBjbWx1WnlrZ2JYbFFjbTl3SUQwZ1hDSmNJbHh1SUNvZ2ZWeHVJQ29nWUdCZ1hHNGdLaTljYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJ3Y205d1pYSjBlVHhVUGloMGVYQmxSR1ZqYkdGeVlYUnBiMjQ2SUZCeWIzQmxjblI1Vkhsd1pVUmxZMnhoY21GMGFXOXVQRlErS1NCN1hHNGdJQ0FnY21WMGRYSnVJR1oxYm1OMGFXOXVJQ2hjYmlBZ0lDQWdJQ0FnWHpvZ2RtOXBaQ3hjYmlBZ0lDQWdJQ0FnWTNSNE9pQlFjbTl3WlhKMGVVTnZiblJsZUhROFZENHNYRzRnSUNBZ0lDQWdJRzl3ZEdsdmJuTS9PaUI3SUcxbGRHRlBibXg1T2lCMGNuVmxJSDBzWEc0Z0lDQWdLVG9nS0hSb2FYTTZJRWRQWW1vc0lHbHVhWFE2SUZRcElEMCtJR0Z1ZVNCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUdacFpXeGtUbUZ0WlNBOUlHRnpjMlZ5ZEVacFpXeGtLR04wZUNsY2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYTJWNUlEMGdhMlZpWVdKcFpua29abWxsYkdST1lXMWxLVnh1SUNBZ0lDQWdJQ0JqYjI1emRDQnRaWFJoT2lCUVlYSjBhV0ZzUEUxbGRHRStJRDBnWTNSNExtMWxkR0ZrWVhSaElWeHVYRzRnSUNBZ0lDQWdJRzFsZEdFdWNISnZjR1Z5ZEdsbGN5QS9QejBnZTMxY2JpQWdJQ0FnSUNBZ2JXVjBZUzV3Y205d1pYSjBhV1Z6VzJacFpXeGtUbUZ0WlYwZ1BTQjdJR1pzWVdkek9pQlFZWEpoYlVac1lXZHpMbEpGUVVSWFVrbFVSU3dnZEhsd1pUb2dkSGx3WlVSbFkyeGhjbUYwYVc5dUlIMWNibHh1SUNBZ0lDQWdJQ0JqZEhndVlXUmtTVzVwZEdsaGJHbDZaWElvWm5WdVkzUnBiMjRnS0NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWkdWbWFXNWxVSEp2Y0dWeWRIbEhaWFIwWlhJb2RHaHBjeXdnWm1sbGJHUk9ZVzFsSUdGeklFVjRkSEpoWTNROGEyVjViMllnUjA5aWFpd2djM1J5YVc1blBpbGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRzl3ZEdsdmJuTWdKaVlnYjNCMGFXOXVjeTV0WlhSaFQyNXNlU2tnY21WMGRYSnVYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lHUmxabWx1WlZCeWIzQmxjblI1S0hSb2FYTXNJR1pwWld4a1RtRnRaU3dnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWdWRXMWxjbUZpYkdVNklIUnlkV1VzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dVptbG5kWEpoWW14bE9pQm1ZV3h6WlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelpYUW9kam9nVkNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjMXR3Y21sMlhWdHJaWGxkSUNFOVBTQjJLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdselczQnlhWFpkVzJ0bGVWMGdQU0IyWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtNXZkR2xtZVNoclpYa3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZGxkQ2dwT2lCVUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhOYmNISnBkbDFiYTJWNVhWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJQ0FnSUNCOUlITmhkR2x6Wm1sbGN5QlVhR2x6Vkhsd1pUeEhUMkpxVUhKcGRtRjBaVDRwWEc0Z0lDQWdJQ0FnSUgwcFhHNWNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHWjFibU4wYVc5dUlDaHBibWwwT2lCVUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JrYVdOMElEMGdLQ2gwYUdseklHRnpJRWRQWW1wUWNtbDJZWFJsS1Z0d2NtbDJYU0EvUHowZ2UzMHBYRzRnSUNBZ0lDQWdJQ0FnSUNCa2FXTjBXMnRsZVYwZ1BTQnBibWwwWEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2FXNXBkRnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1ZlZ4dVhHNHZLaXBjYmlBcUlFUmxabWx1WlhNZ1lTQnlaV0ZrTFc5dWJIa2djSEp2Y0dWeWRIa2dkRzhnWW1VZ2NtVm5hWE4wWlhKbFpDQjNhR1Z1SUhWemFXNW5JSFJvWlNCN1FHeHBibXNnY21WbmFYTjBaWEo5SUdSbFkyOXlZWFJ2Y2k1Y2JpQXFJRWxtSUhSb1pTQm5aWFIwWlhJZ2FHRnpJR0VnYzJWMGRHVnlJSEJoYVhJZ1pHVmpiM0poZEdWa0lIZHBkR2dnZEdobElIdEFiR2x1YXlCelpYUjBaWEo5SUdSbFkyOXlZWFJ2Y2lCMGFHVWdjSEp2Y0dWeWRIa2dkMmxzYkNCaVpTQnlaV0ZrWVdKc1pTQXFZVzVrS2lCM2NtbDBaV0ZpYkdVdVhHNGdLbHh1SUNvZ1JYaGhiWEJzWlRwY2JpQXFJR0JnWUhSelhHNGdLaUJqYkdGemN5QjdYRzRnS2lBZ0lDQWdYRnhBYzJWMGRHVnlLRk4wY21sdVp5bGNiaUFxSUNBZ0lDQnpaWFFnYlhsUWNtOXdLSFpoYkhWbE9pQnpkSEpwYm1jcElIdGNiaUFxSUNBZ0lDQWdJQ0FnTHk5Y2JpQXFJQ0FnSUNCOVhHNGdLbHh1SUNvZ0lDQWdJRnhjUUdkbGRIUmxjaWhUZEhKcGJtY3BYRzRnS2lBZ0lDQWdaMlYwSUcxNVVISnZjQ2dwT2lCemRISnBibWNnZTF4dUlDb2dJQ0FnSUNBZ0lDQnlaWFIxY200Z1hDSmNJbHh1SUNvZ0lDQWdJSDFjYmlBcUlIMWNiaUFxSUdCZ1lGeHVJQ292WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnWjJWMGRHVnlQRlErS0hSNWNHVkVaV05zWVhKaGRHbHZiam9nVUhKdmNHVnlkSGxVZVhCbFJHVmpiR0Z5WVhScGIyNDhWRDRwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdablZ1WTNScGIyNGdLR2RsZERvZ0tIUm9hWE02SUVkUFltb3BJRDArSUdGdWVTd2dZM1I0T2lCSFpYUjBaWEpEYjI1MFpYaDBQRlErS1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUdacFpXeGtUbUZ0WlNBOUlHRnpjMlZ5ZEVacFpXeGtLR04wZUNsY2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYldWMFlUb2dVR0Z5ZEdsaGJEeE5aWFJoUGlBOUlHTjBlQzV0WlhSaFpHRjBZU0ZjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdjSEp2Y0hNZ1BTQW9iV1YwWVM1d2NtOXdaWEowYVdWeklEOC9QU0I3ZlNsY2JpQWdJQ0FnSUNBZ2FXWWdLR1pwWld4a1RtRnRaU0JwYmlCd2NtOXdjeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2V5Qm1iR0ZuY3l3Z2RIbHdaU0I5SUQwZ2NISnZjSE5iWm1sbGJHUk9ZVzFsWFZ4dUlDQWdJQ0FnSUNBZ0lDQWdjSEp2Y0hOYlptbGxiR1JPWVcxbFhTQTlJSHNnWm14aFozTTZJR1pzWVdkeklId2dVR0Z5WVcxR2JHRm5jeTVTUlVGRVFVSk1SU3dnZEhsd1pTQjlYRzRnSUNBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCd2NtOXdjMXRtYVdWc1pFNWhiV1ZkSUQwZ2V5Qm1iR0ZuY3pvZ1VHRnlZVzFHYkdGbmN5NVNSVUZFUVVKTVJTd2dkSGx3WlRvZ2RIbHdaVVJsWTJ4aGNtRjBhVzl1SUgxY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1oyVjBYRzRnSUNBZ2ZWeHVmVnh1WEc0dktpcGNiaUFxSUVSbFptbHVaWE1nWVNCM2NtbDBaUzF2Ym14NUlIQnliM0JsY25SNUlIUnZJR0psSUhKbFoybHpkR1Z5WldRZ2QyaGxiaUIxYzJsdVp5QjBhR1VnZTBCc2FXNXJJSEpsWjJsemRHVnlmU0JrWldOdmNtRjBiM0l1WEc0Z0tpQkpaaUIwYUdVZ2MyVjBkR1Z5SUdoaGN5QmhJR2RsZEhSbGNpQndZV2x5SUdSbFkyOXlZWFJsWkNCM2FYUm9JSFJvWlNCN1FHeHBibXNnWjJWMGRHVnlmU0JrWldOdmNtRjBiM0lnZEdobElIQnliM0JsY25SNUlIZHBiR3dnWW1VZ2QzSnBkR1ZoWW14bElDcGhibVFxSUhKbFlXUmhZbXhsTGx4dUlDcGNiaUFxSUVWNFlXMXdiR1U2WEc0Z0tpQmdZR0IwYzF4dUlDb2dZMnhoYzNNZ2UxeHVJQ29nSUNBZ0lGeGNRSE5sZEhSbGNpaFRkSEpwYm1jcFhHNGdLaUFnSUNBZ2MyVjBJRzE1VUhKdmNDaDJZV3gxWlRvZ2MzUnlhVzVuS1NCN1hHNGdLaUFnSUNBZ0lDQWdJQzh2WEc0Z0tpQWdJQ0FnZlZ4dUlDcGNiaUFxSUNBZ0lDQmNYRUJuWlhSMFpYSW9VM1J5YVc1bktWeHVJQ29nSUNBZ0lHZGxkQ0J0ZVZCeWIzQW9LVG9nYzNSeWFXNW5JSHRjYmlBcUlDQWdJQ0FnSUNBZ2NtVjBkWEp1SUZ3aVhDSmNiaUFxSUNBZ0lDQjlYRzRnS2lCOVhHNGdLaUJnWUdCY2JpQXFMMXh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJSE5sZEhSbGNqeFVQaWgwZVhCbFJHVmpiR0Z5WVhScGIyNDZJRkJ5YjNCbGNuUjVWSGx3WlVSbFkyeGhjbUYwYVc5dVBGUStLU0I3WEc0Z0lDQWdjbVYwZFhKdUlHWjFibU4wYVc5dUlDaHpaWFE2SUNoMGFHbHpPaUJIVDJKcUxDQjJZV3gxWlRvZ1lXNTVLU0E5UGlCMmIybGtMQ0JqZEhnNklGTmxkSFJsY2tOdmJuUmxlSFE4VkQ0cElIdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ1ptbGxiR1JPWVcxbElEMGdZWE56WlhKMFJtbGxiR1FvWTNSNEtWeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCdFpYUmhPaUJRWVhKMGFXRnNQRTFsZEdFK0lEMGdZM1I0TG0xbGRHRmtZWFJoSVZ4dUlDQWdJQ0FnSUNCamIyNXpkQ0J3Y205d2N5QTlJQ2h0WlhSaExuQnliM0JsY25ScFpYTWdQejg5SUh0OUtWeHVJQ0FnSUNBZ0lDQnBaaUFvWm1sbGJHUk9ZVzFsSUdsdUlIQnliM0J6S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQjdJR1pzWVdkekxDQjBlWEJsSUgwZ1BTQndjbTl3YzF0bWFXVnNaRTVoYldWZFhHNGdJQ0FnSUNBZ0lDQWdJQ0J3Y205d2MxdG1hV1ZzWkU1aGJXVmRJRDBnZXlCbWJHRm5jem9nWm14aFozTWdmQ0JRWVhKaGJVWnNZV2R6TGxkU1NWUkJRa3hGTENCMGVYQmxJSDFjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIQnliM0J6VzJacFpXeGtUbUZ0WlYwZ1BTQjdJR1pzWVdkek9pQlFZWEpoYlVac1lXZHpMbGRTU1ZSQlFreEZMQ0IwZVhCbE9pQjBlWEJsUkdWamJHRnlZWFJwYjI0Z2ZWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQnpaWFJjYmlBZ0lDQjlYRzU5WEc1Y2JuUjVjR1VnVUdGeVlXMVVlWEJsUEZBK0lEMGdVQ0JsZUhSbGJtUnpJSHNnSkdkMGVYQmxPaUJIVkhsd1pUeHBibVpsY2lCVVBpQjlJRDhnVkNBNklGQWdaWGgwWlc1a2N5QkhWSGx3WlR4cGJtWmxjaUJVUGlBL0lGUWdPaUJ1WlhabGNseHVYRzUwZVhCbElGQmhjbUZ0Vkhsd1pYTThVR0Z5WVcxelBpQTlJSHRjYmlBZ0lDQmJTeUJwYmlCclpYbHZaaUJRWVhKaGJYTmRPaUJRWVhKaGJWUjVjR1U4VUdGeVlXMXpXMHRkUGx4dWZWeHVYRzR2S2lwY2JpQXFJRVJsWm1sdVpYTWdZU0J6YVdkdVlXd2dkRzhnWW1VZ2NtVm5hWE4wWlhKbFpDQjNhR1Z1SUhWemFXNW5JSFJvWlNCN1FHeHBibXNnY21WbmFYTjBaWEo5SUdSbFkyOXlZWFJ2Y2k1Y2JpQXFYRzRnS2lCRmVHRnRjR3hsT2x4dUlDb2dZR0JnZEhOY2JpQXFJR05zWVhOeklIdGNiaUFxSUNBZ0lDQmNYRUJ6YVdkdVlXd29XMU4wY21sdVp5d2dUblZ0WW1WeVhTd2dRbTl2YkdWaGJpd2dlMXh1SUNvZ0lDQWdJQ0FnSUNCaFkyTjFiWFZzWVhSdmNqb2dRV05qZFcxMWJHRjBiM0pVZVhCbExrWkpVbE5VWDFkSlRsTmNiaUFxSUNBZ0lDQjlLVnh1SUNvZ0lDQWdJRzE1VTJsbmJtRnNLSE4wY2pvZ2MzUnlhVzVuTENCdU9pQnVkVzFpWlhJcE9pQmliMjlzWldGdUlIdGNiaUFxSUNBZ0lDQWdJQ0FnTHk4Z1pHVm1ZWFZzZENCb1lXNWtiR1Z5WEc0Z0tpQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCbVlXeHpaVnh1SUNvZ0lDQWdJSDFjYmlBcUlIMWNiaUFxSUdCZ1lGeHVJQ292WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnYzJsbmJtRnNQRnh1SUNBZ0lHTnZibk4wSUZCaGNtRnRjeUJsZUhSbGJtUnpJRUZ5Y21GNVBIc2dKR2QwZVhCbE9pQkhWSGx3WlNCOUlId2dSMVI1Y0dVK0xGeHVJQ0FnSUZKbGRIVnliaUJsZUhSbGJtUnpJSHNnSkdkMGVYQmxPaUJIVkhsd1pTQjlJSHdnUjFSNWNHVXNYRzQrS0Z4dUlDQWdJSEJoY21GdGN6b2dVR0Z5WVcxekxGeHVJQ0FnSUhKbGRIVnlibFI1Y0dVNklGSmxkSFZ5Yml4Y2JpQWdJQ0J2Y0hScGIyNXpQem9nVTJsbmJtRnNUM0IwYVc5dWN5eGNiaWs2SUNoY2JpQWdJQ0J0WlhSb2IyUTZJQ2gwYUdsek9pQkhUMkpxTENBdUxpNWhjbWR6T2lCaGJua3BJRDArSUZCaGNtRnRWSGx3WlR4U1pYUjFjbTQrTEZ4dUlDQWdJR04wZURvZ1UybG5ibUZzUTI5dWRHVjRkRHgwZVhCbGIyWWdiV1YwYUc5a1BpeGNiaWtnUFQ0Z0tIUm9hWE02SUVkUFltb3NJQzR1TG1GeVozTTZJRkJoY21GdFZIbHdaWE04VUdGeVlXMXpQaWtnUFQ0Z1lXNTVYRzVjYmk4cUtseHVJQ29nUkdWbWFXNWxjeUJoSUhOcFoyNWhiQ0IwYnlCaVpTQnlaV2RwYzNSbGNtVmtJSGRvWlc0Z2RYTnBibWNnZEdobElIdEFiR2x1YXlCeVpXZHBjM1JsY24wZ1pHVmpiM0poZEc5eUxseHVJQ3BjYmlBcUlFVjRZVzF3YkdVNlhHNGdLaUJnWUdCMGMxeHVJQ29nWTJ4aGMzTWdlMXh1SUNvZ0lDQWdJRnhjUUhOcFoyNWhiQ2hUZEhKcGJtY3NJRTUxYldKbGNpbGNiaUFxSUNBZ0lDQnRlVk5wWjI1aGJDaHpkSEk2SUhOMGNtbHVaeXdnYmpvZ2JuVnRZbVZ5S1RvZ2RtOXBaQ0I3WEc0Z0tpQWdJQ0FnSUNBZ0lDOHZJR1JsWm1GMWJIUWdhR0Z1Wkd4bGNseHVJQ29nSUNBZ0lIMWNiaUFxSUgxY2JpQXFJR0JnWUZ4dUlDb3ZYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdjMmxuYm1Gc1BGQmhjbUZ0Y3lCbGVIUmxibVJ6SUVGeWNtRjVQSHNnSkdkMGVYQmxPaUJIVkhsd1pTQjlJSHdnUjFSNWNHVStQaWhjYmlBZ0lDQXVMaTV3WVhKaGJYTTZJRkJoY21GdGMxeHVLVG9nS0Z4dUlDQWdJRzFsZEdodlpEb2dLSFJvYVhNNklFZFBZbXBsWTNRdVQySnFaV04wTENBdUxpNWhjbWR6T2lCaGJua3BJRDArSUhadmFXUXNYRzRnSUNBZ1kzUjRPaUJUYVdkdVlXeERiMjUwWlhoMFBIUjVjR1Z2WmlCdFpYUm9iMlErTEZ4dUtTQTlQaUFvZEdocGN6b2dSMDlpYW1WamRDNVBZbXBsWTNRc0lDNHVMbUZ5WjNNNklGQmhjbUZ0Vkhsd1pYTThVR0Z5WVcxelBpa2dQVDRnZG05cFpGeHVYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdjMmxuYm1Gc1BGeHVJQ0FnSUZCaGNtRnRjeUJsZUhSbGJtUnpJRUZ5Y21GNVBIc2dKR2QwZVhCbE9pQkhWSGx3WlNCOUlId2dSMVI1Y0dVK0xGeHVJQ0FnSUZKbGRIVnliaUJsZUhSbGJtUnpJSHNnSkdkMGVYQmxPaUJIVkhsd1pTQjlJSHdnUjFSNWNHVXNYRzQrS0Z4dUlDQWdJQzR1TG1GeVozTTZJRkJoY21GdGN5QjhJRnR3WVhKaGJYTTZJRkJoY21GdGN5d2djbVYwZFhKdVZIbHdaVDg2SUZKbGRIVnliaXdnYjNCMGFXOXVjejg2SUZOcFoyNWhiRTl3ZEdsdmJuTmRYRzRwT2lBb1hHNGdJQ0FnYldWMGFHOWtPaUFvZEdocGN6b2dSMDlpYWl3Z0xpNHVZWEpuY3pvZ1VHRnlZVzFVZVhCbGN6eFFZWEpoYlhNK0tTQTlQaUJRWVhKaGJWUjVjR1U4VW1WMGRYSnVQaUI4SUhadmFXUXNYRzRnSUNBZ1kzUjRPaUJUYVdkdVlXeERiMjUwWlhoMFBIUjVjR1Z2WmlCdFpYUm9iMlErTEZ4dUtTQTlQaUIwZVhCbGIyWWdiV1YwYUc5a0lIdGNiaUFnSUNCeVpYUjFjbTRnWm5WdVkzUnBiMjRnS0cxbGRHaHZaQ3dnWTNSNEtTQjdYRzRnSUNBZ0lDQWdJR2xtSUNoamRIZ3VjSEpwZG1GMFpTa2dkR2h5YjNjZ1JYSnliM0lvWENKd2NtbDJZWFJsSUdacFpXeGtjeUJoY21VZ2JtOTBJSE4xY0hCdmNuUmxaRndpS1Z4dUlDQWdJQ0FnSUNCcFppQW9ZM1I0TG5OMFlYUnBZeWtnZEdoeWIzY2dSWEp5YjNJb1hDSnpkR0YwYVdNZ1ptbGxiR1J6SUdGeVpTQnViM1FnYzNWd2NHOXlkR1ZrWENJcFhHNWNiaUFnSUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUJqZEhndWJtRnRaU0FoUFQwZ1hDSnpkSEpwYm1kY0lpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHliM2NnUlhKeWIzSW9YQ0p2Ym14NUlITjBjbWx1WjNNZ1kyRnVJR0psSUdkdlltcGxZM1FnYzJsbmJtRnNjMXdpS1Z4dUlDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2MybG5ibUZzVG1GdFpTQTlJR3RsWW1GaWFXWjVLR04wZUM1dVlXMWxLVnh1SUNBZ0lDQWdJQ0JqYjI1emRDQnRaWFJoT2lCUVlYSjBhV0ZzUEUxbGRHRStJRDBnWTNSNExtMWxkR0ZrWVhSaElWeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCemFXZHVZV3h6SUQwZ0tHMWxkR0V1YzJsbmJtRnNjeUEvUHowZ2UzMHBYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tFRnljbUY1TG1selFYSnlZWGtvWVhKbmMxc3dYU2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElGdHdZWEpoYlhNc0lISmxkSFZ5YmxSNWNHVXNJRzl3ZEdsdmJuTmRJRDBnWVhKbmN5QmhjeUJiWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0dGeVlXMXpPaUJRWVhKaGJYTXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdVZIbHdaVDg2SUZKbGRIVnliaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2Y0hScGIyNXpQem9nVTJsbmJtRnNUM0IwYVc5dWN5eGNiaUFnSUNBZ0lDQWdJQ0FnSUYxY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnYzJsbmJtRnNjMXR6YVdkdVlXeE9ZVzFsWFNBOUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRaWFJvYjJRc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvZ2IzQjBhVzl1Y3o4dVpHVm1ZWFZzZENBL1B5QjBjblZsTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCaGNtRnRYM1I1Y0dWek9pQndZWEpoYlhNdWJXRndLQ2hwS1NBOVBpQW9YQ0lrWjNSNWNHVmNJaUJwYmlCcElEOGdhUzRrWjNSNWNHVWdPaUJwS1Nrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xpNHVLSEpsZEhWeWJsUjVjR1VnSmlZZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNWZkSGx3WlRvZ1hDSWtaM1I1Y0dWY0lpQnBiaUJ5WlhSMWNtNVVlWEJsSUQ4Z2NtVjBkWEp1Vkhsd1pTNGtaM1I1Y0dVZ09pQnlaWFIxY201VWVYQmxMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM0dUxpaHZjSFJwYjI1elB5NW1iR0ZuY3lBbUppQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdac1lXZHpPaUJ2Y0hScGIyNXpMbVpzWVdkekxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzR1TGloMGVYQmxiMllnYjNCMGFXOXVjejh1WVdOamRXMTFiR0YwYjNJZ1BUMDlJRndpYm5WdFltVnlYQ0lnSmlZZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoWTJOMWJYVnNZWFJ2Y2pvZ2IzQjBhVzl1Y3k1aFkyTjFiWFZzWVhSdmNpeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlLU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJSEJoY21GdGN5QTlJR0Z5WjNNZ1lYTWdVR0Z5WVcxelhHNGdJQ0FnSUNBZ0lDQWdJQ0J6YVdkdVlXeHpXM05wWjI1aGJFNWhiV1ZkSUQwZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMWxkR2h2WkN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1pXWmhkV3gwT2lCMGNuVmxMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJoY21GdFgzUjVjR1Z6T2lCd1lYSmhiWE11YldGd0tDaHBLU0E5UGlBb1hDSWtaM1I1Y0dWY0lpQnBiaUJwSUQ4Z2FTNGtaM1I1Y0dVZ09pQnBLU2tzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWm5WdVkzUnBiMjRnS0M0dUxuQmhjbUZ0Y3lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVpXMXBkQ2h6YVdkdVlXeE9ZVzFsTENBdUxpNXdZWEpoYlhNcElHRnpJRkJoY21GdFZIbHdaVHhTWlhSMWNtNCtYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzU5WEc1Y2JtTnZibk4wSUUxQldFbE9WQ0E5SURJZ0tpb2dNekVnTFNBeFhHNWpiMjV6ZENCTlNVNUpUbFFnUFNBdEtESWdLaW9nTXpFcFhHNWpiMjV6ZENCTlFWaFZTVTVVSUQwZ01pQXFLaUF6TWlBdElERmNibU52Ym5OMElFMUJXRVpNVDBGVUlEMGdNeTQwTURJNE1qTTFaVE00WEc1amIyNXpkQ0JOU1U1R1RFOUJWQ0E5SUMwekxqUXdNamd5TXpWbE16aGNibU52Ym5OMElFMUpUa2xPVkRZMElEMGdUblZ0WW1WeUxrMUpUbDlUUVVaRlgwbE9WRVZIUlZKY2JtTnZibk4wSUUxQldFbE9WRFkwSUQwZ1RuVnRZbVZ5TGsxQldGOVRRVVpGWDBsT1ZFVkhSVkpjYmx4dVpuVnVZM1JwYjI0Z2NITndaV05HY205dFIxUjVjR1VvZEhsd1pUb2dSMVI1Y0dVOGRXNXJibTkzYmo0c0lHNWhiV1U2SUhOMGNtbHVaeXdnWm14aFozTTZJRkJoY21GdFJteGhaM01wSUh0Y2JpQWdJQ0J6ZDJsMFkyZ2dLSFI1Y0dVcElIdGNiaUFnSUNBZ0lDQWdZMkZ6WlNCSFQySnFaV04wTGxSWlVFVmZRazlQVEVWQlRqcGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJRWVhKaGJWTndaV011WW05dmJHVmhiaWh1WVcxbExDQmNJbHdpTENCY0lsd2lMQ0JtYkdGbmN5d2dabUZzYzJVcFhHNGdJQ0FnSUNBZ0lHTmhjMlVnUjA5aWFtVmpkQzVVV1ZCRlgxTlVVa2xPUnpwY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQlFZWEpoYlZOd1pXTXVjM1J5YVc1bktHNWhiV1VzSUZ3aVhDSXNJRndpWENJc0lHWnNZV2R6TENCY0lsd2lLVnh1SUNBZ0lDQWdJQ0JqWVhObElFZFBZbXBsWTNRdVZGbFFSVjlKVGxRNlhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdVR0Z5WVcxVGNHVmpMbWx1ZENodVlXMWxMQ0JjSWx3aUxDQmNJbHdpTENCbWJHRm5jeXdnVFVsT1NVNVVMQ0JOUVZoSlRsUXNJREFwWEc0Z0lDQWdJQ0FnSUdOaGMyVWdSMDlpYW1WamRDNVVXVkJGWDFWSlRsUTZYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVUdGeVlXMVRjR1ZqTG5WcGJuUW9ibUZ0WlN3Z1hDSmNJaXdnWENKY0lpd2dabXhoWjNNc0lEQXNJRTFCV0ZWSlRsUXNJREFwWEc0Z0lDQWdJQ0FnSUdOaGMyVWdSMDlpYW1WamRDNVVXVkJGWDBsT1ZEWTBPbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUZCaGNtRnRVM0JsWXk1cGJuUTJOQ2h1WVcxbExDQmNJbHdpTENCY0lsd2lMQ0JtYkdGbmN5d2dUVWxPU1U1VU5qUXNJRTFCV0VsT1ZEWTBMQ0F3S1Z4dUlDQWdJQ0FnSUNCallYTmxJRWRQWW1wbFkzUXVWRmxRUlY5VlNVNVVOalE2WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1VHRnlZVzFUY0dWakxuVnBiblEyTkNodVlXMWxMQ0JjSWx3aUxDQmNJbHdpTENCbWJHRm5jeXdnTUN3Z1RuVnRZbVZ5TGsxQldGOVRRVVpGWDBsT1ZFVkhSVklzSURBcFhHNGdJQ0FnSUNBZ0lHTmhjMlVnUjA5aWFtVmpkQzVVV1ZCRlgwWk1UMEZVT2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGQmhjbUZ0VTNCbFl5NW1iRzloZENodVlXMWxMQ0JjSWx3aUxDQmNJbHdpTENCbWJHRm5jeXdnVFVsT1JreFBRVlFzSUUxQldFWk1UMEZVTENBd0tWeHVJQ0FnSUNBZ0lDQmpZWE5sSUVkUFltcGxZM1F1VkZsUVJWOUVUMVZDVEVVNlhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdVR0Z5WVcxVGNHVmpMbVJ2ZFdKc1pTaHVZVzFsTENCY0lsd2lMQ0JjSWx3aUxDQm1iR0ZuY3l3Z1RuVnRZbVZ5TGsxSlRsOVdRVXhWUlN3Z1RuVnRZbVZ5TGsxSlRsOVdRVXhWUlN3Z01DbGNiaUFnSUNBZ0lDQWdZMkZ6WlNCSFQySnFaV04wTGxSWlVFVmZTbE5QUWtwRlExUTZYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVUdGeVlXMVRjR1ZqTG1wemIySnFaV04wS0c1aGJXVXNJRndpWENJc0lGd2lYQ0lzSUdac1lXZHpLVnh1SUNBZ0lDQWdJQ0JqWVhObElFZFBZbXBsWTNRdVZGbFFSVjlXUVZKSlFVNVVPbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUZCaGNtRnRVM0JsWXk1dlltcGxZM1FvYm1GdFpTd2dYQ0pjSWl3Z1hDSmNJaXdnWm14aFozTWdZWE1nWVc1NUxDQkhUR2xpTGxaaGNtbGhiblFwWEc1Y2JpQWdJQ0FnSUNBZ1kyRnpaU0JIVDJKcVpXTjBMbFJaVUVWZlJVNVZUVHBjYmlBZ0lDQWdJQ0FnWTJGelpTQkhUMkpxWldOMExsUlpVRVZmU1U1VVJWSkdRVU5GT2x4dUlDQWdJQ0FnSUNCallYTmxJRWRQWW1wbFkzUXVWRmxRUlY5Q1QxaEZSRHBjYmlBZ0lDQWdJQ0FnWTJGelpTQkhUMkpxWldOMExsUlpVRVZmVUU5SlRsUkZVanBjYmlBZ0lDQWdJQ0FnWTJGelpTQkhUMkpxWldOMExsUlpVRVZmVUVGU1FVMDZYRzRnSUNBZ0lDQWdJR05oYzJVZ1IwOWlhbVZqZEM1MGVYQmxYMlp5YjIxZmJtRnRaU2hjSWtkVWVYQmxYQ0lwT2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2h5YjNjZ1JYSnliM0lvWUdOaGJtNXZkQ0JuZFdWemN5QlFZWEpoYlZOd1pXTWdabkp2YlNCSFZIbHdaU0JjSWlSN2RIbHdaWDFjSW1BcFhHNGdJQ0FnSUNBZ0lHTmhjMlVnUjA5aWFtVmpkQzVVV1ZCRlgwOUNTa1ZEVkRwY2JpQWdJQ0FnSUNBZ1pHVm1ZWFZzZERwY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQlFZWEpoYlZOd1pXTXViMkpxWldOMEtHNWhiV1VzSUZ3aVhDSXNJRndpWENJc0lHWnNZV2R6SUdGeklHRnVlU3dnZEhsd1pTbGNiaUFnSUNCOVhHNTlYRzVjYm1aMWJtTjBhVzl1SUhCemNHVmpLRzVoYldVNklITjBjbWx1Wnl3Z1pteGhaM002SUZCaGNtRnRSbXhoWjNNc0lHUmxZMnhoY21GMGFXOXVPaUJRY205d1pYSjBlVlI1Y0dWRVpXTnNZWEpoZEdsdmJqeDFibXR1YjNkdVBpa2dlMXh1SUNBZ0lHbG1JQ2hrWldOc1lYSmhkR2x2YmlCcGJuTjBZVzVqWlc5bUlGQmhjbUZ0VTNCbFl5a2djbVYwZFhKdUlHUmxZMnhoY21GMGFXOXVYRzVjYmlBZ0lDQnBaaUFvWkdWamJHRnlZWFJwYjI0Z1BUMDlJRTlpYW1WamRDQjhmQ0JrWldOc1lYSmhkR2x2YmlBOVBUMGdSblZ1WTNScGIyNGdmSHdnWkdWamJHRnlZWFJwYjI0Z1BUMDlJRUZ5Y21GNUtTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQlFZWEpoYlZOd1pXTXVhbk52WW1wbFkzUW9ibUZ0WlN3Z1hDSmNJaXdnWENKY0lpd2dabXhoWjNNcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVdZZ0tHUmxZMnhoY21GMGFXOXVJRDA5UFNCVGRISnBibWNwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZCaGNtRnRVM0JsWXk1emRISnBibWNvYm1GdFpTd2dYQ0pjSWl3Z1hDSmNJaXdnWm14aFozTXNJRndpWENJcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVdZZ0tHUmxZMnhoY21GMGFXOXVJRDA5UFNCT2RXMWlaWElwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZCaGNtRnRVM0JsWXk1a2IzVmliR1VvYm1GdFpTd2dYQ0pjSWl3Z1hDSmNJaXdnWm14aFozTXNJQzFPZFcxaVpYSXVUVUZZWDFaQlRGVkZMQ0JPZFcxaVpYSXVUVUZZWDFaQlRGVkZMQ0F3S1Z4dUlDQWdJSDFjYmx4dUlDQWdJR2xtSUNoa1pXTnNZWEpoZEdsdmJpQTlQVDBnUW05dmJHVmhiaWtnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnVUdGeVlXMVRjR1ZqTG1KdmIyeGxZVzRvYm1GdFpTd2dYQ0pjSWl3Z1hDSmNJaXdnWm14aFozTXNJR1poYkhObEtWeHVJQ0FnSUgxY2JseHVJQ0FnSUdsbUlDaGNJaVJuZEhsd1pWd2lJR2x1SUdSbFkyeGhjbUYwYVc5dUtTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQndjM0JsWTBaeWIyMUhWSGx3WlNoa1pXTnNZWEpoZEdsdmJpNGtaM1I1Y0dVc0lHNWhiV1VzSUdac1lXZHpLVnh1SUNBZ0lIMWNibHh1SUNBZ0lHbG1JQ2gwZVhCbGIyWWdaR1ZqYkdGeVlYUnBiMjRnUFQwOUlGd2lablZ1WTNScGIyNWNJaWtnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWkdWamJHRnlZWFJwYjI0b2JtRnRaU3dnWm14aFozTXBYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2RHaHliM2NnUlhKeWIzSW9YQ0pwYm5aaGJHbGtJRkJ5YjNCbGNuUjVWSGx3WlVSbFkyeGhjbUYwYVc5dVhDSXBYRzU5WEc1Y2JuUjVjR1VnVFdWMFlVbHVabThnUFNCSFQySnFaV04wTGsxbGRHRkpibVp2UEc1bGRtVnlMQ0JCY25KaGVUeDdJQ1JuZEhsd1pUb2dSMVI1Y0dVOGRXNXJibTkzYmo0Z2ZUNHNJRzVsZG1WeVBseHVYRzR2S2lwY2JpQXFJRkpsY0d4aFkyVnRaVzUwSUdadmNpQjdRR3hwYm1zZ1IwOWlhbVZqZEM1eVpXZHBjM1JsY2tOc1lYTnpmVnh1SUNvZ1ZHaHBjeUJrWldOdmNtRjBiM0lnWTI5dWMzVnRaWE1nYldWMFlXUmhkR0VnYm1WbFpHVmtJSFJ2SUhKbFoybHpkR1Z5SUhSNWNHVnpJSGRvWlhKbElIUm9aU0J3Y205MmFXUmxaQ0JrWldOdmNtRjBiM0p6SUdGeVpTQjFjMlZrT2x4dUlDb2dMU0I3UUd4cGJtc2djMmxuYm1Gc2ZWeHVJQ29nTFNCN1FHeHBibXNnY0hKdmNHVnlkSGw5WEc0Z0tpQXRJSHRBYkdsdWF5Qm5aWFIwWlhKOVhHNGdLaUF0SUh0QWJHbHVheUJ6WlhSMFpYSjlYRzRnS2x4dUlDb2dSWGhoYlhCc1pUcGNiaUFxSUdCZ1lIUnpYRzRnS2lCY1hFQnlaV2RwYzNSbGNpaDdJRWRVZVhCbFRtRnRaVG9nWENKTmVVTnNZWE56WENJZ2ZTbGNiaUFxSUdOc1lYTnpJRTE1UTJ4aGMzTWdaWGgwWlc1a2N5QkhUMkpxWldOMExrOWlhbVZqZENCN0lIMWNiaUFxSUdCZ1lGeHVJQ292WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnY21WbmFYTjBaWEk4UTJ4eklHVjRkR1Z1WkhNZ2V5QnVaWGNnS0M0dUxtRnlaM002SUdGdWVTazZJRWRQWW1vZ2ZUNG9iM0IwYVc5dWN6b2dUV1YwWVVsdVptOGdQU0I3ZlNrZ2UxeHVJQ0FnSUhKbGRIVnliaUJtZFc1amRHbHZiaUFvWTJ4ek9pQkRiSE1zSUdOMGVEb2dRMnhoYzNORVpXTnZjbUYwYjNKRGIyNTBaWGgwUEVOc2N6NHBJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdkQ0E5SUc5d2RHbHZibk11VkdWdGNHeGhkR1ZjYmx4dUlDQWdJQ0FnSUNCcFppQW9kSGx3Wlc5bUlIUWdQVDA5SUZ3aWMzUnlhVzVuWENJZ0ppWWdJWFF1YzNSaGNuUnpWMmwwYUNoY0luSmxjMjkxY21ObE9pOHZYQ0lwSUNZbUlDRjBMbk4wWVhKMGMxZHBkR2dvWENKbWFXeGxPaTh2WENJcEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCdmNIUnBiMjV6TGxSbGJYQnNZWFJsSUQwZ2JtVjNJRlJsZUhSRmJtTnZaR1Z5S0NrdVpXNWpiMlJsS0hRcFhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JqYjI1emRDQnRaWFJoSUQwZ1kzUjRMbTFsZEdGa1lYUmhJU0JoY3lCTlpYUmhYRzVjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdjSEp2Y0hNNklGSmxZMjl5WkR4emRISnBibWNzSUZCaGNtRnRVM0JsWXp4MWJtdHViM2R1UGo0Z1BTQm1jbTl0Ulc1MGNtbGxjeWhjYmlBZ0lDQWdJQ0FnSUNBZ0lHVnVkSEpwWlhNb2JXVjBZUzV3Y205d1pYSjBhV1Z6SUQ4L0lIdDlLUzV0WVhBb0tGdG1hV1ZzWkU1aGJXVXNJSHNnWm14aFozTXNJSFI1Y0dVZ2ZWMHBJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JyWlhrZ1BTQnJaV0poWW1sbWVTaG1hV1ZzWkU1aGJXVXBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2MzQmxZeUE5SUhCemNHVmpLR3RsZVN3Z1pteGhaM01zSUhSNWNHVXBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGdHJaWGtzSUhOd1pXTmRYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtTeGNiaUFnSUNBZ0lDQWdLVnh1WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJSE5wWjI1aGJITWdQU0JtY205dFJXNTBjbWxsY3loY2JpQWdJQ0FnSUNBZ0lDQWdJR1Z1ZEhKcFpYTW9iV1YwWVM1emFXZHVZV3h6SUQ4L0lIdDlLUzV0WVhBb0tGdHphV2R1WVd4T1lXMWxMQ0I3SUdSbFptRjFiSFE2SUdSbFppd2diV1YwYUc5a0xDQXVMaTV6YVdkdVlXd2dmVjBwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWkdWbUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSbFptbHVaVkJ5YjNCbGNuUjVLR05zY3k1d2NtOTBiM1I1Y0dVc0lHQnZibDhrZTNOcFoyNWhiRTVoYldVdWNtVndiR0ZqWlVGc2JDaGNJaTFjSWl3Z1hDSmZYQ0lwZldBc0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnVkVzFsY21GaWJHVTZJR1poYkhObExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVabWxuZFhKaFlteGxPaUJtWVd4elpTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdFpYUm9iMlFzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmJjMmxuYm1Gc1RtRnRaU3dnYzJsbmJtRnNYVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTa3NYRzRnSUNBZ0lDQWdJQ2xjYmx4dUlDQWdJQ0FnSUNCa1pXeGxkR1VnYldWMFlTNXdjbTl3WlhKMGFXVnpYRzRnSUNBZ0lDQWdJR1JsYkdWMFpTQnRaWFJoTG5OcFoyNWhiSE5jYmx4dUlDQWdJQ0FnSUNCeVpXZHBjM1JsY2tOc1lYTnpLSHNnTGk0dWIzQjBhVzl1Y3l3Z1VISnZjR1Z5ZEdsbGN6b2djSEp2Y0hNc0lGTnBaMjVoYkhNNklITnBaMjVoYkhNZ2ZTd2dZMnh6S1Z4dUlDQWdJSDFjYm4xY2JseHVMeW9xWEc0Z0tpQkFaWGh3WlhKcGJXVnVkR0ZzWEc0Z0tpQkJjM05sY25SeklHRWdaM1I1Y0dVZ2FXNGdZMkZ6WlhNZ2QyaGxjbVVnZEdobElIUjVjR1VnYVhNZ2RHOXZJR3h2YjNObEwzTjBjbWxqZEM1Y2JpQXFYRzRnS2lCRmVHRnRjR3hsT2x4dUlDb2dZR0JnZEhOY2JpQXFJSFI1Y0dVZ1ZIVndiR1VnUFNCYmJuVnRZbVZ5TENCdWRXMWlaWEpkWEc0Z0tpQmpiMjV6ZENCVWRYQnNaU0E5SUdkMGVYQmxQRlIxY0d4bFBpaEJjbkpoZVNsY2JpQXFYRzRnS2lCamJHRnpjeUI3WEc0Z0tpQWdJRnhjUUhCeWIzQmxjblI1S0ZSMWNHeGxLU0IyWVd4MVpTQTlJRnN4TENBeVhTQmhjeUJVZFhCc1pWeHVJQ29nZlZ4dUlDb2dZR0JnWEc0Z0tpOWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQm5kSGx3WlR4QmMzTmxjblErS0hSNWNHVTZJRWRVZVhCbFBHRnVlVDRnZkNCN0lDUm5kSGx3WlRvZ1IxUjVjR1U4WVc1NVBpQjlLVG9nZTF4dUlDQWdJQ1JuZEhsd1pUb2dSMVI1Y0dVOFFYTnpaWEowUGx4dWZTQjdYRzRnSUNBZ2NtVjBkWEp1SUZ3aUpHZDBlWEJsWENJZ2FXNGdkSGx3WlNBL0lIUjVjR1VnT2lCN0lDUm5kSGx3WlRvZ2RIbHdaU0I5WEc1OVhHNWNibVJsWTJ4aGNtVWdaMnh2WW1Gc0lIdGNiaUFnSUNCcGJuUmxjbVpoWTJVZ1JuVnVZM1JwYjI1RGIyNXpkSEoxWTNSdmNpQjdYRzRnSUNBZ0lDQWdJQ1JuZEhsd1pUb2dSMVI1Y0dVOEtDNHVMbUZ5WjNNNklHRnVlVnRkS1NBOVBpQmhibmsrWEc0Z0lDQWdmVnh1WEc0Z0lDQWdhVzUwWlhKbVlXTmxJRUZ5Y21GNVEyOXVjM1J5ZFdOMGIzSWdlMXh1SUNBZ0lDQWdJQ0FrWjNSNWNHVTZJRWRVZVhCbFBHRnVlVnRkUGx4dUlDQWdJSDFjYmx4dUlDQWdJR2x1ZEdWeVptRmpaU0JFWVhSbFEyOXVjM1J5ZFdOMGIzSWdlMXh1SUNBZ0lDQWdJQ0FrWjNSNWNHVTZJRWRVZVhCbFBFUmhkR1UrWEc0Z0lDQWdmVnh1WEc0Z0lDQWdhVzUwWlhKbVlXTmxJRTFoY0VOdmJuTjBjblZqZEc5eUlIdGNiaUFnSUNBZ0lDQWdKR2QwZVhCbE9pQkhWSGx3WlR4TllYQThZVzU1TENCaGJuaytQbHh1SUNBZ0lIMWNibHh1SUNBZ0lHbHVkR1Z5Wm1GalpTQlRaWFJEYjI1emRISjFZM1J2Y2lCN1hHNGdJQ0FnSUNBZ0lDUm5kSGx3WlRvZ1IxUjVjR1U4VTJWMFBHRnVlVDQrWEc0Z0lDQWdmVnh1ZlZ4dVhHNUdkVzVqZEdsdmJpNGtaM1I1Y0dVZ1BTQlBZbXBsWTNRdUpHZDBlWEJsSUdGeklFWjFibU4wYVc5dVEyOXVjM1J5ZFdOMGIzSmJYQ0lrWjNSNWNHVmNJbDFjYmtGeWNtRjVMaVJuZEhsd1pTQTlJRTlpYW1WamRDNGtaM1I1Y0dVZ1lYTWdRWEp5WVhsRGIyNXpkSEoxWTNSdmNsdGNJaVJuZEhsd1pWd2lYVnh1UkdGMFpTNGtaM1I1Y0dVZ1BTQlBZbXBsWTNRdUpHZDBlWEJsSUdGeklFUmhkR1ZEYjI1emRISjFZM1J2Y2x0Y0lpUm5kSGx3WlZ3aVhWeHVUV0Z3TGlSbmRIbHdaU0E5SUU5aWFtVmpkQzRrWjNSNWNHVWdZWE1nVFdGd1EyOXVjM1J5ZFdOMGIzSmJYQ0lrWjNSNWNHVmNJbDFjYmxObGRDNGtaM1I1Y0dVZ1BTQlBZbXBsWTNRdUpHZDBlWEJsSUdGeklGTmxkRU52Ym5OMGNuVmpkRzl5VzF3aUpHZDBlWEJsWENKZFhHNGlMQ0FpYVcxd2IzSjBJSFI1Y0dVZ1IwOWlhbVZqZENCbWNtOXRJRndpWjJrNkx5OUhUMkpxWldOMFhDSmNibHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJR3RsWW1GaWFXWjVLSE4wY2pvZ2MzUnlhVzVuS1NCN1hHNGdJQ0FnY21WMGRYSnVJSE4wY2x4dUlDQWdJQ0FnSUNBdWNtVndiR0ZqWlNndktGdGhMWHBkS1NoYlFTMWFYU2t2Wnl3Z1hDSWtNUzBrTWx3aUtWeHVJQ0FnSUNBZ0lDQXVjbVZ3YkdGalpVRnNiQ2hjSWw5Y0lpd2dYQ0l0WENJcFhHNGdJQ0FnSUNBZ0lDNTBiMHh2ZDJWeVEyRnpaU2dwWEc1OVhHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQnpibUZyWldsbWVTaHpkSEk2SUhOMGNtbHVaeWtnZTF4dUlDQWdJSEpsZEhWeWJpQnpkSEpjYmlBZ0lDQWdJQ0FnTG5KbGNHeGhZMlVvTHloYllTMTZYU2tvVzBFdFdsMHBMMmNzSUZ3aUpERXRKREpjSWlsY2JpQWdJQ0FnSUNBZ0xuSmxjR3hoWTJWQmJHd29YQ0l0WENJc0lGd2lYMXdpS1Z4dUlDQWdJQ0FnSUNBdWRHOU1iM2RsY2tOaGMyVW9LVnh1ZlZ4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1kyRnRaV3hwWm5rb2MzUnlPaUJ6ZEhKcGJtY3BJSHRjYmlBZ0lDQnlaWFIxY200Z2MzUnlMbkpsY0d4aFkyVW9MMXN0WDEwb0xpa3ZaeXdnS0Y4c0lHTm9ZWElwSUQwK0lHTm9ZWEl1ZEc5VmNIQmxja05oYzJVb0tTbGNibjFjYmx4dVpYaHdiM0owSUhSNWNHVWdVR0Z6WTJGc2FXWjVQRk0rSUQwZ1V5QmxlSFJsYm1SeklHQWtlMmx1Wm1WeUlFaGxZV1I5Skh0Y0lpMWNJaUI4SUZ3aVgxd2lmU1I3YVc1bVpYSWdWR0ZwYkgxZ1hHNGdJQ0FnUHlCZ0pIdERZWEJwZEdGc2FYcGxQRWhsWVdRK2ZTUjdVR0Z6WTJGc2FXWjVQRlJoYVd3K2ZXQmNiaUFnSUNBNklGTWdaWGgwWlc1a2N5QnpkSEpwYm1kY2JpQWdJQ0FnSUQ4Z1EyRndhWFJoYkdsNlpUeFRQbHh1SUNBZ0lDQWdPaUJ1WlhabGNseHVYRzVsZUhCdmNuUWdkSGx3WlNCWWJXeE9iMlJsSUQwZ2UxeHVJQ0FnSUc1aGJXVTZJSE4wY21sdVoxeHVJQ0FnSUdGMGRISnBZblYwWlhNL09pQlNaV052Y21ROGMzUnlhVzVuTENCemRISnBibWMrWEc0Z0lDQWdZMmhwYkdSeVpXNC9PaUJCY25KaGVUeFliV3hPYjJSbFBseHVmVnh1WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnZUcxc0tIc2dibUZ0WlN3Z1lYUjBjbWxpZFhSbGN5d2dZMmhwYkdSeVpXNGdmVG9nV0cxc1RtOWtaU2tnZTF4dUlDQWdJR3hsZENCaWRXbHNaR1Z5SUQwZ1lEd2tlMjVoYldWOVlGeHVYRzRnSUNBZ1kyOXVjM1FnWVhSMGNuTWdQU0JQWW1wbFkzUXVaVzUwY21sbGN5aGhkSFJ5YVdKMWRHVnpJRDgvSUZ0ZEtWeHVYRzRnSUNBZ2FXWWdLR0YwZEhKekxteGxibWQwYUNBK0lEQXBJSHRjYmlBZ0lDQWdJQ0FnWm05eUlDaGpiMjV6ZENCYmEyVjVMQ0IyWVd4MVpWMGdiMllnWVhSMGNuTXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHSjFhV3hrWlhJZ0t6MGdZQ0FrZTJ0bGVYMDlYQ0lrZTNaaGJIVmxmVndpWUZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVdZZ0tHTm9hV3hrY21WdUlDWW1JR05vYVd4a2NtVnVMbXhsYm1kMGFDQStJREFwSUh0Y2JpQWdJQ0FnSUNBZ1luVnBiR1JsY2lBclBTQmNJajVjSWx4dUlDQWdJQ0FnSUNCbWIzSWdLR052Ym5OMElHNXZaR1VnYjJZZ1kyaHBiR1J5Wlc0cElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdKMWFXeGtaWElnS3owZ2VHMXNLRzV2WkdVcFhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdZblZwYkdSbGNpQXJQU0JnUEM4a2UyNWhiV1Y5UG1CY2JpQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0JpZFdsc1pHVnlJQ3M5SUZ3aUlDOCtYQ0pjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWFIxY200Z1luVnBiR1JsY2x4dWZWeHVYRzR2THlCQ2FXNWthVzVuY3lCM2IzSnJJRzkyWlhJZ2NISnZjR1Z5ZEdsbGN5QnBiaUJyWldKaFlpMWpZWE5sSUdKbFkyRjFjMlVnZEdoaGRITWdkR2hsSUdOdmJuWmxiblJwYjI0Z2IyWWdaMjlpYW1WamRGeHVMeThnYUc5M1pYWmxjaUJwYmlCcWN5QnBkSE1nWldsMGFHVnlJSE51WVd0bFgyTmhjMlVnYjNJZ1kyRnRaV3hEWVhObFhHNHZMeUJoYkhOdklHOXVJRVJDZFhNZ2FXNTBaWEptWVdObGN5QnBkSE1nVUdGelkyRnNRMkZ6WlNCaWVTQmpiMjUyWlc1MGFXOXVYRzR2THlCemJ5QmhjeUJoSUhkdmNtdGhjbTkxYm1RZ2QyVWdkWE5sSUdkbGRGOXdjbTl3WlhKMGVWOXVZVzFsSUdGdVpDQnZibXg1SUhWelpTQjBhR1VnY0hKdmNHVnlkSGtnWm1sbGJHUWdZWE1nWVNCbVlXeHNZbUZqYTF4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUdSbFptbHVaVkJ5YjNCbGNuUjVSMlYwZEdWeVBGUWdaWGgwWlc1a2N5QnZZbXBsWTNRK0tHOWlhbVZqZERvZ1ZDd2djSEp2Y0RvZ1JYaDBjbUZqZER4clpYbHZaaUJVTENCemRISnBibWMrS1NCN1hHNGdJQ0FnVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25SNUtHOWlhbVZqZEN3Z1lHZGxkRjhrZTJ0bFltRmlhV1o1S0hCeWIzQXBMbkpsY0d4aFkyVkJiR3dvWENJdFhDSXNJRndpWDF3aUtYMWdMQ0I3WEc0Z0lDQWdJQ0FnSUdOdmJtWnBaM1Z5WVdKc1pUb2dabUZzYzJVc1hHNGdJQ0FnSUNBZ0lHVnVkVzFsY21GaWJHVTZJSFJ5ZFdVc1hHNGdJQ0FnSUNBZ0lIWmhiSFZsT2lBb0tTQTlQaUJ2WW1wbFkzUmJjSEp2Y0Ywc1hHNGdJQ0FnZlNsY2JuMWNibHh1THk4Z1lYUjBaVzF3ZENCelpYUjBhVzVuSUdFZ2NISnZjR1Z5ZEhrZ2IyWWdSMDlpYW1WamRDNVBZbXBsWTNSY2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCelpYUW9iMkpxT2lCSFQySnFaV04wTGs5aWFtVmpkQ3dnY0hKdmNEb2djM1J5YVc1bkxDQjJZV3gxWlRvZ1lXNTVLU0I3WEc0Z0lDQWdZMjl1YzNRZ2EyVjVJRDBnYzI1aGEyVnBabmtvY0hKdmNDbGNiaUFnSUNCamIyNXpkQ0JuWlhSMFpYSWdQU0JnWjJWMFh5UjdhMlY1ZldBZ1lYTWdhMlY1YjJZZ2RIbHdaVzltSUc5aWFseHVJQ0FnSUdOdmJuTjBJSE5sZEhSbGNpQTlJR0J6WlhSZkpIdHJaWGw5WUNCaGN5QnJaWGx2WmlCMGVYQmxiMllnYjJKcVhHNWNiaUFnSUNCc1pYUWdZM1Z5Y21WdWREb2dkVzVyYm05M2JseHVYRzRnSUNBZ2FXWWdLR2RsZEhSbGNpQnBiaUJ2WW1vZ0ppWWdkSGx3Wlc5bUlHOWlhbHRuWlhSMFpYSmRJRDA5UFNCY0ltWjFibU4wYVc5dVhDSXBJSHRjYmlBZ0lDQWdJQ0FnWTNWeWNtVnVkQ0E5SUNodlltcGJaMlYwZEdWeVhTQmhjeUFvS1NBOVBpQjFibXR1YjNkdUtTZ3BYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ1kzVnljbVZ1ZENBOUlHOWlhbHR3Y205d0lHRnpJR3RsZVc5bUlIUjVjR1Z2WmlCdlltcGRYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2FXWWdLR04xY25KbGJuUWdJVDA5SUhaaGJIVmxLU0I3WEc0Z0lDQWdJQ0FnSUdsbUlDaHpaWFIwWlhJZ2FXNGdiMkpxSUNZbUlIUjVjR1Z2WmlCdlltcGJjMlYwZEdWeVhTQTlQVDBnWENKbWRXNWpkR2x2Ymx3aUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBN0tHOWlhbHR6WlhSMFpYSmRJR0Z6SUNoMk9pQmhibmtwSUQwK0lIWnZhV1FwS0haaGJIVmxLVnh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1QySnFaV04wTG1GemMybG5iaWh2WW1vc0lIc2dXM0J5YjNCZE9pQjJZV3gxWlNCOUtWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVmVnh1SWl3Z0ltbHRjRzl5ZENCY0lpNHVMMjkyWlhKeWFXUmxjeTVxYzF3aVhHNXBiWEJ2Y25RZ1IwOWlhbVZqZEN3Z2V5QnlaV2RwYzNSbGNpd2djMmxuYm1Gc0xDQnpaWFIwWlhJZ2ZTQm1jbTl0SUZ3aVoyNXBiUzluYjJKcVpXTjBYQ0pjYm1sdGNHOXlkQ0JIVEdsaUlHWnliMjBnWENKbmFUb3ZMMGRNYVdJL2RtVnljMmx2YmoweUxqQmNJbHh1YVcxd2IzSjBJRWQwYXlCbWNtOXRJRndpWjJrNkx5OUhkR3MvZG1WeWMybHZiajAwTGpCY0lseHVhVzF3YjNKMElFZGtheUJtY205dElGd2laMms2THk5SFpHcy9kbVZ5YzJsdmJqMDBMakJjSWx4dWFXMXdiM0owSUVkcGJ5Qm1jbTl0SUZ3aVoyazZMeTlIYVc4L2RtVnljMmx2YmoweUxqQmNJbHh1YVcxd2IzSjBJSHNnWjJWMGRHVnlJSDBnWm5KdmJTQmNJbWR1YVcwdloyOWlhbVZqZEZ3aVhHNXBiWEJ2Y25RZ2V5QkJjSEJFUW5WeklIMGdabkp2YlNCY0lpNHVMMkZ3Y0M5a1luVnpMbXB6WENKY2JtbHRjRzl5ZENCN0lITmxkRU52Ym5OdmJHVk1iMmRFYjIxaGFXNGdmU0JtY205dElGd2lZMjl1YzI5c1pWd2lYRzVwYlhCdmNuUWdleUJsZUdsMExDQndjbTluY21GdFFYSm5jeUI5SUdaeWIyMGdYQ0p6ZVhOMFpXMWNJbHh1YVcxd2IzSjBJSHNnWTNKbFlYUmxVbTl2ZENCOUlHWnliMjBnWENKbmJtbHRYQ0pjYmx4dVIzUnJMbWx1YVhRb0tWeHVYRzR2THlCemRHOXdJSFJvYVhNZ1puSnZiU0JzWldGcmFXNW5JR2x1ZEc4Z2MzVmljSEp2WTJWemMyVnpYRzR2THlCaGJtUWdaMmx2SUd4aGRXNWphQ0JwYm5adlkyRjBhVzl1YzF4dVIweHBZaTUxYm5ObGRHVnVkaWhjSWt4RVgxQlNSVXhQUVVSY0lpbGNibHh1THk4Z2RYTmxjbk1nYldsbmFIUWdkMkZ1ZENCMGJ5QjFjMlVnUVdSM1lXbDBZU0JwYmlCM2FHbGphQ0JqWVhObElHbDBJR2hoY3lCMGJ5QmlaU0JwYm1sMGFXRnNhWHBsWkZ4dUx5OGdhWFFnYldsbmFIUWdZbVVnWTI5dGJXOXVJSEJwZEdaaGJHd2dkRzhnWm05eVoyVjBJR2wwSUdKbFkyRjFjMlVnWUVGd2NHQWdhWE1nYm05MElHQkJaSGN1UVhCd2JHbGpZWFJwYjI1Z1hHNWhkMkZwZENCcGJYQnZjblFvWENKbmFUb3ZMMEZrZHo5MlpYSnphVzl1UFRGY0lpa3VkR2hsYmlnb2V5QmtaV1poZFd4ME9pQkJaSGNnZlNrZ1BUNGdRV1IzTG1sdWFYUW9LU2t1WTJGMFkyZ29LQ2tnUFQ0Z2RtOXBaQ0F3S1Z4dVhHNTBlWEJsSUZOMFlYSjBRMjl1Wm1sbklEMGdVR0Z5ZEdsaGJEeDdYRzRnSUNBZ2FXNXpkR0Z1WTJWT1lXMWxPaUJ6ZEhKcGJtZGNiaUFnSUNCamMzTTZJSE4wY21sdVoxeHVJQ0FnSUdsamIyNXpPaUJ6ZEhKcGJtZGNiaUFnSUNCbmRHdFVhR1Z0WlRvZ2MzUnlhVzVuWEc0Z0lDQWdhV052YmxSb1pXMWxPaUJ6ZEhKcGJtZGNiaUFnSUNCamRYSnpiM0pVYUdWdFpUb2djM1J5YVc1blhHNGdJQ0FnYldGcGJpZ3VMaTVoY21kMk9pQnpkSEpwYm1kYlhTazZJSFp2YVdSY2JpQWdJQ0J5WlhGMVpYTjBTR0Z1Wkd4bGNpaGhjbWQyT2lCemRISnBibWRiWFN3Z2NtVnpPaUFvY21WemNHOXVjMlU2SUdGdWVTa2dQVDRnZG05cFpDazZJSFp2YVdSY2JuMCtYRzVjYm1sdWRHVnlabUZqWlNCQmNIQlRhV2R1WVd4eklHVjRkR1Z1WkhNZ1IzUnJMa0Z3Y0d4cFkyRjBhVzl1TGxOcFoyNWhiRk5wWjI1aGRIVnlaWE1nZTF4dUlDQWdJRndpY21WeGRXVnpkRndpT2lCQmNIQmJYQ0p5WlhGMVpYTjBYQ0pkWEc0Z0lDQWdYQ0ozYVc1a2IzY3RkRzluWjJ4bFpGd2lPaUJCY0hCYlhDSjNhVzVrYjNkVWIyZG5iR1ZrWENKZFhHNTlYRzVjYmtCeVpXZHBjM1JsY2lncFhHNWpiR0Z6Y3lCQmNIQWdaWGgwWlc1a2N5QkhkR3N1UVhCd2JHbGpZWFJwYjI0Z2UxeHVJQ0FnSUdSbFkyeGhjbVVnSkhOcFoyNWhiSE02SUVGd2NGTnBaMjVoYkhOY2JseHVJQ0FnSUNOcGJuTjBZVzVqWlU1aGJXVWdQU0JjSW1GbmMxd2lYRzRnSUNBZ0kyMWhhVzQvT2lBb0xpNHVZWEpuZGpvZ2MzUnlhVzVuVzEwcElEMCtJSFp2YVdSY2JpQWdJQ0FqY21WeGRXVnpkRWhoYm1Sc1pYSnpJRDBnTUZ4dUlDQWdJQ05rWW5WelUyVnlkbWxqWlRvZ1FYQndSRUoxYzF4dUlDQWdJQ05qYzNOUWNtOTJhV1JsY25NZ1BTQnVaWGNnUVhKeVlYazhSM1JyTGtOemMxQnliM1pwWkdWeVBpZ3BYRzVjYmlBZ0lDQm5aWFFnSTNObGRIUnBibWR6S0NrNklFZDBheTVUWlhSMGFXNW5jeUI3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJSE5sZEhScGJtZHpJRDBnUjNSckxsTmxkSFJwYm1kekxtZGxkRjlrWldaaGRXeDBLQ2xjYmlBZ0lDQWdJQ0FnYVdZZ0tDRnpaWFIwYVc1bmN5a2dkR2h5YjNjZ1JYSnliM0lvWENKamIzVnNaQ0J1YjNRZ1oyVjBJSE5sZEhScGJtZHpYQ0lwWEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ6WlhSMGFXNW5jMXh1SUNBZ0lIMWNibHh1SUNBZ0lHZGxkQ0FqWkdsemNHeGhlU2dwT2lCSFpHc3VSR2x6Y0d4aGVTQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElHUnBjM0JzWVhrZ1BTQkhaR3N1UkdsemNHeGhlUzVuWlhSZlpHVm1ZWFZzZENncFhHNGdJQ0FnSUNBZ0lHbG1JQ2doWkdsemNHeGhlU2tnZEdoeWIzY2dSWEp5YjNJb1hDSmpiM1ZzWkNCdWIzUWdaMlYwSUdScGMzQnNZWGxjSWlsY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdScGMzQnNZWGxjYmlBZ0lDQjlYRzVjYmlBZ0lDQm5aWFFnYVc1emRHRnVZMlZPWVcxbEtDa2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k0amFXNXpkR0Z1WTJWT1lXMWxYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dSMlYwSUdGc2JDQnRiMjVwZEc5eWN5Qm1jbTl0SUh0QWJHbHVheUJIWkdzdVJHbHpjR3hoZVgwdVhHNGdJQ0FnSUNvdlhHNGdJQ0FnWjJWMFgyMXZibWwwYjNKektDa2dlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQnRiMjV6SUQwZ2RHaHBjeTRqWkdsemNHeGhlUzVuWlhSZmJXOXVhWFJ2Y25Nb0tTQmhjeUJIYVc4dVRHbHpkRTF2WkdWc1BFZGtheTVOYjI1cGRHOXlQbHh1SUNBZ0lDQWdJQ0JqYjI1emRDQnNhWE4wSUQwZ2JtVjNJRUZ5Y21GNVBFZGtheTVOYjI1cGRHOXlQaWdwWEc1Y2JpQWdJQ0FnSUNBZ2JHVjBJRzF2Ym1sMGIzSTZJRWRrYXk1TmIyNXBkRzl5SUh3Z2JuVnNiQ0E5SUc1MWJHeGNiaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQXdYRzVjYmlBZ0lDQWdJQ0FnZDJocGJHVWdLQ2h0YjI1cGRHOXlJRDBnYlc5dWN5NW5aWFJmYVhSbGJTaHBLeXNwS1NBaFBUMGdiblZzYkNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYkdsemRDNXdkWE5vS0cxdmJtbDBiM0lwWEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2JHbHpkRnh1SUNBZ0lIMWNibHh1SUNBZ0lFQnphV2R1WVd3b1IzUnJMbGRwYm1SdmR5bGNiaUFnSUNCd2NtbDJZWFJsSUhkcGJtUnZkMVJ2WjJkc1pXUW9kMmx1Wkc5M09pQkhkR3N1VjJsdVpHOTNLU0I3WEc0Z0lDQWdJQ0FnSUhadmFXUWdkMmx1Wkc5M1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ1IyVjBJR0ZzYkNCdGIyNXBkRzl5Y3lCbWNtOXRJSHRBYkdsdWF5QkhaR3N1UkdsemNHeGhlWDB1WEc0Z0lDQWdJQ292WEc0Z0lDQWdRR2RsZEhSbGNpaEJjbkpoZVNsY2JpQWdJQ0JuWlhRZ2JXOXVhWFJ2Y25Nb0tUb2dRWEp5WVhrOFIyUnJMazF2Ym1sMGIzSStJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVoyVjBYMjF2Ym1sMGIzSnpLQ2xjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUJYYVc1a2IzZHpJSFJvWVhRZ2FHRnpJR0psWlc0Z1lXUmtaV1FnZEc4Z2RHaHBjeUJoY0hCY2JpQWdJQ0FnS2lCMWMybHVaeUI3UUd4cGJtc2dSM1JyTGtGd2NHeHBZMkYwYVc5dUxuQnliM1J2ZEhsd1pTNWhaR1JmZDJsdVpHOTNmUzVjYmlBZ0lDQWdLaTljYmlBZ0lDQkFaMlYwZEdWeUtFRnljbUY1S1Z4dUlDQWdJR2RsZENCM2FXNWtiM2R6S0NrNklFRnljbUY1UEVkMGF5NVhhVzVrYjNjK0lIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WjJWMFgzZHBibVJ2ZDNNb0tWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlGTm9iM0owWTNWMElHWnZjaUI3UUd4cGJtc2dSM1JyTGxObGRIUnBibWR6TG5CeWIzUnZkSGx3WlM1bmRHdFVhR1Z0WlU1aGJXVjlYRzRnSUNBZ0lDb3ZYRzRnSUNBZ1FITmxkSFJsY2loVGRISnBibWNwWEc0Z0lDQWdjMlYwSUdkMGExUm9aVzFsS0c1aGJXVTZJSE4wY21sdVp5a2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxpTnpaWFIwYVc1bmN5NW5kR3RVYUdWdFpVNWhiV1VnUFNCdVlXMWxYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dVMmh2Y25SamRYUWdabTl5SUh0QWJHbHVheUJIZEdzdVUyVjBkR2x1WjNNdWNISnZkRzkwZVhCbExtZDBhMVJvWlcxbFRtRnRaWDFjYmlBZ0lDQWdLaTljYmlBZ0lDQkFaMlYwZEdWeUtGTjBjbWx1WnlsY2JpQWdJQ0JuWlhRZ1ozUnJWR2hsYldVb0tTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGlOelpYUjBhVzVuY3k1bmRHdFVhR1Z0WlU1aGJXVmNiaUFnSUNCOVhHNWNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQlRhRzl5ZEdOMWRDQm1iM0lnZTBCc2FXNXJJRWQwYXk1VFpYUjBhVzVuY3k1d2NtOTBiM1I1Y0dVdVozUnJTV052YmxSb1pXMWxUbUZ0WlgxY2JpQWdJQ0FnS2k5Y2JpQWdJQ0JBYzJWMGRHVnlLRk4wY21sdVp5bGNiaUFnSUNCelpYUWdhV052YmxSb1pXMWxLRzVoYldVNklITjBjbWx1WnlrZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TGlOelpYUjBhVzVuY3k1bmRHdEpZMjl1VkdobGJXVk9ZVzFsSUQwZ2JtRnRaVnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJRk5vYjNKMFkzVjBJR1p2Y2lCN1FHeHBibXNnUjNSckxsTmxkSFJwYm1kekxuQnliM1J2ZEhsd1pTNW5kR3RKWTI5dVZHaGxiV1ZPWVcxbGZWeHVJQ0FnSUNBcUwxeHVJQ0FnSUVCblpYUjBaWElvVTNSeWFXNW5LVnh1SUNBZ0lHZGxkQ0JwWTI5dVZHaGxiV1VvS1NCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMaU56WlhSMGFXNW5jeTVuZEd0SlkyOXVWR2hsYldWT1lXMWxYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dVMmh2Y25SamRYUWdabTl5SUh0QWJHbHVheUJIZEdzdVUyVjBkR2x1WjNNdWNISnZkRzkwZVhCbExtZDBhME4xY25OdmNsUm9aVzFsVG1GdFpYMWNiaUFnSUNBZ0tpOWNiaUFnSUNCQWMyVjBkR1Z5S0ZOMGNtbHVaeWxjYmlBZ0lDQnpaWFFnWTNWeWMyOXlWR2hsYldVb2JtRnRaVG9nYzNSeWFXNW5LU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVJM05sZEhScGJtZHpMbWQwYTBOMWNuTnZjbFJvWlcxbFRtRnRaU0E5SUc1aGJXVmNiaUFnSUNCOVhHNWNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQlRhRzl5ZEdOMWRDQm1iM0lnZTBCc2FXNXJJRWQwYXk1VFpYUjBhVzVuY3k1d2NtOTBiM1I1Y0dVdVozUnJRM1Z5YzI5eVZHaGxiV1ZPWVcxbGZWeHVJQ0FnSUNBcUwxeHVJQ0FnSUVCblpYUjBaWElvVTNSeWFXNW5LVnh1SUNBZ0lHZGxkQ0JqZFhKemIzSlVhR1Z0WlNncElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11STNObGRIUnBibWR6TG1kMGEwTjFjbk52Y2xSb1pXMWxUbUZ0WlZ4dUlDQWdJSDFjYmx4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUVkbGRDQmhJSGRwYm1SdmR5QmllU0JwZEhNZ2UwQnNhVzVySUVkMGF5NVhhV1JuWlhRdWNISnZkRzkwZVhCbExtNWhiV1Y5SUhSb1lYUWdhR0Z6SUdKbFpXNGdZV1JrWldRZ2RHOGdkR2hwY3lCaGNIQmNiaUFnSUNBZ0tpQjFjMmx1WnlCN1FHeHBibXNnUjNSckxrRndjR3hwWTJGMGFXOXVMbkJ5YjNSdmRIbHdaUzVoWkdSZmQybHVaRzkzZlM1Y2JpQWdJQ0FnS2k5Y2JpQWdJQ0JuWlhSZmQybHVaRzkzS0c1aGJXVTZJSE4wY21sdVp5a2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1M2FXNWtiM2R6TG1acGJtUW9LSGNwSUQwK0lIY3VibUZ0WlNBOVBUMGdibUZ0WlNsY2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCVWIyZG5iR1VnZEdobElIWnBjMmxpYVd4cGRIa2diMllnWVNCM2FXNWtiM2NnWW5rZ2FYUnpJSHRBYkdsdWF5QkhkR3N1VjJsa1oyVjBMbkJ5YjNSdmRIbHdaUzV1WVcxbGZWeHVJQ0FnSUNBcUlIUm9ZWFFnYUdGeklHSmxaVzRnWVdSa1pXUWdkRzhnZEdocGN5QmhjSEFnZFhOcGJtY2dlMEJzYVc1cklFZDBheTVCY0hCc2FXTmhkR2x2Ymk1d2NtOTBiM1I1Y0dVdVlXUmtYM2RwYm1SdmQzMHVYRzRnSUNBZ0lDb3ZYRzRnSUNBZ2RHOW5aMnhsWDNkcGJtUnZkeWh1WVcxbE9pQnpkSEpwYm1jcElIdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2QybHVJRDBnZEdocGN5NW5aWFJmZDJsdVpHOTNLRzVoYldVcFhHNGdJQ0FnSUNBZ0lHbG1JQ2doZDJsdUtTQjBhSEp2ZHlCRmNuSnZjaWhnYm04Z2QybHVaRzkzSUhKbFoybHpkR1Z5WldRZ2QybDBhQ0J1WVcxbElGd2lKSHR1WVcxbGZWd2lZQ2xjYmlBZ0lDQWdJQ0FnZDJsdUxuWnBjMmxpYkdVZ1BTQWhkMmx1TG5acGMybGliR1ZjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUJTWlhObGRDQndjbVYyYVc5MWMyeDVJSE5sZENCamMzTWdjSEp2ZG1sa1pYSnpJSGRwZEdnZ2UwQnNhVzVySUVGd2NDNXdjbTkwYjNSNWNHVXVZWEJ3YkhsZlkzTnpmUzVjYmlBZ0lDQWdLaTljYmlBZ0lDQnlaWE5sZEY5amMzTW9LU0I3WEc0Z0lDQWdJQ0FnSUdadmNpQW9ZMjl1YzNRZ2NISnZkbWxrWlhJZ2IyWWdkR2hwY3k0alkzTnpVSEp2ZG1sa1pYSnpLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQkhkR3N1VTNSNWJHVkRiMjUwWlhoMExuSmxiVzkyWlY5d2NtOTJhV1JsY2w5bWIzSmZaR2x6Y0d4aGVTaDBhR2x6TGlOa2FYTndiR0Y1TENCd2NtOTJhV1JsY2lsY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlFRmtaQ0JoSUc1bGR5QjdRR3hwYm1zZ1IzUnJMa056YzFCeWIzWnBaR1Z5ZlM1Y2JpQWdJQ0FnS2lCQWNHRnlZVzBnYzNSNWJHVWdRM056SUhOMGNtbHVaeUJ2Y2lCaElIQmhkR2dnZEc4Z1lTQmpjM01nWm1sc1pTNWNiaUFnSUNBZ0tpOWNiaUFnSUNCaGNIQnNlVjlqYzNNb2MzUjViR1U2SUhOMGNtbHVaeXdnY21WelpYUWdQU0JtWVd4elpTa2dlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQndjbTkyYVdSbGNpQTlJRzVsZHlCSGRHc3VRM056VUhKdmRtbGtaWElvS1Z4dVhHNGdJQ0FnSUNBZ0lIQnliM1pwWkdWeUxtTnZibTVsWTNRb1hDSndZWEp6YVc1bkxXVnljbTl5WENJc0lDaGZMQ0J6WldOMGFXOXVMQ0JsY25KdmNpa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2JtRnRaU0E5SUhObFkzUnBiMjR1WjJWMFgyWnBiR1VvS1Q4dVoyVjBYMkpoYzJWdVlXMWxLQ2tnUHo4Z1hDSmNJbHh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnYkdsdVpTQTlJSE5sWTNScGIyNHVaMlYwWDNOMFlYSjBYMnh2WTJGMGFXOXVLQ2t1YkdsdVpYTWdLeUF4WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCamFHRnljeUE5SUhObFkzUnBiMjR1WjJWMFgzTjBZWEowWDJ4dlkyRjBhVzl1S0NrdWJHbHVaVjlqYUdGeWN5QXJJREZjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvWUVOVFV5QkZjbkp2Y2lBa2UyNWhiV1Y5T2lSN2JHbHVaWDA2Skh0amFHRnljMzBnSkh0bGNuSnZjaTV0WlhOellXZGxmV0FwWEc0Z0lDQWdJQ0FnSUgwcFhHNWNiaUFnSUNBZ0lDQWdhV1lnS0hKbGMyVjBLU0IwYUdsekxuSmxjMlYwWDJOemN5Z3BYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tFZE1hV0l1Wm1sc1pWOTBaWE4wS0hOMGVXeGxMQ0JIVEdsaUxrWnBiR1ZVWlhOMExrVllTVk5VVXlrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhCeWIzWnBaR1Z5TG14dllXUmZabkp2YlY5d1lYUm9LSE4wZVd4bEtWeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLSE4wZVd4bExuTjBZWEowYzFkcGRHZ29YQ0p5WlhOdmRYSmpaVG92TDF3aUtTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NISnZkbWxrWlhJdWJHOWhaRjltY205dFgzSmxjMjkxY21ObEtITjBlV3hsTG5KbGNHeGhZMlVvWENKeVpYTnZkWEpqWlRvdkwxd2lMQ0JjSWx3aUtTbGNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhCeWIzWnBaR1Z5TG14dllXUmZabkp2YlY5emRISnBibWNvYzNSNWJHVXBYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCSGRHc3VVM1I1YkdWRGIyNTBaWGgwTG1Ga1pGOXdjbTkyYVdSbGNsOW1iM0pmWkdsemNHeGhlU2hjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11STJScGMzQnNZWGtzWEc0Z0lDQWdJQ0FnSUNBZ0lDQndjbTkyYVdSbGNpeGNiaUFnSUNBZ0lDQWdJQ0FnSUVkMGF5NVRWRmxNUlY5UVVrOVdTVVJGVWw5UVVrbFBVa2xVV1Y5VlUwVlNMRnh1SUNBZ0lDQWdJQ0FwWEc1Y2JpQWdJQ0FnSUNBZ2RHaHBjeTRqWTNOelVISnZkbWxrWlhKekxuQjFjMmdvY0hKdmRtbGtaWElwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nVTJodmNuUmpkWFFnWm05eUlIdEFiR2x1YXlCSGRHc3VTV052YmxSb1pXMWxMbkJ5YjNSdmRIbHdaUzVoWkdSZmMyVmhjbU5vWDNCaGRHaDlMbHh1SUNBZ0lDQXFMMXh1SUNBZ0lHRmtaRjlwWTI5dWN5aHdZWFJvT2lCemRISnBibWNwSUh0Y2JpQWdJQ0FnSUNBZ1IzUnJMa2xqYjI1VWFHVnRaUzVuWlhSZlptOXlYMlJwYzNCc1lYa29kR2hwY3k0alpHbHpjR3hoZVNrdVlXUmtYM05sWVhKamFGOXdZWFJvS0hCaGRHZ3BYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dVWFZwZENCaGJtUWdaWGhwZENCMGFHVWdZWEJ3YkdsallYUnBiMjR1WEc0Z0lDQWdJQ292WEc0Z0lDQWdjWFZwZENoamIyUmxJRDBnTUNrZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TGlOa1luVnpVMlZ5ZG1salpTNXpkRzl3S0NsY2JpQWdJQ0FnSUNBZ2MzVndaWEl1Y1hWcGRDZ3BYRzRnSUNBZ0lDQWdJR1Y0YVhRb1kyOWtaU2xjYmlBZ0lDQjlYRzVjYmlBZ0lDQmpiMjV6ZEhKMVkzUnZjaWdwSUh0Y2JpQWdJQ0FnSUNBZ2MzVndaWElvZXlCbWJHRm5jem9nUjJsdkxrRndjR3hwWTJGMGFXOXVSbXhoWjNNdVNFRk9SRXhGVTE5RFQwMU5RVTVFWDB4SlRrVWdmU2xjYmx4dUlDQWdJQ0FnSUNCMGFHbHpMaU5rWW5WelUyVnlkbWxqWlNBOUlHNWxkeUJCY0hCRVFuVnpLSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUnZaMmRzWlZkcGJtUnZkem9nZEdocGN5NTBiMmRuYkdWZmQybHVaRzkzTG1KcGJtUW9kR2hwY3lrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J4ZFdsME9pQjBhR2x6TG5GMWFYUXVZbWx1WkNoMGFHbHpLU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxjWFZsYzNRNklDaGhjbWQyS1NBOVBpQnVaWGNnVUhKdmJXbHpaU2dvY21WemIyeDJaU2tnUFQ0Z2RHaHBjeTV5WlhGMVpYTjBLR0Z5WjNZc0lISmxjMjlzZG1VcEtTeGNiaUFnSUNBZ0lDQWdJQ0FnSUdsdWMyVmpkRzl5T2lBb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUjNSckxsZHBibVJ2ZHk1elpYUmZhVzUwWlhKaFkzUnBkbVZmWkdWaWRXZG5hVzVuS0hSeWRXVXBYRzRnSUNBZ0lDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQjlLVnh1WEc0Z0lDQWdJQ0FnSUhSb2FYTXVJMlJwYzNCc1lYa3VaMlYwWDIxdmJtbDBiM0p6S0NrdVkyOXVibVZqZENoY0ltbDBaVzF6TFdOb1lXNW5aV1JjSWl3Z0tDa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dWIzUnBabmtvWENKdGIyNXBkRzl5YzF3aUtWeHVJQ0FnSUNBZ0lDQjlLVnh1WEc0Z0lDQWdJQ0FnSUhSb2FYTXVZMjl1Ym1WamRDaGNJbmRwYm1SdmR5MWhaR1JsWkZ3aUxDQW9YeXdnZDJsdVpHOTNLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnBaREVnUFNCM2FXNWtiM2N1WTI5dWJtVmpkQ2hjSW01dmRHbG1lVG82ZG1semFXSnNaVndpTENBb0tTQTlQaUIwYUdsekxuZHBibVJ2ZDFSdloyZHNaV1FvZDJsdVpHOTNLU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdsa01pQTlJSFJvYVhNdVkyOXVibVZqZENoY0luZHBibVJ2ZHkxeVpXMXZkbVZrWENJc0lDaGZMQ0J5WlcxdmRtVmtLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSEpsYlc5MlpXUWdQVDBnZDJsdVpHOTNLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIZHBibVJ2ZHk1a2FYTmpiMjV1WldOMEtHbGtNU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVrYVhOamIyNXVaV04wS0dsa01pbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtWeHVJQ0FnSUNBZ0lDQjlLVnh1WEc0Z0lDQWdJQ0FnSUhSb2FYTXVJM05sZEhScGJtZHpMbU52Ym01bFkzUW9YQ0p1YjNScFpubGNJaXdnS0Y4c0lIc2dibUZ0WlNCOUtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnpkMmwwWTJnZ0tHNWhiV1VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJRndpWjNSckxYUm9aVzFsTFc1aGJXVmNJanBjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV1YjNScFpua29YQ0puZEdzdGRHaGxiV1ZjSWlsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVd0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJRndpWjNSckxXbGpiMjR0ZEdobGJXVXRibUZ0WlZ3aU9seHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtNXZkR2xtZVNoY0ltbGpiMjR0ZEdobGJXVmNJaWxjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3RjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElGd2laM1JyTFdOMWNuTnZjaTEwYUdWdFpTMXVZVzFsWENJNlhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWJtOTBhV1o1S0Z3aVkzVnljMjl5TFhSb1pXMWxYQ0lwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdWbVlYVnNkRHBjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3RjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmU2xjYmlBZ0lDQjlYRzVjYmlBZ0lDQkFjMmxuYm1Gc0tFRnljbUY1TENCR2RXNWpkR2x2YmlsY2JpQWdJQ0J3Y21sMllYUmxJSEpsY1hWbGMzUW9ZWEpuY3pvZ2MzUnlhVzVuVzEwc0lISmxjM0J2Ym5ObE9pQW9jbVZ6Y0c5dWMyVTZJSE4wY21sdVp5a2dQVDRnZG05cFpDa2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTRqY21WeGRXVnpkRWhoYm1Sc1pYSnpJRDA5UFNBd0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYTndiMjV6WlNoZ2FXNXpkR0Z1WTJVZ1hDSWtlM1JvYVhNdWFXNXpkR0Z1WTJWT1lXMWxmVndpSUdoaGN5QnVieUJ5WlhGMVpYTjBJR2hoYm1Sc1pYSWdhVzF3YkdWdFpXNTBaV1JnS1Z4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIWnZhV1FnWVhKbmMxeHVJQ0FnSUgxY2JseHVJQ0FnSUhabWRXNWpYMk52YlcxaGJtUmZiR2x1WlNoamJXUTZJRWRwYnk1QmNIQnNhV05oZEdsdmJrTnZiVzFoYm1STWFXNWxLVG9nYm5WdFltVnlJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tHTnRaQzVwYzFKbGJXOTBaU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1eVpYRjFaWE4wS0dOdFpDNW5aWFJmWVhKbmRXMWxiblJ6S0Nrc0lDaHpkSElwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiV1F1Y0hKcGJuUmZiR2wwWlhKaGJDaHpkSElnS3lCY0lseGNibHdpS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdFpDNWtiMjVsS0NsY2JpQWdJQ0FnSUNBZ0lDQWdJSDBwWEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1odmJHUW9LVnh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTRqWkdKMWMxTmxjblpwWTJVdWMyVnlkbVVvZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJSFJvYVhNdVlYQndiR2xqWVhScGIyNUpaQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIMHBYRzRnSUNBZ0lDQWdJQ0FnSUNCamNtVmhkR1ZTYjI5MEtDaGthWE53YjNObEtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWpiMjV1WldOMEtGd2ljMmgxZEdSdmQyNWNJaXdnWkdsemNHOXpaU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxpTnRZV2x1UHk0b0xpNHVjSEp2WjNKaGJVRnlaM01wWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlLVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SURCY2JpQWdJQ0I5WEc1Y2JpQWdJQ0J6ZEdGeWRDaGpiMjVtYVdjNklGTjBZWEowUTI5dVptbG5LU0I3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJSHNnYldGcGJpd2djbVZ4ZFdWemRFaGhibVJzWlhJc0lHbHVjM1JoYm1ObFRtRnRaU3dnWTNOekxDQnBZMjl1Y3l3Z0xpNHVZMlpuSUgwZ1BTQmpiMjVtYVdkY2JseHVJQ0FnSUNBZ0lDQjBhR2x6TGlOdFlXbHVJRDBnYldGcGJseHVJQ0FnSUNBZ0lDQlBZbXBsWTNRdVlYTnphV2R1S0hSb2FYTXNJR05tWnlsY2JseHVJQ0FnSUNBZ0lDQnBaaUFvY21WeGRXVnpkRWhoYm1Sc1pYSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WTI5dWJtVmpkQ2hjSW5KbGNYVmxjM1JjSWl3Z0tGOHNJR0Z5WjNNc0lISmxjM0J2Ym5ObEtTQTlQaUJ5WlhGMVpYTjBTR0Z1Wkd4bGNpaGhjbWR6TENCeVpYTndiMjV6WlNrcFhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JwWmlBb2FXNXpkR0Z1WTJWT1lXMWxLU0IwYUdsekxpTnBibk4wWVc1alpVNWhiV1VnUFNCcGJuTjBZVzVqWlU1aGJXVmNiaUFnSUNBZ0lDQWdhV1lnS0dOemN5a2dkR2hwY3k1aGNIQnNlVjlqYzNNb1kzTnpMQ0JtWVd4elpTbGNiaUFnSUNBZ0lDQWdhV1lnS0dsamIyNXpLU0JoY0hBdVlXUmtYMmxqYjI1ektHbGpiMjV6S1Z4dVhHNGdJQ0FnSUNBZ0lIUm9hWE11WVhCd2JHbGpZWFJwYjI1SlpDQTlJRndpYVc4dVFYTjBZV3d1WENJZ0t5QjBhR2x6TG1sdWMzUmhibU5sVG1GdFpWeHVJQ0FnSUNBZ0lDQnpaWFJEYjI1emIyeGxURzluUkc5dFlXbHVLSFJvYVhNdWFXNXpkR0Z1WTJWT1lXMWxLVnh1SUNBZ0lDQWdJQ0IwYUdsekxuSjFia0Z6ZVc1aktIQnliMmR5WVcxQmNtZHpLVnh1SUNBZ0lIMWNibHh1SUNBZ0lHTnZibTVsWTNROFV5QmxlSFJsYm1SeklHdGxlVzltSUVGd2NGTnBaMjVoYkhNK0tGeHVJQ0FnSUNBZ0lDQnphV2R1WVd3NklGTXNYRzRnSUNBZ0lDQWdJR05oYkd4aVlXTnJPaUJIVDJKcVpXTjBMbE5wWjI1aGJFTmhiR3hpWVdOclBIUm9hWE1zSUVGd2NGTnBaMjVoYkhOYlUxMCtMRnh1SUNBZ0lDazZJRzUxYldKbGNpQjdYRzRnSUNBZ0lDQWdJR2xtSUNoemFXZHVZV3dnUFQwOUlGd2ljbVZ4ZFdWemRGd2lLU0IwYUdsekxpTnlaWEYxWlhOMFNHRnVaR3hsY25NZ0t6MGdNVnh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXVibVZqZENoemFXZHVZV3dzSUdOaGJHeGlZV05yS1Z4dUlDQWdJSDFjYm4xY2JseHVZMjl1YzNRZ1lYQndJRDBnYm1WM0lFRndjQ2dwWEc1bGVIQnZjblFnWkdWbVlYVnNkQ0JoY0hCY2JpSXNJQ0l2S2lwY2JpQXFJRUVnZTBCc2FXNXJJRk5sY25acFkyVjlJR04xY25KbGJuUnNlU0J2Ym14NUlHRnNiRzkzY3lCcGJuUmxjbVpoWTJsdVp5QjNhWFJvSUdFZ2MybHVaMnhsSUdsdWRHVnlabUZqWlNCdlppQmhJSEpsYlc5MFpTQnZZbXBsWTNRdVhHNGdLaUJKYmlCMGFHVWdablYwZFhKbElFa2dkMkZ1ZENCMGJ5QmpiMjFsSUhWd0lIZHBkR2dnWVc0Z1FWQkpJSFJ2SUdKbElHRmliR1VnZEc4Z1kzSmxZWFJsSUZObGNuWnBZMlVnYjJKcVpXTjBjeUJtYjNJZ2JYVnNkR2x3YkdWY2JpQXFJR2x1ZEdWeVptRmpaWE1nYjJZZ1lXNGdiMkpxWldOMElHRjBJSFJvWlNCellXMWxJSFJwYldVdUlFVjRZVzF3YkdVZ2RYTmhaMlVnZDI5MWJHUWdZbVVnWm05eUlHVjRZVzF3YkdVZ1kyOXRZbWx1YVc1blhHNGdLaUJjSW05eVp5NXRjSEpwY3k1TlpXUnBZVkJzWVhsbGNqSmNJaUJoYm1RZ1hDSnZjbWN1YlhCeWFYTXVUV1ZrYVdGUWJHRjVaWEl5TGxCc1lYbGxjbHdpSUdsdWRHOGdZU0J6YVc1bmJHVWdiMkpxWldOMExseHVJQ292WEc1cGJYQnZjblFnUjJsdklHWnliMjBnWENKbmFUb3ZMMGRwYjF3aVhHNXBiWEJ2Y25RZ1IweHBZaUJtY205dElGd2laMms2THk5SFRHbGlYQ0pjYm1sdGNHOXlkQ0JIVDJKcVpXTjBJR1p5YjIwZ1hDSm5hVG92TDBkUFltcGxZM1JjSWx4dWFXMXdiM0owSUhzZ1pHVm1hVzVsVUhKdmNHVnlkSGxIWlhSMFpYSXNJR3RsWW1GaWFXWjVMQ0I0Yld3Z2ZTQm1jbTl0SUZ3aUxpOTFkR2xzTG1welhDSmNibWx0Y0c5eWRDQjBlWEJsSUhzZ1JHVmxjRWx1Wm1WeUlIMGdabkp2YlNCY0lpNHZkbUZ5YVdGdWRDNXFjMXdpWEc1cGJYQnZjblFnZTF4dUlDQWdJSEpsWjJsemRHVnlMRnh1SUNBZ0lIQnliM0JsY25SNUlHRnpJR2R3Y205d1pYSjBlU3hjYmlBZ0lDQnphV2R1WVd3Z1lYTWdaM05wWjI1aGJDeGNiaUFnSUNCblpYUjBaWElnWVhNZ1oyZGxkSFJsY2l4Y2JpQWdJQ0J6WlhSMFpYSWdZWE1nWjNObGRIUmxjaXhjYm4wZ1puSnZiU0JjSWk0dloyOWlhbVZqZEM1cWMxd2lYRzVjYm1OdmJuTjBJRVJGUmtGVlRGUmZWRWxOUlU5VlZDQTlJREV3WHpBd01GeHVYRzVsZUhCdmNuUWdZMjl1YzNRZ1ZtRnlhV0Z1ZENBOUlFZE1hV0l1Vm1GeWFXRnVkRnh1Wlhod2IzSjBJSFI1Y0dVZ1ZtRnlhV0Z1ZER4VUlHVjRkR1Z1WkhNZ2MzUnlhVzVuUGlBOUlFZE1hV0l1Vm1GeWFXRnVkRHhVUGx4dVhHNWpiMjV6ZENCcGJtWnZJRDBnVTNsdFltOXNLRndpWkdKMWN5QnBiblJsY21aaFkyVWdhVzVtYjF3aUtWeHVZMjl1YzNRZ2FXNTBaWEp1WVd4eklEMGdVM2x0WW05c0tGd2laR0oxY3lCcGJuUmxjbVpoWTJVZ2FXNTBaWEp1WVd4elhDSXBYRzVqYjI1emRDQnlaVzF2ZEdWTlpYUm9iMlFnUFNCVGVXMWliMndvWENKd2NtOTRlU0J5WlcxdmRHVk5aWFJvYjJSY0lpbGNibU52Ym5OMElISmxiVzkwWlUxbGRHaHZaRUZ6ZVc1aklEMGdVM2x0WW05c0tGd2ljSEp2ZUhrZ2NtVnRiM1JsVFdWMGFHOWtRWE41Ym1OY0lpbGNibU52Ym5OMElISmxiVzkwWlZCeWIzQmxjblI1VTJWMElEMGdVM2x0WW05c0tGd2ljSEp2ZUhrZ2NtVnRiM1JsVUhKdmNHVnlkSGxUWlhSY0lpbGNibHh1ZEhsd1pTQkRkSGdnUFNCN0lIQnlhWFpoZEdVNklHWmhiSE5sT3lCemRHRjBhV002SUdaaGJITmxPeUJ1WVcxbE9pQnpkSEpwYm1jZ2ZWeHVYRzR2S2lwY2JpQXFJRUpoYzJVZ2RIbHdaU0JtYjNJZ1JFSjFjeUJ6WlhKMmFXTmxjeUJoYm1RZ2NISnZlR2xsY3k0Z1NXNTBaWEptWVdObElHNWhiV1VnYVhNZ2MyVjBJSGRwZEdoY2JpQXFJSFJvWlNCN1FHeHBibXNnYVdaaFkyVjlJR1JsWTI5eVlYUnZjaUIzYUdsamFDQmhiSE52SUhKbFoybHpkR1Z5SUdsMElHRnpJR0VnUjA5aWFtVmpkQ0IwZVhCbExseHVJQ292WEc1bGVIQnZjblFnWTJ4aGMzTWdVMlZ5ZG1salpTQmxlSFJsYm1SeklFZFBZbXBsWTNRdVQySnFaV04wSUh0Y2JpQWdJQ0J6ZEdGMGFXTWdXMmx1Wm05ZFB6b2dSMmx2TGtSQ2RYTkpiblJsY21aaFkyVkpibVp2WEc1Y2JpQWdJQ0J6ZEdGMGFXTWdlMXh1SUNBZ0lDQWdJQ0JIVDJKcVpXTjBMbkpsWjJsemRHVnlRMnhoYzNNb2RHaHBjeWxjYmlBZ0lDQjlYRzVjYmlBZ0lDQmJhVzUwWlhKdVlXeHpYVG9nZTF4dUlDQWdJQ0FnSUNCa1luVnpUMkpxWldOMFB6b2dSMmx2TGtSQ2RYTkZlSEJ2Y25SbFpFOWlhbVZqZEZ4dUlDQWdJQ0FnSUNCd2NtOTRlVDg2SUVkcGJ5NUVRblZ6VUhKdmVIbGNiaUFnSUNBZ0lDQWdjSEpwZGpvZ1VtVmpiM0prUEhOMGNtbHVaeUI4SUhONWJXSnZiQ3dnZFc1cmJtOTNiajVjYmlBZ0lDQWdJQ0FnYjI1VGRHOXdPaUJUWlhROEtDa2dQVDRnZG05cFpENWNiaUFnSUNCOUlEMGdlMXh1SUNBZ0lDQWdJQ0J3Y21sMk9pQjdmU3hjYmlBZ0lDQWdJQ0FnYjI1VGRHOXdPaUJ1WlhjZ1UyVjBQQ2dwSUQwK0lIWnZhV1ErS0Nrc1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnSTJsdVptODZJRWRwYnk1RVFuVnpTVzUwWlhKbVlXTmxTVzVtYjF4dVhHNGdJQ0FnWTI5dWMzUnlkV04wYjNJb0tTQjdYRzRnSUNBZ0lDQWdJSE4xY0dWeUtDbGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2MyVnlkbWxqWlNBOUlIUm9hWE11WTI5dWMzUnlkV04wYjNJZ1lYTWdkVzVyYm05M2JpQmhjeUIwZVhCbGIyWWdVMlZ5ZG1salpWeHVJQ0FnSUNBZ0lDQnBaaUFvSVhObGNuWnBZMlZiYVc1bWIxMHBJSFJvY205M0lFVnljbTl5S0Z3aWJXbHpjMmx1WnlCcGJuUmxjbVpoWTJVZ2FXNW1iMXdpS1Z4dUlDQWdJQ0FnSUNCMGFHbHpMaU5wYm1adklEMGdjMlZ5ZG1salpWdHBibVp2WFZ4dUlDQWdJSDFjYmx4dUlDQWdJRzV2ZEdsbWVTaHdjbTl3WlhKMGVVNWhiV1U2SUVWNGRISmhZM1E4YTJWNWIyWWdkR2hwY3l3Z2MzUnlhVzVuUGlCOElDaHpkSEpwYm1jZ0ppQjdmU2twT2lCMmIybGtJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdjSEp2Y0NBOUlIUm9hWE11STJsdVptOHViRzl2YTNWd1gzQnliM0JsY25SNUtIQnliM0JsY25SNVRtRnRaU2xjYmx4dUlDQWdJQ0FnSUNCcFppQW9jSEp2Y0NBbUppQjBhR2x6VzJsdWRHVnlibUZzYzEwdVpHSjFjMDlpYW1WamRDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjMXRwYm5SbGNtNWhiSE5kTG1SaWRYTlBZbXBsWTNRdVpXMXBkRjl3Y205d1pYSjBlVjlqYUdGdVoyVmtLRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ5YjNCbGNuUjVUbUZ0WlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdVpYY2dSMHhwWWk1V1lYSnBZVzUwS0hCeWIzQXVjMmxuYm1GMGRYSmxMQ0IwYUdselczQnliM0JsY25SNVRtRnRaU0JoY3lCclpYbHZaaUIwYUdselhTa3NYRzRnSUNBZ0lDQWdJQ0FnSUNBcFhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0J6ZFhCbGNpNXViM1JwWm5rb2NISnZjQ0EvSUd0bFltRmlhV1o1S0hCeWIzQmxjblI1VG1GdFpTa2dPaUJ3Y205d1pYSjBlVTVoYldVcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnWlcxcGRDaHVZVzFsT2lCemRISnBibWNzSUM0dUxuQmhjbUZ0Y3pvZ2RXNXJibTkzYmx0ZEtUb2dkbTlwWkNCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUhOcFoyNWhiQ0E5SUhSb2FYTXVJMmx1Wm04dWJHOXZhM1Z3WDNOcFoyNWhiQ2h1WVcxbEtWeHVYRzRnSUNBZ0lDQWdJR2xtSUNoemFXZHVZV3dnSmlZZ2RHaHBjMXRwYm5SbGNtNWhiSE5kTG1SaWRYTlBZbXBsWTNRcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJSE5wWjI1aGRIVnlaU0E5SUdBb0pIdHphV2R1WVd3dVlYSm5jeTV0WVhBb0tHRXBJRDArSUdFdWMybG5ibUYwZFhKbEtTNXFiMmx1S0Z3aVhDSXBmU2xnWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6VzJsdWRHVnlibUZzYzEwdVpHSjFjMDlpYW1WamRDNWxiV2wwWDNOcFoyNWhiQ2h1WVcxbExDQnVaWGNnUjB4cFlpNVdZWEpwWVc1MEtITnBaMjVoZEhWeVpTd2djR0Z5WVcxektTbGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWxiV2wwS0hOcFoyNWhiQ0EvSUd0bFltRmlhV1o1S0c1aGJXVXBJRG9nYm1GdFpTd2dMaTR1Y0dGeVlXMXpLVnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHZJSE5sY25abGNseHVJQ0FnSUNOb1lXNWtiR1ZRY205d1pYSjBlVWRsZENoZk9pQkhhVzh1UkVKMWMwVjRjRzl5ZEdWa1QySnFaV04wTENCd2NtOXdaWEowZVU1aGJXVTZJRVY0ZEhKaFkzUThhMlY1YjJZZ2RHaHBjeXdnYzNSeWFXNW5QaWtnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0J3Y205d0lEMGdkR2hwY3k0amFXNW1ieTVzYjI5cmRYQmZjSEp2Y0dWeWRIa29jSEp2Y0dWeWRIbE9ZVzFsS1Z4dVhHNGdJQ0FnSUNBZ0lHbG1JQ2doY0hKdmNDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHliM2NnUlhKeWIzSW9ZQ1I3ZEdocGN5NWpiMjV6ZEhKMVkzUnZjaTV1WVcxbGZTQm9ZWE1nYm04Z1pYaHdiM0owWldRZ2NISnZjR1Z5ZEhrNklGd2lKSHR3Y205d1pYSjBlVTVoYldWOVhDSmdLVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnZG1Gc2RXVWdQU0IwYUdselczQnliM0JsY25SNVRtRnRaVjFjYmlBZ0lDQWdJQ0FnYVdZZ0tIUjVjR1Z2WmlCMllXeDFaU0FoUFQwZ1hDSjFibVJsWm1sdVpXUmNJaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJIVEdsaUxsWmhjbWxoYm5Rb2NISnZjQzV6YVdkdVlYUjFjbVVzSUhaaGJIVmxLVnh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1MWJHeGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHZJSE5sY25abGNseHVJQ0FnSUNOb1lXNWtiR1ZRY205d1pYSjBlVk5sZENoY2JpQWdJQ0FnSUNBZ1h6b2dSMmx2TGtSQ2RYTkZlSEJ2Y25SbFpFOWlhbVZqZEN4Y2JpQWdJQ0FnSUNBZ2NISnZjR1Z5ZEhsT1lXMWxPaUJGZUhSeVlXTjBQR3RsZVc5bUlIUm9hWE1zSUhOMGNtbHVaejRzWEc0Z0lDQWdJQ0FnSUhaaGJIVmxPaUJIVEdsaUxsWmhjbWxoYm5Rc1hHNGdJQ0FnS1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUc1bGQxWmhiSFZsSUQwZ2RtRnNkV1V1WkdWbGNGVnVjR0ZqYXlncFhHNGdJQ0FnSUNBZ0lHTnZibk4wSUhCeWIzQWdQU0IwYUdsekxpTnBibVp2TG14dmIydDFjRjl3Y205d1pYSjBlU2h3Y205d1pYSjBlVTVoYldVcFhHNWNiaUFnSUNBZ0lDQWdhV1lnS0NGd2NtOXdLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhSEp2ZHlCRmNuSnZjaWhnSkh0MGFHbHpMbU52Ym5OMGNuVmpkRzl5TG01aGJXVjlJR2hoY3lCdWJ5QndjbTl3WlhKMGVUb2dYQ0lrZTNCeWIzQmxjblI1VG1GdFpYMWNJbUFwWEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnBaaUFvZEdocGMxdHdjbTl3WlhKMGVVNWhiV1ZkSUNFOVBTQnVaWGRXWVd4MVpTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjMXR3Y205d1pYSjBlVTVoYldWZElEMGdkbUZzZFdVdVpHVmxjRlZ1Y0dGamF6eGhibmsrS0NsY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4dklITmxjblpsY2x4dUlDQWdJQ055WlhSMWNtNUZjbkp2Y2lobGNuSnZjam9nZFc1cmJtOTNiaXdnYVc1MmIyTmhkR2x2YmpvZ1IybHZMa1JDZFhOTlpYUm9iMlJKYm5adlkyRjBhVzl1S1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvWlhKeWIzSXBYRzRnSUNBZ0lDQWdJR2xtSUNobGNuSnZjaUJwYm5OMFlXNWpaVzltSUVkTWFXSXVSWEp5YjNJcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJwYm5adlkyRjBhVzl1TG5KbGRIVnlibDluWlhKeWIzSW9aWEp5YjNJcFhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdhV1lnS0dWeWNtOXlJR2x1YzNSaGJtTmxiMllnUlhKeWIzSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCcGJuWnZZMkYwYVc5dUxuSmxkSFZ5Ymw5a1luVnpYMlZ5Y205eUtGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnljbTl5TG01aGJXVXVhVzVqYkhWa1pYTW9YQ0l1WENJcElEOGdaWEp5YjNJdWJtRnRaU0E2SUdCbmFuTXVTbE5GY25KdmNpNGtlMlZ5Y205eUxtNWhiV1Y5WUN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGNuSnZjaTV0WlhOellXZGxMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0tWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJR2x1ZG05allYUnBiMjR1Y21WMGRYSnVYMlJpZFhOZlpYSnliM0lvWENKbmFuTXVSRUoxYzFObGNuWnBZMlV1Vlc1cmJtOTNia1Z5Y205eVhDSXNJR0FrZTJWeWNtOXlmV0FwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeThnYzJWeWRtVnlYRzRnSUNBZ0kzSmxkSFZ5YmxaaGJIVmxLSFpoYkhWbE9pQjFibXR1YjNkdUxDQnRaWFJvYjJST1lXMWxPaUJ6ZEhKcGJtY3NJR2x1ZG05allYUnBiMjQ2SUVkcGJ5NUVRblZ6VFdWMGFHOWtTVzUyYjJOaGRHbHZiaWtnZTF4dUlDQWdJQ0FnSUNCcFppQW9kbUZzZFdVZ1BUMDlJRzUxYkd3Z2ZId2dkbUZzZFdVZ1BUMDlJSFZ1WkdWbWFXNWxaQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHbHVkbTlqWVhScGIyNHVjbVYwZFhKdVgzWmhiSFZsS0c1bGR5QkhUR2xpTGxaaGNtbGhiblFvWENJb0tWd2lMQ0JiWFNrcFhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JqYjI1emRDQmhjbWR6SUQwZ2RHaHBjeTRqYVc1bWJ5NXNiMjlyZFhCZmJXVjBhRzlrS0cxbGRHaHZaRTVoYldVcFB5NXZkWFJmWVhKbmN5QS9QeUJiWFZ4dUlDQWdJQ0FnSUNCamIyNXpkQ0J6YVdkdVlYUjFjbVVnUFNCZ0tDUjdZWEpuY3k1dFlYQW9LR0Z5WnlrZ1BUNGdZWEpuTG5OcFoyNWhkSFZ5WlNrdWFtOXBiaWhjSWx3aUtYMHBZRnh1SUNBZ0lDQWdJQ0JwWmlBb0lVRnljbUY1TG1selFYSnlZWGtvZG1Gc2RXVXBLU0IwYUhKdmR5QkZjbkp2Y2loY0luWmhiSFZsSUdoaGN5QjBieUJpWlNCaElIUjFjR3hsWENJcFhHNGdJQ0FnSUNBZ0lHbHVkbTlqWVhScGIyNHVjbVYwZFhKdVgzWmhiSFZsS0c1bGR5QkhUR2xpTGxaaGNtbGhiblFvYzJsbmJtRjBkWEpsTENCMllXeDFaU2twWEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeThnYzJWeWRtVnlYRzRnSUNBZ0kyaGhibVJzWlUxbGRHaHZaRU5oYkd3b1hHNGdJQ0FnSUNBZ0lGODZJRWRwYnk1RVFuVnpSWGh3YjNKMFpXUlBZbXBsWTNRc1hHNGdJQ0FnSUNBZ0lHMWxkR2h2WkU1aGJXVTZJRVY0ZEhKaFkzUThhMlY1YjJZZ2RHaHBjeXdnYzNSeWFXNW5QaXhjYmlBZ0lDQWdJQ0FnY0dGeVlXMWxkR1Z5Y3pvZ1IweHBZaTVXWVhKcFlXNTBMRnh1SUNBZ0lDQWdJQ0JwYm5adlkyRjBhVzl1T2lCSGFXOHVSRUoxYzAxbGRHaHZaRWx1ZG05allYUnBiMjRzWEc0Z0lDQWdLVG9nZG05cFpDQjdYRzRnSUNBZ0lDQWdJSFJ5ZVNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQjJZV3gxWlNBOUlDaDBhR2x6VzIxbGRHaHZaRTVoYldWZElHRnpJQ2d1TGk1aGNtZHpPaUIxYm10dWIzZHVXMTBwSUQwK0lIVnVhMjV2ZDI0cEtGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDNHVMbkJoY21GdFpYUmxjbk11WkdWbGNGVnVjR0ZqYXp4QmNuSmhlVHgxYm10dWIzZHVQajRvS1N4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ2xjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0haaGJIVmxJR2x1YzNSaGJtTmxiMllnUjB4cFlpNVdZWEpwWVc1MEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhVzUyYjJOaGRHbHZiaTV5WlhSMWNtNWZkbUZzZFdVb2RtRnNkV1VwWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLSFpoYkhWbElHbHVjM1JoYm1ObGIyWWdVSEp2YldselpTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzUwYUdWdUtDaDJZV3gxWlNrZ1BUNGdkR2hwY3k0amNtVjBkWEp1Vm1Gc2RXVW9kbUZzZFdVc0lHMWxkR2h2WkU1aGJXVXNJR2x1ZG05allYUnBiMjRwS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXVZMkYwWTJnb0tHVnljbTl5S1NBOVBpQjBhR2x6TGlOeVpYUjFjbTVGY25KdmNpaGxjbkp2Y2l3Z2FXNTJiMk5oZEdsdmJpa3BYRzRnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVJM0psZEhWeWJsWmhiSFZsS0haaGJIVmxMQ0J0WlhSb2IyUk9ZVzFsTENCcGJuWnZZMkYwYVc5dUtWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOUlHTmhkR05vSUNobGNuSnZjaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k0amNtVjBkWEp1UlhKeWIzSW9aWEp5YjNJc0lHbHVkbTlqWVhScGIyNHBYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZMeUJ6WlhKMlpYSmNiaUFnSUNCaGMzbHVZeUJ6WlhKMlpTaDdYRzRnSUNBZ0lDQWdJR0oxYzFSNWNHVWdQU0JIYVc4dVFuVnpWSGx3WlM1VFJWTlRTVTlPTEZ4dUlDQWdJQ0FnSUNCdVlXMWxJRDBnZEdocGN5NGphVzVtYnk1dVlXMWxMRnh1SUNBZ0lDQWdJQ0J2WW1wbFkzUlFZWFJvSUQwZ1hDSXZYQ0lnS3lCMGFHbHpMaU5wYm1adkxtNWhiV1V1YzNCc2FYUW9YQ0l1WENJcExtcHZhVzRvWENJdlhDSXBMRnh1SUNBZ0lDQWdJQ0JtYkdGbmN5QTlJRWRwYnk1Q2RYTk9ZVzFsVDNkdVpYSkdiR0ZuY3k1T1QwNUZMRnh1SUNBZ0lDQWdJQ0IwYVcxbGIzVjBJRDBnUkVWR1FWVk1WRjlVU1UxRlQxVlVMRnh1SUNBZ0lIMDZJSHRjYmlBZ0lDQWdJQ0FnWW5WelZIbHdaVDg2SUVkcGJ5NUNkWE5VZVhCbFhHNGdJQ0FnSUNBZ0lHNWhiV1UvT2lCemRISnBibWRjYmlBZ0lDQWdJQ0FnYjJKcVpXTjBVR0YwYUQ4NklITjBjbWx1WjF4dUlDQWdJQ0FnSUNCbWJHRm5jejg2SUVkcGJ5NUNkWE5PWVcxbFQzZHVaWEpHYkdGbmMxeHVJQ0FnSUNBZ0lDQjBhVzFsYjNWMFB6b2diblZ0WW1WeVhHNGdJQ0FnZlNBOUlIdDlLVG9nVUhKdmJXbHpaVHgwYUdselBpQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElHbHRjR3dnUFNCdVpYY2dSMmx2TGtSQ2RYTkZlSEJ2Y25SbFpFOWlhbVZqZENoY2JpQWdJQ0FnSUNBZ0lDQWdJQzh2SUVCMGN5MWxlSEJsWTNRdFpYSnliM0lnYldsemMybHVaeUJqYjI1emRISjFZM1J2Y2lCMGVYQmxYRzRnSUNBZ0lDQWdJQ0FnSUNCN0lHZGZhVzUwWlhKbVlXTmxYMmx1Wm04NklIUm9hWE11STJsdVptOGdmU3hjYmlBZ0lDQWdJQ0FnS1Z4dVhHNGdJQ0FnSUNBZ0lHbHRjR3d1WTI5dWJtVmpkQ2hjSW1oaGJtUnNaUzF0WlhSb2IyUXRZMkZzYkZ3aUxDQjBhR2x6TGlOb1lXNWtiR1ZOWlhSb2IyUkRZV3hzTG1KcGJtUW9kR2hwY3lrcFhHNGdJQ0FnSUNBZ0lHbHRjR3d1WTI5dWJtVmpkQ2hjSW1oaGJtUnNaUzF3Y205d1pYSjBlUzFuWlhSY0lpd2dkR2hwY3k0amFHRnVaR3hsVUhKdmNHVnlkSGxIWlhRdVltbHVaQ2gwYUdsektTbGNiaUFnSUNBZ0lDQWdhVzF3YkM1amIyNXVaV04wS0Z3aWFHRnVaR3hsTFhCeWIzQmxjblI1TFhObGRGd2lMQ0IwYUdsekxpTm9ZVzVrYkdWUWNtOXdaWEowZVZObGRDNWlhVzVrS0hSb2FYTXBLVnh1WEc0Z0lDQWdJQ0FnSUhSb2FYTXVJMmx1Wm04dVkyRmphR1ZmWW5WcGJHUW9LVnh1WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1VISnZiV2x6WlNnb2NtVnpiMngyWlN3Z2NtVnFaV04wS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjMjkxY21ObElEMWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhVzFsYjNWMElENGdNRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBL0lITmxkRlJwYldWdmRYUW9LQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaV3BsWTNRb1JYSnliM0lvWUhObGNuWmxJSFJwYldWa0lHOTFkR0FwS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemIzVnlZMlVnUFNCdWRXeHNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTd2dkR2x0Wlc5MWRDbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnT2lCdWRXeHNYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdOc1pXRnlJRDBnS0NrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoemIzVnlZMlVwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMnhsWVhKVWFXMWxiM1YwS0hOdmRYSmpaU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyOTFjbU5sSUQwZ2JuVnNiRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnWW5WelNXUWdQU0JIYVc4dVluVnpYMjkzYmw5dVlXMWxLRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0oxYzFSNWNHVXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibUZ0WlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWJHRm5jeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FvWTI5dWJqb2dSMmx2TGtSQ2RYTkRiMjV1WldOMGFXOXVLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJ5ZVNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcGJYQnNMbVY0Y0c5eWRDaGpiMjV1TENCdlltcGxZM1JRWVhSb0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjMXRwYm5SbGNtNWhiSE5kTG1SaWRYTlBZbXBsWTNRZ1BTQnBiWEJzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdselcybHVkR1Z5Ym1Gc2MxMHViMjVUZEc5d0xtRmtaQ2dvS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUjJsdkxtSjFjMTkxYm05M2JsOXVZVzFsS0dKMWMwbGtLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsdGNHd3VkVzVsZUhCdmNuUW9LVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVJMmx1Wm04dVkyRmphR1ZmY21Wc1pXRnpaU2dwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHVnNaWFJsSUhSb2FYTmJhVzUwWlhKdVlXeHpYUzVrWW5WelQySnFaV04wWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1Z4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYTnZiSFpsS0hSb2FYTXBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1kyRjBZMmdnS0dWeWNtOXlLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WldwbFkzUW9aWEp5YjNJcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOc1pXRnlMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05zWldGeUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnS1Z4dUlDQWdJQ0FnSUNCOUtWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4dklIQnliM2g1WEc0Z0lDQWdJMmhoYm1Sc1pWQnliM0JsY25ScFpYTkRhR0Z1WjJWa0tGeHVJQ0FnSUNBZ0lDQmZPaUJIYVc4dVJFSjFjMUJ5YjNoNUxGeHVJQ0FnSUNBZ0lDQmphR0Z1WjJWa09pQkhUR2xpTGxaaGNtbGhiblE4WENKaGUzTjJmVndpUGl4Y2JpQWdJQ0FnSUNBZ2FXNTJZV3hwWkdGMFpXUTZJSE4wY21sdVoxdGRMRnh1SUNBZ0lDa2dlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQnpaWFFnUFNCdVpYY2dVMlYwS0ZzdUxpNVBZbXBsWTNRdWEyVjVjeWhqYUdGdVoyVmtMbVJsWlhCVmJuQmhZMnNvS1Nrc0lDNHVMbWx1ZG1Gc2FXUmhkR1ZrWFNsY2JpQWdJQ0FnSUNBZ1ptOXlJQ2hqYjI1emRDQndjbTl3SUc5bUlITmxkQzUyWVd4MVpYTW9LU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dWIzUnBabmtvY0hKdmNDQmhjeUJGZUhSeVlXTjBQR3RsZVc5bUlIUm9hWE1zSUhOMGNtbHVaejRwWEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2THlCd2NtOTRlVnh1SUNBZ0lDTm9ZVzVrYkdWVGFXZHVZV3dvWEc0Z0lDQWdJQ0FnSUY4NklFZHBieTVFUW5WelVISnZlSGtzWEc0Z0lDQWdJQ0FnSUY5elpXNWtaWEk2SUhOMGNtbHVaeUI4SUc1MWJHd3NYRzRnSUNBZ0lDQWdJSE5wWjI1aGJEb2djM1J5YVc1bkxGeHVJQ0FnSUNBZ0lDQndZWEpoYldWMFpYSnpPaUJIVEdsaUxsWmhjbWxoYm5Rc1hHNGdJQ0FnS1NCN1hHNGdJQ0FnSUNBZ0lIUm9hWE11WlcxcGRDaHJaV0poWW1sbWVTaHphV2R1WVd3cExDQXVMaTV3WVhKaGJXVjBaWEp6TG1SbFpYQlZibkJoWTJzOFFYSnlZWGs4ZFc1cmJtOTNiajQrS0NrcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHk4Z2NISnZlSGxjYmlBZ0lDQWpjbVZ0YjNSbFRXVjBhRzlrVUdGeVlXMXpLRnh1SUNBZ0lDQWdJQ0J0WlhSb2IyUk9ZVzFsT2lCemRISnBibWNzWEc0Z0lDQWdJQ0FnSUdGeVozTTZJSFZ1YTI1dmQyNWJYU3hjYmlBZ0lDQXBPaUJRWVhKaGJXVjBaWEp6UEVkcGJ5NUVRblZ6VUhKdmVIbGJYQ0pqWVd4c1gzTjVibU5jSWwwK0lIdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2V5QndjbTk0ZVNCOUlEMGdkR2hwYzF0cGJuUmxjbTVoYkhOZFhHNGdJQ0FnSUNBZ0lHbG1JQ2doY0hKdmVIa3BJSFJvY205M0lFVnljbTl5S0Z3aWFXNTJZV3hwWkNCeVpXMXZkR1ZOWlhSb2IyUWdhVzUyYjJOaGRHbHZiam9nYm05MElHRWdjSEp2ZUhsY0lpbGNibHh1SUNBZ0lDQWdJQ0JqYjI1emRDQnRaWFJvYjJRZ1BTQjBhR2x6TGlOcGJtWnZMbXh2YjJ0MWNGOXRaWFJvYjJRb2JXVjBhRzlrVG1GdFpTbGNiaUFnSUNBZ0lDQWdhV1lnS0NGdFpYUm9iMlFwSUhSb2NtOTNJRVZ5Y205eUtGd2liV1YwYUc5a0lHNXZkQ0JtYjNWdVpGd2lLVnh1WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJSE5wWjI1aGRIVnlaU0E5SUdBb0pIdHRaWFJvYjJRdWFXNWZZWEpuY3k1dFlYQW9LR0VwSUQwK0lHRXVjMmxuYm1GMGRYSmxLUzVxYjJsdUtGd2lYQ0lwZlNsZ1hHNWNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlGdGNiaUFnSUNBZ0lDQWdJQ0FnSUcxbGRHaHZaRTVoYldVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1IweHBZaTVXWVhKcFlXNTBLSE5wWjI1aGRIVnlaU3dnWVhKbmN5a3NYRzRnSUNBZ0lDQWdJQ0FnSUNCSGFXOHVSRUoxYzBOaGJHeEdiR0ZuY3k1T1QwNUZMRnh1SUNBZ0lDQWdJQ0FnSUNBZ1JFVkdRVlZNVkY5VVNVMUZUMVZVTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZzYkN4Y2JpQWdJQ0FnSUNBZ1hWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4dklIQnliM2g1WEc0Z0lDQWdXM0psYlc5MFpVMWxkR2h2WkYwb2JXVjBhRzlrVG1GdFpUb2djM1J5YVc1bkxDQmhjbWR6T2lCMWJtdHViM2R1VzEwcE9pQkhUR2xpTGxaaGNtbGhiblFnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0J3WVhKaGJYTWdQU0IwYUdsekxpTnlaVzF2ZEdWTlpYUm9iMlJRWVhKaGJYTW9iV1YwYUc5a1RtRnRaU3dnWVhKbmN5bGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE5iYVc1MFpYSnVZV3h6WFM1d2NtOTRlU0V1WTJGc2JGOXplVzVqS0M0dUxuQmhjbUZ0Y3lsY2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2THlCd2NtOTRlVnh1SUNBZ0lGdHlaVzF2ZEdWTlpYUm9iMlJCYzNsdVkxMG9iV1YwYUc5a1RtRnRaVG9nYzNSeWFXNW5MQ0JoY21kek9pQjFibXR1YjNkdVcxMHBPaUJRY205dGFYTmxQRWRNYVdJdVZtRnlhV0Z1ZEQ0Z2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJRkJ5YjIxcGMyVW9LSEpsYzI5c2RtVXNJSEpsYW1WamRDa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSEo1SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J3WVhKaGJYTWdQU0IwYUdsekxpTnlaVzF2ZEdWTlpYUm9iMlJRWVhKaGJYTW9iV1YwYUc5a1RtRnRaU3dnWVhKbmN5bGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6VzJsdWRHVnlibUZzYzEwdWNISnZlSGtoTG1OaGJHd29MaTR1Y0dGeVlXMXpMQ0FvWHl3Z2NtVnpLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJ5ZVNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYTnZiSFpsS0hSb2FYTmJhVzUwWlhKdVlXeHpYUzV3Y205NGVTRXVZMkZzYkY5bWFXNXBjMmdvY21WektTbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCallYUmphQ0FvWlhKeWIzSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsYW1WamRDaGxjbkp2Y2lsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlJR05oZEdOb0lDaGxjbkp2Y2lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxhbVZqZENobGNuSnZjaWxjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmU2xjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZMeUJ3Y205NGVWeHVJQ0FnSUZ0eVpXMXZkR1ZRY205d1pYSjBlVk5sZEYwb2JtRnRaVG9nYzNSeWFXNW5MQ0IyWVd4MVpUb2dkVzVyYm05M2Jpa2dlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQndjbTk0ZVNBOUlIUm9hWE5iYVc1MFpYSnVZV3h6WFM1d2NtOTRlU0ZjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdjSEp2Y0NBOUlIUm9hWE11STJsdVptOHViRzl2YTNWd1gzQnliM0JsY25SNUtHNWhiV1VwSVZ4dVhHNGdJQ0FnSUNBZ0lHTnZibk4wSUhaaGNtbGhiblFnUFNCdVpYY2dSMHhwWWk1V1lYSnBZVzUwS0hCeWIzQXVjMmxuYm1GMGRYSmxMQ0IyWVd4MVpTbGNiaUFnSUNBZ0lDQWdjSEp2ZUhrdWMyVjBYMk5oWTJobFpGOXdjbTl3WlhKMGVTaHVZVzFsTENCMllYSnBZVzUwS1Z4dVhHNGdJQ0FnSUNBZ0lIQnliM2g1TG1OaGJHd29YRzRnSUNBZ0lDQWdJQ0FnSUNCY0ltOXlaeTVtY21WbFpHVnphM1J2Y0M1RVFuVnpMbEJ5YjNCbGNuUnBaWE11VTJWMFhDSXNYRzRnSUNBZ0lDQWdJQ0FnSUNCdVpYY2dSMHhwWWk1V1lYSnBZVzUwS0Z3aUtITnpkaWxjSWl3Z1czQnliM2g1TG1kSmJuUmxjbVpoWTJWT1lXMWxMQ0J1WVcxbExDQjJZWEpwWVc1MFhTa3NYRzRnSUNBZ0lDQWdJQ0FnSUNCSGFXOHVSRUoxYzBOaGJHeEdiR0ZuY3k1T1QwNUZMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0xURXNYRzRnSUNBZ0lDQWdJQ0FnSUNCdWRXeHNMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0tGOHNJSEpsY3lrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJ5ZVNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ5YjNoNUxtTmhiR3hmWm1sdWFYTm9LSEpsY3lsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHTmhkR05vSUNobEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9aU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0FwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeThnY0hKdmVIbGNiaUFnSUNCaGMzbHVZeUJ3Y205NGVTaDdYRzRnSUNBZ0lDQWdJR0oxY3lBOUlFZHBieTVFUW5WekxuTmxjM05wYjI0c1hHNGdJQ0FnSUNBZ0lHNWhiV1VnUFNCMGFHbHpMaU5wYm1adkxtNWhiV1VzWEc0Z0lDQWdJQ0FnSUc5aWFtVmpkRkJoZEdnZ1BTQmNJaTljSWlBcklIUm9hWE11STJsdVptOHVibUZ0WlM1emNHeHBkQ2hjSWk1Y0lpa3VhbTlwYmloY0lpOWNJaWtzWEc0Z0lDQWdJQ0FnSUdac1lXZHpJRDBnUjJsdkxrUkNkWE5RY205NGVVWnNZV2R6TGs1UFRrVXNYRzRnSUNBZ0lDQWdJSFJwYldWdmRYUWdQU0JFUlVaQlZVeFVYMVJKVFVWUFZWUXNYRzRnSUNBZ2ZUb2dlMXh1SUNBZ0lDQWdJQ0JpZFhNL09pQkhhVzh1UkVKMWMwTnZibTVsWTNScGIyNWNiaUFnSUNBZ0lDQWdibUZ0WlQ4NklITjBjbWx1WjF4dUlDQWdJQ0FnSUNCdlltcGxZM1JRWVhSb1B6b2djM1J5YVc1blhHNGdJQ0FnSUNBZ0lHWnNZV2R6UHpvZ1IybHZMa1JDZFhOUWNtOTRlVVpzWVdkelhHNGdJQ0FnSUNBZ0lIUnBiV1Z2ZFhRL09pQnVkVzFpWlhKY2JpQWdJQ0I5SUQwZ2UzMHBPaUJRY205dGFYTmxQSFJvYVhNK0lIdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2NISnZlSGtnUFNCdVpYY2dSMmx2TGtSQ2RYTlFjbTk0ZVNoN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JuUTI5dWJtVmpkR2x2YmpvZ1luVnpMRnh1SUNBZ0lDQWdJQ0FnSUNBZ1owbHVkR1Z5Wm1GalpVNWhiV1U2SUhSb2FYTXVJMmx1Wm04dWJtRnRaU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lHZEpiblJsY21aaFkyVkpibVp2T2lCMGFHbHpMaU5wYm1adkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnWjA1aGJXVTZJRzVoYldVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JuUm14aFozTTZJR1pzWVdkekxGeHVJQ0FnSUNBZ0lDQWdJQ0FnWjA5aWFtVmpkRkJoZEdnNklHOWlhbVZqZEZCaGRHZ3NYRzRnSUNBZ0lDQWdJSDBwWEc1Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QlFjbTl0YVhObEtDaHlaWE52YkhabExDQnlaV3BsWTNRcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdOaGJtTmhiR3hoWW14bElEMGdibVYzSUVkcGJ5NURZVzVqWld4c1lXSnNaU2dwWEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCemIzVnlZMlVnUFZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhScGJXVnZkWFFnUGlBd1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRDhnYzJWMFZHbHRaVzkxZENnb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGFtVmpkQ2hGY25KdmNpaGdjSEp2ZUhrZ2RHbHRaV1FnYjNWMFlDa3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE52ZFhKalpTQTlJRzUxYkd4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnVZMkZzYkdGaWJHVXVZMkZ1WTJWc0tDbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUxDQjBhVzFsYjNWMEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0E2SUc1MWJHeGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2NISnZlSGt1YVc1cGRGOWhjM2x1WXloSFRHbGlMbEJTU1U5U1NWUlpYMFJGUmtGVlRGUXNJR05oYm1OaGJHeGhZbXhsTENBb1h5d2djbVZ6S1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSEo1SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hOdmRYSmpaU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJ4bFlYSlVhVzFsYjNWMEtITnZkWEpqWlNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOdmRYSmpaU0E5SUc1MWJHeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ5YjNoNUxtbHVhWFJmWm1sdWFYTm9LSEpsY3lsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwYzF0cGJuUmxjbTVoYkhOZExuQnliM2g1SUQwZ2NISnZlSGxjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCcFpITWdQU0JiWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3Y205NGVTNWpiMjV1WldOMEtGd2laeTF6YVdkdVlXeGNJaXdnZEdocGN5NGphR0Z1Wkd4bFUybG5ibUZzTG1KcGJtUW9kR2hwY3lrcExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NISnZlSGt1WTI5dWJtVmpkQ2hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCY0ltY3RjSEp2Y0dWeWRHbGxjeTFqYUdGdVoyVmtYQ0lzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTRqYUdGdVpHeGxVSEp2Y0dWeWRHbGxjME5vWVc1blpXUXVZbWx1WkNoMGFHbHpLU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ2tzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGMWNibHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpXMmx1ZEdWeWJtRnNjMTB1YjI1VGRHOXdMbUZrWkNnb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWkhNdVptOXlSV0ZqYUNnb2FXUXBJRDArSUhCeWIzaDVMbVJwYzJOdmJtNWxZM1FvYVdRcEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHVnNaWFJsSUhSb2FYTmJhVzUwWlhKdVlXeHpYUzV3Y205NGVWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1Z4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsYzI5c2RtVW9kR2hwY3lsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHTmhkR05vSUNobGNuSnZjaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaV3BsWTNRb1pYSnliM0lwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmU2xjYmlBZ0lDQWdJQ0FnZlNsY2JpQWdJQ0I5WEc1Y2JpQWdJQ0J6ZEc5d0tDa2dlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQjdJRzl1VTNSdmNDQjlJRDBnZEdocGMxdHBiblJsY201aGJITmRYRzRnSUNBZ0lDQWdJR1p2Y2lBb1kyOXVjM1FnWTJJZ2IyWWdiMjVUZEc5d0xuWmhiSFZsY3lncEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCdmJsTjBiM0F1WkdWc1pYUmxLR05pS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdZMklvS1Z4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dWZWeHVYRzUwZVhCbElFbHVkR1Z5Wm1GalpVMWxkR0VnUFNCN1hHNGdJQ0FnWkdKMWMwMWxkR2h2WkhNL09pQlNaV052Y21ROFhHNGdJQ0FnSUNBZ0lITjBjbWx1Wnl4Y2JpQWdJQ0FnSUNBZ1FYSnlZWGs4ZTF4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlQ4NklITjBjbWx1WjF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ2MzUnlhVzVuWEc0Z0lDQWdJQ0FnSUNBZ0lDQmthWEpsWTNScGIyNDZJRndpYVc1Y0lpQjhJRndpYjNWMFhDSmNiaUFnSUNBZ0lDQWdmVDVjYmlBZ0lDQStYRzRnSUNBZ1pHSjFjMU5wWjI1aGJITS9PaUJTWldOdmNtUThYRzRnSUNBZ0lDQWdJSE4wY21sdVp5eGNiaUFnSUNBZ0lDQWdRWEp5WVhrOGUxeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUODZJSE4wY21sdVoxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2djM1J5YVc1blhHNGdJQ0FnSUNBZ0lIMCtYRzRnSUNBZ1BseHVJQ0FnSUdSaWRYTlFjbTl3WlhKMGFXVnpQem9nVW1WamIzSmtQRnh1SUNBZ0lDQWdJQ0J6ZEhKcGJtY3NYRzRnSUNBZ0lDQWdJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUhOMGNtbHVaMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nYzNSeWFXNW5YRzRnSUNBZ0lDQWdJQ0FnSUNCeVpXRmtQem9nZEhKMVpWeHVJQ0FnSUNBZ0lDQWdJQ0FnZDNKcGRHVS9PaUIwY25WbFhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBK1hHNTlYRzVjYmk4cUtseHVJQ29nVW1WbmFYTjBaWEp6SUdFZ2UwQnNhVzVySUZObGNuWnBZMlY5SUdGeklHRWdaR0oxY3lCcGJuUmxjbVpoWTJVdVhHNGdLbHh1SUNvZ1FIQmhjbUZ0SUc1aGJXVWdTVzUwWlhKbVlXTmxJRzVoYldVZ2IyWWdkR2hsSUc5aWFtVmpkQzRnUm05eUlHVjRZVzF3YkdVZ1hDSnZjbWN1WjI1dmJXVXVVMmhsYkd3dVUyVmhjbU5vVUhKdmRtbGtaWEl5WENKY2JpQXFJRUJ3WVhKaGJTQnZjSFJwYjI1eklHOXdkR2x2Ym1Gc0lIQnliM0JsY25ScFpYTWdkRzhnY0dGemN5QjBieUI3UUd4cGJtc2djbVZuYVhOMFpYSjlYRzRnS2k5Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCcFptRmpaU2h1WVcxbE9pQnpkSEpwYm1jc0lHOXdkR2x2Ym5NL09pQlFZWEpoYldWMFpYSnpQSFI1Y0dWdlppQnlaV2RwYzNSbGNqNWJNRjBwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdablZ1WTNScGIyNGdLR05zY3pvZ2V5QnVaWGNnS0M0dUxtRnlaM002SUdGdWVWdGRLVG9nVTJWeWRtbGpaU0I5TENCamRIZzZJRU5zWVhOelJHVmpiM0poZEc5eVEyOXVkR1Y0ZENrZ2UxeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCdFpYUmhJRDBnWTNSNExtMWxkR0ZrWVhSaFhHNGdJQ0FnSUNBZ0lHbG1JQ2doYldWMFlTa2dkR2h5YjNjZ1JYSnliM0lvWUNSN1kyeHpMbTVoYldWOUlHbHpJRzV2ZENCaGJpQnBiblJsY21aaFkyVmdLVnh1WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJSHNnWkdKMWMwMWxkR2h2WkhNZ1BTQjdmU3dnWkdKMWMxTnBaMjVoYkhNZ1BTQjdmU3dnWkdKMWMxQnliM0JsY25ScFpYTWdQU0I3ZlNCOUlEMGdiV1YwWVNCaGN5QkpiblJsY21aaFkyVk5aWFJoWEc1Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYVc1bWIxaHRiQ0E5SUhodGJDaDdYRzRnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUJjSW01dlpHVmNJaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lHTm9hV3hrY21WdU9pQmJYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUJjSW1sdWRHVnlabUZqWlZ3aUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoZEhSeWFXSjFkR1Z6T2lCN0lHNWhiV1VnZlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMmhwYkdSeVpXNDZJRnRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzR1TGs5aWFtVmpkQzVsYm5SeWFXVnpLR1JpZFhOTlpYUm9iMlJ6S1M1dFlYQW9LRnR1WVcxbExDQmhjbWR6WFNrZ1BUNGdLSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUJjSW0xbGRHaHZaRndpTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRjBkSEpwWW5WMFpYTTZJSHNnYm1GdFpTQjlMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOb2FXeGtjbVZ1T2lCaGNtZHpMbTFoY0Nnb1lYSm5LU0E5UGlBb2V5QnVZVzFsT2lCY0ltRnlaMXdpTENCaGRIUnlhV0oxZEdWek9pQmhjbWNnZlNrcExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTa3BMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMaTR1VDJKcVpXTjBMbVZ1ZEhKcFpYTW9aR0oxYzFOcFoyNWhiSE1wTG0xaGNDZ29XMjVoYldVc0lHRnlaM05kS1NBOVBpQW9lMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJRndpYzJsbmJtRnNYQ0lzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lYUjBjbWxpZFhSbGN6b2dleUJ1WVcxbElIMHNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJocGJHUnlaVzQ2SUdGeVozTXViV0Z3S0NoaGNtY3BJRDArSUNoN0lHNWhiV1U2SUZ3aVlYSm5YQ0lzSUdGMGRISnBZblYwWlhNNklHRnlaeUI5S1Nrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtTa3NYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXVMaTVQWW1wbFkzUXVkbUZzZFdWektHUmlkWE5RY205d1pYSjBhV1Z6S1M1dFlYQW9LSHNnYm1GdFpTd2dkSGx3WlN3Z2NtVmhaQ3dnZDNKcGRHVWdmU2tnUFQ0Z0tIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQmNJbkJ5YjNCbGNuUjVYQ0lzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lYUjBjbWxpZFhSbGN6b2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXVMaTRvYm1GdFpTQW1KaUI3SUc1aGJXVWdmU2tzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGalkyVnpjem9nS0hKbFlXUWdQeUJjSW5KbFlXUmNJaUE2SUZ3aVhDSXBJQ3NnS0hkeWFYUmxJRDhnWENKM2NtbDBaVndpSURvZ1hDSmNJaWtzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBLU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0FnSUNBZ1hTeGNiaUFnSUNBZ0lDQWdmU2xjYmx4dUlDQWdJQ0FnSUNCUFltcGxZM1F1WVhOemFXZHVLR05zY3l3Z2V5QmJhVzVtYjEwNklFZHBieTVFUW5WelNXNTBaWEptWVdObFNXNW1ieTV1WlhkZlptOXlYM2h0YkNocGJtWnZXRzFzS1NCOUtWeHVJQ0FnSUNBZ0lDQnlaV2RwYzNSbGNpaHZjSFJwYjI1ektTaGpiSE1zSUdOMGVDbGNiaUFnSUNCOVhHNTlYRzVjYm5SNWNHVWdSRUoxYzFSNWNHVWdQU0J6ZEhKcGJtY2dmQ0I3SUhSNWNHVTZJSE4wY21sdVp6c2dibUZ0WlRvZ2MzUnlhVzVuSUgxY2JseHVkSGx3WlNCSmJtWmxjbFpoY21saGJuUlVlWEJsY3p4VUlHVjRkR1Z1WkhNZ1FYSnlZWGs4UkVKMWMxUjVjR1UrUGlBOUlIdGNiaUFnSUNCYlN5QnBiaUJyWlhsdlppQlVYVG9nVkZ0TFhTQmxlSFJsYm1SeklITjBjbWx1WjF4dUlDQWdJQ0FnSUNBL0lFUmxaWEJKYm1abGNqeFVXMHRkUGx4dUlDQWdJQ0FnSUNBNklGUmJTMTBnWlhoMFpXNWtjeUI3SUhSNWNHVTZJR2x1Wm1WeUlGTWdmVnh1SUNBZ0lDQWdJQ0FnSUQ4Z1V5QmxlSFJsYm1SeklITjBjbWx1WjF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0EvSUVSbFpYQkpibVpsY2p4VFBseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBNklHNWxkbVZ5WEc0Z0lDQWdJQ0FnSUNBZ09pQjFibXR1YjNkdVhHNTlYRzVjYm1aMWJtTjBhVzl1SUdsdWMzUmhiR3hOWlhSb2IyUThRWEpuY3lCbGVIUmxibVJ6SUVGeWNtRjVQRVJDZFhOVWVYQmxQajRvWEc0Z0lDQWdZWEpuY3pvZ1FYSm5jeUI4SUZ0QmNtZHpMQ0JCY21kelAxMHNYRzRnSUNBZ2JXVjBhRzlrT2lBb0xpNHVZWEpuY3pvZ1lXNTVXMTBwSUQwK0lIVnVhMjV2ZDI0c1hHNGdJQ0FnWTNSNE9pQkRiR0Z6YzAxbGRHaHZaRVJsWTI5eVlYUnZja052Ym5SbGVIUThVMlZ5ZG1salpTd2dkSGx3Wlc5bUlHMWxkR2h2WkQ0c1hHNHBJSHRjYmlBZ0lDQmpiMjV6ZENCdVlXMWxJRDBnWTNSNExtNWhiV1ZjYmlBZ0lDQmpiMjV6ZENCdFpYUmhJRDBnWTNSNExtMWxkR0ZrWVhSaElTQmhjeUJKYm5SbGNtWmhZMlZOWlhSaFhHNGdJQ0FnWTI5dWMzUWdiV1YwYUc5a2N5QTlJQ2h0WlhSaExtUmlkWE5OWlhSb2IyUnpJRDgvUFNCN2ZTbGNibHh1SUNBZ0lHbG1JQ2gwZVhCbGIyWWdibUZ0WlNBaFBUMGdYQ0p6ZEhKcGJtZGNJaWtnZTF4dUlDQWdJQ0FnSUNCMGFISnZkeUJGY25KdmNpaGNJbTl1YkhrZ2MzUnlhVzVuSUc1aGJXVmtJRzFsZEdodlpITWdZWEpsSUdGc2JHOTNaV1JjSWlsY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JqYjI1emRDQmJhVzVCY21kekxDQnZkWFJCY21keklEMGdXMTFkSUQwZ0tFRnljbUY1TG1selFYSnlZWGtvWVhKbmMxc3dYU2tnUHlCaGNtZHpJRG9nVzJGeVozTmRLU0JoY3lCYlFYSm5jeXdnUVhKbmMxMWNibHh1SUNBZ0lHMWxkR2h2WkhOYmJtRnRaVjBnUFNCYlhHNGdJQ0FnSUNBZ0lDNHVMbWx1UVhKbmN5NXRZWEFvS0dGeVp5a2dQVDRnS0h0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1JwY21WamRHbHZiam9nWENKcGJsd2lJR0Z6SUdOdmJuTjBMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0xpNHVLSFI1Y0dWdlppQmhjbWNnUFQwOUlGd2ljM1J5YVc1blhDSWdQeUI3SUhSNWNHVTZJR0Z5WnlCOUlEb2dZWEpuS1N4Y2JpQWdJQ0FnSUNBZ2ZTa3BMRnh1SUNBZ0lDQWdJQ0F1TGk1dmRYUkJjbWR6TG0xaGNDZ29ZWEpuS1NBOVBpQW9lMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pHbHlaV04wYVc5dU9pQmNJbTkxZEZ3aUlHRnpJR052Ym5OMExGeHVJQ0FnSUNBZ0lDQWdJQ0FnTGk0dUtIUjVjR1Z2WmlCaGNtY2dQVDA5SUZ3aWMzUnlhVzVuWENJZ1B5QjdJSFI1Y0dVNklHRnlaeUI5SURvZ1lYSm5LU3hjYmlBZ0lDQWdJQ0FnZlNrcExGeHVJQ0FnSUYxY2JseHVJQ0FnSUhKbGRIVnliaUJ1WVcxbFhHNTlYRzVjYm1aMWJtTjBhVzl1SUdsdWMzUmhiR3hRY205d1pYSjBlVHhVSUdWNGRHVnVaSE1nYzNSeWFXNW5QaWhjYmlBZ0lDQjBlWEJsT2lCVUxGeHVJQ0FnSUdOMGVEb2dRMnhoYzNOR2FXVnNaRVJsWTI5eVlYUnZja052Ym5SbGVIUWdmQ0JEYkdGemMwZGxkSFJsY2tSbFkyOXlZWFJ2Y2tOdmJuUmxlSFFnZkNCRGJHRnpjMU5sZEhSbGNrUmxZMjl5WVhSdmNrTnZiblJsZUhRc1hHNHBJSHRjYmlBZ0lDQmpiMjV6ZENCcmFXNWtJRDBnWTNSNExtdHBibVJjYmlBZ0lDQmpiMjV6ZENCdVlXMWxJRDBnWTNSNExtNWhiV1ZjYmlBZ0lDQmpiMjV6ZENCdFpYUmhJRDBnWTNSNExtMWxkR0ZrWVhSaElTQmhjeUJKYm5SbGNtWmhZMlZOWlhSaFhHNGdJQ0FnWTI5dWMzUWdjSEp2Y0dWeWRHbGxjeUE5SUNodFpYUmhMbVJpZFhOUWNtOXdaWEowYVdWeklEOC9QU0I3ZlNsY2JseHVJQ0FnSUdsbUlDaDBlWEJsYjJZZ2JtRnRaU0FoUFQwZ1hDSnpkSEpwYm1kY0lpa2dlMXh1SUNBZ0lDQWdJQ0IwYUhKdmR5QkZjbkp2Y2loY0ltOXViSGtnYzNSeWFXNW5JRzVoYldWa0lIQnliM0JsY25ScFpYTWdZWEpsSUdGc2JHOTNaV1JjSWlsY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JqYjI1emRDQnlaV0ZrSUQwZ2EybHVaQ0E5UFQwZ1hDSm1hV1ZzWkZ3aUlIeDhJR3RwYm1RZ1BUMDlJRndpWjJWMGRHVnlYQ0pjYmlBZ0lDQmpiMjV6ZENCM2NtbDBaU0E5SUd0cGJtUWdQVDA5SUZ3aVptbGxiR1JjSWlCOGZDQnJhVzVrSUQwOVBTQmNJbk5sZEhSbGNsd2lYRzVjYmlBZ0lDQnBaaUFvYm1GdFpTQnBiaUJ3Y205d1pYSjBhV1Z6S1NCN1hHNGdJQ0FnSUNBZ0lHbG1JQ2gzY21sMFpTa2djSEp2Y0dWeWRHbGxjMXR1WVcxbFhTNTNjbWwwWlNBOUlIUnlkV1ZjYmlBZ0lDQWdJQ0FnYVdZZ0tISmxZV1FwSUhCeWIzQmxjblJwWlhOYmJtRnRaVjB1Y21WaFpDQTlJSFJ5ZFdWY2JpQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0J3Y205d1pYSjBhV1Z6VzI1aGJXVmRJRDBnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdibUZ0WlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0F1TGk0b2NtVmhaQ0FtSmlCN0lISmxZV1FnZlNrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0F1TGk0b2QzSnBkR1VnSmlZZ2V5QjNjbWwwWlNCOUtTeGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lISmxkSFZ5YmlCdVlXMWxYRzU5WEc1Y2JtWjFibU4wYVc5dUlHbHVjM1JoYkd4VGFXZHVZV3c4VUdGeVlXMXpJR1Y0ZEdWdVpITWdRWEp5WVhrOFJFSjFjMVI1Y0dVK1BpaGNiaUFnSUNCd1lYSmhiWE02SUZCaGNtRnRjeXhjYmlBZ0lDQmpkSGc2SUVOc1lYTnpUV1YwYUc5a1JHVmpiM0poZEc5eVEyOXVkR1Y0ZER4VFpYSjJhV05sUGl4Y2Jpa2dlMXh1SUNBZ0lHTnZibk4wSUc1aGJXVWdQU0JqZEhndWJtRnRaVnh1SUNBZ0lHTnZibk4wSUcxbGRHRWdQU0JqZEhndWJXVjBZV1JoZEdFaElHRnpJRWx1ZEdWeVptRmpaVTFsZEdGY2JpQWdJQ0JqYjI1emRDQnphV2R1WVd4eklEMGdLRzFsZEdFdVpHSjFjMU5wWjI1aGJITWdQejg5SUh0OUtWeHVYRzRnSUNBZ2FXWWdLSFI1Y0dWdlppQnVZVzFsSUQwOVBTQmNJbk41YldKdmJGd2lLU0I3WEc0Z0lDQWdJQ0FnSUhSb2NtOTNJRVZ5Y205eUtGd2ljM2x0WW05c2N5QmhjbVVnYm05MElIWmhiR2xrSUhOcFoyNWhiSE5jSWlsY2JpQWdJQ0I5WEc1Y2JpQWdJQ0J6YVdkdVlXeHpXMjVoYldWZElEMGdjR0Z5WVcxekxtMWhjQ2dvWVhKbktTQTlQaUFvZEhsd1pXOW1JR0Z5WnlBOVBUMGdYQ0p6ZEhKcGJtZGNJaUEvSUhzZ2RIbHdaVG9nWVhKbklIMGdPaUJoY21jcEtWeHVYRzRnSUNBZ2NtVjBkWEp1SUc1aGJXVmNibjFjYmx4dVpuVnVZM1JwYjI0Z2FXNW1aWEpIVkhsd1pVWnliMjFXWVhKcFlXNTBLSFI1Y0dVNklFUkNkWE5VZVhCbEtUb2dSMDlpYW1WamRDNUhWSGx3WlR4aGJuaytJSHRjYmlBZ0lDQnBaaUFvZEhsd1pXOW1JSFI1Y0dVZ0lUMDlJRndpYzNSeWFXNW5YQ0lwSUhKbGRIVnliaUJwYm1abGNrZFVlWEJsUm5KdmJWWmhjbWxoYm5Rb2RIbHdaUzUwZVhCbEtWeHVYRzRnSUNBZ2FXWWdLSFI1Y0dVdWMzUmhjblJ6VjJsMGFDaGNJbUZjSWlrZ2ZId2dkSGx3WlM1emRHRnlkSE5YYVhSb0tGd2lLRndpS1NrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1IwOWlhbVZqZEM1VVdWQkZYMHBUVDBKS1JVTlVYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2MzZHBkR05vSUNoMGVYQmxLU0I3WEc0Z0lDQWdJQ0FnSUdOaGMyVWdYQ0oyWENJNlhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdSMDlpYW1WamRDNVVXVkJGWDFaQlVrbEJUbFJjYmlBZ0lDQWdJQ0FnWTJGelpTQmNJbUpjSWpwY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQkhUMkpxWldOMExsUlpVRVZmUWs5UFRFVkJUbHh1SUNBZ0lDQWdJQ0JqWVhObElGd2llVndpT2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFZFBZbXBsWTNRdVZGbFFSVjlWU1U1VVhHNGdJQ0FnSUNBZ0lHTmhjMlVnWENKdVhDSTZYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnUjA5aWFtVmpkQzVVV1ZCRlgwbE9WRnh1SUNBZ0lDQWdJQ0JqWVhObElGd2ljVndpT2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFZFBZbXBsWTNRdVZGbFFSVjlWU1U1VVhHNGdJQ0FnSUNBZ0lHTmhjMlVnWENKcFhDSTZYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnUjA5aWFtVmpkQzVVV1ZCRlgwbE9WRnh1SUNBZ0lDQWdJQ0JqWVhObElGd2lkVndpT2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFZFBZbXBsWTNRdVZGbFFSVjlWU1U1VVhHNGdJQ0FnSUNBZ0lHTmhjMlVnWENKNFhDSTZYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnUjA5aWFtVmpkQzVVV1ZCRlgwbE9WRFkwWEc0Z0lDQWdJQ0FnSUdOaGMyVWdYQ0owWENJNlhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdSMDlpYW1WamRDNVVXVkJGWDFWSlRsUTJORnh1SUNBZ0lDQWdJQ0JqWVhObElGd2lhRndpT2x4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFZFBZbXBsWTNRdVZGbFFSVjlKVGxSY2JpQWdJQ0FnSUNBZ1kyRnpaU0JjSW1SY0lqcGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJIVDJKcVpXTjBMbFJaVUVWZlJFOVZRa3hGWEc0Z0lDQWdJQ0FnSUdOaGMyVWdYQ0p6WENJNlhHNGdJQ0FnSUNBZ0lHTmhjMlVnWENKblhDSTZYRzRnSUNBZ0lDQWdJR05oYzJVZ1hDSnZYQ0k2WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1IwOWlhbVZqZEM1VVdWQkZYMU5VVWtsT1IxeHVJQ0FnSUNBZ0lDQmtaV1poZFd4ME9seHVJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXdGNiaUFnSUNCOVhHNWNiaUFnSUNCMGFISnZkeUJGY25KdmNpaGdZMkZ1Ym05MElHbHVabVZ5SUVkVWVYQmxJR1p5YjIwZ2RtRnlhV0Z1ZENCY0lpUjdkSGx3WlgxY0ltQXBYRzU5WEc1Y2JpOHFLbHh1SUNvZ1VtVm5hWE4wWlhKeklHRWdiV1YwYUc5a0xseHVJQ29nV1c5MUlITm9iM1ZzWkNCd2NtVm1aWElnZFhOcGJtY2dlMEJzYVc1cklHMWxkR2h2WkVGemVXNWpmU0IzYUdWdUlIQnliM2g1YVc1bkxDQmtkV1VnZEc4Z1NVOGdZbXh2WTJ0cGJtY3VYRzRnS2lCT2IzUmxJSFJvWVhRZ2RHaHBjeUJwY3lCbWRXNWpkR2x2Ym1Gc2JIa2dkR2hsSUhOaGJXVWdZWE1nZTBCc2FXNXJJRzFsZEdodlpFRnplVzVqZlNCdmJpQmxlSEJ2Y25SbFpDQnZZbXBsWTNSekxseHVJQ29nWUdCZ1hHNGdLaTljYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJ0WlhSb2IyUThZMjl1YzNRZ1NXNUJjbWR6SUdWNGRHVnVaSE1nUVhKeVlYazhSRUoxYzFSNWNHVStMQ0JqYjI1emRDQlBkWFJCY21keklHVjRkR1Z1WkhNZ1FYSnlZWGs4UkVKMWMxUjVjR1UrUGloY2JpQWdJQ0JwYmtGeVozTTZJRWx1UVhKbmN5eGNiaUFnSUNCdmRYUkJjbWR6T2lCUGRYUkJjbWR6TEZ4dUtUb2dLRnh1SUNBZ0lHMWxkR2h2WkRvZ0tIUm9hWE02SUZObGNuWnBZMlVzSUM0dUxtRnlaM002SUdGdWVWdGRLU0E5UGlCSmJtWmxjbFpoY21saGJuUlVlWEJsY3p4UGRYUkJjbWR6UGl4Y2JpQWdJQ0JqZEhnNklFTnNZWE56VFdWMGFHOWtSR1ZqYjNKaGRHOXlRMjl1ZEdWNGREeFRaWEoyYVdObExDQjBlWEJsYjJZZ2JXVjBhRzlrUGl4Y2Jpa2dQVDRnS0hSb2FYTTZJRk5sY25acFkyVXNJQzR1TG1GeVozTTZJRWx1Wm1WeVZtRnlhV0Z1ZEZSNWNHVnpQRWx1UVhKbmN6NHBJRDArSUdGdWVWeHVYRzR2S2lwY2JpQXFJRkpsWjJsemRHVnljeUJoSUcxbGRHaHZaQzVjYmlBcUlGbHZkU0J6YUc5MWJHUWdjSEpsWm1WeUlIVnphVzVuSUh0QWJHbHVheUJ0WlhSb2IyUkJjM2x1WTMwZ2QyaGxiaUJ3Y205NGVXbHVaeXdnWkhWbElIUnZJRWxQSUdKc2IyTnJhVzVuTGx4dUlDb2dUbTkwWlNCMGFHRjBJSFJvYVhNZ2FYTWdablZ1WTNScGIyNWhiR3g1SUhSb1pTQnpZVzFsSUdGeklIdEFiR2x1YXlCdFpYUm9iMlJCYzNsdVkzMGdiMjRnWlhod2IzSjBaV1FnYjJKcVpXTjBjeTVjYmlBcUlHQmdZRnh1SUNvdlhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z2JXVjBhRzlrUEdOdmJuTjBJRWx1UVhKbmN5QmxlSFJsYm1SeklFRnljbUY1UEVSQ2RYTlVlWEJsUGo0b1hHNGdJQ0FnTGk0dWFXNUJjbWR6T2lCSmJrRnlaM05jYmlrNklDaGNiaUFnSUNCdFpYUm9iMlE2SUNoMGFHbHpPaUJUWlhKMmFXTmxMQ0F1TGk1aGNtZHpPaUJoYm5sYlhTa2dQVDRnZG05cFpDeGNiaUFnSUNCamRIZzZJRU5zWVhOelRXVjBhRzlrUkdWamIzSmhkRzl5UTI5dWRHVjRkRHhUWlhKMmFXTmxMQ0IwZVhCbGIyWWdiV1YwYUc5a1BpeGNiaWtnUFQ0Z0tIUm9hWE02SUZObGNuWnBZMlVzSUM0dUxtRnlaM002SUVsdVptVnlWbUZ5YVdGdWRGUjVjR1Z6UEVsdVFYSm5jejRwSUQwK0lIWnZhV1JjYmx4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUcxbGRHaHZaRHhqYjI1emRDQkpia0Z5WjNNZ1pYaDBaVzVrY3lCQmNuSmhlVHhFUW5WelZIbHdaVDRzSUdOdmJuTjBJRTkxZEVGeVozTWdaWGgwWlc1a2N5QkJjbkpoZVR4RVFuVnpWSGx3WlQ0K0tGeHVJQ0FnSUM0dUxtRnlaM002SUVsdVFYSm5jeUI4SUZ0cGJrRnlaM002SUVsdVFYSm5jeXdnYjNWMFFYSm5jejg2SUU5MWRFRnlaM05kWEc0cElIdGNiaUFnSUNCeVpYUjFjbTRnWm5WdVkzUnBiMjRnS0Z4dUlDQWdJQ0FnSUNCdFpYUm9iMlE2SUNoY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNNklGTmxjblpwWTJVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0F1TGk1aGNtZHpPaUJKYm1abGNsWmhjbWxoYm5SVWVYQmxjenhKYmtGeVozTStYRzRnSUNBZ0lDQWdJQ2tnUFQ0Z1NXNW1aWEpXWVhKcFlXNTBWSGx3WlhNOFQzVjBRWEpuY3o0Z2ZDQjJiMmxrTEZ4dUlDQWdJQ0FnSUNCamRIZzZJRU5zWVhOelRXVjBhRzlrUkdWamIzSmhkRzl5UTI5dWRHVjRkRHhUWlhKMmFXTmxMQ0IwZVhCbGIyWWdiV1YwYUc5a1BpeGNiaUFnSUNBcE9pQW9kR2hwY3pvZ1UyVnlkbWxqWlN3Z0xpNHVZWEpuY3pvZ1NXNW1aWEpXWVhKcFlXNTBWSGx3WlhNOFNXNUJjbWR6UGlrZ1BUNGdZVzU1SUh0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYm1GdFpTQTlJR2x1YzNSaGJHeE5aWFJvYjJRb1lYSm5jeXdnYldWMGFHOWtMQ0JqZEhncFhHNWNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHWjFibU4wYVc5dUlDZ3VMaTVoY21kektTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kR2hwYzF0cGJuUmxjbTVoYkhOZExuQnliM2g1S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnZG1Gc2RXVWdQU0IwYUdselczSmxiVzkwWlUxbGRHaHZaRjBvYm1GdFpTd2dZWEpuY3lsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZG1Gc2RXVXVaR1ZsY0ZWdWNHRmphenhKYm1abGNsWmhjbWxoYm5SVWVYQmxjenhQZFhSQmNtZHpQajRvS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2JXVjBhRzlrTG1Gd2NHeDVLSFJvYVhNc0lHRnlaM01wWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzU5WEc1Y2JpOHFLbHh1SUNvZ1VtVm5hWE4wWlhKeklHRWdiV1YwYUc5a0xseHVJQ29nV1c5MUlITm9iM1ZzWkNCd2NtVm1aWElnZFhOcGJtY2dkR2hwY3lCdmRtVnlJSHRBYkdsdWF5QnRaWFJvYjJSOUlIZG9aVzRnY0hKdmVIbHBibWNzSUhOcGJtTmxJSFJvYVhNZ1pHOWxjeUJ1YjNRZ1lteHZZMnNnU1U4dVhHNGdLaUJPYjNSbElIUm9ZWFFnZEdocGN5QnBjeUJtZFc1amRHbHZibUZzYkhrZ2RHaGxJSE5oYldVZ1lYTWdlMEJzYVc1cklHMWxkR2h2WkgwZ2IyNGdaWGh3YjNKMFpXUWdiMkpxWldOMGN5NWNiaUFxSUdCZ1lGeHVJQ292WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnYldWMGFHOWtRWE41Ym1NOFhHNGdJQ0FnWTI5dWMzUWdTVzVCY21keklHVjRkR1Z1WkhNZ1FYSnlZWGs4UkVKMWMxUjVjR1UrTEZ4dUlDQWdJR052Ym5OMElFOTFkRUZ5WjNNZ1pYaDBaVzVrY3lCQmNuSmhlVHhFUW5WelZIbHdaVDRzWEc0K0tGeHVJQ0FnSUdsdVFYSm5jem9nU1c1QmNtZHpMRnh1SUNBZ0lHOTFkRUZ5WjNNNklFOTFkRUZ5WjNNc1hHNHBPaUFvWEc0Z0lDQWdiV1YwYUc5a09pQW9kR2hwY3pvZ1UyVnlkbWxqWlN3Z0xpNHVZWEpuY3pvZ1lXNTVXMTBwSUQwK0lGQnliMjFwYzJVOFNXNW1aWEpXWVhKcFlXNTBWSGx3WlhNOFQzVjBRWEpuY3o0K0xGeHVJQ0FnSUdOMGVEb2dRMnhoYzNOTlpYUm9iMlJFWldOdmNtRjBiM0pEYjI1MFpYaDBQRk5sY25acFkyVXNJSFI1Y0dWdlppQnRaWFJvYjJRK0xGeHVLU0E5UGlBb2RHaHBjem9nVTJWeWRtbGpaU3dnTGk0dVlYSm5jem9nU1c1bVpYSldZWEpwWVc1MFZIbHdaWE04U1c1QmNtZHpQaWtnUFQ0Z1VISnZiV2x6WlR4aGJuaytYRzVjYmk4cUtseHVJQ29nVW1WbmFYTjBaWEp6SUdFZ2JXVjBhRzlrTGx4dUlDb2dXVzkxSUhOb2IzVnNaQ0J3Y21WbVpYSWdkWE5wYm1jZ2RHaHBjeUJ2ZG1WeUlIdEFiR2x1YXlCdFpYUm9iMlI5SUhkb1pXNGdjSEp2ZUhscGJtY3NJSE5wYm1ObElIUm9hWE1nWkc5bGN5QnViM1FnWW14dlkyc2dTVTh1WEc0Z0tpQk9iM1JsSUhSb1lYUWdkR2hwY3lCcGN5Qm1kVzVqZEdsdmJtRnNiSGtnZEdobElITmhiV1VnWVhNZ2UwQnNhVzVySUcxbGRHaHZaSDBnYjI0Z1pYaHdiM0owWldRZ2IySnFaV04wY3k1Y2JpQXFJR0JnWUZ4dUlDb3ZYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdiV1YwYUc5a1FYTjVibU04WTI5dWMzUWdTVzVCY21keklHVjRkR1Z1WkhNZ1FYSnlZWGs4UkVKMWMxUjVjR1UrUGloY2JpQWdJQ0F1TGk1cGJrRnlaM002SUVsdVFYSm5jMXh1S1RvZ0tGeHVJQ0FnSUcxbGRHaHZaRG9nS0hSb2FYTTZJRk5sY25acFkyVXNJQzR1TG1GeVozTTZJR0Z1ZVZ0ZEtTQTlQaUJRY205dGFYTmxQSFp2YVdRK0xGeHVJQ0FnSUdOMGVEb2dRMnhoYzNOTlpYUm9iMlJFWldOdmNtRjBiM0pEYjI1MFpYaDBQRk5sY25acFkyVXNJSFI1Y0dWdlppQnRaWFJvYjJRK0xGeHVLU0E5UGlBb2RHaHBjem9nVTJWeWRtbGpaU3dnTGk0dVlYSm5jem9nU1c1bVpYSldZWEpwWVc1MFZIbHdaWE04U1c1QmNtZHpQaWtnUFQ0Z1VISnZiV2x6WlR4MmIybGtQbHh1WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnYldWMGFHOWtRWE41Ym1NOFhHNGdJQ0FnWTI5dWMzUWdTVzVCY21keklHVjRkR1Z1WkhNZ1FYSnlZWGs4UkVKMWMxUjVjR1UrTEZ4dUlDQWdJR052Ym5OMElFOTFkRUZ5WjNNZ1pYaDBaVzVrY3lCQmNuSmhlVHhFUW5WelZIbHdaVDRzWEc0K0tDNHVMbUZ5WjNNNklFbHVRWEpuY3lCOElGdHBia0Z5WjNNNklFbHVRWEpuY3l3Z2IzVjBRWEpuY3o4NklFOTFkRUZ5WjNOZEtTQjdYRzRnSUNBZ2NtVjBkWEp1SUdaMWJtTjBhVzl1SUNoY2JpQWdJQ0FnSUNBZ2JXVjBhRzlrT2lBb1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsek9pQlRaWEoyYVdObExGeHVJQ0FnSUNBZ0lDQWdJQ0FnTGk0dVlYSm5jem9nU1c1bVpYSldZWEpwWVc1MFZIbHdaWE04U1c1QmNtZHpQbHh1SUNBZ0lDQWdJQ0FwSUQwK0lGQnliMjFwYzJVOFNXNW1aWEpXWVhKcFlXNTBWSGx3WlhNOFQzVjBRWEpuY3o0Z2ZDQjJiMmxrUGl4Y2JpQWdJQ0FnSUNBZ1kzUjRPaUJEYkdGemMwMWxkR2h2WkVSbFkyOXlZWFJ2Y2tOdmJuUmxlSFE4VTJWeWRtbGpaU3dnZEhsd1pXOW1JRzFsZEdodlpENHNYRzRnSUNBZ0tUb2dLSFJvYVhNNklGTmxjblpwWTJVc0lDNHVMbUZ5WjNNNklFbHVabVZ5Vm1GeWFXRnVkRlI1Y0dWelBFbHVRWEpuY3o0cElEMCtJRkJ5YjIxcGMyVThZVzU1UGlCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUc1aGJXVWdQU0JwYm5OMFlXeHNUV1YwYUc5a0tHRnlaM01zSUcxbGRHaHZaQ3dnWTNSNEtWeHVYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQmhjM2x1WXlCbWRXNWpkR2x2YmlBb0xpNHVZWEpuY3lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE5iYVc1MFpYSnVZV3h6WFM1d2NtOTRlU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJSFpoYkhWbElEMGdZWGRoYVhRZ2RHaHBjMXR5WlcxdmRHVk5aWFJvYjJSQmMzbHVZMTBvYm1GdFpTd2dZWEpuY3lsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZG1Gc2RXVXVaR1ZsY0ZWdWNHRmphenhKYm1abGNsWmhjbWxoYm5SVWVYQmxjenhQZFhSQmNtZHpQajRvS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2JXVjBhRzlrTG1Gd2NHeDVLSFJvYVhNc0lHRnlaM01wWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzU5WEc1Y2JpOHFLbHh1SUNvZ1VtVm5hWE4wWlhKeklHRWdjbVZoWkMxM2NtbDBaU0J3Y205d1pYSjBlUzRnVjJobGJpQmhJRzVsZHlCMllXeDFaU0JwY3lCaGMzTnBaMjVsWkNCMGFHVWdibTkwYVdaNUlITnBaMjVoYkZ4dUlDb2dhWE1nWVhWMGIyMWhkR2xqWVd4c2VTQmxiV2wwZEdWa0lHOXVJSFJvWlNCc2IyTmhiQ0JoYm1RZ1pYaHdiM0owWldRZ2IySnFaV04wTGx4dUlDcGNiaUFxSUU1dmRHVWdkR2hoZENCdVpYY2dkbUZzZFdWeklHRnlaU0JqYUdWamEyVmtJR0o1SUhKbFptVnlaVzVqWlNCemJ5QmhjM05wWjI1cGJtY2dkR2hsSUhOaGJXVWdiMkpxWldOMElIZHBiR3hjYmlBcUlHNXZkQ0JsYldsMElIUm9aU0J1YjNScFpua2djMmxuYm1Gc0xseHVJQ29nWUdCZ1hHNGdLaTljYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJ3Y205d1pYSjBlVHhVSUdWNGRHVnVaSE1nYzNSeWFXNW5QaWgwZVhCbE9pQlVLU0I3WEc0Z0lDQWdjbVYwZFhKdUlHWjFibU4wYVc5dUlDaGNiaUFnSUNBZ0lDQWdYem9nZG05cFpDeGNiaUFnSUNBZ0lDQWdZM1I0T2lCRGJHRnpjMFpwWld4a1JHVmpiM0poZEc5eVEyOXVkR1Y0ZER4VFpYSjJhV05sTENCRVpXVndTVzVtWlhJOFZENCtMRnh1SUNBZ0lDazZJQ2gwYUdsek9pQlRaWEoyYVdObExDQnBibWwwT2lCRVpXVndTVzVtWlhJOFZENHBJRDArSUdGdWVTQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElHNWhiV1VnUFNCcGJuTjBZV3hzVUhKdmNHVnlkSGtvZEhsd1pTd2dZM1I0S1Z4dVhHNGdJQ0FnSUNBZ0lIWnZhV1FnWjNCeWIzQmxjblI1S0hzZ0pHZDBlWEJsT2lCcGJtWmxja2RVZVhCbFJuSnZiVlpoY21saGJuUW9kSGx3WlNrZ2ZTa29YRzRnSUNBZ0lDQWdJQ0FnSUNCZkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnWTNSNElHRnpJRU5zWVhOelJtbGxiR1JFWldOdmNtRjBiM0pEYjI1MFpYaDBQRWRQWW1wbFkzUXVUMkpxWldOMFBpQW1JRU4wZUN4Y2JpQWdJQ0FnSUNBZ0lDQWdJSHNnYldWMFlVOXViSGs2SUhSeWRXVWdmU3hjYmlBZ0lDQWdJQ0FnS1Z4dVhHNGdJQ0FnSUNBZ0lHTjBlQzVoWkdSSmJtbDBhV0ZzYVhwbGNpaG1kVzVqZEdsdmJpQW9LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQlBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkSGtvZEdocGN5d2dibUZ0WlN3Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibVpwWjNWeVlXSnNaVG9nWm1Gc2MyVXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaVzUxYldWeVlXSnNaVG9nZEhKMVpTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpaWFFvZG1Gc2RXVTZJRVJsWlhCSmJtWmxjanhVUGlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQjdJSEJ5YjNoNUxDQndjbWwySUgwZ1BTQjBhR2x6VzJsdWRHVnlibUZzYzExY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NISnZlSGtwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTmJjbVZ0YjNSbFVISnZjR1Z5ZEhsVFpYUmRLRzVoYldVc0lIWmhiSFZsS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NISnBkbHR1WVcxbFhTQWhQVDBnZG1Gc2RXVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ5YVhaYmJtRnRaVjBnUFNCMllXeDFaVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dWIzUnBabmtvYm1GdFpTQmhjeUJGZUhSeVlXTjBQR3RsZVc5bUlGTmxjblpwWTJVc0lITjBjbWx1Wno0cFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGRDZ3BPaUJFWldWd1NXNW1aWEk4VkQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQjdJSEJ5YjNoNUxDQndjbWwySUgwZ1BTQjBhR2x6VzJsdWRHVnlibUZzYzExY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjSEp2ZUhsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUQ4Z2NISnZlSGt1WjJWMFgyTmhZMmhsWkY5d2NtOXdaWEowZVNodVlXMWxLU0V1WkdWbGNGVnVjR0ZqYXp4RVpXVndTVzVtWlhJOFZENCtLQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRG9nS0hCeWFYWmJibUZ0WlYwZ1lYTWdSR1ZsY0VsdVptVnlQRlErS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5SUhOaGRHbHpabWxsY3lCVWFHbHpWSGx3WlR4VFpYSjJhV05sUGlsY2JpQWdJQ0FnSUNBZ2ZTbGNibHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdablZ1WTNScGIyNGdLR2x1YVhRcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJSEJ5YVhZZ1BTQjBhR2x6VzJsdWRHVnlibUZzYzEwdWNISnBkbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NISnBkbHR1WVcxbFhTQTlJR2x1YVhSY2JpQWdJQ0FnSUNBZ0lDQWdJQzh2SUhkbElHUnZiaWQwSUc1bFpXUWdkRzhnYzNSdmNtVWdkR2hsSUhaaGJIVmxJRzl1SUhSb1pTQnZZbXBsWTNRZ2FYUnpaV3htWEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1OVhHNWNiaThxS2x4dUlDb2dVbVZuYVhOMFpYSnpJR0VnY21WaFpDMXZibXg1SUhCeWIzQmxjblI1TGlCRFlXNGdZbVVnZFhObFpDQnBiaUJqYjI1cWRXTjBhVzl1SUhkcGRHZ2dlMEJzYVc1cklITmxkSFJsY24wZ2RHOGdaR1ZtYVc1bFhHNGdLaUJ5WldGa0xYZHlhWFJsSUhCeWIzQmxjblJwWlhNZ1lYTWdZV05qWlhOemIzSnpMbHh1SUNwY2JpQXFJRTV2ZEdVZ2RHaGhkQ0I1YjNVZ2QybHNiQ0J1WldWa0lIUnZJR1Y0Y0d4cFkybDBiSGtnWlcxcGRDQjBhR1VnYm05MGFXWjVJSE5wWjI1aGJDNWNiaUFxTDF4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUdkbGRIUmxjanhVSUdWNGRHVnVaSE1nYzNSeWFXNW5QaWgwZVhCbE9pQlVLU0I3WEc0Z0lDQWdjbVYwZFhKdUlHWjFibU4wYVc5dUlDaGNiaUFnSUNBZ0lDQWdiV1YwYUc5a09pQW9kR2hwY3pvZ1UyVnlkbWxqWlNrZ1BUNGdSR1ZsY0VsdVptVnlQRlErTEZ4dUlDQWdJQ0FnSUNCamRIZzZJRU5zWVhOelIyVjBkR1Z5UkdWamIzSmhkRzl5UTI5dWRHVjRkRHhUWlhKMmFXTmxMQ0JFWldWd1NXNW1aWEk4VkQ0K0xGeHVJQ0FnSUNrNklDaDBhR2x6T2lCVFpYSjJhV05sS1NBOVBpQmhibmtnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0J1WVcxbElEMGdhVzV6ZEdGc2JGQnliM0JsY25SNUtIUjVjR1VzSUdOMGVDbGNibHh1SUNBZ0lDQWdJQ0JqZEhndVlXUmtTVzVwZEdsaGJHbDZaWElvWm5WdVkzUnBiMjRnS0NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWkdWbWFXNWxVSEp2Y0dWeWRIbEhaWFIwWlhJb2RHaHBjeXdnYm1GdFpTQmhjeUJGZUhSeVlXTjBQR3RsZVc5bUlGTmxjblpwWTJVc0lITjBjbWx1Wno0cFhHNGdJQ0FnSUNBZ0lIMHBYRzVjYmlBZ0lDQWdJQ0FnZG05cFpDQm5aMlYwZEdWeUtIc2dKR2QwZVhCbE9pQnBibVpsY2tkVWVYQmxSbkp2YlZaaGNtbGhiblFvZEhsd1pTa2dmU2tvWEc0Z0lDQWdJQ0FnSUNBZ0lDQW9LU0E5UGlCN2ZTeGNiaUFnSUNBZ0lDQWdJQ0FnSUdOMGVDQmhjeUJEYkdGemMwZGxkSFJsY2tSbFkyOXlZWFJ2Y2tOdmJuUmxlSFE4UjA5aWFtVmpkQzVQWW1wbFkzUStJQ1lnUTNSNExGeHVJQ0FnSUNBZ0lDQXBYRzVjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR1oxYm1OMGFXOXVJR2RsZENncE9pQkVaV1Z3U1c1bVpYSThWRDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2V5QndjbTk0ZVNCOUlEMGdkR2hwYzF0cGJuUmxjbTVoYkhOZFhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjSEp2ZUhsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBL0lIQnliM2g1TG1kbGRGOWpZV05vWldSZmNISnZjR1Z5ZEhrb2JtRnRaU2toTG1SbFpYQlZibkJoWTJzOFJHVmxjRWx1Wm1WeVBGUStQaWdwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnT2lCdFpYUm9iMlF1WTJGc2JDaDBhR2x6S1Z4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dWZWeHVYRzR2S2lwY2JpQXFJRkpsWjJsemRHVnljeUJoSUhkeWFYUmxMVzl1YkhrZ2NISnZjR1Z5ZEhrdUlFTmhiaUJpWlNCMWMyVmtJR2x1SUdOdmJtcDFZM1JwYjI0Z2QybDBhQ0I3UUd4cGJtc2daMlYwZEdWeWZTQjBieUJrWldacGJtVmNiaUFxSUhKbFlXUXRkM0pwZEdVZ2NISnZjR1Z5ZEdsbGN5QmhjeUJoWTJObGMzTnZjbk11WEc0Z0tseHVJQ29nVG05MFpTQjBhR0YwSUhsdmRTQjNhV3hzSUc1bFpXUWdkRzhnWlhod2JHbGphWFJzZVNCbGJXbDBJSFJvWlNCdWIzUnBabmtnYzJsbmJtRnNMbHh1SUNvdlhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z2MyVjBkR1Z5UEZRZ1pYaDBaVzVrY3lCemRISnBibWMrS0hSNWNHVTZJRlFwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdablZ1WTNScGIyNGdLRnh1SUNBZ0lDQWdJQ0J6WlhSMFpYSTZJQ2gwYUdsek9pQlRaWEoyYVdObExDQjJZV3gxWlRvZ1lXNTVLU0E5UGlCMmIybGtMRnh1SUNBZ0lDQWdJQ0JqZEhnNklFTnNZWE56VTJWMGRHVnlSR1ZqYjNKaGRHOXlRMjl1ZEdWNGREeFRaWEoyYVdObExDQkVaV1Z3U1c1bVpYSThWRDQrTEZ4dUlDQWdJQ2s2SUNoMGFHbHpPaUJUWlhKMmFXTmxMQ0IyWVd4MVpUb2dSR1ZsY0VsdVptVnlQRlErS1NBOVBpQjJiMmxrSUh0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYm1GdFpTQTlJR2x1YzNSaGJHeFFjbTl3WlhKMGVTaDBlWEJsTENCamRIZ3BYRzVjYmlBZ0lDQWdJQ0FnZG05cFpDQm5jMlYwZEdWeUtIc2dKR2QwZVhCbE9pQnBibVpsY2tkVWVYQmxSbkp2YlZaaGNtbGhiblFvZEhsd1pTa2dmU2tvWEc0Z0lDQWdJQ0FnSUNBZ0lDQW9LU0E5UGlCN2ZTeGNiaUFnSUNBZ0lDQWdJQ0FnSUdOMGVDQmhjeUJEYkdGemMxTmxkSFJsY2tSbFkyOXlZWFJ2Y2tOdmJuUmxlSFE4UjA5aWFtVmpkQzVQWW1wbFkzUStJQ1lnUTNSNExGeHVJQ0FnSUNBZ0lDQXBYRzVjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR1oxYm1OMGFXOXVJQ2gyWVd4MVpUb2dSR1ZsY0VsdVptVnlQRlErS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQjdJSEJ5YjNoNUlIMGdQU0IwYUdselcybHVkR1Z5Ym1Gc2MxMWNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSEJ5YjNoNUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwYzF0eVpXMXZkR1ZRY205d1pYSjBlVk5sZEYwb2JtRnRaU3dnZG1Gc2RXVXBYRzRnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhObGRIUmxjaTVqWVd4c0tIUm9hWE1zSUhaaGJIVmxLVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVmVnh1WEc0dktpcGNiaUFxSUZKbFoybHpkR1Z5Y3lCaElITnBaMjVoYkNCM2FHbGphQ0IzYUdWdUlHbHVkbTlyWldRZ2QybHNiQ0JsYldsMElIUm9aU0J6YVdkdVlXeGNiaUFxSUc5dUlIUm9aU0JzYjJOaGJDQnZZbXBsWTNRZ1lXNWtJSFJvWlNCbGVIQnZjblJsWkNCdlltcGxZM1F1WEc0Z0tseHVJQ29nS2lwT2IzUmxLaW82SUdsMGN5QnViM1FnY0c5emMybGliR1VnZEc4Z1pXMXBkQ0J6YVdkdVlXeHpJRzl1SUhKbGJXOTBaU0J2WW1wbFkzUnpJSFJvY205MVoyZ2djSEp2ZUdsbGN5NWNiaUFxTDF4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUhOcFoyNWhiRHhqYjI1emRDQlFZWEpoYlhNZ1pYaDBaVzVrY3lCQmNuSmhlVHhFUW5WelZIbHdaVDQrS0M0dUxuQmhjbUZ0Y3pvZ1VHRnlZVzF6S1NCN1hHNGdJQ0FnY21WMGRYSnVJR1oxYm1OMGFXOXVJQ2hjYmlBZ0lDQWdJQ0FnYldWMGFHOWtPaUFvZEdocGN6b2dVMlZ5ZG1salpTd2dMaTR1Y0dGeVlXMXpPaUJoYm5rcElEMCtJSFp2YVdRc1hHNGdJQ0FnSUNBZ0lHTjBlRG9nUTJ4aGMzTk5aWFJvYjJSRVpXTnZjbUYwYjNKRGIyNTBaWGgwUEZObGNuWnBZMlVzSUhSNWNHVnZaaUJ0WlhSb2IyUStMRnh1SUNBZ0lDazZJQ2gwYUdsek9pQlRaWEoyYVdObExDQXVMaTV3WVhKaGJYTTZJRWx1Wm1WeVZtRnlhV0Z1ZEZSNWNHVnpQRkJoY21GdGN6NHBJRDArSUhadmFXUWdlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQnVZVzFsSUQwZ2FXNXpkR0ZzYkZOcFoyNWhiQ2h3WVhKaGJYTXNJR04wZUNsY2JseHVJQ0FnSUNBZ0lDQjJiMmxrSUdkemFXZHVZV3dvTGk0dWNHRnlZVzF6TG0xaGNDaHBibVpsY2tkVWVYQmxSbkp2YlZaaGNtbGhiblFwS1NoY2JpQWdJQ0FnSUNBZ0lDQWdJQ2dwSUQwK0lIdDlMRnh1SUNBZ0lDQWdJQ0FnSUNBZ1kzUjRJR0Z6SUVOc1lYTnpUV1YwYUc5a1JHVmpiM0poZEc5eVEyOXVkR1Y0ZER4SFQySnFaV04wTGs5aWFtVmpkRDRnSmlCRGRIZ3NYRzRnSUNBZ0lDQWdJQ2xjYmx4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWm5WdVkzUnBiMjRnS0M0dUxuQmhjbUZ0Y3lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE5iYVc1MFpYSnVZV3h6WFM1d2NtOTRlU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpaGdZMkZ1Ym05MElHVnRhWFFnYzJsbmJtRnNJRndpSkh0dVlXMWxmVndpSUc5dUlISmxiVzkwWlNCdlltcGxZM1JnS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZEdocGMxdHBiblJsY201aGJITmRMbVJpZFhOUFltcGxZM1FnZkh3Z0lYUm9hWE5iYVc1MFpYSnVZV3h6WFM1d2NtOTRlU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxbGRHaHZaQzVoY0hCc2VTaDBhR2x6TENCd1lYSmhiWE1wWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVZ0YVhRb2JtRnRaU3dnTGk0dWNHRnlZVzF6S1Z4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dWZWeHVJaXdnSW1sdGNHOXlkQ0I3SUZObGNuWnBZMlVzSUdsbVlXTmxMQ0J0WlhSb2IyUkJjM2x1WXlCOUlHWnliMjBnWENKbmJtbHRMMlJpZFhOY0lseHVYRzVsZUhCdmNuUWdhVzUwWlhKbVlXTmxJRUZ3Y0VSQ2RYTkpiWEJzSUh0Y2JpQWdJQ0JwYm5ObFkzUnZjaWdwT2lCMmIybGtYRzRnSUNBZ2RHOW5aMnhsVjJsdVpHOTNLRzVoYldVNklITjBjbWx1WnlrNklIWnZhV1JjYmlBZ0lDQnhkV2wwS0NrNklIWnZhV1JjYmlBZ0lDQnlaWEYxWlhOMEtHRnlaM1k2SUhOMGNtbHVaMXRkS1RvZ1VISnZiV2x6WlR4emRISnBibWMrWEc1OVhHNWNia0JwWm1GalpTaGNJbWx2TGtGemRHRnNMa0Z3Y0d4cFkyRjBhVzl1WENJcFhHNWxlSEJ2Y25RZ1kyeGhjM01nUVhCd1JFSjFjeUJsZUhSbGJtUnpJRk5sY25acFkyVWdlMXh1SUNBZ0lIQnlhWFpoZEdVZ2FXMXdiRG9nUVhCd1JFSjFjMGx0Y0d4Y2JseHVJQ0FnSUVCdFpYUm9iMlJCYzNsdVl5Z3BYRzRnSUNBZ1lYTjVibU1nU1c1emNHVmpkRzl5S0NrNklGQnliMjFwYzJVOGRtOXBaRDRnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnVUhKdmJXbHpaUzV5WlhOdmJIWmxLSFJvYVhNdWFXMXdiQzVwYm5ObFkzUnZjaWdwS1Z4dUlDQWdJSDFjYmx4dUlDQWdJRUJ0WlhSb2IyUkJjM2x1WXloY0luTmNJaWxjYmlBZ0lDQmhjM2x1WXlCVWIyZG5iR1ZYYVc1a2IzY29ibUZ0WlRvZ2MzUnlhVzVuS1RvZ1VISnZiV2x6WlR4MmIybGtQaUI3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJRY205dGFYTmxMbkpsYzI5c2RtVW9kR2hwY3k1cGJYQnNMblJ2WjJkc1pWZHBibVJ2ZHlodVlXMWxLU2xjYmlBZ0lDQjlYRzVjYmlBZ0lDQkFiV1YwYUc5a1FYTjVibU1vS1Z4dUlDQWdJR0Z6ZVc1aklGRjFhWFFvS1RvZ1VISnZiV2x6WlR4MmIybGtQaUI3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJRY205dGFYTmxMbkpsYzI5c2RtVW9kR2hwY3k1cGJYQnNMbkYxYVhRb0tTbGNiaUFnSUNCOVhHNWNiaUFnSUNCQWJXVjBhRzlrUVhONWJtTW9XMXdpWVhOY0lsMHNJRnRjSW5OY0lsMHBYRzRnSUNBZ1lYTjVibU1nVW1WeGRXVnpkQ2hoY21kMk9pQnpkSEpwYm1kYlhTazZJRkJ5YjIxcGMyVThXM04wY21sdVoxMCtJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWFXMXdiQzV5WlhGMVpYTjBLR0Z5WjNZcExuUm9aVzRvS0hKbGN5a2dQVDRnVzNKbGMxMHBYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1kyOXVjM1J5ZFdOMGIzSW9hVzF3YkRvZ1FYQndSRUoxYzBsdGNHd3BJSHRjYmlBZ0lDQWdJQ0FnYzNWd1pYSW9LVnh1SUNBZ0lDQWdJQ0IwYUdsekxtbHRjR3dnUFNCcGJYQnNYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2MzUmhkR2xqSUhCeWIzaDVLR2x1YzNSaGJtTmxUbUZ0WlRvZ2MzUnlhVzVuS1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUdGd2NDQTlJRzVsZHlCQmNIQkVRblZ6S0h0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2x1YzJWamRHOXlLQ2tnZTMwc1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYjJkbmJHVlhhVzVrYjNjb0tTQjdmU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIRjFhWFFvS1NCN2ZTeGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGNYVmxjM1E2SUNncElEMCtJRkJ5YjIxcGMyVXVjbVZxWldOMEtDa3NYRzRnSUNBZ0lDQWdJSDBwWEc1Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdGd2NDNXdjbTk0ZVNoN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQmNJbWx2TGtGemRHRnNMbHdpSUNzZ2FXNXpkR0Z1WTJWT1lXMWxMRnh1SUNBZ0lDQWdJQ0I5S1Z4dUlDQWdJSDFjYm4xY2JpSXNJQ0pwYlhCdmNuUWdSMDlpYW1WamRDQm1jbTl0SUZ3aVoyazZMeTlIVDJKcVpXTjBYQ0pjYm1sdGNHOXlkQ0I3SUVaeVlXZHRaVzUwSUgwZ1puSnZiU0JjSWk0dlJuSmhaMjFsYm5RdWFuTmNJbHh1YVcxd2IzSjBJSHNnUVdOalpYTnpiM0lnZlNCbWNtOXRJRndpTGk5emRHRjBaUzVxYzF3aVhHNXBiWEJ2Y25RZ2V5QjBlWEJsSUVORExDQjBlWEJsSUVaRExDQmxibllnZlNCbWNtOXRJRndpTGk5bGJuWXVhbk5jSWx4dWFXMXdiM0owSUhzZ2EyVmlZV0pwWm5rc0lIUjVjR1VnVUdGelkyRnNhV1o1TENCelpYUWdmU0JtY205dElGd2lMaTR2ZFhScGJDNXFjMXdpWEc1cGJYQnZjblFnZXlCdmJrTnNaV0Z1ZFhBZ2ZTQm1jbTl0SUZ3aUxpOXpZMjl3WlM1cWMxd2lYRzVjYmk4cUtseHVJQ29nVW1Wd2NtVnpaVzUwY3lCaGJHd2diMllnZEdobElIUm9hVzVuY3lCMGFHRjBJR05oYmlCaVpTQndZWE56WldRZ1lYTWdZU0JqYUdsc1pDQjBieUJqYkdGemN5QmpiMjF3YjI1bGJuUnpMbHh1SUNvdlhHNWxlSEJ2Y25RZ2RIbHdaU0JPYjJSbElEMWNiaUFnSUNCOElFRnljbUY1UEVkUFltcGxZM1F1VDJKcVpXTjBQbHh1SUNBZ0lId2dSMDlpYW1WamRDNVBZbXBsWTNSY2JpQWdJQ0I4SUc1MWJXSmxjbHh1SUNBZ0lId2djM1J5YVc1blhHNGdJQ0FnZkNCaWIyOXNaV0Z1WEc0Z0lDQWdmQ0J1ZFd4c1hHNGdJQ0FnZkNCMWJtUmxabWx1WldSY2JseHVaWGh3YjNKMElHTnZibk4wSUdkMGExUjVjR1VnUFNCVGVXMWliMndvWENKbmRHc2dZblZwYkdSbGNpQjBlWEJsWENJcFhHNWNiaThxS2x4dUlDb2dVM0JsWTJsaGJDQnplVzFpYjJ3Z2QyaHBZMmdnYkdWMGN5QjViM1VnYVcxd2JHVnRaVzUwSUdodmR5QjNhV1JuWlhSeklHRnlaU0JoY0hCbGJtUmxaQ0JwYmlCS1UxZ3VYRzRnS2x4dUlDb2dSWGhoYlhCc1pUcGNiaUFxWEc0Z0tpQmdZR0IwYzF4dUlDb2dZMnhoYzNNZ1RYbERiMjF3YjI1bGJuUWdaWGgwWlc1a2N5QkhUMkpxWldOMExrOWlhbVZqZENCN1hHNGdLaUFnSUZ0aGNIQmxibVJEYUdsc1pGMG9ZMmhwYkdRNklFZFBZbXBsWTNRdVQySnFaV04wTENCMGVYQmxPaUJ6ZEhKcGJtY2dmQ0J1ZFd4c0tTQjdYRzRnS2lBZ0lDQWdMeThnYVcxd2JHVnRaVzUwWEc0Z0tpQWdJSDFjYmlBcUlIMWNiaUFxSUdCZ1lGeHVJQ292WEc1bGVIQnZjblFnWTI5dWMzUWdZWEJ3Wlc1a1EyaHBiR1FnUFNCVGVXMWliMndvWENKS1UxZ2dZV1JrSUdOb2FXeGtJRzFsZEdodlpGd2lLVnh1WEc0dktpcGNiaUFxSUZOd1pXTnBZV3dnYzNsdFltOXNJSGRvYVdOb0lHeGxkSE1nZVc5MUlHbHRjR3hsYldWdWRDQm9iM2NnZDJsa1oyVjBjeUJoY21VZ2NtVnRiM1psWkNCcGJpQktVMWd1WEc0Z0tseHVJQ29nUlhoaGJYQnNaVHBjYmlBcVhHNGdLaUJnWUdCMGMxeHVJQ29nWTJ4aGMzTWdUWGxEYjIxd2IyNWxiblFnWlhoMFpXNWtjeUJIVDJKcVpXTjBMazlpYW1WamRDQjdYRzRnS2lBZ0lGdHlaVzF2ZG1WRGFHbHNaRjBvWTJocGJHUTZJRWRQWW1wbFkzUXVUMkpxWldOMEtTQjdYRzRnS2lBZ0lDQWdMeThnYVcxd2JHVnRaVzUwWEc0Z0tpQWdJSDFjYmlBcUlIMWNiaUFxSUdCZ1lGeHVJQ292WEc1bGVIQnZjblFnWTI5dWMzUWdjbVZ0YjNabFEyaHBiR1FnUFNCVGVXMWliMndvWENKS1UxZ2dZV1JrSUhKbGJXOTJaU0J0WlhSb2IyUmNJaWxjYmx4dUx5b3FYRzRnS2lCSFpYUWdkR2hsSUhSNWNHVWdiMllnZEdobElHOWlhbVZqZENCemNHVmphV1pwWldRZ2RHaHliM1ZuYUNCMGFHVWdZQ1IwZVhCbFlDQndjbTl3WlhKMGVWeHVJQ292WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnWjJWMFZIbHdaU2h2WW1wbFkzUTZJRWRQWW1wbFkzUXVUMkpxWldOMEtTQjdYRzRnSUNBZ2NtVjBkWEp1SUdkMGExUjVjR1VnYVc0Z2IySnFaV04wSUQ4Z0tHOWlhbVZqZEZ0bmRHdFVlWEJsWFNCaGN5QnpkSEpwYm1jcElEb2diblZzYkZ4dWZWeHVYRzR2S2lwY2JpQXFJRVoxYm1OMGFXOXVJRU52YlhCdmJtVnVkQ0JRY205d1pYSjBhV1Z6WEc0Z0tpOWNibVY0Y0c5eWRDQjBlWEJsSUVaRFVISnZjSE04VTJWc1ppd2dVSEp2Y0hNK0lEMGdVSEp2Y0hNZ0ppQjdYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dSM1JyTGtKMWFXeGtaWElnZEhsd1pWeHVJQ0FnSUNBcUlHbDBjeUJqYjI1emRXMWxaQ0JwYm5SbGNtNWhiR3g1SUdGdVpDQnViM1FnWVdOMGRXRnNiSGtnY0dGemMyVmtJR0Z6SUdFZ2NHRnlZVzFsZEdWeWMxeHVJQ0FnSUNBcUwxeHVJQ0FnSUNSMGVYQmxQem9nYzNSeWFXNW5YRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2djMlYwZFhBZ1puVnVZM1JwYjI1Y2JpQWdJQ0FnS2lCcGRITWdZMjl1YzNWdFpXUWdhVzUwWlhKdVlXeHNlU0JoYm1RZ2JtOTBJR0ZqZEhWaGJHeDVJSEJoYzNObFpDQmhjeUJoSUhCaGNtRnRaWFJsY25OY2JpQWdJQ0FnS2k5Y2JpQWdJQ0FrUHloelpXeG1PaUJUWld4bUtUb2dkbTlwWkZ4dWZWeHVYRzR2S2lwY2JpQXFJRU5zWVhOeklFTnZiWEJ2Ym1WdWRDQlFjbTl3WlhKMGFXVnpYRzRnS2k5Y2JtVjRjRzl5ZENCMGVYQmxJRU5EVUhKdmNITThVMlZzWmlCbGVIUmxibVJ6SUVkUFltcGxZM1F1VDJKcVpXTjBMQ0JRY205d2N6NGdQU0I3WEc0Z0lDQWdMeW9xWEc0Z0lDQWdJQ29nUUdsdWRHVnlibUZzSUdOb2FXeGtjbVZ1SUdWc1pXMWxiblJ6WEc0Z0lDQWdJQ29nYVhSeklHTnZibk4xYldWa0lHbHVkR1Z5Ym1Gc2JIa2dZVzVrSUc1dmRDQmhZM1IxWVd4c2VTQndZWE56WldRZ2RHOGdZMnhoYzNNZ1kyOXRjRzl1Wlc1MElHTnZibk4wY25WamRHOXljMXh1SUNBZ0lDQXFMMXh1SUNBZ0lHTm9hV3hrY21WdVB6b2dRWEp5WVhrOFRtOWtaVDRnZkNCT2IyUmxYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dSM1JyTGtKMWFXeGtaWElnZEhsd1pWeHVJQ0FnSUNBcUlHbDBjeUJqYjI1emRXMWxaQ0JwYm5SbGNtNWhiR3g1SUdGdVpDQnViM1FnWVdOMGRXRnNiSGtnY0dGemMyVmtJSFJ2SUdOc1lYTnpJR052YlhCdmJtVnVkQ0JqYjI1emRISjFZM1J2Y25OY2JpQWdJQ0FnS2k5Y2JpQWdJQ0FrZEhsd1pUODZJSE4wY21sdVoxeHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlHWjFibU4wYVc5dUlIUnZJSFZ6WlNCaGN5QmhJR052Ym5OMGNuVmpkRzl5TEZ4dUlDQWdJQ0FxSUdsMGN5QmpiMjV6ZFcxbFpDQnBiblJsY201aGJHeDVJR0Z1WkNCdWIzUWdZV04wZFdGc2JIa2djR0Z6YzJWa0lIUnZJR05zWVhOeklHTnZiWEJ2Ym1WdWRDQmpiMjV6ZEhKMVkzUnZjbk5jYmlBZ0lDQWdLaTljYmlBZ0lDQWtZMjl1YzNSeWRXTjBiM0kvS0hCeWIzQnpPaUJRWVhKMGFXRnNQRkJ5YjNCelBpazZJRk5sYkdaY2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCelpYUjFjQ0JtZFc1amRHbHZiaXhjYmlBZ0lDQWdLaUJwZEhNZ1kyOXVjM1Z0WldRZ2FXNTBaWEp1WVd4c2VTQmhibVFnYm05MElHRmpkSFZoYkd4NUlIQmhjM05sWkNCMGJ5QmpiR0Z6Y3lCamIyMXdiMjVsYm5RZ1kyOXVjM1J5ZFdOMGIzSnpYRzRnSUNBZ0lDb3ZYRzRnSUNBZ0pEOG9jMlZzWmpvZ1UyVnNaaWs2SUhadmFXUmNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQkRVMU1nWTJ4aGMzTWdibUZ0WlhOY2JpQWdJQ0FnS2k5Y2JpQWdJQ0JqYkdGemN6ODZJSE4wY21sdVp5QjhJRUZqWTJWemMyOXlQSE4wY21sdVp6NWNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQnBibXhwYm1VZ1ExTlRYRzRnSUNBZ0lDb3ZYRzRnSUNBZ1kzTnpQem9nYzNSeWFXNW5JSHdnUVdOalpYTnpiM0k4YzNSeWFXNW5QbHh1ZlNBbUlIdGNiaUFnSUNCYlN5QnBiaUJyWlhsdlppQlFjbTl3YzEwNklFRmpZMlZ6YzI5eVBFNXZiazUxYkd4aFlteGxQRkJ5YjNCelcwdGRQajRnZkNCUWNtOXdjMXRMWFZ4dWZTQW1JSHRjYmlBZ0lDQmJVeUJwYmlCclpYbHZaaUJUWld4bVcxd2lKSE5wWjI1aGJITmNJbDBnWVhNZ1V5QmxlSFJsYm1SeklHQnViM1JwWm5rNk9pUjdhVzVtWlhJZ1VIMWdYRzRnSUNBZ0lDQWdJRDhnWUc5dVRtOTBhV1o1Skh0UVlYTmpZV3hwWm5rOFVENTlZRnh1SUNBZ0lDQWdJQ0E2SUZNZ1pYaDBaVzVrY3lCZ0pIdHBibVpsY2lCRmZUbzZKSHRwYm1abGNpQkVmV0JjYmlBZ0lDQWdJQ0FnSUNBL0lHQnZiaVI3VUdGelkyRnNhV1o1UEdBa2UwVjlPaVI3UkgxZ1BuMWdYRzRnSUNBZ0lDQWdJQ0FnT2lCVElHVjRkR1Z1WkhNZ2MzUnlhVzVuWEc0Z0lDQWdJQ0FnSUNBZ0lDQS9JR0J2YmlSN1VHRnpZMkZzYVdaNVBGTStmV0JjYmlBZ0lDQWdJQ0FnSUNBZ0lEb2dibVYyWlhKZFB6b2dSMDlpYW1WamRDNVRhV2R1WVd4RFlXeHNZbUZqYXp4VFpXeG1MQ0JUWld4bVcxd2lKSE5wWjI1aGJITmNJbDFiVTEwK1hHNTlYRzVjYmk4dklIQnlaWFIwYVdWeUxXbG5ibTl5WlZ4dWRIbHdaU0JLYzNoUWNtOXdjenhETENCUWNtOXdjejRnUFZ4dUlDQWdJRU1nWlhoMFpXNWtjeUIwZVhCbGIyWWdSbkpoWjIxbGJuUWdQeUFvVUhKdmNITWdKaUI3ZlNsY2JpQWdJQ0F2THlCcGJuUnlhVzV6YVdORmJHVnRaVzUwY3lCaGJIZGhlWE1nY21WemIyeDJaU0JoY3lCR1ExeHVJQ0FnSUM4dklITnZJSGRsSUdOaGJpZDBJRzVoY25KdmR5QnBkQ0JrYjNkdUxDQmhibVFnYVc0Z2MyOXRaU0JqWVhObGMxeHVJQ0FnSUM4dklIUm9aU0J6WlhSMWNDQm1kVzVqZEdsdmJpQnBjeUIwZVhCbFpDQmhjeUJoSUhWdWFXOXVJRzltSUU5aWFtVmpkQ0JoYm1RZ1lXTjBkV0ZzSUhSNWNHVmNiaUFnSUNBdkx5QmhjeUJoSUdacGVDQjFjMlZ5Y3lCallXNGdZVzVrSUhOb2IzVnNaQ0IxYzJVZ1JrTlFjbTl3YzF4dUlDQWdJRG9nUXlCbGVIUmxibVJ6SUVaRElEOGdVSEp2Y0hNZ0ppQlBiV2wwUEVaRFVISnZjSE04VW1WMGRYSnVWSGx3WlR4RFBpd2dVSEp2Y0hNK0xDQmNJaVJjSWo1Y2JpQWdJQ0E2SUVNZ1pYaDBaVzVrY3lCRFF5QS9JRU5EVUhKdmNITThTVzV6ZEdGdVkyVlVlWEJsUEVNK0xDQlFjbTl3Y3o1Y2JpQWdJQ0E2SUc1bGRtVnlYRzVjYm1aMWJtTjBhVzl1SUdselIwOWlhbVZqZEVOMGIzSW9ZM1J2Y2pvZ1lXNTVLVG9nWTNSdmNpQnBjeUJEUXlCN1hHNGdJQ0FnY21WMGRYSnVJR04wYjNJdWNISnZkRzkwZVhCbElHbHVjM1JoYm1ObGIyWWdSMDlpYW1WamRDNVBZbXBsWTNSY2JuMWNibHh1Wm5WdVkzUnBiMjRnYVhOR2RXNWpkR2x2YmtOMGIzSW9ZM1J2Y2pvZ1lXNTVLVG9nWTNSdmNpQnBjeUJHUXlCN1hHNGdJQ0FnY21WMGRYSnVJSFI1Y0dWdlppQmpkRzl5SUQwOVBTQmNJbVoxYm1OMGFXOXVYQ0lnSmlZZ0lXbHpSMDlpYW1WamRFTjBiM0lvWTNSdmNpbGNibjFjYmx4dUx5OGdiMjVPYjNScFpubFFjbTl3VG1GdFpTQXRQaUJ1YjNScFpuazZPbkJ5YjNBdGJtRnRaVnh1THk4Z2IyNVFZWE5qWVd4T1lXMWxPbVJsZEdGcGJFNWhiV1VnTFQ0Z2NHRnpZMkZzTFc1aGJXVTZPbVJsZEdGcGJDMXVZVzFsWEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnYzJsbmJtRnNUbUZ0WlNoclpYazZJSE4wY21sdVp5azZJSE4wY21sdVp5QjdYRzRnSUNBZ1kyOXVjM1FnVzNOcFp5d2daR1YwWVdsc1hTQTlJR3RsWW1GaWFXWjVLR3RsZVM1emJHbGpaU2d5S1NrdWMzQnNhWFFvWENJNlhDSXBYRzVjYmlBZ0lDQnBaaUFvYzJsbkxuTjBZWEowYzFkcGRHZ29YQ0p1YjNScFpua3RYQ0lwS1NCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCZ2JtOTBhV1o1T2pva2UzTnBaeTV6YkdsalpTZzNLWDFnWEc0Z0lDQWdmVnh1WEc0Z0lDQWdjbVYwZFhKdUlHUmxkR0ZwYkNBL0lHQWtlM05wWjMwNk9pUjdaR1YwWVdsc2ZXQWdPaUJ6YVdkY2JuMWNibHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJSEpsYlc5MlpTaHdZWEpsYm5RNklFZFBZbXBsWTNRdVQySnFaV04wTENCamFHbHNaRG9nUjA5aWFtVmpkQzVQWW1wbFkzUXBJSHRjYmlBZ0lDQnBaaUFvY0dGeVpXNTBJR2x1YzNSaGJtTmxiMllnUm5KaFoyMWxiblFwSUh0Y2JpQWdJQ0FnSUNBZ2NHRnlaVzUwTG5KbGJXOTJaU2hqYUdsc1pDbGNiaUFnSUNBZ0lDQWdjbVYwZFhKdVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnYVdZZ0tISmxiVzkyWlVOb2FXeGtJR2x1SUhCaGNtVnVkQ0FtSmlCMGVYQmxiMllnY0dGeVpXNTBXM0psYlc5MlpVTm9hV3hrWFNBOVBUMGdYQ0ptZFc1amRHbHZibHdpS1NCN1hHNGdJQ0FnSUNBZ0lIQmhjbVZ1ZEZ0eVpXMXZkbVZEYUdsc1pGMG9ZMmhwYkdRcFhHNGdJQ0FnSUNBZ0lISmxkSFZ5Ymx4dUlDQWdJSDFjYmx4dUlDQWdJR1Z1ZGk1eVpXMXZkbVZEYUdsc1pDaHdZWEpsYm5Rc0lHTm9hV3hrS1Z4dWZWeHVYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdZWEJ3Wlc1a0tIQmhjbVZ1ZERvZ1IwOWlhbVZqZEM1UFltcGxZM1FzSUdOb2FXeGtPaUJIVDJKcVpXTjBMazlpYW1WamRDa2dlMXh1SUNBZ0lHbG1JQ2h3WVhKbGJuUWdhVzV6ZEdGdVkyVnZaaUJHY21GbmJXVnVkQ2tnZTF4dUlDQWdJQ0FnSUNCd1lYSmxiblF1WVhCd1pXNWtLR05vYVd4a0tWeHVJQ0FnSUNBZ0lDQnlaWFIxY201Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb1kyaHBiR1FnYVc1emRHRnVZMlZ2WmlCR2NtRm5iV1Z1ZENrZ2UxeHVJQ0FnSUNBZ0lDQm1iM0lnS0dOdmJuTjBJR05vSUc5bUlHTm9hV3hrS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JoY0hCbGJtUW9jR0Z5Wlc1MExDQmphQ2xjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lHTnZibk4wSUdGd2NHVnVaRWhoYm1Sc1pYSWdQU0JqYUdsc1pDNWpiMjV1WldOMEtGd2lZWEJ3Wlc1a1hDSXNJQ2hmTENCamFDa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NFb1kyZ2dhVzV6ZEdGdVkyVnZaaUJIVDJKcVpXTjBMazlpYW1WamRDa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNWxjbkp2Y2loVWVYQmxSWEp5YjNJb1lHTmhibTV2ZENCaFpHUWdKSHRqYUgwZ2RHOGdKSHR3WVhKbGJuUjlZQ2twWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCaGNIQmxibVFvY0dGeVpXNTBMQ0JqYUNsY2JpQWdJQ0FnSUNBZ2ZTbGNibHh1SUNBZ0lDQWdJQ0JqYjI1emRDQnlaVzF2ZG1WSVlXNWtiR1Z5SUQwZ1kyaHBiR1F1WTI5dWJtVmpkQ2hjSW5KbGJXOTJaVndpTENBb1h5d2dZMmdwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2hLR05vSUdsdWMzUmhibU5sYjJZZ1IwOWlhbVZqZEM1UFltcGxZM1FwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1WlhKeWIzSW9WSGx3WlVWeWNtOXlLR0JqWVc1dWIzUWdjbVZ0YjNabElDUjdZMmg5SUdaeWIyMGdKSHR3WVhKbGJuUjlZQ2twWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpXMXZkbVVvY0dGeVpXNTBMQ0JqYUNsY2JpQWdJQ0FnSUNBZ2ZTbGNibHh1SUNBZ0lDQWdJQ0J2YmtOc1pXRnVkWEFvS0NrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyaHBiR1F1WkdselkyOXVibVZqZENoaGNIQmxibVJJWVc1a2JHVnlLVnh1SUNBZ0lDQWdJQ0FnSUNBZ1kyaHBiR1F1WkdselkyOXVibVZqZENoeVpXMXZkbVZJWVc1a2JHVnlLVnh1SUNBZ0lDQWdJQ0I5S1Z4dVhHNGdJQ0FnSUNBZ0lISmxkSFZ5Ymx4dUlDQWdJSDFjYmx4dUlDQWdJR2xtSUNoaGNIQmxibVJEYUdsc1pDQnBiaUJ3WVhKbGJuUWdKaVlnZEhsd1pXOW1JSEJoY21WdWRGdGhjSEJsYm1SRGFHbHNaRjBnUFQwOUlGd2lablZ1WTNScGIyNWNJaWtnZTF4dUlDQWdJQ0FnSUNCd1lYSmxiblJiWVhCd1pXNWtRMmhwYkdSZEtHTm9hV3hrTENCblpYUlVlWEJsS0dOb2FXeGtLU2xjYmlBZ0lDQWdJQ0FnY21WMGRYSnVYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1pXNTJMbUZ3Y0dWdVpFTm9hV3hrS0hCaGNtVnVkQ3dnWTJocGJHUXBYRzU5WEc1Y2JpOHFLaUJBYVc1MFpYSnVZV3dnS2k5Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCelpYUlVlWEJsS0c5aWFtVmpkRG9nYjJKcVpXTjBMQ0IwZVhCbE9pQnpkSEpwYm1jcElIdGNiaUFnSUNCcFppQW9aM1JyVkhsd1pTQnBiaUJ2WW1wbFkzUWdKaVlnYjJKcVpXTjBXMmQwYTFSNWNHVmRJQ0U5UFNCY0lsd2lLU0I3WEc0Z0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpaGdkSGx3WlNCdmRtVnljbWxrWlc0Z1puSnZiU0FrZTI5aWFtVmpkRnRuZEd0VWVYQmxYWDBnZEc4Z0pIdDBlWEJsZlNCdmJpQWtlMjlpYW1WamRIMWdLVnh1SUNBZ0lIMWNibHh1SUNBZ0lFOWlhbVZqZEM1aGMzTnBaMjRvYjJKcVpXTjBMQ0I3SUZ0bmRHdFVlWEJsWFRvZ2RIbHdaU0I5S1Z4dWZWeHVYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdhbk40UEZRZ1pYaDBaVzVrY3lBb2NISnZjSE02SUdGdWVTa2dQVDRnUjA5aWFtVmpkQzVQWW1wbFkzUStLRnh1SUNBZ0lHTjBiM0k2SUZRc1hHNGdJQ0FnY0hKdmNITTZJRXB6ZUZCeWIzQnpQRlFzSUZCaGNtRnRaWFJsY25NOFZENWJNRjArTEZ4dUtUb2dVbVYwZFhKdVZIbHdaVHhVUGx4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z2FuTjRQRlFnWlhoMFpXNWtjeUJ1WlhjZ0tIQnliM0J6T2lCaGJua3BJRDArSUVkUFltcGxZM1F1VDJKcVpXTjBQaWhjYmlBZ0lDQmpkRzl5T2lCVUxGeHVJQ0FnSUhCeWIzQnpPaUJLYzNoUWNtOXdjenhVTENCRGIyNXpkSEoxWTNSdmNsQmhjbUZ0WlhSbGNuTThWRDViTUYwK0xGeHVLVG9nU1c1emRHRnVZMlZVZVhCbFBGUStYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJxYzNnOFZDQmxlSFJsYm1SeklFZFBZbXBsWTNRdVQySnFaV04wUGloY2JpQWdJQ0JqZEc5eU9pQnJaWGx2WmlBb2RIbHdaVzltSUdWdWRpbGJYQ0pwYm5SeWFXNXphV05GYkdWdFpXNTBjMXdpWFNCOElDaHVaWGNnS0hCeWIzQnpPaUJoYm5rcElEMCtJRlFwSUh3Z0tDaHdjbTl3Y3pvZ1lXNTVLU0E5UGlCVUtTeGNiaUFnSUNCcGJuQnliM0J6T2lCaGJua3NYRzRnSUNBZ0x5OGdhMlY1SUdseklHRWdjM0JsWTJsaGJDQndjbTl3SUdsdUlHcHplQ0IzYUdsamFDQnBjeUJ3WVhOelpXUWdZWE1nWVNCMGFHbHlaQ0JoY21kMWJXVnVkQ0JoYm1RZ2JtOTBJR2x1SUhCeWIzQnpYRzRnSUNBZ2EyVjVQem9nYzNSeWFXNW5MRnh1S1RvZ1ZDQjdYRzRnSUNBZ1kyOXVjM1FnZXlBa0xDQWtkSGx3WlN3Z0pHTnZibk4wY25WamRHOXlMQ0JqYUdsc1pISmxiaXdnTGk0dWNtVnpkQ0I5SUQwZ2FXNXdjbTl3Y3lCaGN5QkRRMUJ5YjNCelBGUXNJR0Z1ZVQ1Y2JpQWdJQ0JqYjI1emRDQndjbTl3Y3lBOUlISmxjM1FnWVhNZ1VtVmpiM0prUEhOMGNtbHVaeXdnWVc1NVBseHVYRzRnSUNBZ2FXWWdLR3RsZVNrZ1QySnFaV04wTG1GemMybG5iaWh3Y205d2N5d2dleUJyWlhrZ2ZTbGNibHh1SUNBZ0lHTnZibk4wSUdSbFptVnlVSEp2Y0hNZ1BTQmxibll1YVc1cGRGQnliM0J6S0dOMGIzSXNJSEJ5YjNCektTQS9QeUJiWFZ4dUlDQWdJR052Ym5OMElHUmxabVZ5Y21Wa1VISnZjSE02SUZKbFkyOXlaRHh6ZEhKcGJtY3NJSFZ1YTI1dmQyNCtJRDBnZTMxY2JseHVJQ0FnSUdadmNpQW9ZMjl1YzNRZ1cydGxlU3dnZG1Gc2RXVmRJRzltSUU5aWFtVmpkQzVsYm5SeWFXVnpLSEJ5YjNCektTa2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb2RtRnNkV1VnUFQwOUlIVnVaR1ZtYVc1bFpDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pHVnNaWFJsSUhCeWIzQnpXMnRsZVYxY2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJR2xtSUNoa1pXWmxjbEJ5YjNCekxtbHVZMngxWkdWektHdGxlU2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1JsWm1WeWNtVmtVSEp2Y0hOYmEyVjVYU0E5SUhCeWIzQnpXMnRsZVYxY2JpQWdJQ0FnSUNBZ0lDQWdJR1JsYkdWMFpTQndjbTl3YzF0clpYbGRYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQnBaaUFvZEhsd1pXOW1JR04wYjNJZ1BUMDlJRndpYzNSeWFXNW5YQ0lwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLR04wYjNJZ2FXNGdaVzUyTG1sdWRISnBibk5wWTBWc1pXMWxiblJ6S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqZEc5eUlEMGdaVzUyTG1sdWRISnBibk5wWTBWc1pXMWxiblJ6VzJOMGIzSmRJR0Z6SUVaRFBGUStJSHdnUTBNOFZENWNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2NtOTNJRVZ5Y205eUtHQjFibXR1YjNkdUlHbHVkSEpwYm5OcFl5QmxiR1Z0Wlc1MElGd2lKSHRqZEc5eWZWd2lZQ2xjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJR2xtSUNocGMwWjFibU4wYVc5dVEzUnZjaWhqZEc5eUtTa2dlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQnZZbXBsWTNRZ1BTQmpkRzl5S0hzZ1kyaHBiR1J5Wlc0c0lDNHVMbkJ5YjNCeklIMHBYRzRnSUNBZ0lDQWdJR2xtSUNna2RIbHdaU2tnYzJWMFZIbHdaU2h2WW1wbFkzUXNJQ1IwZVhCbEtWeHVJQ0FnSUNBZ0lDQWtQeTRvYjJKcVpXTjBLVnh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdiMkpxWldOMFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHk4Z1kyOXNiR1ZqZENCamMzTWdZVzVrSUdOc1lYTnpUbUZ0WlZ4dUlDQWdJR052Ym5OMElIc2dZM056TENCamJHRnpjem9nWTJ4aGMzTk9ZVzFsSUgwZ1BTQndjbTl3YzF4dUlDQWdJR1JsYkdWMFpTQndjbTl3Y3k1amMzTmNiaUFnSUNCa1pXeGxkR1VnY0hKdmNITXVZMnhoYzNOY2JseHVJQ0FnSUdOdmJuTjBJSE5wWjI1aGJITTZJRUZ5Y21GNVBGdHpkSEpwYm1jc0lDZ3VMaTV3Y205d2N6b2dkVzVyYm05M2JsdGRLU0E5UGlCMWJtdHViM2R1WFQ0Z1BTQmJYVnh1SUNBZ0lHTnZibk4wSUdKcGJtUnBibWR6T2lCQmNuSmhlVHhiYzNSeWFXNW5MQ0JCWTJObGMzTnZjangxYm10dWIzZHVQbDArSUQwZ1cxMWNibHh1SUNBZ0lDOHZJR052Ykd4bFkzUWdjMmxuYm1Gc2N5QmhibVFnWW1sdVpHbHVaM05jYmlBZ0lDQm1iM0lnS0dOdmJuTjBJRnRyWlhrc0lIWmhiSFZsWFNCdlppQlBZbXBsWTNRdVpXNTBjbWxsY3lod2NtOXdjeWtwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLR3RsZVM1emRHRnlkSE5YYVhSb0tGd2liMjVjSWlrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhOcFoyNWhiSE11Y0hWemFDaGJhMlY1TENCMllXeDFaU0JoY3lBb0tTQTlQaUIxYm10dWIzZHVYU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lHUmxiR1YwWlNCd2NtOXdjMXRyWlhsZFhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdhV1lnS0haaGJIVmxJR2x1YzNSaGJtTmxiMllnUVdOalpYTnpiM0lwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0pwYm1ScGJtZHpMbkIxYzJnb1cydGxlU3dnZG1Gc2RXVmRLVnh1SUNBZ0lDQWdJQ0FnSUNBZ2NISnZjSE5iYTJWNVhTQTlJSFpoYkhWbExtZGxkQ2dwWEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2THlCamIyNXpkSEoxWTNSY2JpQWdJQ0JqYjI1emRDQnZZbXBsWTNRZ1BTQWtZMjl1YzNSeWRXTjBiM0lnUHlBa1kyOXVjM1J5ZFdOMGIzSW9jSEp2Y0hNcElEb2dibVYzSUNoamRHOXlJR0Z6SUVORFBGUStLU2h3Y205d2N5bGNiaUFnSUNCcFppQW9KR052Ym5OMGNuVmpkRzl5S1NCUFltcGxZM1F1WVhOemFXZHVLRzlpYW1WamRDd2djSEp2Y0hNcFhHNGdJQ0FnYVdZZ0tDUjBlWEJsS1NCelpYUlVlWEJsS0c5aWFtVmpkQ3dnSkhSNWNHVXBYRzVjYmlBZ0lDQnBaaUFvWTNOektTQmxibll1YzJWMFEzTnpLRzlpYW1WamRDd2dZM056S1Z4dUlDQWdJR2xtSUNoamJHRnpjMDVoYldVcElHVnVkaTV6WlhSRGJHRnpjeWh2WW1wbFkzUXNJR05zWVhOelRtRnRaU2xjYmx4dUlDQWdJQzh2SUdGa1pDQmphR2xzWkhKbGJseHVJQ0FnSUdadmNpQW9iR1YwSUdOb2FXeGtJRzltSUVGeWNtRjVMbWx6UVhKeVlYa29ZMmhwYkdSeVpXNHBJRDhnWTJocGJHUnlaVzRnT2lCYlkyaHBiR1J5Wlc1ZEtTQjdYRzRnSUNBZ0lDQWdJR2xtSUNoamFHbHNaQ0E5UFQwZ2RISjFaU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0VWeWNtOXlLRndpVkhKNWFXNW5JSFJ2SUdGa1pDQmliMjlzWldGdUlIWmhiSFZsSUc5bUlHQjBjblZsWUNCaGN5QmhJR05vYVd4a0xsd2lLU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZiblJwYm5WbFhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JwWmlBb1FYSnlZWGt1YVhOQmNuSmhlU2hqYUdsc1pDa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZjaUFvWTI5dWMzUWdZMmdnYjJZZ1kyaHBiR1FwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaGNIQmxibVFvYjJKcVpXTjBMQ0JqYUNsY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNoamFHbHNaQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NFb1kyaHBiR1FnYVc1emRHRnVZMlZ2WmlCSFQySnFaV04wTGs5aWFtVmpkQ2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamFHbHNaQ0E5SUdWdWRpNTBaWGgwVG05a1pTaGphR2xzWkNsY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lHRndjR1Z1WkNodlltcGxZM1FzSUdOb2FXeGtLVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdMeThnYUdGdVpHeGxJSE5wWjI1aGJITmNiaUFnSUNCamIyNXpkQ0JrYVhOd2IzTmxTR0Z1Wkd4bGNuTWdQU0J6YVdkdVlXeHpMbTFoY0Nnb1czTnBaeXdnYUdGdVpHeGxjbDBwSUQwK0lIdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2FXUWdQU0J2WW1wbFkzUXVZMjl1Ym1WamRDaHphV2R1WVd4T1lXMWxLSE5wWnlrc0lHaGhibVJzWlhJcFhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlBb0tTQTlQaUJ2WW1wbFkzUXVaR2x6WTI5dWJtVmpkQ2hwWkNsY2JpQWdJQ0I5S1Z4dVhHNGdJQ0FnTHk4Z1pHVm1aWEp5WldRZ2NISnZjSE5jYmlBZ0lDQm1iM0lnS0dOdmJuTjBJRnRyWlhrc0lIWmhiSFZsWFNCdlppQlBZbXBsWTNRdVpXNTBjbWxsY3loa1pXWmxjbkpsWkZCeWIzQnpLU2tnZTF4dUlDQWdJQ0FnSUNCcFppQW9kbUZzZFdVZ2FXNXpkR0Z1WTJWdlppQkJZMk5sYzNOdmNpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1ltbHVaR2x1WjNNdWNIVnphQ2hiYTJWNUxDQjJZV3gxWlYwcFhHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JQWW1wbFkzUXVZWE56YVdkdUtHOWlhbVZqZEN3Z2V5QmJhMlY1WFRvZ2RtRnNkV1VnZlNsY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4dklHaGhibVJzWlNCaWFXNWthVzVuYzF4dUlDQWdJR052Ym5OMElHUnBjM0J2YzJWQ2FXNWthVzVuY3lBOUlHSnBibVJwYm1kekxtMWhjQ2dvVzNCeWIzQXNJR0pwYm1ScGJtZGRLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lHTnZibk4wSUdScGMzQnZjMlVnUFNCaWFXNWthVzVuTG5OMVluTmpjbWxpWlNnb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnpaWFFvYjJKcVpXTjBMQ0J3Y205d0xDQmlhVzVrYVc1bkxtZGxkQ2dwS1Z4dUlDQWdJQ0FnSUNCOUtWeHVJQ0FnSUNBZ0lDQnpaWFFvYjJKcVpXTjBMQ0J3Y205d0xDQmlhVzVrYVc1bkxtZGxkQ2dwS1Z4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWkdsemNHOXpaVnh1SUNBZ0lIMHBYRzVjYmlBZ0lDQXZMeUJqYkdWaGJuVndYRzRnSUNBZ2FXWWdLR1JwYzNCdmMyVkNhVzVrYVc1bmN5NXNaVzVuZEdnZ1BpQXdJSHg4SUdScGMzQnZjMlZJWVc1a2JHVnljeTVzWlc1bmRHZ2dQaUF3S1NCN1hHNGdJQ0FnSUNBZ0lHOXVRMnhsWVc1MWNDZ29LU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2IzTmxTR0Z1Wkd4bGNuTXVabTl5UldGamFDZ29ZMklwSUQwK0lHTmlLQ2twWEc0Z0lDQWdJQ0FnSUNBZ0lDQmthWE53YjNObFFtbHVaR2x1WjNNdVptOXlSV0ZqYUNnb1kySXBJRDArSUdOaUtDa3BYRzRnSUNBZ0lDQWdJSDBwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdKRDh1S0c5aWFtVmpkQ2xjYmlBZ0lDQnlaWFIxY200Z2IySnFaV04wWEc1OVhHNWNiaTh2SUZSUFJFODZJRzFoYTJVZ2RYTmxJRzltSUdwemVITmNibVY0Y0c5eWRDQmpiMjV6ZENCcWMzaHpJRDBnYW5ONFhHNWNibVJsWTJ4aGNtVWdaMnh2WW1Gc0lIdGNiaUFnSUNBdkx5QmxjMnhwYm5RdFpHbHpZV0pzWlMxdVpYaDBMV3hwYm1VZ1FIUjVjR1Z6WTNKcGNIUXRaWE5zYVc1MEwyNXZMVzVoYldWemNHRmpaVnh1SUNBZ0lHNWhiV1Z6Y0dGalpTQktVMWdnZTF4dUlDQWdJQ0FnSUNCMGVYQmxJRVZzWlcxbGJuUlVlWEJsSUQwZ2EyVjViMllnU1c1MGNtbHVjMmxqUld4bGJXVnVkSE1nZkNCR1F5QjhJRU5EWEc0Z0lDQWdJQ0FnSUhSNWNHVWdSV3hsYldWdWRDQTlJRWRQWW1wbFkzUXVUMkpxWldOMFhHNGdJQ0FnSUNBZ0lIUjVjR1VnUld4bGJXVnVkRU5zWVhOeklEMGdSMDlpYW1WamRDNVBZbXBsWTNSY2JseHVJQ0FnSUNBZ0lDQjBlWEJsSUV4cFluSmhjbmxOWVc1aFoyVmtRWFIwY21saWRYUmxjenhETENCUWNtOXdjejRnUFNCS2MzaFFjbTl3Y3p4RExDQlFjbTl3Y3o0Z0ppQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5QkdTVmhOUlRvZ2QyaDVJR1J2WlhNZ1lXNGdhVzUwY21sdWMybGpJR1ZzWlcxbGJuUWdZV3gzWVhseklISmxjMjlzZG1VZ1lYTWdSa00vWEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMeUJmWDNSNWNHVS9PaUJESUdWNGRHVnVaSE1nUTBNZ1B5QmNJa05EWENJZ09pQkRJR1Y0ZEdWdVpITWdSa01nUHlCY0lrWkRYQ0lnT2lCdVpYWmxjbHh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0x5OGdaWE5zYVc1MExXUnBjMkZpYkdVdGJtVjRkQzFzYVc1bElFQjBlWEJsYzJOeWFYQjBMV1Z6YkdsdWRDOXVieTFsYlhCMGVTMXZZbXBsWTNRdGRIbHdaVnh1SUNBZ0lDQWdJQ0JwYm5SbGNtWmhZMlVnU1c1MGNtbHVjMmxqUld4bGJXVnVkSE1nZTF4dUlDQWdJQ0FnSUNBZ0lDQWdMeThnWTJNNklFTkRVSEp2Y0hNOFIzUnJMa0p2ZUN3Z1IzUnJMa0p2ZUM1RGIyNXpkSEoxWTNSdmNsQnliM0J6TENCSGRHc3VRbTk0TGxOcFoyNWhiRk5wWjI1aGRIVnlaWE0rWEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMeUJtWXpvZ1JrTlFjbTl3Y3p4SGRHc3VWMmxrWjJWMExDQkdibEJ5YjNCelBseHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnYVc1MFpYSm1ZV05sSUVWc1pXMWxiblJEYUdsc1pISmxia0YwZEhKcFluVjBaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMeUJsYzJ4cGJuUXRaR2x6WVdKc1pTMXVaWGgwTFd4cGJtVWdRSFI1Y0dWelkzSnBjSFF0WlhOc2FXNTBMMjV2TFdWdGNIUjVMVzlpYW1WamRDMTBlWEJsWEc0Z0lDQWdJQ0FnSUNBZ0lDQmphR2xzWkhKbGJqb2dlMzFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYm4xY2JpSXNJQ0pwYlhCdmNuUWdSMDlpYW1WamRDQm1jbTl0SUZ3aVoyazZMeTlIVDJKcVpXTjBYQ0pjYmx4dWFXNTBaWEptWVdObElFWnlZV2R0Wlc1MFUybG5ibUZzY3p4VVBpQmxlSFJsYm1SeklFZFBZbXBsWTNRdVQySnFaV04wTGxOcFoyNWhiRk5wWjI1aGRIVnlaWE1nZTF4dUlDQWdJR0Z3Y0dWdVpEb2dLR05vYVd4a09pQlVLU0E5UGlCMmIybGtYRzRnSUNBZ2NtVnRiM1psT2lBb1kyaHBiR1E2SUZRcElEMCtJSFp2YVdSY2JuMWNibHh1Wlhod2IzSjBJR05zWVhOeklFWnlZV2R0Wlc1MFBGUWdQU0JoYm5rK0lHVjRkR1Z1WkhNZ1IwOWlhbVZqZEM1UFltcGxZM1FnZTF4dUlDQWdJR1JsWTJ4aGNtVWdKSE5wWjI1aGJITTZJRVp5WVdkdFpXNTBVMmxuYm1Gc2N6eFVQbHh1WEc0Z0lDQWdjM1JoZEdsaklGdEhUMkpxWldOMExuTnBaMjVoYkhOZElEMGdlMXh1SUNBZ0lDQWdJQ0JoY0hCbGJtUTZJSHNnY0dGeVlXMWZkSGx3WlhNNklGdEhUMkpxWldOMExsUlpVRVZmVDBKS1JVTlVYU0I5TEZ4dUlDQWdJQ0FnSUNCeVpXMXZkbVU2SUhzZ2NHRnlZVzFmZEhsd1pYTTZJRnRIVDJKcVpXTjBMbFJaVUVWZlQwSktSVU5VWFNCOUxGeHVJQ0FnSUgxY2JseHVJQ0FnSUhOMFlYUnBZeUJiUjA5aWFtVmpkQzV3Y205d1pYSjBhV1Z6WFNBOUlIdGNiaUFnSUNBZ0lDQWdZMmhwYkdSeVpXNDZJRWRQWW1wbFkzUXVVR0Z5WVcxVGNHVmpMbXB6YjJKcVpXTjBLRndpWTJocGJHUnlaVzVjSWl3Z1hDSmNJaXdnWENKY0lpd2dSMDlpYW1WamRDNVFZWEpoYlVac1lXZHpMbEpGUVVSQlFreEZLU3hjYmlBZ0lDQjlYRzVjYmlBZ0lDQnpkR0YwYVdNZ2UxeHVJQ0FnSUNBZ0lDQkhUMkpxWldOMExuSmxaMmx6ZEdWeVEyeGhjM01vZEdocGN5bGNiaUFnSUNCOVhHNWNiaUFnSUNBcVcxTjViV0p2YkM1cGRHVnlZWFJ2Y2wwb0tTQjdYRzRnSUNBZ0lDQWdJSGxwWld4a0tpQjBhR2x6TGw5amFHbHNaSEpsYmx4dUlDQWdJSDFjYmx4dUlDQWdJSEJ5YVhaaGRHVWdYMk5vYVd4a2NtVnVPaUJCY25KaGVUeFVQbHh1WEc0Z0lDQWdZWEJ3Wlc1a0tHTm9hV3hrT2lCVUtUb2dkbTlwWkNCN1hHNGdJQ0FnSUNBZ0lHbG1JQ2hqYUdsc1pDQnBibk4wWVc1alpXOW1JRVp5WVdkdFpXNTBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhSEp2ZHlCRmNuSnZjaWhnYm1WemRHbHVaeUJHY21GbmJXVnVkSE1nWVhKbElHNXZkQ0I1WlhRZ2MzVndjRzl5ZEdWa1lDbGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUhSb2FYTXVYMk5vYVd4a2NtVnVMbkIxYzJnb1kyaHBiR1FwWEc0Z0lDQWdJQ0FnSUhSb2FYTXVaVzFwZENoY0ltRndjR1Z1WkZ3aUxDQmphR2xzWkNsY2JpQWdJQ0FnSUNBZ2RHaHBjeTV1YjNScFpua29YQ0pqYUdsc1pISmxibHdpS1Z4dUlDQWdJSDFjYmx4dUlDQWdJSEpsYlc5MlpTaGphR2xzWkRvZ1ZDazZJSFp2YVdRZ2UxeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCcGJtUmxlQ0E5SUhSb2FYTXVYMk5vYVd4a2NtVnVMbVpwYm1SSmJtUmxlQ2dvYVNrZ1BUNGdhU0E5UFQwZ1kyaHBiR1FwWEc0Z0lDQWdJQ0FnSUhSb2FYTXVYMk5vYVd4a2NtVnVMbk53YkdsalpTaHBibVJsZUN3Z01TbGNibHh1SUNBZ0lDQWdJQ0IwYUdsekxtVnRhWFFvWENKeVpXMXZkbVZjSWl3Z1kyaHBiR1FwWEc0Z0lDQWdJQ0FnSUhSb2FYTXVibTkwYVdaNUtGd2lZMmhwYkdSeVpXNWNJaWxjYmlBZ0lDQjlYRzVjYmlBZ0lDQmpiMjV6ZEhKMVkzUnZjaWg3SUdOb2FXeGtjbVZ1SUQwZ1cxMGdmVG9nVUdGeWRHbGhiRHg3SUdOb2FXeGtjbVZ1T2lCQmNuSmhlVHhVUGlCOElGUWdmVDRnUFNCN2ZTa2dlMXh1SUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BYRzRnSUNBZ0lDQWdJSFJvYVhNdVgyTm9hV3hrY21WdUlEMGdRWEp5WVhrdWFYTkJjbkpoZVNoamFHbHNaSEpsYmlrZ1B5QmphR2xzWkhKbGJpQTZJRnRqYUdsc1pISmxibDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQmpiMjV1WldOMFBGTWdaWGgwWlc1a2N5QnJaWGx2WmlCR2NtRm5iV1Z1ZEZOcFoyNWhiSE04VkQ0K0tGeHVJQ0FnSUNBZ0lDQnphV2R1WVd3NklGTXNYRzRnSUNBZ0lDQWdJR05oYkd4aVlXTnJPaUJIVDJKcVpXTjBMbE5wWjI1aGJFTmhiR3hpWVdOclBIUm9hWE1zSUVaeVlXZHRaVzUwVTJsbmJtRnNjenhVUGx0VFhUNHNYRzRnSUNBZ0tUb2diblZ0WW1WeUlIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmJtNWxZM1FvYzJsbmJtRnNMQ0JqWVd4c1ltRmpheWxjYmlBZ0lDQjlYRzU5WEc0aUxDQWlhVzF3YjNKMElFZFBZbXBsWTNRZ1puSnZiU0JjSW1kcE9pOHZSMDlpYW1WamRGd2lYRzVwYlhCdmNuUWdSMmx2SUdaeWIyMGdYQ0puYVRvdkwwZHBiMXdpWEc1cGJYQnZjblFnUjB4cFlpQm1jbTl0SUZ3aVoyazZMeTlIVEdsaVhDSmNibWx0Y0c5eWRDQjdJSFI1Y0dVZ1VHRnpZMkZzYVdaNUxDQmpZVzFsYkdsbWVTd2dhMlZpWVdKcFpua2dmU0JtY205dElGd2lMaTR2ZFhScGJDNXFjMXdpWEc1cGJYQnZjblFnZEhsd1pTQjdJRVJsWlhCSmJtWmxjaXdnVW1WamRYSnphWFpsU1c1bVpYSWdmU0JtY205dElGd2lMaTR2ZG1GeWFXRnVkQzVxYzF3aVhHNWNiblI1Y0dVZ1UzVmljMk55YVdKbFEyRnNiR0poWTJzZ1BTQW9LU0E5UGlCMmIybGtYRzUwZVhCbElFUnBjM0J2YzJWR2RXNWpkR2x2YmlBOUlDZ3BJRDArSUhadmFXUmNiblI1Y0dVZ1UzVmljMk55YVdKbFJuVnVZM1JwYjI0Z1BTQW9ZMkZzYkdKaFkyczZJRk4xWW5OamNtbGlaVU5oYkd4aVlXTnJLU0E5UGlCRWFYTndiM05sUm5WdVkzUnBiMjVjYmx4dVpYaHdiM0owSUhSNWNHVWdRV05qWlhOelpXUThWRDRnUFNCVUlHVjRkR1Z1WkhNZ1FXTmpaWE56YjNJOGFXNW1aWElnVmo0Z1B5QldJRG9nYm1WMlpYSmNibHh1WTI5dWMzUWdaVzF3ZEhrZ1BTQlRlVzFpYjJ3b1hDSmxiWEIwZVNCamIyMXdkWFJsWkNCMllXeDFaVndpS1Z4dVhHNHZMeUJsYzJ4cGJuUXRaR2x6WVdKc1pTMXVaWGgwTFd4cGJtVWdRSFI1Y0dWelkzSnBjSFF0WlhOc2FXNTBMMjV2TFhWdWMyRm1aUzFrWldOc1lYSmhkR2x2YmkxdFpYSm5hVzVuWEc1bGVIQnZjblFnWTJ4aGMzTWdRV05qWlhOemIzSThWQ0E5SUhWdWEyNXZkMjQrSUdWNGRHVnVaSE1nUm5WdVkzUnBiMjRnZTF4dUlDQWdJSE4wWVhScFl5QWtaM1I1Y0dVZ1BTQkhUMkpxWldOMExsUlpVRVZmU2xOUFFrcEZRMVFnWVhNZ2RXNXJibTkzYmlCaGN5QkhUMkpxWldOMExrZFVlWEJsUEVGalkyVnpjMjl5UGx4dVhHNGdJQ0FnSTJkbGREb2dLQ2tnUFQ0Z1ZGeHVJQ0FnSUNOemRXSnpZM0pwWW1VNklGTjFZbk5qY21saVpVWjFibU4wYVc5dVhHNWNiaUFnSUNCamIyNXpkSEoxWTNSdmNpaG5aWFE2SUNncElEMCtJRlFzSUhOMVluTmpjbWxpWlQ4NklGTjFZbk5qY21saVpVWjFibU4wYVc5dUtTQjdYRzRnSUNBZ0lDQWdJSE4xY0dWeUtGd2ljbVYwZFhKdUlHRnlaM1Z0Wlc1MGN5NWpZV3hzWldVdVgyTmhiR3d1WVhCd2JIa29ZWEpuZFcxbGJuUnpMbU5oYkd4bFpTd2dZWEpuZFcxbGJuUnpLVndpS1Z4dUlDQWdJQ0FnSUNCMGFHbHpMaU56ZFdKelkzSnBZbVVnUFNCemRXSnpZM0pwWW1VZ1B6OGdLQ2dwSUQwK0lDZ3BJRDArSUhadmFXUWdNQ2xjYmlBZ0lDQWdJQ0FnZEdocGN5NGpaMlYwSUQwZ1oyVjBYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5b3FYRzRnSUNBZ0lDb2dVM1ZpYzJOeWFXSmxJR1p2Y2lCMllXeDFaU0JqYUdGdVoyVnpMbHh1SUNBZ0lDQXFJRUJ3WVhKaGJTQmpZV3hzWW1GamF5QlVhR1VnWm5WdVkzUnBiMjRnZEc4Z2NuVnVJSGRvWlc0Z2RHaGxJR04xY25KbGJuUWdkbUZzZFdVZ1kyaGhibWRsY3k1Y2JpQWdJQ0FnS2lCQWNtVjBkWEp1Y3lCVmJuTjFZbk5qY21saVpTQm1kVzVqZEdsdmJpNWNiaUFnSUNBZ0tpOWNiaUFnSUNCemRXSnpZM0pwWW1Vb1kyRnNiR0poWTJzNklGTjFZbk5qY21saVpVTmhiR3hpWVdOcktUb2dSR2x6Y0c5elpVWjFibU4wYVc5dUlIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11STNOMVluTmpjbWxpWlNoallXeHNZbUZqYXlsY2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCQWNtVjBkWEp1Y3lCVWFHVWdZM1Z5Y21WdWRDQjJZV3gxWlM1Y2JpQWdJQ0FnS2k5Y2JpQWdJQ0JuWlhRb0tUb2dWQ0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxpTm5aWFFvS1Z4dUlDQWdJSDFjYmx4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUVOeVpXRjBaU0JoSUc1bGR5QmdRV05qWlhOemIzSmdJSFJvWVhRZ1lYQndiR2xsY3lCaElIUnlZVzV6Wm05eWJXRjBhVzl1SUc5dUlHbDBjeUIyWVd4MVpTNWNiaUFnSUNBZ0tpQkFjR0Z5WVcwZ2RISmhibk5tYjNKdElGUm9aU0IwY21GdWMyWnZjbTFoZEdsdmJpQjBieUJoY0hCc2VTNGdVMmh2ZFd4a0lHSmxJR0VnY0hWeVpTQm1kVzVqZEdsdmJpNWNiaUFnSUNBZ0tpOWNiaUFnSUNCaGN6eFNJRDBnVkQ0b2RISmhibk5tYjNKdE9pQW9kbUZzZFdVNklGUXBJRDArSUZJcE9pQkJZMk5sYzNOdmNqeFNQaUI3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1FXTmpaWE56YjNJb0tDa2dQVDRnZEhKaGJuTm1iM0p0S0hSb2FYTXVJMmRsZENncEtTd2dkR2hwY3k0amMzVmljMk55YVdKbEtWeHVJQ0FnSUgxY2JseHVJQ0FnSUhCeWIzUmxZM1JsWkNCZlkyRnNiRHhTSUQwZ1ZENG9kSEpoYm5ObWIzSnRPaUFvZG1Gc2RXVTZJRlFwSUQwK0lGSXBPaUJCWTJObGMzTnZjanhTUGlCN1hHNGdJQ0FnSUNBZ0lHeGxkQ0IyWVd4MVpUb2dkSGx3Wlc5bUlHVnRjSFI1SUh3Z1VpQTlJR1Z0Y0hSNVhHNGdJQ0FnSUNBZ0lHeGxkQ0IxYm5OMVlqb2dSR2x6Y0c5elpVWjFibU4wYVc5dVhHNWNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2MzVmljMk55YVdKbGNuTWdQU0J1WlhjZ1UyVjBQRk4xWW5OamNtbGlaVU5oYkd4aVlXTnJQaWdwWEc1Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYzNWaWMyTnlhV0psT2lCVGRXSnpZM0pwWW1WR2RXNWpkR2x2YmlBOUlDaGpZV3hzWW1GamF5a2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hOMVluTmpjbWxpWlhKekxuTnBlbVVnUFQwOUlEQXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxYm5OMVlpQTlJSFJvYVhNdWMzVmljMk55YVdKbEtDZ3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2JtVjNWbUZzZFdVZ1BTQjBjbUZ1YzJadmNtMG9kR2hwY3k1blpYUW9LU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSFpoYkhWbElDRTlQU0J1WlhkV1lXeDFaU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVWdQU0J1WlhkV1lXeDFaVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdRWEp5WVhrdVpuSnZiU2h6ZFdKelkzSnBZbVZ5Y3lrdVptOXlSV0ZqYUNnb1kySXBJRDArSUdOaUtDa3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0J6ZFdKelkzSnBZbVZ5Y3k1aFpHUW9ZMkZzYkdKaFkyc3BYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlBb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzNWaWMyTnlhV0psY25NdVpHVnNaWFJsS0dOaGJHeGlZV05yS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHpkV0p6WTNKcFltVnljeTV6YVhwbElEMDlQU0F3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbElEMGdaVzF3ZEhsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkVzV6ZFdJb0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJR052Ym5OMElHZGxkQ0E5SUNncE9pQlNJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjJZV3gxWlNBaFBUMGdaVzF3ZEhrZ1B5QjJZV3gxWlNBNklIUnlZVzV6Wm05eWJTaDBhR2x6TG1kbGRDZ3BLVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QkJZMk5sYzNOdmNpaG5aWFFzSUhOMVluTmpjbWxpWlNsY2JpQWdJQ0I5WEc1Y2JpQWdJQ0IwYjFOMGNtbHVaeWdwT2lCemRISnBibWNnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWUVGalkyVnpjMjl5UENSN2RHaHBjeTVuWlhRb0tYMCtZRnh1SUNBZ0lIMWNibHh1SUNBZ0lGdFRlVzFpYjJ3dWRHOVFjbWx0YVhScGRtVmRLQ2tnZTF4dUlDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9YQ0pCWTJObGMzTnZjaUJwYlhCc2FXTnBkR3g1SUdOdmJuWmxjblJsWkNCMGJ5QmhJSEJ5YVcxcGRHbDJaU0IyWVd4MVpTNWNJaWxjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWRHOVRkSEpwYm1jb0tWeHVJQ0FnSUgxY2JuMWNibHh1Wlhod2IzSjBJR2x1ZEdWeVptRmpaU0JCWTJObGMzTnZjanhVUGlCN1hHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ1EzSmxZWFJsSUdFZ1kyOXRjSFYwWldRZ1lFRmpZMlZ6YzI5eVlDQjBhR0YwSUdOaFkyaGxjeUJwZEhNZ2RISmhibk5tYjNKdFpXUWdkbUZzZFdVdVhHNGdJQ0FnSUNvZ1FIQmhjbUZ0SUhSeVlXNXpabTl5YlNCVWFHVWdkSEpoYm5ObWIzSnRZWFJwYjI0Z2RHOGdZWEJ3YkhrdUlGTm9iM1ZzWkNCaVpTQmhJSEIxY21VZ1puVnVZM1JwYjI0dVhHNGdJQ0FnSUNvZ2MyVmxJSHRBYkdsdWF5QmpjbVZoZEdWRGIyMXdkWFJsWkgwZ1lXNWtJSHRBYkdsdWF5QmpjbVZoZEdWRGIyMXdkWFJsWkZCeWIyUjFZMlZ5ZlZ4dUlDQWdJQ0FxTDF4dUlDQWdJRHhTSUQwZ1ZENG9kSEpoYm5ObWIzSnRPaUFvZG1Gc2RXVTZJRlFwSUQwK0lGSXBPaUJCWTJObGMzTnZjanhTUGx4dWZWeHVYRzVsZUhCdmNuUWdkSGx3WlNCVFpYUjBaWEk4VkQ0Z1BTQjdYRzRnSUNBZ0tIWmhiSFZsT2lCVUtUb2dkbTlwWkZ4dUlDQWdJQ2gyWVd4MVpUb2dLSEJ5WlhZNklGUXBJRDArSUZRcE9pQjJiMmxrWEc1OVhHNWNibVY0Y0c5eWRDQjBlWEJsSUZOMFlYUmxQRlErSUQwZ1cwRmpZMlZ6YzI5eVBGUStMQ0JUWlhSMFpYSThWRDVkWEc1Y2JpOHFLbHh1SUNvZ1EzSmxZWFJsSUdFZ2QzSnBkR0ZpYkdVZ2MybG5ibUZzTGx4dUlDcGNiaUFxSUVCd1lYSmhiU0JwYm1sMElGUm9aU0JwYm5ScFlXd2dkbUZzZFdVZ2IyWWdkR2hsSUhOcFoyNWhiRnh1SUNvZ1FISmxkSFZ5Ym5NZ1FXNGdZRUZqWTJWemMyOXlZQ0JoYm1RZ1lTQnpaWFIwWlhJZ1puVnVZM1JwYjI1Y2JpQXFMMXh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJR055WldGMFpWTjBZWFJsUEZRK0tHbHVhWFE2SUZRcE9pQlRkR0YwWlR4VVBpQjdYRzRnSUNBZ2JHVjBJR04xY25KbGJuUldZV3gxWlNBOUlHbHVhWFJjYmlBZ0lDQmpiMjV6ZENCemRXSnpZM0pwWW1WeWN5QTlJRzVsZHlCVFpYUThVM1ZpYzJOeWFXSmxRMkZzYkdKaFkycytLQ2xjYmx4dUlDQWdJR052Ym5OMElITjFZbk5qY21saVpUb2dVM1ZpYzJOeWFXSmxSblZ1WTNScGIyNGdQU0FvWTJGc2JHSmhZMnNwSUQwK0lIdGNiaUFnSUNBZ0lDQWdjM1ZpYzJOeWFXSmxjbk11WVdSa0tHTmhiR3hpWVdOcktWeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z0tDa2dQVDRnYzNWaWMyTnlhV0psY25NdVpHVnNaWFJsS0dOaGJHeGlZV05yS1Z4dUlDQWdJSDFjYmx4dUlDQWdJR052Ym5OMElITmxkQ0E5SUNodVpYZFdZV3gxWlRvZ2RXNXJibTkzYmlrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQjJZV3gxWlRvZ1ZDQTlJSFI1Y0dWdlppQnVaWGRXWVd4MVpTQTlQVDBnWENKbWRXNWpkR2x2Ymx3aUlEOGdibVYzVm1Gc2RXVW9ZM1Z5Y21WdWRGWmhiSFZsS1NBNklHNWxkMVpoYkhWbFhHNGdJQ0FnSUNBZ0lHbG1JQ2hqZFhKeVpXNTBWbUZzZFdVZ0lUMDlJSFpoYkhWbEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCamRYSnlaVzUwVm1Gc2RXVWdQU0IyWVd4MVpWeHVJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z2NuVnVibWx1WnlCallXeHNZbUZqYTNNZ2JXbG5hSFFnYlhWMFlYUmxJSE4xWW5OamNtbGlaWEp6WEc0Z0lDQWdJQ0FnSUNBZ0lDQkJjbkpoZVM1bWNtOXRLSE4xWW5OamNtbGlaWEp6S1M1bWIzSkZZV05vS0Noallpa2dQVDRnWTJJb0tTbGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lISmxkSFZ5YmlCYmJtVjNJRUZqWTJWemMyOXlLQ2dwSUQwK0lHTjFjbkpsYm5SV1lXeDFaU3dnYzNWaWMyTnlhV0psS1N3Z2MyVjBJR0Z6SUZObGRIUmxjanhVUGwxY2JuMWNibHh1Wm5WdVkzUnBiMjRnWTNKbFlYUmxRMjl0Y0hWMFpXUlFjbTlrZFdObGNqeFVQaWhtYmpvZ0tIUnlZV05yT2lBOFZqNG9jMmxuYm1Gc09pQkJZMk5sYzNOdmNqeFdQaWtnUFQ0Z1Zpa2dQVDRnVkNrNklFRmpZMlZ6YzI5eVBGUStJSHRjYmlBZ0lDQnNaWFFnZG1Gc2RXVTZJSFI1Y0dWdlppQmxiWEIwZVNCOElGUWdQU0JsYlhCMGVWeHVJQ0FnSUd4bGRDQndjbVYyUkdWd2N5QTlJRzVsZHlCTllYQThRV05qWlhOemIzSXNJRVJwYzNCdmMyVkdkVzVqZEdsdmJqNG9LVnh1WEc0Z0lDQWdZMjl1YzNRZ2MzVmljMk55YVdKbGNuTWdQU0J1WlhjZ1UyVjBQRk4xWW5OamNtbGlaVU5oYkd4aVlXTnJQaWdwWEc0Z0lDQWdZMjl1YzNRZ1kyRmphR1VnUFNCdVpYY2dUV0Z3UEVGalkyVnpjMjl5TENCMWJtdHViM2R1UGlncFhHNWNiaUFnSUNCamIyNXpkQ0JsWm1abFkzUWdQU0FvS1NBOVBpQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElHUmxjSE1nUFNCdVpYY2dVMlYwUEVGalkyVnpjMjl5UGlncFhHNGdJQ0FnSUNBZ0lHTnZibk4wSUc1bGQxWmhiSFZsSUQwZ1ptNG9LSFlwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdSbGNITXVZV1JrS0hZcFhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdLR05oWTJobExtZGxkQ2gyS1NCaGN5QmhibmtwSUh4OElIWXVaMlYwS0NsY2JpQWdJQ0FnSUNBZ2ZTbGNibHh1SUNBZ0lDQWdJQ0JqYjI1emRDQmthV1JEYUdGdVoyVWdQU0IyWVd4MVpTQWhQVDBnYm1WM1ZtRnNkV1ZjYmlBZ0lDQWdJQ0FnZG1Gc2RXVWdQU0J1WlhkV1lXeDFaVnh1WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJRzVsZDBSbGNITWdQU0J1WlhjZ1RXRndQRUZqWTJWemMyOXlMQ0JFYVhOd2IzTmxSblZ1WTNScGIyNCtLQ2xjYmx4dUlDQWdJQ0FnSUNCbWIzSWdLR052Ym5OMElGdGtaWEFzSUhWdWMzVmlYU0J2WmlCd2NtVjJSR1Z3Y3lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRmtaWEJ6TG1oaGN5aGtaWEFwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RXNXpkV0lvS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVaWGRFWlhCekxuTmxkQ2hrWlhBc0lIVnVjM1ZpS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ1ptOXlJQ2hqYjI1emRDQmtaWEFnYjJZZ1pHVndjeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NGdVpYZEVaWEJ6TG1oaGN5aGtaWEFwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnWkdsemNHOXpaU0E5SUdSbGNDNXpkV0p6WTNKcFltVW9LQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQjJZV3gxWlNBOUlHUmxjQzVuWlhRb0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1kyRmphR1V1WjJWMEtHUmxjQ2tnSVQwOUlIWmhiSFZsS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallXTm9aUzV6WlhRb1pHVndMQ0IyWVd4MVpTbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVm1abVZqZENncFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc1bGQwUmxjSE11YzJWMEtHUmxjQ3dnWkdsemNHOXpaU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUhCeVpYWkVaWEJ6SUQwZ2JtVjNSR1Z3YzF4dUlDQWdJQ0FnSUNCcFppQW9aR2xrUTJoaGJtZGxLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQkJjbkpoZVM1bWNtOXRLSE4xWW5OamNtbGlaWEp6S1M1bWIzSkZZV05vS0Noallpa2dQVDRnWTJJb0tTbGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMWNibHh1SUNBZ0lHTnZibk4wSUhOMVluTmpjbWxpWlRvZ1UzVmljMk55YVdKbFJuVnVZM1JwYjI0Z1BTQW9ZMkZzYkdKaFkyc3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLSE4xWW5OamNtbGlaWEp6TG5OcGVtVWdQVDA5SURBcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdWbVptVmpkQ2dwWEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnpkV0p6WTNKcFltVnljeTVoWkdRb1kyRnNiR0poWTJzcFhHNWNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlDZ3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSE4xWW5OamNtbGlaWEp6TG1SbGJHVjBaU2hqWVd4c1ltRmpheWxjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h6ZFdKelkzSnBZbVZ5Y3k1emFYcGxJRDA5UFNBd0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVZ1BTQmxiWEIwZVZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpQW9ZMjl1YzNRZ1d5d2dkVzV6ZFdKZElHOW1JSEJ5WlhaRVpYQnpLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIVnVjM1ZpS0NsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JqYjI1emRDQm5aWFFnUFNBb0tUb2dWQ0E5UGlCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMllXeDFaU0FoUFQwZ1pXMXdkSGtnUHlCMllXeDFaU0E2SUdadUtDaDJLU0E5UGlCMkxtZGxkQ2dwS1Z4dUlDQWdJSDFjYmx4dUlDQWdJSEpsZEhWeWJpQnVaWGNnUVdOalpYTnpiM0lvWjJWMExDQnpkV0p6WTNKcFltVXBYRzU5WEc1Y2JtWjFibU4wYVc5dUlHTnlaV0YwWlVOdmJYQjFkR1ZrUVhKbmN6eGNiaUFnSUNCamIyNXpkQ0JFWlhCeklHVjRkR1Z1WkhNZ1FYSnlZWGs4UVdOalpYTnpiM0k4WVc1NVBqNHNYRzRnSUNBZ1FYSm5jeUJsZUhSbGJtUnpJSHNnVzBzZ2FXNGdhMlY1YjJZZ1JHVndjMTA2SUVGalkyVnpjMlZrUEVSbGNITmJTMTArSUgwc1hHNGdJQ0FnVmlBOUlFRnlaM01zWEc0K0tHUmxjSE02SUVSbGNITXNJSFJ5WVc1elptOXliVDg2SUNndUxpNWhjbWR6T2lCQmNtZHpLU0E5UGlCV0tUb2dRV05qWlhOemIzSThWajRnZTF4dUlDQWdJR3hsZENCa2FYTndiM05sT2lCQmNuSmhlVHhFYVhOd2IzTmxSblZ1WTNScGIyNCtYRzRnSUNBZ2JHVjBJSFpoYkhWbE9pQjBlWEJsYjJZZ1pXMXdkSGtnZkNCV0lEMGdaVzF3ZEhsY2JseHVJQ0FnSUdOdmJuTjBJSE4xWW5OamNtbGlaWEp6SUQwZ2JtVjNJRk5sZER4VGRXSnpZM0pwWW1WRFlXeHNZbUZqYXo0b0tWeHVJQ0FnSUdOdmJuTjBJR05oWTJobElEMGdibVYzSUVGeWNtRjVQSFZ1YTI1dmQyNCtLR1JsY0hNdWJHVnVaM1JvS1Z4dVhHNGdJQ0FnWTI5dWMzUWdZMjl0Y0hWMFpTQTlJQ2dwT2lCV0lEMCtJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdZWEpuY3lBOUlHUmxjSE11YldGd0tDaGtaWEFzSUdrcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doWTJGamFHVmJhVjBwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallXTm9aVnRwWFNBOUlHUmxjQzVuWlhRb0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZMkZqYUdWYmFWMWNiaUFnSUNBZ0lDQWdmU2xjYmx4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnZEhKaGJuTm1iM0p0SUQ4Z2RISmhibk5tYjNKdEtDNHVMaWhoY21keklHRnpJRUZ5WjNNcEtTQTZJQ2hoY21keklHRnpJRllwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdZMjl1YzNRZ2MzVmljMk55YVdKbE9pQlRkV0p6WTNKcFltVkdkVzVqZEdsdmJpQTlJQ2hqWVd4c1ltRmpheWtnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQnBaaUFvYzNWaWMyTnlhV0psY25NdWMybDZaU0E5UFQwZ01Da2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pHbHpjRzl6WlNBOUlHUmxjSE11YldGd0tDaGtaWEFzSUdrcElEMCtYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3TG5OMVluTmpjbWxpWlNnb0tTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUc1bGQxWmhiSFZsSUQwZ1pHVndMbWRsZENncFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoallXTm9aVnRwWFNBaFBUMGdibVYzVm1Gc2RXVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oWTJobFcybGRJRDBnWkdWd0xtZGxkQ2dwWEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJRzVsZDFaaGJIVmxJRDBnWTI5dGNIVjBaU2dwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RtRnNkV1VnSVQwOUlHNWxkMVpoYkhWbEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVWdQU0J1WlhkV1lXeDFaVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVGeWNtRjVMbVp5YjIwb2MzVmljMk55YVdKbGNuTXBMbVp2Y2tWaFkyZ29LR05pS1NBOVBpQmpZaWdwS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU2tzWEc0Z0lDQWdJQ0FnSUNBZ0lDQXBYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCemRXSnpZM0pwWW1WeWN5NWhaR1FvWTJGc2JHSmhZMnNwWEc1Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNncElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lITjFZbk5qY21saVpYSnpMbVJsYkdWMFpTaGpZV3hzWW1GamF5bGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHpkV0p6WTNKcFltVnljeTV6YVhwbElEMDlQU0F3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1VnUFNCbGJYQjBlVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JwYzNCdmMyVXViV0Z3S0Noallpa2dQVDRnWTJJb0tTbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmthWE53YjNObExteGxibWQwYUNBOUlEQmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZV05vWlM1c1pXNW5kR2dnUFNBd1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JqYjI1emRDQm5aWFFnUFNBb0tUb2dWaUE5UGlCN1hHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCMllXeDFaU0FoUFQwZ1pXMXdkSGtnUHlCMllXeDFaU0E2SUdOdmJYQjFkR1VvS1Z4dUlDQWdJSDFjYmx4dUlDQWdJSEpsZEhWeWJpQnVaWGNnUVdOalpYTnpiM0lvWjJWMExDQnpkV0p6WTNKcFltVXBYRzU5WEc1Y2JpOHFLbHh1SUNvZ1EzSmxZWFJsSUdGdUlHQkJZMk5sYzNOdmNtQWdabkp2YlNCaElIQnliMlIxWTJWeUlHWjFibU4wYVc5dUlIUm9ZWFFnZEhKaFkydHpJR2wwY3lCa1pYQmxibVJsYm1OcFpYTXVYRzRnS2x4dUlDb2dZR0JnZEhNZ1JYaGhiWEJzWlZ4dUlDb2diR1YwSUdFNklFRmpZMlZ6YzI5eVBHNTFiV0psY2o1Y2JpQXFJR3hsZENCaU9pQkJZMk5sYzNOdmNqeHVkVzFpWlhJK1hHNGdLaUJqYjI1emRDQmpPaUJCWTJObGMzTnZjanh1ZFcxaVpYSStJRDBnWTNKbFlYUmxRMjl0Y0hWMFpXUW9LR2RsZENrZ1BUNGdaMlYwS0dFcElDc2daMlYwS0dJcEtWeHVJQ29nWUdCZ1hHNGdLbHh1SUNvZ1FHVjRjR1Z5YVcxbGJuUmhiRnh1SUNvZ1FIQmhjbUZ0SUhCeWIyUjFZMlZ5SUZSb1pTQndjbTlrZFdObGNpQm1kVzVqZEdsdmJpQjNhR2xqYUNCc1pYUW5jeUI1YjNVZ2RISmhZMnNnWkdWd1pXNWtaVzVqYVdWelhHNGdLaUJBY21WMGRYSnVjeUJVYUdVZ1kyOXRjSFYwWldRZ1lFRmpZMlZ6YzI5eVlDNWNiaUFxTDF4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUdOeVpXRjBaVU52YlhCMWRHVmtQRlErS0Z4dUlDQWdJSEJ5YjJSMVkyVnlPaUFvZEhKaFkyczZJRHhXUGloemFXZHVZV3c2SUVGalkyVnpjMjl5UEZZK0tTQTlQaUJXS1NBOVBpQlVMRnh1S1RvZ1FXTmpaWE56YjNJOFZENWNibHh1THlvcVhHNGdLaUJEY21WaGRHVWdZVzRnWUVGalkyVnpjMjl5WUNCM2FHbGphQ0JwY3lCamIyMXdkWFJsWkNCbWNtOXRJR0VnYkdsemRDQnZaaUJuYVhabGJpQmdRV05qWlhOemIzSmdjeTVjYmlBcVhHNGdLaUJnWUdCMGN5QkZlR0Z0Y0d4bFhHNGdLaUJzWlhRZ1lUb2dRV05qWlhOemIzSThiblZ0WW1WeVBseHVJQ29nYkdWMElHSTZJRUZqWTJWemMyOXlQSE4wY21sdVp6NWNiaUFxSUdOdmJuTjBJR002SUVGalkyVnpjMjl5UEZ0dWRXMWlaWElzSUhOMGNtbHVaMTArSUQwZ1kzSmxZWFJsUTI5dGNIVjBaV1FvVzJFc0lHSmRLVnh1SUNvZ1kyOXVjM1FnWkRvZ1FXTmpaWE56YjNJOGMzUnlhVzVuUGlBOUlHTnlaV0YwWlVOdmJYQjFkR1ZrS0Z0aExDQmlYU3dnS0dFNklHNTFiV0psY2l3Z1lqb2djM1J5YVc1bktTQTlQaUJnSkh0aGZTQWtlMko5WUNsY2JpQXFJR0JnWUZ4dUlDcGNiaUFxSUVCd1lYSmhiU0JrWlhCeklFeHBjM1FnYjJZZ1lFRmpZMlZ6YzI5eWMyQXVYRzRnS2lCQWNHRnlZVzBnZEhKaGJuTm1iM0p0SUVGdUlHOXdkR2x2Ym1Gc0lIUnlZVzV6Wm05eWJTQm1kVzVqZEdsdmJpNWNiaUFxSUVCeVpYUjFjbTV6SUZSb1pTQmpiMjF3ZFhSbFpDQmdRV05qWlhOemIzSmdMbHh1SUNvdlhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z1kzSmxZWFJsUTI5dGNIVjBaV1E4WEc0Z0lDQWdZMjl1YzNRZ1JHVndjeUJsZUhSbGJtUnpJRUZ5Y21GNVBFRmpZMlZ6YzI5eVBHRnVlVDQrTEZ4dUlDQWdJRUZ5WjNNZ1pYaDBaVzVrY3lCN0lGdExJR2x1SUd0bGVXOW1JRVJsY0hOZE9pQkJZMk5sYzNObFpEeEVaWEJ6VzB0ZFBpQjlMRnh1SUNBZ0lGUWdQU0JCY21kekxGeHVQaWhrWlhCek9pQkVaWEJ6TENCMGNtRnVjMlp2Y20wL09pQW9MaTR1WVhKbmN6b2dRWEpuY3lrZ1BUNGdWQ2s2SUVGalkyVnpjMjl5UEZRK1hHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQmpjbVZoZEdWRGIyMXdkWFJsWkNoY2JpQWdJQ0F1TGk1aGNtZHpPbHh1SUNBZ0lDQWdJQ0I4SUZ0d2NtOWtkV05sY2pvZ0tIUnlZV05yT2lBOFZqNG9jMmxuYm1Gc09pQkJZMk5sYzNOdmNqeFdQaWtnUFQ0Z1Zpa2dQVDRnZFc1cmJtOTNibDFjYmlBZ0lDQWdJQ0FnZkNCYlpHVndjem9nUVhKeVlYazhRV05qWlhOemIzSStMQ0IwY21GdWMyWnZjbTAvT2lBb0xpNHVZWEpuY3pvZ2RXNXJibTkzYmx0ZEtTQTlQaUIxYm10dWIzZHVYVnh1S1NCN1hHNGdJQ0FnWTI5dWMzUWdXMlJsY0hOUGNsQnliMlIxWTJWeUxDQjBjbUZ1YzJadmNtMWRJRDBnWVhKbmMxeHVJQ0FnSUdsbUlDaDBlWEJsYjJZZ1pHVndjMDl5VUhKdlpIVmpaWElnUFQwOUlGd2lablZ1WTNScGIyNWNJaWtnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWTNKbFlYUmxRMjl0Y0hWMFpXUlFjbTlrZFdObGNpaGtaWEJ6VDNKUWNtOWtkV05sY2lsY2JpQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdZM0psWVhSbFEyOXRjSFYwWldSQmNtZHpLR1JsY0hOUGNsQnliMlIxWTJWeUxDQjBjbUZ1YzJadmNtMHBYRzRnSUNBZ2ZWeHVmVnh1WEc0dktpcGNiaUFxSUVOeVpXRjBaU0JoYmlCZ1FXTmpaWE56YjNKZ0lHOXVJR0VnWUVkUFltcGxZM1F1VDJKcVpXTjBZQ2R6SUdCd2NtOXdaWEowZVdBdVhHNGdLbHh1SUNvZ1FIQmhjbUZ0SUc5aWFtVmpkQ0JVYUdVZ1lFZFBZbXBsWTNRdVQySnFaV04wWUNCMGJ5QmpjbVZoZEdVZ2RHaGxJR0JCWTJObGMzTnZjbUFnYjI0dVhHNGdLaUJBY0dGeVlXMGdjSEp2Y0dWeWRIa2dUMjVsSUc5bUlHbDBjeUJ5WldkcGMzUmxjbVZrSUhCeWIzQmxjblJwWlhNdVhHNGdLaTljYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJqY21WaGRHVkNhVzVrYVc1blBGUWdaWGgwWlc1a2N5QkhUMkpxWldOMExrOWlhbVZqZEN3Z1VDQmxlSFJsYm1SeklHdGxlVzltSUZRK0tGeHVJQ0FnSUc5aWFtVmpkRG9nVkN4Y2JpQWdJQ0J3Y205d1pYSjBlVG9nUlhoMGNtRmpkRHhRTENCemRISnBibWMrTEZ4dUtUb2dRV05qWlhOemIzSThWRnRRWFQ1Y2JseHVMeThnVkU5RVR6b2djM1Z3Y0c5eWRDQnVaWE4wWldRZ1ltbHVaR2x1WjNOY2JpOHZJR1Y0Y0c5eWRDQm1kVzVqZEdsdmJpQmpjbVZoZEdWQ2FXNWthVzVuUEZ4dUx5OGdJQ0FnSUZRZ1pYaDBaVzVrY3lCSFQySnFaV04wTGs5aWFtVmpkQ3hjYmk4dklDQWdJQ0JRTVNCbGVIUmxibVJ6SUd0bGVXOW1JRlFzWEc0dkx5QWdJQ0FnVURJZ1pYaDBaVzVrY3lCclpYbHZaaUJPYjI1T2RXeHNZV0pzWlR4VVcxQXhYVDRzWEc0dkx5QStLRnh1THk4Z0lDQWdJRzlpYW1WamREb2dWQ3hjYmk4dklDQWdJQ0J3Y205d1pYSjBlVEU2SUVWNGRISmhZM1E4VURFc0lITjBjbWx1Wno0c1hHNHZMeUFnSUNBZ2NISnZjR1Z5ZEhreU9pQkZlSFJ5WVdOMFBGQXlMQ0J6ZEhKcGJtYytMRnh1THk4Z0tUb2dRV05qWlhOemIzSThUbTl1VG5Wc2JHRmliR1U4VkZ0UU1WMCtXMUF5WFQ1Y2JseHVMeW9xWEc0Z0tpQkRjbVZoZEdVZ1lXNGdZRUZqWTJWemMyOXlZQ0J2YmlCaElHQkhhVzh1VTJWMGRHbHVaM05nSjNNZ1lHdGxlV0F1WEc0Z0tpQldZV3gxWlhNZ1lYSmxJSEpsWTNWeWMybDJaV3g1SUhWdWNHRmphMlZrTGx4dUlDcGNiaUFxSUVCa1pYQnlaV05oZEdWa0lIQnlaV1psY2lCMWMybHVaeUI3UUd4cGJtc2dZM0psWVhSbFUyVjBkR2x1WjNOOUxseHVJQ29nUUhCaGNtRnRJRzlpYW1WamRDQlVhR1VnWUVkcGJ5NVRaWFIwYVc1bmMyQWdkRzhnWTNKbFlYUmxJSFJvWlNCZ1FXTmpaWE56YjNKZ0lHOXVMbHh1SUNvZ1FIQmhjbUZ0SUd0bGVTQlVhR1VnYzJWMGRHbHVaM01nYTJWNVhHNGdLaTljYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJqY21WaGRHVkNhVzVrYVc1blBGUStLSE5sZEhScGJtZHpPaUJIYVc4dVUyVjBkR2x1WjNNc0lHdGxlVG9nYzNSeWFXNW5LVG9nUVdOalpYTnpiM0k4VkQ1Y2JseHVaWGh3YjNKMElHWjFibU4wYVc5dUlHTnlaV0YwWlVKcGJtUnBibWM4VkQ0b2IySnFaV04wT2lCSFQySnFaV04wTGs5aWFtVmpkQ0I4SUVkcGJ5NVRaWFIwYVc1bmN5d2dhMlY1T2lCemRISnBibWNwT2lCQlkyTmxjM052Y2p4VVBpQjdYRzRnSUNBZ1kyOXVjM1FnY0hKdmNDQTlJR3RsWW1GaWFXWjVLR3RsZVNrZ1lYTWdhMlY1YjJZZ2RIbHdaVzltSUc5aWFtVmpkRnh1WEc0Z0lDQWdZMjl1YzNRZ2MzVmljMk55YVdKbE9pQlRkV0p6WTNKcFltVkdkVzVqZEdsdmJpQTlJQ2hqWVd4c1ltRmpheWtnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCemFXY2dQU0J2WW1wbFkzUWdhVzV6ZEdGdVkyVnZaaUJIYVc4dVUyVjBkR2x1WjNNZ1B5QmNJbU5vWVc1blpXUmNJaUE2SUZ3aWJtOTBhV1o1WENKY2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYVdRZ1BTQnZZbXBsWTNRdVkyOXVibVZqZENoZ0pIdHphV2Q5T2pva2UzQnliM0I5WUN3Z0tDa2dQVDRnWTJGc2JHSmhZMnNvS1NsY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNncElEMCtJRzlpYW1WamRDNWthWE5qYjI1dVpXTjBLR2xrS1Z4dUlDQWdJSDFjYmx4dUlDQWdJR052Ym5OMElHZGxkQ0E5SUNncE9pQlVJRDArSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLRzlpYW1WamRDQnBibk4wWVc1alpXOW1JRWRwYnk1VFpYUjBhVzVuY3lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzlpYW1WamRDNW5aWFJmZG1Gc2RXVW9hMlY1S1M1eVpXTjFjbk5wZG1WVmJuQmhZMnNvS1NCaGN5QlVYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCcFppQW9iMkpxWldOMElHbHVjM1JoYm1ObGIyWWdSMDlpYW1WamRDNVBZbXBsWTNRcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR2RsZEhSbGNpQTlJR0JuWlhSZkpIdHdjbTl3TG5KbGNHeGhZMlZCYkd3b1hDSXRYQ0lzSUZ3aVgxd2lLWDFnSUdGeklHdGxlVzltSUhSNWNHVnZaaUJ2WW1wbFkzUmNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2RsZEhSbGNpQnBiaUJ2WW1wbFkzUWdKaVlnZEhsd1pXOW1JRzlpYW1WamRGdG5aWFIwWlhKZElEMDlQU0JjSW1aMWJtTjBhVzl1WENJcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z0tHOWlhbVZqZEZ0blpYUjBaWEpkSUdGeklDZ3BJRDArSUhWdWEyNXZkMjRwS0NrZ1lYTWdWRnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9jSEp2Y0NCcGJpQnZZbXBsWTNRcElISmxkSFZ5YmlCdlltcGxZM1JiY0hKdmNGMGdZWE1nVkZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0d0bGVTQnBiaUJ2WW1wbFkzUXBJSEpsZEhWeWJpQnZZbXBsWTNSYmEyVjVJR0Z6SUd0bGVXOW1JSFI1Y0dWdlppQnZZbXBsWTNSZElHRnpJRlJjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lIUm9jbTkzSUVWeWNtOXlLR0JqWVc1dWIzUWdaMlYwSUhCeWIzQmxjblI1SUZ3aUpIdHJaWGw5WENJZ2IyNGdYQ0lrZTI5aWFtVmpkSDFjSW1BcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnY21WMGRYSnVJRzVsZHlCQlkyTmxjM052Y2loblpYUXNJSE4xWW5OamNtbGlaU2xjYm4xY2JseHVkSGx3WlNCRGIyNXVaV04wYVc5dVNHRnVaR3hsY2p4Y2JpQWdJQ0JQSUdWNGRHVnVaSE1nUjA5aWFtVmpkQzVQWW1wbFkzUXNYRzRnSUNBZ1V5QmxlSFJsYm1SeklHdGxlVzltSUU5YlhDSWtjMmxuYm1Gc2Mxd2lYU3hjYmlBZ0lDQlVMRnh1UGlBOUlFOWJYQ0lrYzJsbmJtRnNjMXdpWFZ0VFhTQmxlSFJsYm1SeklDZ3VMaTVoY21kek9pQmhibmxiWFNrZ1BUNGdhVzVtWlhJZ1VseHVJQ0FnSUQ4Z2RtOXBaQ0JsZUhSbGJtUnpJRkpjYmlBZ0lDQWdJQ0FnUHlBb0xpNHVZWEpuY3pvZ1d5NHVMbEJoY21GdFpYUmxjbk04VDF0Y0lpUnphV2R1WVd4elhDSmRXMU5kUGl3Z1kzVnljbVZ1ZEZaaGJIVmxPaUJVWFNrZ1BUNGdWRnh1SUNBZ0lDQWdJQ0E2SUc1bGRtVnlYRzRnSUNBZ09pQnVaWFpsY2x4dVhHNHZLaXBjYmlBcUlFTnlaV0YwWlNCaGJpQmdRV05qWlhOemIzSmdJSGRvYVdOb0lITmxkSE1nZFhBZ1lTQnNhWE4wSUc5bUlHQkhUMkpxWldOMExrOWlhbVZqZEdBZ2MybG5ibUZzSUdOdmJtNWxZM1JwYjI1ekxseHVJQ3BjYmlBcUlHQmdZSFJ6SUVWNFlXMXdiR1ZjYmlBcUlHTnZibk4wSUhaaGJIVmxPaUJCWTJObGMzTnZjanh6ZEhKcGJtYytJRDBnWTNKbFlYUmxRMjl1Ym1WamRHbHZiaWhjYmlBcUlDQWdYQ0pwYm1sMGFXRnNJSFpoYkhWbFhDSXNYRzRnS2lBZ0lGdHZZbW94TENCY0luTnBaeTF1WVcxbFhDSXNJQ2d1TGk1aGNtZHpLU0E5UGlCY0luTjBjbHdpWFN4Y2JpQXFJQ0FnVzI5aWFqSXNJRndpYzJsbkxXNWhiV1ZjSWl3Z0tDNHVMbUZ5WjNNcElEMCtJRndpYzNSeVhDSmRYRzRnS2lBcFhHNGdLaUJnWUdCY2JpQXFYRzRnS2lCQWNHRnlZVzBnYVc1cGRDQlVhR1VnYVc1cGRHbGhiQ0IyWVd4MVpWeHVJQ29nUUhCaGNtRnRJSE5wWjI1aGJITWdRU0JzYVhOMElHOW1JR0JIVDJKcVpXTjBMazlpYW1WamRHQXNJSE5wWjI1aGJDQnVZVzFsSUdGdVpDQmpZV3hzWW1GamF5QndZV2x5Y3lCMGJ5QmpiMjV1WldOMExseHVJQ292WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnWTNKbFlYUmxRMjl1Ym1WamRHbHZianhjYmlBZ0lDQlVMRnh1SUNBZ0lFOHhJR1Y0ZEdWdVpITWdSMDlpYW1WamRDNVBZbXBsWTNRc1hHNGdJQ0FnVXpFZ1pYaDBaVzVrY3lCclpYbHZaaUJQTVZ0Y0lpUnphV2R1WVd4elhDSmRMRnh1SUNBZ0lFOHlJR1Y0ZEdWdVpITWdSMDlpYW1WamRDNVBZbXBsWTNRc1hHNGdJQ0FnVXpJZ1pYaDBaVzVrY3lCclpYbHZaaUJQTWx0Y0lpUnphV2R1WVd4elhDSmRMRnh1SUNBZ0lFOHpJR1Y0ZEdWdVpITWdSMDlpYW1WamRDNVBZbXBsWTNRc1hHNGdJQ0FnVXpNZ1pYaDBaVzVrY3lCclpYbHZaaUJQTTF0Y0lpUnphV2R1WVd4elhDSmRMRnh1SUNBZ0lFODBJR1Y0ZEdWdVpITWdSMDlpYW1WamRDNVBZbXBsWTNRc1hHNGdJQ0FnVXpRZ1pYaDBaVzVrY3lCclpYbHZaaUJQTkZ0Y0lpUnphV2R1WVd4elhDSmRMRnh1SUNBZ0lFODFJR1Y0ZEdWdVpITWdSMDlpYW1WamRDNVBZbXBsWTNRc1hHNGdJQ0FnVXpVZ1pYaDBaVzVrY3lCclpYbHZaaUJQTlZ0Y0lpUnphV2R1WVd4elhDSmRMRnh1SUNBZ0lFODJJR1Y0ZEdWdVpITWdSMDlpYW1WamRDNVBZbXBsWTNRc1hHNGdJQ0FnVXpZZ1pYaDBaVzVrY3lCclpYbHZaaUJQTmx0Y0lpUnphV2R1WVd4elhDSmRMRnh1SUNBZ0lFODNJR1Y0ZEdWdVpITWdSMDlpYW1WamRDNVBZbXBsWTNRc1hHNGdJQ0FnVXpjZ1pYaDBaVzVrY3lCclpYbHZaaUJQTjF0Y0lpUnphV2R1WVd4elhDSmRMRnh1SUNBZ0lFODRJR1Y0ZEdWdVpITWdSMDlpYW1WamRDNVBZbXBsWTNRc1hHNGdJQ0FnVXpnZ1pYaDBaVzVrY3lCclpYbHZaaUJQT0Z0Y0lpUnphV2R1WVd4elhDSmRMRnh1SUNBZ0lFODVJR1Y0ZEdWdVpITWdSMDlpYW1WamRDNVBZbXBsWTNRc1hHNGdJQ0FnVXprZ1pYaDBaVzVrY3lCclpYbHZaaUJQT1Z0Y0lpUnphV2R1WVd4elhDSmRMRnh1UGloY2JpQWdJQ0JwYm1sME9pQlVMRnh1SUNBZ0lHZ3hPaUJiVHpFc0lGTXhMQ0JEYjI1dVpXTjBhVzl1U0dGdVpHeGxjanhQTVN3Z1V6RXNJRlErWFN4Y2JpQWdJQ0JvTWo4NklGdFBNaXdnVXpJc0lFTnZibTVsWTNScGIyNUlZVzVrYkdWeVBFOHlMQ0JUTWl3Z1ZENWRMRnh1SUNBZ0lHZ3pQem9nVzA4ekxDQlRNeXdnUTI5dWJtVmpkR2x2YmtoaGJtUnNaWEk4VHpNc0lGTXpMQ0JVUGwwc1hHNGdJQ0FnYURRL09pQmJUelFzSUZNMExDQkRiMjV1WldOMGFXOXVTR0Z1Wkd4bGNqeFBOQ3dnVXpRc0lGUStYU3hjYmlBZ0lDQm9OVDg2SUZ0UE5Td2dVelVzSUVOdmJtNWxZM1JwYjI1SVlXNWtiR1Z5UEU4MUxDQlROU3dnVkQ1ZExGeHVJQ0FnSUdnMlB6b2dXMDgyTENCVE5pd2dRMjl1Ym1WamRHbHZia2hoYm1Sc1pYSThUellzSUZNMkxDQlVQbDBzWEc0Z0lDQWdhRGMvT2lCYlR6Y3NJRk0zTENCRGIyNXVaV04wYVc5dVNHRnVaR3hsY2p4UE55d2dVemNzSUZRK1hTeGNiaUFnSUNCb09EODZJRnRQT0N3Z1V6Z3NJRU52Ym01bFkzUnBiMjVJWVc1a2JHVnlQRTg0TENCVE9Dd2dWRDVkTEZ4dUlDQWdJR2c1UHpvZ1cwODVMQ0JUT1N3Z1EyOXVibVZqZEdsdmJraGhibVJzWlhJOFR6a3NJRk01TENCVVBsMHNYRzRwSUh0Y2JpQWdJQ0JzWlhRZ2RtRnNkV1VnUFNCcGJtbDBYRzRnSUNBZ2JHVjBJR1JwYzNCdmMyVTZJRUZ5Y21GNVBFUnBjM0J2YzJWR2RXNWpkR2x2Ymo1Y2JpQWdJQ0JqYjI1emRDQnpkV0p6WTNKcFltVnljeUE5SUc1bGR5QlRaWFE4VTNWaWMyTnlhV0psUTJGc2JHSmhZMnMrS0NsY2JpQWdJQ0JqYjI1emRDQnphV2R1WVd4eklEMGdXMmd4TENCb01pd2dhRE1zSUdnMExDQm9OU3dnYURZc0lHZzNMQ0JvT0N3Z2FEbGRMbVpwYkhSbGNpZ29hQ2tnUFQ0Z2FDQWhQVDBnZFc1a1pXWnBibVZrS1Z4dVhHNGdJQ0FnWTI5dWMzUWdjM1ZpYzJOeWFXSmxPaUJUZFdKelkzSnBZbVZHZFc1amRHbHZiaUE5SUNoallXeHNZbUZqYXlrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0JwWmlBb2MzVmljMk55YVdKbGNuTXVjMmw2WlNBOVBUMGdNQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0c5elpTQTlJSE5wWjI1aGJITXViV0Z3S0NoYmIySnFaV04wTENCemFXZHVZV3dzSUdOaGJHeGlZV05yWFNrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHbGtJRDBnUjA5aWFtVmpkQzVQWW1wbFkzUXVjSEp2ZEc5MGVYQmxMbU52Ym01bFkzUXVZMkZzYkNoY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiMkpxWldOMExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YVdkdVlXd2dZWE1nYzNSeWFXNW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBb1h5d2dMaTR1WVhKbmN5a2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdibVYzVm1Gc2RXVWdQU0JqWVd4c1ltRmpheWd1TGk1aGNtZHpMQ0IyWVd4MVpTbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gyWVd4MVpTQWhQVDBnYm1WM1ZtRnNkV1VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlNBOUlHNWxkMVpoYkhWbFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdRWEp5WVhrdVpuSnZiU2h6ZFdKelkzSnBZbVZ5Y3lrdVptOXlSV0ZqYUNnb1kySXBJRDArSUdOaUtDa3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0tWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlDZ3BJRDArSUVkUFltcGxZM1F1VDJKcVpXTjBMbkJ5YjNSdmRIbHdaUzVrYVhOamIyNXVaV04wTG1OaGJHd29iMkpxWldOMExDQnBaQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lIMHBYRzRnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNCemRXSnpZM0pwWW1WeWN5NWhaR1FvWTJGc2JHSmhZMnNwWEc1Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNncElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lITjFZbk5qY21saVpYSnpMbVJsYkdWMFpTaGpZV3hzWW1GamF5bGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHpkV0p6WTNKcFltVnljeTV6YVhwbElEMDlQU0F3S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHbHpjRzl6WlM1dFlYQW9LR05pS1NBOVBpQmpZaWdwS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdScGMzQnZjMlV1YkdWdVozUm9JRDBnTUZ4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjbVYwZFhKdUlHNWxkeUJCWTJObGMzTnZjaWdvS1NBOVBpQjJZV3gxWlN3Z2MzVmljMk55YVdKbEtWeHVmVnh1WEc0dktpcGNiaUFxSUVOeVpXRjBaU0JoSUhOcFoyNWhiQ0JtY205dElHRWdjSEp2ZG1sbGNpQm1kVzVqZEdsdmJpNWNiaUFxSUZSb1pTQndjbTkyYVdSbGNpQnBjeUJqWVd4c1pXUWdkMmhsYmlCMGFHVWdabWx5YzNRZ2MzVmljMk55YVdKbGNpQmhjSEJsWVhKeklHRnVaQ0IwYUdVZ2NtVjBkWEp1WldRZ1pHbHpjRzl6WlZ4dUlDb2dablZ1WTNScGIyNGdabkp2YlNCMGFHVWdjSEp2ZG1sa1pYSWdkMmxzYkNCaVpTQmpZV3hzWldRZ2QyaGxiaUIwYUdVZ2JuVnRZbVZ5SUc5bUlITjFZbk5qY21saVpYSnpJR1J5YjNBZ2RHOGdlbVZ5Ynk1Y2JpQXFYRzRnS2lCRmVHRnRjR3hsT2x4dUlDcGNiaUFxSUdCZ1lIUnpYRzRnS2lCamIyNXpkQ0IyWVd4MVpTQTlJR055WldGMFpVVjRkR1Z5Ym1Gc0tEQXNJQ2h6WlhRcElEMCtJSHRjYmlBcUlDQWdZMjl1YzNRZ2FXNTBaWEoyWVd3Z1BTQnpaWFJKYm5SbGNuWmhiQ2dvS1NBOVBpQnpaWFFvS0hZcElEMCtJSFlnS3lBeEtTbGNiaUFxSUNBZ2NtVjBkWEp1SUNncElEMCtJR05zWldGeVNXNTBaWEoyWVd3b2FXNTBaWEoyWVd3cFhHNGdLaUI5S1Z4dUlDb2dZR0JnWEc0Z0tseHVJQ29nUUhCaGNtRnRJR2x1YVhRZ1ZHaGxJR2x1YVhScFlXd2dkbUZzZFdWY2JpQXFJRUJ3WVhKaGJTQndjbTlrZFdObGNpQlVhR1VnY0hKdlpIVmpaWElnWm5WdVkzUnBiMjRnZDJocFkyZ2djMmh2ZFd4a0lISmxkSFZ5YmlCaElHTnNaV0Z1ZFhBZ1puVnVZM1JwYjI1Y2JpQXFMMXh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJR055WldGMFpVVjRkR1Z5Ym1Gc1BGUStLRnh1SUNBZ0lHbHVhWFE2SUZRc1hHNGdJQ0FnY0hKdlpIVmpaWEk2SUNoelpYUTZJRk5sZEhSbGNqeFVQaWtnUFQ0Z1JHbHpjRzl6WlVaMWJtTjBhVzl1TEZ4dUtUb2dRV05qWlhOemIzSThWRDRnZTF4dUlDQWdJR3hsZENCamRYSnlaVzUwVm1Gc2RXVWdQU0JwYm1sMFhHNGdJQ0FnYkdWMElHUnBjM0J2YzJVNklFUnBjM0J2YzJWR2RXNWpkR2x2Ymx4dUlDQWdJR052Ym5OMElITjFZbk5qY21saVpYSnpJRDBnYm1WM0lGTmxkRHhUZFdKelkzSnBZbVZEWVd4c1ltRmphejRvS1Z4dVhHNGdJQ0FnWTI5dWMzUWdjM1ZpYzJOeWFXSmxPaUJUZFdKelkzSnBZbVZHZFc1amRHbHZiaUE5SUNoallXeHNZbUZqYXlrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0JwWmlBb2MzVmljMk55YVdKbGNuTXVjMmw2WlNBOVBUMGdNQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0c5elpTQTlJSEJ5YjJSMVkyVnlLQ2gyT2lCMWJtdHViM2R1S1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2JtVjNWbUZzZFdVNklGUWdQU0IwZVhCbGIyWWdkaUE5UFQwZ1hDSm1kVzVqZEdsdmJsd2lJRDhnZGloamRYSnlaVzUwVm1Gc2RXVXBJRG9nZGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHVaWGRXWVd4MVpTQWhQVDBnWTNWeWNtVnVkRlpoYkhWbEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOMWNuSmxiblJXWVd4MVpTQTlJRzVsZDFaaGJIVmxYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVGeWNtRjVMbVp5YjIwb2MzVmljMk55YVdKbGNuTXBMbVp2Y2tWaFkyZ29LR05pS1NBOVBpQmpZaWdwS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJSDBwWEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnpkV0p6WTNKcFltVnljeTVoWkdRb1kyRnNiR0poWTJzcFhHNWNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlDZ3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSE4xWW5OamNtbGlaWEp6TG1SbGJHVjBaU2hqWVd4c1ltRmpheWxjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h6ZFdKelkzSnBZbVZ5Y3k1emFYcGxJRDA5UFNBd0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0c5elpTZ3BYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOVhHNWNiaUFnSUNCeVpYUjFjbTRnYm1WM0lFRmpZMlZ6YzI5eUtDZ3BJRDArSUdOMWNuSmxiblJXWVd4MVpTd2djM1ZpYzJOeWFXSmxLVnh1ZlZ4dVhHNHZLaW9nUUdWNGNHVnlhVzFsYm5SaGJDQXFMMXh1ZEhsd1pTQlRaWFIwYVc1bmN6eFVJR1Y0ZEdWdVpITWdVbVZqYjNKa1BITjBjbWx1Wnl3Z2MzUnlhVzVuUGo0Z1BTQjdYRzRnSUNBZ1cwc2dhVzRnYTJWNWIyWWdWQ0JoY3lCVmJtTmhjR2wwWVd4cGVtVThVR0Z6WTJGc2FXWjVQRXMrUGwwNklFRmpZMlZ6YzI5eVBGSmxZM1Z5YzJsMlpVbHVabVZ5UEZSYlMxMCtQbHh1ZlNBbUlIdGNiaUFnSUNCYlN5QnBiaUJyWlhsdlppQlVJR0Z6SUdCelpYUWtlMUJoYzJOaGJHbG1lVHhMUG4xZ1hUb2dVMlYwZEdWeVBFUmxaWEJKYm1abGNqeFVXMHRkUGo1Y2JuMWNibHh1THlvcVhHNGdLaUJBWlhod1pYSnBiV1Z1ZEdGc1hHNGdLbHh1SUNvZ1YzSmhjQ0JoSUh0QWJHbHVheUJIYVc4dVUyVjBkR2x1WjNOOUlHbHVkRzhnWVNCamIyeHNaV04wYVc5dUlHOW1JSE5sZEhSbGNuTWdZVzVrSUdGalkyVnpjMjl5Y3k1Y2JpQXFYRzRnS2lCRmVHRnRjR3hsT2x4dUlDcGNiaUFxSUdCZ1lIUnpYRzRnS2lCamIyNXpkQ0J6SUQwZ1kzSmxZWFJsVTJWMGRHbHVaM01vYzJWMGRHbHVaM01zSUh0Y2JpQXFJQ0FnWENKamIyMXdiR1Y0TFd0bGVWd2lPaUJjSW1GN2MyRjdjM045ZlZ3aUxGeHVJQ29nSUNCY0luTnBiWEJzWlMxclpYbGNJam9nWENKelhDSXNYRzRnS2lCOUtWeHVJQ3BjYmlBcUlITXVZMjl0Y0d4bGVFdGxlUzV6ZFdKelkzSnBZbVVvS0NrZ1BUNGdlMXh1SUNvZ0lDQndjbWx1ZENoekxtTnZiWEJzWlhoTFpYa3VaMlYwS0NrcFhHNGdLaUI5S1Z4dUlDcGNiaUFxSUhNdWMyVjBRMjl0Y0d4bGVFdGxlU2dvY0hKbGRpa2dQVDRnS0h0Y2JpQXFJQ0FnTGk0dWNISmxkaXhjYmlBcUlDQWdhMlY1T2lCN0lHNWxjM1JsWkRvZ1hDSmNJaUI5TEZ4dUlDb2dmU2twWEc0Z0tpQmdZR0JjYmlBcUwxeHVaWGh3YjNKMElHWjFibU4wYVc5dUlHTnlaV0YwWlZObGRIUnBibWR6UEdOdmJuTjBJRlFnWlhoMFpXNWtjeUJTWldOdmNtUThjM1J5YVc1bkxDQnpkSEpwYm1jK1BpaGNiaUFnSUNCelpYUjBhVzVuY3pvZ1IybHZMbE5sZEhScGJtZHpMRnh1SUNBZ0lHdGxlWE02SUZRc1hHNHBPaUJUWlhSMGFXNW5jenhVUGlCN1hHNGdJQ0FnY21WMGRYSnVJRTlpYW1WamRDNW1jbTl0Ulc1MGNtbGxjeWhjYmlBZ0lDQWdJQ0FnVDJKcVpXTjBMbVZ1ZEhKcFpYTW9hMlY1Y3lrdVpteGhkRTFoY0Nnb1cydGxlU3dnZEhsd1pWMHBJRDArSUZ0Y2JpQWdJQ0FnSUNBZ0lDQWdJRnRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVcxbGJHbG1lU2hyWlhrcExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHNWxkeUJCWTJObGMzTnZjaWhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0tDa2dQVDRnYzJWMGRHbHVaM011WjJWMFgzWmhiSFZsS0d0bGVTa3VjbVZqZFhKemFYWmxWVzV3WVdOcktDa3NYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNoallXeHNZbUZqYXlrZ1BUNGdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2FXUWdQU0J6WlhSMGFXNW5jeTVqYjI1dVpXTjBLR0JqYUdGdVoyVmtPam9rZTJ0bGVYMWdMQ0JqWVd4c1ltRmpheWxjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQW9LU0E5UGlCelpYUjBhVzVuY3k1a2FYTmpiMjV1WldOMEtHbGtLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDa3NYRzRnSUNBZ0lDQWdJQ0FnSUNCZExGeHVJQ0FnSUNBZ0lDQWdJQ0FnVzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdCelpYUWtlMnRsZVZzd1hTNTBiMVZ3Y0dWeVEyRnpaU2dwSUNzZ1kyRnRaV3hwWm5rb2EyVjVLUzV6YkdsalpTZ3hLWDFnTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNoMk9pQjFibXR1YjNkdUtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITmxkSFJwYm1kekxuTmxkRjkyWVd4MVpTaGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHdGxlU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzVsZHlCSFRHbGlMbFpoY21saGJuUW9YRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbGIyWWdkaUE5UFQwZ1hDSm1kVzVqZEdsdmJsd2lJRDhnZGloelpYUjBhVzVuY3k1blpYUmZkbUZzZFdVb2EyVjVLUzVrWldWd1ZXNXdZV05yS0NrcElEb2dkaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ2tzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0FnSUNBZ1hTeGNiaUFnSUNBZ0lDQWdYU2tzWEc0Z0lDQWdLVnh1ZlZ4dUlpd2dJbWx0Y0c5eWRDQjBlWEJsSUVkUFltcGxZM1FnWm5KdmJTQmNJbWRwT2k4dlIwOWlhbVZqZEZ3aVhHNXBiWEJ2Y25RZ2V5QjBlWEJsSUVGalkyVnpjMjl5SUgwZ1puSnZiU0JjSWk0dmMzUmhkR1V1YW5OY0lseHVYRzUwZVhCbElFZFBZbW9nUFNCSFQySnFaV04wTGs5aWFtVmpkRnh1Wlhod2IzSjBJSFI1Y0dVZ1EwTThWQ0JsZUhSbGJtUnpJRWRQWW1vZ1BTQkhUMkpxUGlBOUlIc2dibVYzSUNod2NtOXdjem9nWVc1NUtUb2dWQ0I5WEc1bGVIQnZjblFnZEhsd1pTQkdRenhVSUdWNGRHVnVaSE1nUjA5aWFpQTlJRWRQWW1vK0lEMGdLSEJ5YjNCek9pQmhibmtwSUQwK0lGUmNibHh1ZEhsd1pTQkRjM05UWlhSMFpYSWdQU0FvYjJKcVpXTjBPaUJIVDJKcUxDQmpjM002SUhOMGNtbHVaeUI4SUVGalkyVnpjMjl5UEhOMGNtbHVaejRwSUQwK0lIWnZhV1JjYmx4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUdOdmJtWnBaM1ZsS0dOdmJtWTZJRkJoY25ScFlXdzhTbk40Ulc1MlBpa2dlMXh1SUNBZ0lISmxkSFZ5YmlCUFltcGxZM1F1WVhOemFXZHVLR1Z1ZGl3Z1kyOXVaaWxjYm4xY2JseHVkSGx3WlNCS2MzaEZibllnUFNCN1hHNGdJQ0FnYVc1MGNtbHVjMmxqUld4bGJXVnVkSE02SUZKbFkyOXlaRHh6ZEhKcGJtY3NJRU5ESUh3Z1JrTStYRzRnSUNBZ2RHVjRkRTV2WkdVb2JtOWtaVG9nYzNSeWFXNW5JSHdnYm5WdFltVnlLVG9nUjA5aWFseHVJQ0FnSUdGd2NHVnVaRU5vYVd4a0tIQmhjbVZ1ZERvZ1IwOWlhaXdnWTJocGJHUTZJRWRQWW1vcE9pQjJiMmxrWEc0Z0lDQWdjbVZ0YjNabFEyaHBiR1FvY0dGeVpXNTBPaUJIVDJKcUxDQmphR2xzWkRvZ1IwOWlhaWs2SUhadmFXUmNiaUFnSUNCelpYUkRjM002SUVOemMxTmxkSFJsY2x4dUlDQWdJSE5sZEVOc1lYTnpPaUJEYzNOVFpYUjBaWEpjYmlBZ0lDQXZMeUJ6ZEhKcGJtZGJYU0JqWVc0Z1ltVWdkWE5sSUhSdklHUmxiR0Y1SUhObGRIUnBibWNnY0hKdmNITWdZV1owWlhJZ1kyaHBiR1J5Wlc1Y2JpQWdJQ0F2THlCbExtY2dSM1JyTGxOMFlXTnJXMXdpZG1semFXSnNaVU5vYVd4a1RtRnRaVndpWFNCa1pYQmxibVJ6SUc5dUlHTm9hV3hrY21WdVhHNGdJQ0FnYVc1cGRGQnliM0J6S0dOMGIzSTZJSFZ1YTI1dmQyNHNJSEJ5YjNCek9pQmhibmtwT2lCMmIybGtJSHdnYzNSeWFXNW5XMTFjYmlBZ0lDQmtaV1poZFd4MFEyeGxZVzUxY0NodlltcGxZM1E2SUVkUFltb3BPaUIyYjJsa1hHNTlYRzVjYm1aMWJtTjBhVzl1SUcxcGMzTnBibWRKYlhCc0tDazZJR0Z1ZVNCN1hHNGdJQ0FnZEdoeWIzY2dSWEp5YjNJb1hDSnRhWE56YVc1bklHbHRjR3hjSWlsY2JuMWNibHh1Wlhod2IzSjBJR052Ym5OMElHVnVkam9nU25ONFJXNTJJRDBnZTF4dUlDQWdJR2x1ZEhKcGJuTnBZMFZzWlcxbGJuUnpPaUI3ZlN4Y2JpQWdJQ0IwWlhoMFRtOWtaVG9nYldsemMybHVaMGx0Y0d3c1hHNGdJQ0FnWVhCd1pXNWtRMmhwYkdRNklHMXBjM05wYm1kSmJYQnNMRnh1SUNBZ0lISmxiVzkyWlVOb2FXeGtPaUJ0YVhOemFXNW5TVzF3YkN4Y2JpQWdJQ0J6WlhSRGMzTTZJRzFwYzNOcGJtZEpiWEJzTEZ4dUlDQWdJSE5sZEVOc1lYTnpPaUJ0YVhOemFXNW5TVzF3YkN4Y2JpQWdJQ0JwYm1sMFVISnZjSE02SUNncElEMCtJSFp2YVdRZ01DeGNiaUFnSUNCa1pXWmhkV3gwUTJ4bFlXNTFjRG9nS0NrZ1BUNGdkbTlwWkNBd0xGeHVmVnh1SWl3Z0ltVjRjRzl5ZENCamJHRnpjeUJUWTI5d1pTQjdYRzRnSUNBZ2MzUmhkR2xqSUdOMWNuSmxiblEvT2lCVFkyOXdaU0I4SUc1MWJHeGNibHh1SUNBZ0lIQmhjbVZ1ZEQ4NklGTmpiM0JsSUh3Z2JuVnNiRnh1SUNBZ0lHTnZiblJsZUhSeklEMGdibVYzSUUxaGNEeERiMjUwWlhoMExDQjFibXR1YjNkdVBpZ3BYRzVjYmlBZ0lDQndjbWwyWVhSbElHTnNaV0Z1ZFhCeklEMGdibVYzSUZObGREd29LU0E5UGlCMmIybGtQaWdwWEc0Z0lDQWdjSEpwZG1GMFpTQnRiM1Z1ZEhNZ1BTQnVaWGNnVTJWMFBDZ3BJRDArSUhadmFXUStLQ2xjYmlBZ0lDQndjbWwyWVhSbElHMXZkVzUwWldRZ1BTQm1ZV3h6WlZ4dVhHNGdJQ0FnWTI5dWMzUnlkV04wYjNJb2NHRnlaVzUwUHpvZ1UyTnZjR1VnZkNCdWRXeHNLU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjR0Z5Wlc1MElEMGdjR0Z5Wlc1MFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnYjI1RGJHVmhiblZ3S0dOaGJHeGlZV05yT2lBb0tTQTlQaUIyYjJsa0tTQjdYRzRnSUNBZ0lDQWdJSFJvYVhNdVkyeGxZVzUxY0hNL0xtRmtaQ2hqWVd4c1ltRmpheWxjYmlBZ0lDQjlYRzVjYmlBZ0lDQnZiazF2ZFc1MEtHTmhiR3hpWVdOck9pQW9LU0E5UGlCMmIybGtLU0I3WEc0Z0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG5CaGNtVnVkQ0FtSmlBaGRHaHBjeTV3WVhKbGJuUXViVzkxYm5SbFpDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV3WVhKbGJuUXViMjVOYjNWdWRDaGpZV3hzWW1GamF5bGNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViVzkxYm5SekxtRmtaQ2hqWVd4c1ltRmpheWxjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJSEoxYmp4VVBpaG1iam9nS0NrZ1BUNGdWQ2tnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0J3Y21WMklEMGdVMk52Y0dVdVkzVnljbVZ1ZEZ4dUlDQWdJQ0FnSUNCVFkyOXdaUzVqZFhKeVpXNTBJRDBnZEdocGMxeHVYRzRnSUNBZ0lDQWdJSFJ5ZVNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdabTRvS1Z4dUlDQWdJQ0FnSUNCOUlHWnBibUZzYkhrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXRiM1Z1ZEhNdVptOXlSV0ZqYUNnb1kySXBJRDArSUdOaUtDa3BYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbTF2ZFc1MGN5NWpiR1ZoY2lncFhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtMXZkVzUwWldRZ1BTQjBjblZsWEc0Z0lDQWdJQ0FnSUNBZ0lDQlRZMjl3WlM1amRYSnlaVzUwSUQwZ2NISmxkbHh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdaR2x6Y0c5elpTZ3BJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NWpiR1ZoYm5Wd2N5NW1iM0pGWVdOb0tDaGpZaWtnUFQ0Z1kySW9LU2xjYmlBZ0lDQWdJQ0FnZEdocGN5NWpiR1ZoYm5Wd2N5NWpiR1ZoY2lncFhHNGdJQ0FnSUNBZ0lIUm9hWE11WTI5dWRHVjRkSE11WTJ4bFlYSW9LVnh1SUNBZ0lDQWdJQ0JrWld4bGRHVWdkR2hwY3k1d1lYSmxiblJjYmlBZ0lDQjlYRzU5WEc1Y2JtVjRjRzl5ZENCMGVYQmxJRU52Ym5SbGVIUThWQ0E5SUdGdWVUNGdQU0I3WEc0Z0lDQWdkWE5sS0NrNklGUmNiaUFnSUNCd2NtOTJhV1JsUEZJK0tIWmhiSFZsT2lCVUxDQm1iam9nS0NrZ1BUNGdVaWs2SUZKY2JpQWdJQ0FvY0hKdmNITTZJSHNnZG1Gc2RXVTZJRlE3SUdOb2FXeGtjbVZ1T2lBb0tTQTlQaUJLVTFndVJXeGxiV1Z1ZENCOUtUb2dTbE5ZTGtWc1pXMWxiblJjYm4xY2JseHVMeW9xWEc0Z0tpQkZlR0Z0Y0d4bElGVnpZV2RsT2x4dUlDb2dZR0JnZEhONFhHNGdLaUJqYjI1emRDQk5lVU52Ym5SbGVIUWdQU0JqY21WaGRHVkRiMjUwWlhoMEtGd2labUZzYkdKaFkyc3RkbUZzZFdWY0lpbGNiaUFxWEc0Z0tpQm1kVzVqZEdsdmJpQkRiMjV6ZFcxbGNrTnZiWEJ2Ym1WdWRDZ3BJSHRjYmlBcUlDQWdZMjl1YzNRZ2RtRnNkV1VnUFNCTmVVTnZiblJsZUhRdWRYTmxLQ2xjYmlBcVhHNGdLaUFnSUhKbGRIVnliaUE4UjNSckxreGhZbVZzSUd4aFltVnNQWHQyWVd4MVpYMGdMejVjYmlBcUlIMWNiaUFxWEc0Z0tpQm1kVzVqZEdsdmJpQlFjbTkyYVdSbGNrTnZiWEJ2Ym1WdWRDZ3BJSHRjYmlBcUlDQWdjbVYwZFhKdUlDaGNiaUFxSUNBZ0lDQThSM1JyTGtKdmVENWNiaUFxSUNBZ0lDQWdJRHhOZVVOdmJuUmxlSFFnZG1Gc2RXVTlYQ0p0ZVMxMllXeDFaVndpUGx4dUlDb2dJQ0FnSUNBZ0lDQjdLQ2tnUFQ0Z1BFTnZibk4xYldWeVEyOXRjRzl1Wlc1MElDOCtmVnh1SUNvZ0lDQWdJQ0FnUEM5TmVVTnZiblJsZUhRK1hHNGdLaUFnSUNBZ1BDOUhkR3N1UW05NFBseHVJQ29nSUNBcFhHNGdLaUI5WEc0Z0tpQmdZR0JjYmlBcUwxeHVaWGh3YjNKMElHWjFibU4wYVc5dUlHTnlaV0YwWlVOdmJuUmxlSFE4VkQ0b1pHVm1ZWFZzZEZaaGJIVmxPaUJVS1RvZ1EyOXVkR1Y0ZER4VVBpQjdYRzRnSUNBZ2JHVjBJR04wZURvZ1EyOXVkR1Y0ZER4VVBseHVYRzRnSUNBZ1puVnVZM1JwYjI0Z2NISnZkbWxrWlR4U1BpaDJZV3gxWlRvZ1ZDd2dabTQ2SUNncElEMCtJRklwT2lCU0lIdGNiaUFnSUNBZ0lDQWdZMjl1YzNRZ2MyTnZjR1VnUFNCblpYUlRZMjl3WlNncFhHNGdJQ0FnSUNBZ0lITmpiM0JsTG1OdmJuUmxlSFJ6TG5ObGRDaGpkSGdzSUhaaGJIVmxLVnh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdjMk52Y0dVdWNuVnVLR1p1S1Z4dUlDQWdJSDFjYmx4dUlDQWdJR1oxYm1OMGFXOXVJSFZ6WlNncE9pQlVJSHRjYmlBZ0lDQWdJQ0FnYkdWMElITmpiM0JsSUQwZ1UyTnZjR1V1WTNWeWNtVnVkRnh1SUNBZ0lDQWdJQ0IzYUdsc1pTQW9jMk52Y0dVcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJSFpoYkhWbElEMGdjMk52Y0dVdVkyOXVkR1Y0ZEhNdVoyVjBLR04wZUNsY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMllXeDFaU0FoUFQwZ2RXNWtaV1pwYm1Wa0tTQnlaWFIxY200Z2RtRnNkV1VnWVhNZ1ZGeHVJQ0FnSUNBZ0lDQWdJQ0FnYzJOdmNHVWdQU0J6WTI5d1pTNXdZWEpsYm5SY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1pHVm1ZWFZzZEZaaGJIVmxYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1puVnVZM1JwYjI0Z1kyOXVkR1Y0ZENoN0lIWmhiSFZsTENCamFHbHNaSEpsYmlCOU9pQjdJSFpoYkhWbE9pQlVPeUJqYUdsc1pISmxiam9nS0NrZ1BUNGdTbE5ZTGtWc1pXMWxiblFnZlNrZ2UxeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2NISnZkbWxrWlNoMllXeDFaU3dnWTJocGJHUnlaVzRwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdjbVYwZFhKdUlDaGpkSGdnUFNCUFltcGxZM1F1WVhOemFXZHVLR052Ym5SbGVIUXNJSHRjYmlBZ0lDQWdJQ0FnY0hKdmRtbGtaU3hjYmlBZ0lDQWdJQ0FnZFhObExGeHVJQ0FnSUgwcEtWeHVmVnh1WEc0dktpcGNiaUFxSUVkbGRITWdkR2hsSUhOamIzQmxJSFJvWVhRZ2IzZHVjeUIwYUdVZ1kzVnljbVZ1ZEd4NUlISjFibTVwYm1jZ1kyOWtaUzVjYmlBcVhHNGdLaUJGZUdGdGNHeGxPbHh1SUNvZ1lHQmdkSE5jYmlBcUlHTnZibk4wSUhOamIzQmxJRDBnWjJWMFUyTnZjR1VvS1Z4dUlDb2djMlYwVkdsdFpXOTFkQ2dvS1NBOVBpQjdYRzRnS2lBZ0lDOHZJRlJvYVhNZ1kyRnNiR0poWTJzZ1oyVjBjeUJ5ZFc0Z2QybDBhRzkxZENCaGJpQnZkMjVsY2lCelkyOXdaUzVjYmlBcUlDQWdMeThnVW1WemRHOXlaU0J2ZDI1bGNpQjJhV0VnYzJOdmNHVXVjblZ1T2x4dUlDb2dJQ0J6WTI5d1pTNXlkVzRvS0NrZ1BUNGdlMXh1SUNvZ0lDQWdJR052Ym5OMElHWnZieUE5SUVadmIwTnZiblJsZUhRdWRYTmxLQ2xjYmlBcUlDQWdJQ0J2YmtOc1pXRnVkWEFvS0NrZ1BUNGdlMXh1SUNvZ0lDQWdJQ0FnY0hKcGJuUW9YQ0p6YjIxbElHTnNaV0Z1ZFhCY0lpbGNiaUFxSUNBZ0lDQjlLVnh1SUNvZ0lDQjlLVnh1SUNvZ2ZTd2dNVEF3TUNsY2JpQXFJR0JnWUZ4dUlDb3ZYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdaMlYwVTJOdmNHVW9LVG9nVTJOdmNHVWdlMXh1SUNBZ0lHTnZibk4wSUhOamIzQmxJRDBnVTJOdmNHVXVZM1Z5Y21WdWRGeHVJQ0FnSUdsbUlDZ2hjMk52Y0dVcElIdGNiaUFnSUNBZ0lDQWdkR2h5YjNjZ1JYSnliM0lvWENKallXNXViM1FnWjJWMElITmpiM0JsT2lCdmRYUWdiMllnZEhKaFkydHBibWNnWTI5dWRHVjRkRndpS1Z4dUlDQWdJSDFjYmx4dUlDQWdJSEpsZEhWeWJpQnpZMjl3WlZ4dWZWeHVYRzR2S2lwY2JpQXFJRUYwZEdGamFDQmhJR05zWldGdWRYQWdZMkZzYkdKaFkyc2dkRzhnZEdobElHTjFjbkpsYm5RZ2UwQnNhVzVySUZOamIzQmxmUzVjYmlBcUwxeHVaWGh3YjNKMElHWjFibU4wYVc5dUlHOXVRMnhsWVc1MWNDaGpiR1ZoYm5Wd09pQW9LU0E5UGlCMmIybGtLU0I3WEc0Z0lDQWdhV1lnS0NGVFkyOXdaUzVqZFhKeVpXNTBLU0I3WEc0Z0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9SWEp5YjNJb1hDSnZkWFFnYjJZZ2RISmhZMnRwYm1jZ1kyOXVkR1Y0ZERvZ2QybHNiQ0J1YjNRZ1ltVWdZV0pzWlNCMGJ5QmpiR1ZoYm5Wd1hDSXBLVnh1SUNBZ0lIMWNibHh1SUNBZ0lGTmpiM0JsTG1OMWNuSmxiblEvTG05dVEyeGxZVzUxY0NoamJHVmhiblZ3S1Z4dWZWeHVYRzR2S2lwY2JpQXFJRUYwZEdGamFDQmhJR05oYkd4aVlXTnJJSFJ2SUhKMWJpQjNhR1Z1SUhSb1pTQmpkWEp5Wlc1MGJIa2djblZ1Ym1sdVp5QjdRR3hwYm1zZ1UyTnZjR1Y5SUhKbGRIVnlibk11WEc0Z0tpOWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQnZiazF2ZFc1MEtHTnNaV0Z1ZFhBNklDZ3BJRDArSUhadmFXUXBJSHRjYmlBZ0lDQnBaaUFvSVZOamIzQmxMbU4xY25KbGJuUXBJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpaEZjbkp2Y2loY0ltTmhibTV2ZENCaGRIUmhZMmdnYjI1TmIzVnVkRG9nYjNWMElHOW1JSFJ5WVdOcmFXNW5JR052Ym5SbGVIUmNJaWtwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdVMk52Y0dVdVkzVnljbVZ1ZEQ4dWIyNU5iM1Z1ZENoamJHVmhiblZ3S1Z4dWZWeHVYRzR2S2lwY2JpQXFJRU55WldGMFpYTWdZU0J5YjI5MElIdEFiR2x1YXlCVFkyOXdaWDBnZEdoaGRDQjNhR1Z1SUdScGMzQnZjMlZrSUhkcGJHd2djbVZ0YjNabFhHNGdLaUJoYm5rZ1kyaHBiR1FnYzJsbmJtRnNJR2hoYm1Sc1pYSWdiM0lnYzNSaGRHVWdjM1ZpYzJOeWFXSmxjaTVjYmlBcVhHNGdLaUJGZUdGdGNHeGxPbHh1SUNvZ1lHQmdkSE40WEc0Z0tpQmpjbVZoZEdWU2IyOTBLQ2hrYVhOd2IzTmxLU0E5UGlCN1hHNGdLaUFnSUd4bGRDQnliMjkwT2lCSGRHc3VWMmx1Wkc5M1hHNGdLbHh1SUNvZ0lDQmpiMjV6ZENCYmMzUmhkR1ZkSUQwZ1kzSmxZWFJsVTNSaGRHVW9YQ0oyWVd4MVpWd2lLVnh1SUNwY2JpQXFJQ0FnWTI5dWMzUWdjbVZ0YjNabElEMGdLQ2tnUFQ0Z2UxeHVJQ29nSUNBZ0lISnZiM1F1WkdWemRISnZlU2dwWEc0Z0tpQWdJQ0FnWkdsemNHOXpaU2dwWEc0Z0tpQWdJSDFjYmlBcVhHNGdLaUFnSUhKbGRIVnliaUFvWEc0Z0tpQWdJQ0FnUEVkMGF5NVhhVzVrYjNjZ0pEMTdLSE5sYkdZcElEMCtJQ2h5YjI5MElEMGdjMlZzWmlsOVBseHVJQ29nSUNBZ0lDQWdQRWQwYXk1Q2IzZytYRzRnS2lBZ0lDQWdJQ0FnSUR4SGRHc3VUR0ZpWld3Z2JHRmlaV3c5ZTNOMFlYUmxmU0F2UGx4dUlDb2dJQ0FnSUNBZ0lDQThSM1JyTGtKMWRIUnZiaUFrWTJ4cFkydGxaRDE3Y21WdGIzWmxmU0F2UGx4dUlDb2dJQ0FnSUNBZ1BDOUhkR3N1UW05NFBseHVJQ29nSUNBZ0lEd3ZSM1JyTGxkcGJtUnZkejVjYmlBcUlDQWdLVnh1SUNvZ2ZTbGNiaUFxSUdCZ1lGeHVJQ292WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnWTNKbFlYUmxVbTl2ZER4VVBpaG1iam9nS0dScGMzQnZjMlU2SUNncElEMCtJSFp2YVdRcElEMCtJRlFwSUh0Y2JpQWdJQ0JqYjI1emRDQnpZMjl3WlNBOUlHNWxkeUJUWTI5d1pTaHVkV3hzS1Z4dUlDQWdJSEpsZEhWeWJpQnpZMjl3WlM1eWRXNG9LQ2tnUFQ0Z1ptNG9LQ2tnUFQ0Z2MyTnZjR1V1WkdsemNHOXpaU2dwS1NsY2JuMWNiaUlzSUNKcGJYQnZjblFnUjA5aWFtVmpkQ0JtY205dElGd2laMms2THk5SFQySnFaV04wWENKY2JtbHRjRzl5ZENCN0lHVnVkaUI5SUdaeWIyMGdYQ0l1TDJWdWRpNXFjMXdpWEc1cGJYQnZjblFnZXlCQlkyTmxjM052Y2lCOUlHWnliMjBnWENJdUwzTjBZWFJsTG1welhDSmNibWx0Y0c5eWRDQjdJSE5sZENCOUlHWnliMjBnWENJdUxpOTFkR2xzTG1welhDSmNibWx0Y0c5eWRDQjdJRzl1UTJ4bFlXNTFjQ0I5SUdaeWIyMGdYQ0l1TDNOamIzQmxMbXB6WENKY2JtbHRjRzl5ZENCN0lHRndjR1Z1WkN3Z2MyVjBWSGx3WlN3Z2MybG5ibUZzVG1GdFpTd2dkSGx3WlNCRFExQnliM0J6SUgwZ1puSnZiU0JjSWk0dmFuTjRMbXB6WENKY2JseHVkSGx3WlNCVWFHbHpVSEp2Y0hNOFUyVnNaaUJsZUhSbGJtUnpJRWRQWW1wbFkzUXVUMkpxWldOMFBpQTlJRkJoY25ScFlXdzhYRzRnSUNBZ1QyMXBkRHhEUTFCeWIzQnpQRk5sYkdZc0lIc2dXMHNnYVc0Z2EyVjViMllnVTJWc1psMDZJRk5sYkdaYlMxMGdmVDRzSUZ3aUpGd2lJSHdnWENJa1kyOXVjM1J5ZFdOMGIzSmNJajVjYmo0Z0ppQjdYRzRnSUNBZ2RHaHBjem9nVTJWc1pseHVmVnh1WEc0dktpb2dRR1Y0Y0dWeWFXMWxiblJoYkNBcUwxeHVaWGh3YjNKMElHWjFibU4wYVc5dUlGUm9hWE04VkNCbGVIUmxibVJ6SUVkUFltcGxZM1F1VDJKcVpXTjBQaWg3WEc0Z0lDQWdkR2hwY3pvZ2MyVnNaaXhjYmlBZ0lDQmphR2xzWkhKbGJpeGNiaUFnSUNBa2RIbHdaU3hjYmlBZ0lDQXVMaTV3Y205d2MxeHVmVG9nVkdocGMxQnliM0J6UEZRK0tTQjdYRzRnSUNBZ1kyOXVjM1FnWTJ4bFlXNTFjQ0E5SUc1bGR5QkJjbkpoZVR3b0tTQTlQaUIyYjJsa1BpZ3BYRzVjYmlBZ0lDQnBaaUFvSkhSNWNHVXBJSE5sZEZSNWNHVW9jMlZzWml3Z0pIUjVjR1VwWEc1Y2JpQWdJQ0JtYjNJZ0tHTnZibk4wSUZ0clpYa3NJSFpoYkhWbFhTQnZaaUJQWW1wbFkzUXVaVzUwY21sbGN5aHdjbTl3Y3lrcElIdGNiaUFnSUNBZ0lDQWdhV1lnS0d0bGVTQTlQVDBnWENKamMzTmNJaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0haaGJIVmxJR2x1YzNSaGJtTmxiMllnUVdOalpYTnpiM0lwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJuWXVjMlYwUTNOektITmxiR1lzSUhaaGJIVmxMbWRsZENncEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnNaV0Z1ZFhBdWNIVnphQ2gyWVd4MVpTNXpkV0p6WTNKcFltVW9LQ2tnUFQ0Z1pXNTJMbk5sZEVOemN5aHpaV3htTENCMllXeDFaUzVuWlhRb0tTa3BLVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaDBlWEJsYjJZZ2RtRnNkV1VnUFQwOUlGd2ljM1J5YVc1blhDSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYm5ZdWMyVjBRM056S0hObGJHWXNJSFpoYkhWbEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tHdGxlU0E5UFQwZ1hDSmpiR0Z6YzF3aUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kbUZzZFdVZ2FXNXpkR0Z1WTJWdlppQkJZMk5sYzNOdmNpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1Z1ZGk1elpYUkRiR0Z6Y3loelpXeG1MQ0IyWVd4MVpTNW5aWFFvS1NsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamJHVmhiblZ3TG5CMWMyZ29kbUZzZFdVdWMzVmljMk55YVdKbEtDZ3BJRDArSUdWdWRpNXpaWFJEYkdGemN5aHpaV3htTENCMllXeDFaUzVuWlhRb0tTa3BLVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaDBlWEJsYjJZZ2RtRnNkV1VnUFQwOUlGd2ljM1J5YVc1blhDSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYm5ZdWMyVjBRMnhoYzNNb2MyVnNaaXdnZG1Gc2RXVXBYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9hMlY1TG5OMFlYSjBjMWRwZEdnb1hDSnZibHdpS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdhV1FnUFNCelpXeG1MbU52Ym01bFkzUW9jMmxuYm1Gc1RtRnRaU2hyWlhrcExDQjJZV3gxWlNsY2JpQWdJQ0FnSUNBZ0lDQWdJR05zWldGdWRYQXVjSFZ6YUNnb0tTQTlQaUJ6Wld4bUxtUnBjMk52Ym01bFkzUW9hV1FwS1Z4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tIWmhiSFZsSUdsdWMzUmhibU5sYjJZZ1FXTmpaWE56YjNJcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR1JwYzNCdmMyVWdQU0IyWVd4MVpTNXpkV0p6WTNKcFltVW9LQ2tnUFQ0Z2MyVjBLSE5sYkdZc0lHdGxlU3dnZG1Gc2RXVXVaMlYwS0NrcEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnYzJWMEtITmxiR1lzSUd0bGVTd2dkbUZzZFdVdVoyVjBLQ2twWEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiR1ZoYm5Wd0xuQjFjMmdvWkdsemNHOXpaU2xjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lITmxkQ2h6Wld4bUxDQnJaWGtzSUhaaGJIVmxLVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdabTl5SUNoc1pYUWdZMmhwYkdRZ2IyWWdRWEp5WVhrdWFYTkJjbkpoZVNoamFHbHNaSEpsYmlrZ1B5QmphR2xzWkhKbGJpQTZJRnRqYUdsc1pISmxibDBwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLR05vYVd4a0lEMDlQU0IwY25WbEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9SWEp5YjNJb1hDSlVjbmxwYm1jZ2RHOGdZV1JrSUdKdmIyeGxZVzRnZG1Gc2RXVWdiMllnWUhSeWRXVmdJR0Z6SUdFZ1kyaHBiR1F1WENJcEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWRHbHVkV1ZjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lHbG1JQ2hCY25KaGVTNXBjMEZ5Y21GNUtHTm9hV3hrS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWm05eUlDaGpiMjV6ZENCamFDQnZaaUJqYUdsc1pDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0Z3Y0dWdVpDaHpaV3htTENCamFDbGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaGphR2xzWkNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRW9ZMmhwYkdRZ2FXNXpkR0Z1WTJWdlppQkhUMkpxWldOMExrOWlhbVZqZENrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmphR2xzWkNBOUlHVnVkaTUwWlhoMFRtOWtaU2hqYUdsc1pDbGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJR0Z3Y0dWdVpDaHpaV3htTENCamFHbHNaQ2xjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJR2xtSUNoamJHVmhiblZ3TG14bGJtZDBhQ0ErSURBcElIdGNiaUFnSUNBZ0lDQWdiMjVEYkdWaGJuVndLQ2dwSUQwK0lHTnNaV0Z1ZFhBdVptOXlSV0ZqYUNnb1kySXBJRDArSUdOaUtDa3BLVnh1SUNBZ0lIMWNibHh1SUNBZ0lISmxkSFZ5YmlCelpXeG1YRzU5WEc0aUxDQWlkMmx1Wkc5M0xrSmhjaUI3WEc0Z0lHSmhZMnRuY205MWJtUTZJSFJ5WVc1emNHRnlaVzUwTzF4dUlDQmpiMnh2Y2pvZ1FIUm9aVzFsWDJablgyTnZiRzl5TzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nWW05c1pEdGNibjFjYm5kcGJtUnZkeTVDWVhJZ1BpQmpaVzUwWlhKaWIzZ2dlMXh1SUNCaVlXTnJaM0p2ZFc1a09pQkFkR2hsYldWZlltZGZZMjlzYjNJN1hHNTlYRzUzYVc1a2IzY3VRbUZ5SUdKMWRIUnZiaUI3WEc0Z0lHSnZjbVJsY2kxeVlXUnBkWE02SURod2VEdGNiaUFnYldGeVoybHVMWFJ2Y0RvZ05IQjRPMXh1SUNCdFlYSm5hVzR0WW05MGRHOXRPaUEyY0hnN1hHNTlYRzUzYVc1a2IzY3VRbUZ5SUM1emRHRnlkR0oxZEhSdmJpQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhSeVlXNXpjR0Z5Wlc1ME8xeHVJQ0J0WVhKbmFXNHRiR1ZtZERvZ01UQndlRHRjYm4xY2JuZHBibVJ2ZHk1Q1lYSWdMbk4wWVhKMFluVjBkRzl1T21odmRtVnlJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2NtZGlZU2d5TlRVc0lESTFOU3dnTWpVMUxDQXdMakE0S1R0Y2JpQWdZbTk0TFhOb1lXUnZkem9nTUNBeWNIZ2dObkI0SUhKblltRW9NQ3dnTUN3Z01Dd2dNQzR5TlNrN1hHNTlYRzUzYVc1a2IzY3VRbUZ5SUM1emRHRnlkR0oxZEhSdmJpQnBiV0ZuWlNCN1hHNGdJSEJoWkdScGJtYzZJREF1TTNKbGJUdGNibjFjYm5kcGJtUnZkeTVDWVhJZ0xuVjBhV3hwZEdsbGN5QmlkWFIwYjI0Z2UxeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUIwY21GdWMzQmhjbVZ1ZER0Y2JuMWNibmRwYm1SdmR5NUNZWElnTG5WMGFXeHBkR2xsY3lCaWRYUjBiMjQ2YUc5MlpYSWdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCeVoySmhLREkxTlN3Z01qVTFMQ0F5TlRVc0lEQXVNRGdwTzF4dUlDQmliM2d0YzJoaFpHOTNPaUF3SURKd2VDQTJjSGdnY21kaVlTZ3dMQ0F3TENBd0xDQXdMakkxS1R0Y2JuMWNibmRwYm1SdmR5NUNZWElnTG5WMGFXeHBkR2xsY3lCc1lXSmxiQ0I3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUJ1YjNKdFlXdzdYRzRnSUdadmJuUXRjMmw2WlRvZ01YSmxiVHRjYm4xY2JuZHBibVJ2ZHk1Q1lYSWdMbVJoZEdWMGFXMWxJR0oxZEhSdmJpQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhSeVlXNXpjR0Z5Wlc1ME8xeHVmVnh1ZDJsdVpHOTNMa0poY2lBdVpHRjBaWFJwYldVZ1luVjBkRzl1T21odmRtVnlJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2NtZGlZU2d5TlRVc0lESTFOU3dnTWpVMUxDQXdMakE0S1R0Y2JpQWdZbTk0TFhOb1lXUnZkem9nTUNBeWNIZ2dObkI0SUhKblltRW9NQ3dnTUN3Z01Dd2dNQzR5TlNrN1hHNTlYRzUzYVc1a2IzY3VRbUZ5SUM1a1lYUmxkR2x0WlNCc1lXSmxiQ0I3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUJ1YjNKdFlXdzdYRzRnSUdadmJuUXRjMmw2WlRvZ01DNDVjbVZ0TzF4dWZWeHVkMmx1Wkc5M0xrSmhjaUF1YUdsa1pYZHBibVJ2ZDNOaWRYUjBiMjRnZTF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQjBjbUZ1YzNCaGNtVnVkRHRjYmlBZ2JXRnlaMmx1TFhKcFoyaDBPaUF6Y0hnN1hHNGdJSEJoWkdScGJtYzZJREF1TW5KbGJUdGNibjFjYm5kcGJtUnZkeTVDWVhJZ0xtaHBaR1YzYVc1a2IzZHpZblYwZEc5dU9taHZkbVZ5SUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2djbWRpWVNneU5UVXNJREkxTlN3Z01qVTFMQ0F3TGpBNEtUdGNiaUFnWW05NExYTm9ZV1J2ZHpvZ01DQXljSGdnTm5CNElISm5ZbUVvTUN3Z01Dd2dNQ3dnTUM0eU5TazdYRzU5WEc1Y2JpNXplWE4wY21GNVluVjBkRzl1SUdKMWRIUnZiaUI3WEc0Z0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklIUnlZVzV6Y0dGeVpXNTBPMXh1SUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUE0Y0hnN1hHNGdJSFJ5WVc1emFYUnBiMjQ2SUdKaFkydG5jbTkxYm1RdFkyOXNiM0lnTWpBd2JYTWdaV0Z6WlN3Z1ltOTRMWE5vWVdSdmR5QXhOVEJ0Y3lCbFlYTmxPMXh1ZlZ4dUxuTjVjM1J5WVhsaWRYUjBiMjRnWW5WMGRHOXVPbWh2ZG1WeUlIdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nY21kaVlTZ3lOVFVzSURJMU5Td2dNalUxTENBd0xqQTRLVHRjYmlBZ1ltOTRMWE5vWVdSdmR6b2dNQ0F5Y0hnZ05uQjRJSEpuWW1Fb01Dd2dNQ3dnTUN3Z01DNHlOU2s3WEc1OVhHNHVjM2x6ZEhKaGVXSjFkSFJ2YmlCaWRYUjBiMjQ2WVdOMGFYWmxJSHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2NtZGlZU2d5TlRVc0lESTFOU3dnTWpVMUxDQXdMakUyS1R0Y2JpQWdZbTk0TFhOb1lXUnZkem9nTUNBeGNIZ2dNM0I0SUhKblltRW9NQ3dnTUN3Z01Dd2dNQzR6S1R0Y2JuMWNibHh1TG5ONWMzUnlZWGx0Wlc1MUlENGdZMjl1ZEdWdWRITWdlMXh1SUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUExY0hnN1hHNGdJSEJoWkdScGJtYzZJREJ5WlcwN1hHNTlYRzR1YzNsemRISmhlVzFsYm5VZ1BpQmpiMjUwWlc1MGN5QStJR0p2ZUNCN1hHNGdJSEJoWkdScGJtYzZJREZ5WlcwN1hHNTlYRzR1YzNsemRISmhlVzFsYm5VZ1BpQmhjbkp2ZHlCN1hHNGdJQzFuZEdzdGFXTnZiaTF6YjNWeVkyVTZJRzV2Ym1VN0lDOHFJSEpsYlc5MlpTQjBhR1VnWVhKeWIzY2daM0poY0docFl5QXFMMXh1SUNCaVlXTnJaM0p2ZFc1a09pQjBjbUZ1YzNCaGNtVnVkRHRjYm4xY2JseHVkMmx1Wkc5M0xrNXZkR2xtYVdOaGRHbHZiaUI3WEc0Z0lHSmhZMnRuY205MWJtUTZJRUIwYUdWdFpWOWlaMTlqYjJ4dmNqdGNiaUFnWTI5c2IzSTZJQ05tWm1ZN1hHNGdJR0p2Y21SbGNpMXlZV1JwZFhNNklEWndlRHRjYmlBZ2NHRmtaR2x1WnpvZ09IQjRPMXh1SUNCdFlYSm5hVzR0ZEc5d09pQXhNSEI0TzF4dUlDQnRZWEpuYVc0dGNtbG5hSFE2SURFd2NIZzdYRzRnSUdadmJuUXRjMmw2WlRvZ01UUndlRHRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREV1TWp0Y2JuMWNibmRwYm1SdmR5NU9iM1JwWm1sallYUnBiMjRnYVcxaFoyVWdlMXh1SUNBdFozUnJMV2xqYjI0dGMybDZaVG9nTXpKd2VEdGNibjFjYm5kcGJtUnZkeTVPYjNScFptbGpZWFJwYjI0Z0xuTjFiVzFoY25rZ2UxeHVJQ0JtYjI1MExYZGxhV2RvZERvZ1ltOXNaRHRjYm4waUxDQWlhVzF3YjNKMElFRnpkR0ZzSUdaeWIyMGdYQ0puYVRvdkwwRnpkR0ZzUDNabGNuTnBiMjQ5TkM0d1hDSmNibWx0Y0c5eWRDQkhkR3NnWm5KdmJTQmNJbWRwT2k4dlIzUnJQM1psY25OcGIyNDlOQzR3WENKY2JtbHRjRzl5ZENCSFpHc2dabkp2YlNCY0ltZHBPaTh2UjJSclAzWmxjbk5wYjI0OU5DNHdYQ0pjYm1WNGNHOXlkQ0I3SUVGemRHRnNMQ0JIZEdzc0lFZGtheUI5WEc0aUxDQWlhVzF3YjNKMElFZHBieUJtY205dElGd2laMms2THk5SGFXOC9kbVZ5YzJsdmJqMHlMakJjSWx4dWFXMXdiM0owSUVkTWFXSWdabkp2YlNCY0ltZHBPaTh2UjB4cFlqOTJaWEp6YVc5dVBUSXVNRndpWEc1cGJYQnZjblFnUjA5aWFtVmpkQ3dnZXlCeVpXZHBjM1JsY2l3Z2MybG5ibUZzSUgwZ1puSnZiU0JjSW1kdWFXMHZaMjlpYW1WamRGd2lYRzVwYlhCdmNuUWdleUJCWTJObGMzTnZjaUI5SUdaeWIyMGdYQ0puYm1sdFhDSmNibHh1WTI5dWMzUWdaVzVqYjJSbGNpQTlJRzVsZHlCVVpYaDBSVzVqYjJSbGNpZ3BYRzVjYm1WNGNHOXlkQ0J1WVcxbGMzQmhZMlVnVUhKdlkyVnpjeUI3WEc0Z0lDQWdaWGh3YjNKMElHbHVkR1Z5Wm1GalpTQlRhV2R1WVd4VGFXZHVZWFIxY21WeklHVjRkR1Z1WkhNZ1IwOWlhbVZqZEM1UFltcGxZM1F1VTJsbmJtRnNVMmxuYm1GMGRYSmxjeUI3WEc0Z0lDQWdJQ0FnSUhOMFpHOTFkRG9nVUhKdlkyVnpjMXRjSW5OMFpHOTFkRndpWFZ4dUlDQWdJQ0FnSUNCemRHUmxjbkk2SUZCeWIyTmxjM05iWENKemRHUmxjbkpjSWwxY2JpQWdJQ0FnSUNBZ1pYaHBkRG9nVUhKdlkyVnpjMXRjSW1WNGFYUmNJbDFjYmlBZ0lDQjlYRzRnSUNBZ1pYaHdiM0owSUdsdWRHVnlabUZqWlNCRGIyNXpkSEoxWTNSdmNsQnliM0J6SUdWNGRHVnVaSE1nUjA5aWFtVmpkQzVQWW1wbFkzUXVRMjl1YzNSeWRXTjBiM0pRY205d2N5QjdYRzRnSUNBZ0lDQWdJR0Z5WjNZNklITjBjbWx1WjF0ZFhHNGdJQ0FnZlZ4dWZWeHVYRzVBY21WbmFYTjBaWElvS1Z4dVpYaHdiM0owSUdOc1lYTnpJRkJ5YjJObGMzTWdaWGgwWlc1a2N5QkhUMkpxWldOMExrOWlhbVZqZENCN1hHNGdJQ0FnUUhOcFoyNWhiQ2hUZEhKcGJtY3BYRzRnSUNBZ2NISnZkR1ZqZEdWa0lITjBaRzkxZENodmRYUTZJSE4wY21sdVp5a2dlMXh1SUNBZ0lDQWdJQ0IyYjJsa0lHOTFkRnh1SUNBZ0lIMWNibHh1SUNBZ0lFQnphV2R1WVd3b1UzUnlhVzVuS1Z4dUlDQWdJSEJ5YjNSbFkzUmxaQ0J6ZEdSbGNuSW9aWEp5T2lCemRISnBibWNwSUh0Y2JpQWdJQ0FnSUNBZ2RtOXBaQ0JsY25KY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JBYzJsbmJtRnNLRTUxYldKbGNpd2dRbTl2YkdWaGJpbGNiaUFnSUNCd2NtOTBaV04wWldRZ1pYaHBkQ2hqYjJSbE9pQnVkVzFpWlhJc0lITnBaMjVoYkdWa09pQmliMjlzWldGdUtTQjdYRzRnSUNBZ0lDQWdJSFp2YVdRZ1cyTnZaR1VzSUhOcFoyNWhiR1ZrWFZ4dUlDQWdJSDFjYmx4dUlDQWdJQ05sYm1OdlpHVnlJRDBnYm1WM0lGUmxlSFJGYm1OdlpHVnlLQ2xjYmlBZ0lDQWpiM1YwVTNSeVpXRnRPaUJIYVc4dVJHRjBZVWx1Y0hWMFUzUnlaV0Z0WEc0Z0lDQWdJMlZ5Y2xOMGNtVmhiVG9nUjJsdkxrUmhkR0ZKYm5CMWRGTjBjbVZoYlZ4dUlDQWdJQ05wYmxOMGNtVmhiVG9nUjJsdkxrUmhkR0ZQZFhSd2RYUlRkSEpsWVcxY2JpQWdJQ0FqY0hKdlkyVnpjem9nUjJsdkxsTjFZbkJ5YjJObGMzTmNibHh1SUNBZ0lDTnlaV0ZrVTNSeVpXRnRLSE4wY21WaGJUb2dSMmx2TGtSaGRHRkpibkIxZEZOMGNtVmhiU2tnZTF4dUlDQWdJQ0FnSUNCemRISmxZVzB1Y21WaFpGOXNhVzVsWDJGemVXNWpLRWRNYVdJdVVGSkpUMUpKVkZsZlJFVkdRVlZNVkN3Z2JuVnNiQ3dnS0Y4c0lISmxjeWtnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhKNUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCYmIzVjBjSFYwWFNBOUlITjBjbVZoYlM1eVpXRmtYMnhwYm1WZlptbHVhWE5vWDNWMFpqZ29jbVZ6S1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHZkWFJ3ZFhRZ0lUMDlJRzUxYkd3cElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tITjBjbVZoYlNBOVBUMGdkR2hwY3k0alpYSnlVM1J5WldGdEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5OMFpHVnljaWh2ZFhSd2RYUXVkSEpwYlNncEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1emRHUnZkWFFvYjNWMGNIVjBMblJ5YVcwb0tTbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGlOeVpXRmtVM1J5WldGdEtITjBjbVZoYlNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5SUdOaGRHTm9JQ2hsY25KdmNpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb1pYSnliM0lwWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDBwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdZMjl1Ym1WamREeFRJR1Y0ZEdWdVpITWdhMlY1YjJZZ1VISnZZMlZ6Y3k1VGFXZHVZV3hUYVdkdVlYUjFjbVZ6UGloY2JpQWdJQ0FnSUNBZ2MybG5ibUZzT2lCVExGeHVJQ0FnSUNBZ0lDQmpZV3hzWW1GamF6b2dSMDlpYW1WamRDNVRhV2R1WVd4RFlXeHNZbUZqYXp4MGFHbHpMQ0JRY205alpYTnpMbE5wWjI1aGJGTnBaMjVoZEhWeVpYTmJVMTArTEZ4dUlDQWdJQ2s2SUc1MWJXSmxjaUI3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiMjV1WldOMEtITnBaMjVoYkN3Z1kyRnNiR0poWTJzcFhHNGdJQ0FnZlZ4dVhHNGdJQ0FnTHlvcVhHNGdJQ0FnSUNvZ1JtOXlZMlVnY1hWcGRDQjBhR1VnYzNWaWNISnZZMlZ6Y3k1Y2JpQWdJQ0FnS2k5Y2JpQWdJQ0JyYVd4c0tDazZJSFp2YVdRZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TGlOd2NtOWpaWE56TG1admNtTmxYMlY0YVhRb0tWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlGTmxibVFnWVNCemFXZHVZV3dnZEc4Z2RHaGxJSE4xWW5CeWIyTmxjM011WEc0Z0lDQWdJQ3BjYmlBZ0lDQWdLaUJBY0dGeVlXMGdjMmxuYm1Gc0lGTnBaMjVoYkNCdWRXMWlaWElnZEc4Z1ltVWdjMlZ1ZEZ4dUlDQWdJQ0FxTDF4dUlDQWdJSE5wWjI1aGJDaHphV2R1WVd3NklHNTFiV0psY2lrNklIWnZhV1FnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMaU53Y205alpYTnpMbk5sYm1SZmMybG5ibUZzS0hOcFoyNWhiQ2xjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUJYY21sMFpTQmhJR3hwYm1VZ2RHOGdkR2hsSUhOMVluQnliMk5sYzNNbklITjBaR2x1SUhONWJtTm9jbTl1YjNWemJIa3VYRzRnSUNBZ0lDb2dVMlZsSUh0QWJHbHVheUJIYVc4dVJHRjBZVTkxZEhCMWRGTjBjbVZoYlM1d2NtOTBiM1I1Y0dVdWQzSnBkR1ZmWW5sMFpYTmZZWE41Ym1OOVhHNGdJQ0FnSUNwY2JpQWdJQ0FnS2lCQWNHRnlZVzBnYzNSeUlGTjBjbWx1WnlCMGJ5QmlaU0IzY21sMGRHVnVJSFJ2SUhOMFpHbHVYRzRnSUNBZ0lDb3ZYRzRnSUNBZ2QzSnBkR1VvYzNSeU9pQnpkSEpwYm1jcE9pQlFjbTl0YVhObFBGdGliMjlzWldGdUxDQnVkVzFpWlhKZFBpQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnVUhKdmJXbHpaU2dvY21WemIyeDJaU3dnY21WcVpXTjBLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxpTnBibE4wY21WaGJTNTNjbWwwWlY5aWVYUmxjMTloYzNsdVl5aGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxibU52WkdWeUxtVnVZMjlrWlNoemRISXBMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRWRNYVdJdVVGSkpUMUpKVkZsZlJFVkdRVlZNVkN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdWRXeHNMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ2hmTENCeVpYTXBJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSEo1SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGMyOXNkbVVvZEdocGN5NGphVzVUZEhKbFlXMHVkM0pwZEdWZllXeHNYMlpwYm1semFDaHlaWE1wS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR05oZEdOb0lDaGxjbkp2Y2lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVnFaV04wS0dWeWNtOXlLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNsY2JpQWdJQ0FnSUNBZ2ZTbGNiaUFnSUNCOVhHNWNiaUFnSUNBdktpcGNiaUFnSUNBZ0tpQlhjbWwwWlNCaElHeHBibVVnZEc4Z2RHaGxJSE4xWW5CeWIyTmxjM01uSUhOMFpHbHVJR0Z6ZVc1amFISnZibTkxYzJ4NUxseHVJQ0FnSUNBcVhHNGdJQ0FnSUNvZ1FIQmhjbUZ0SUhOMGNpQlRkSEpwYm1jZ2RHOGdZbVVnZDNKcGRIUmxiaUIwYnlCemRHUnBibHh1SUNBZ0lDQXFMMXh1SUNBZ0lHRnplVzVqSUhkeWFYUmxRWE41Ym1Nb2MzUnlPaUJ6ZEhKcGJtY3BPaUJRY205dGFYTmxQSFp2YVdRK0lIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJRY205dGFYTmxLQ2h5WlhOdmJIWmxMQ0J5WldwbFkzUXBJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdUkybHVVM1J5WldGdExuZHlhWFJsWDJGc2JGOWhjM2x1WXloY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMaU5sYm1OdlpHVnlMbVZ1WTI5a1pTaHpkSElwTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVkTWFXSXVVRkpKVDFKSlZGbGZSRVZHUVZWTVZDeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVkV3hzTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNoZkxDQnlaWE1wSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhKNUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxjMjlzZG1Vb2RtOXBaQ0IwYUdsekxpTnBibE4wY21WaGJTNTNjbWwwWlY5aGJHeGZabWx1YVhOb0tISmxjeWtwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdZMkYwWTJnZ0tHVnljbTl5S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpXcGxZM1FvWlhKeWIzSXBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnS1Z4dUlDQWdJQ0FnSUNCOUtWeHVJQ0FnSUgxY2JseHVJQ0FnSUdOdmJuTjBjblZqZEc5eUtIc2dZWEpuZGlCOU9pQlFjbTlqWlhOekxrTnZibk4wY25WamRHOXlVSEp2Y0hNcElIdGNiaUFnSUNBZ0lDQWdjM1Z3WlhJb0tWeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCd2NtOWpaWE56SUQwZ0tIUm9hWE11STNCeWIyTmxjM01nUFNCSGFXOHVVM1ZpY0hKdlkyVnpjeTV1Wlhjb1hHNGdJQ0FnSUNBZ0lDQWdJQ0JoY21kMkxGeHVJQ0FnSUNBZ0lDQWdJQ0FnUjJsdkxsTjFZbkJ5YjJObGMzTkdiR0ZuY3k1VFZFUkpUbDlRU1ZCRklIeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkhhVzh1VTNWaWNISnZZMlZ6YzBac1lXZHpMbE5VUkU5VlZGOVFTVkJGSUh4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCSGFXOHVVM1ZpY0hKdlkyVnpjMFpzWVdkekxsTlVSRVZTVWw5UVNWQkZMRnh1SUNBZ0lDQWdJQ0FwS1Z4dVhHNGdJQ0FnSUNBZ0lIUm9hWE11STJsdVUzUnlaV0Z0SUQwZ1IybHZMa1JoZEdGUGRYUndkWFJUZEhKbFlXMHVibVYzS0hCeWIyTmxjM011WjJWMFgzTjBaR2x1WDNCcGNHVW9LU0VwWEc0Z0lDQWdJQ0FnSUhSb2FYTXVJMjkxZEZOMGNtVmhiU0E5SUVkcGJ5NUVZWFJoU1c1d2RYUlRkSEpsWVcwdWJtVjNLSEJ5YjJObGMzTXVaMlYwWDNOMFpHOTFkRjl3YVhCbEtDa2hLVnh1SUNBZ0lDQWdJQ0IwYUdsekxpTmxjbkpUZEhKbFlXMGdQU0JIYVc4dVJHRjBZVWx1Y0hWMFUzUnlaV0Z0TG01bGR5aHdjbTlqWlhOekxtZGxkRjl6ZEdSbGNuSmZjR2x3WlNncElTbGNibHh1SUNBZ0lDQWdJQ0IwYUdsekxpTnlaV0ZrVTNSeVpXRnRLSFJvYVhNdUkyOTFkRk4wY21WaGJTbGNiaUFnSUNBZ0lDQWdkR2hwY3k0amNtVmhaRk4wY21WaGJTaDBhR2x6TGlObGNuSlRkSEpsWVcwcFhHNWNiaUFnSUNBZ0lDQWdjSEp2WTJWemN5NTNZV2wwWDJGemVXNWpLRzUxYkd3c0lDaGZMQ0J5WlhNcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUnllU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0hKdlkyVnpjeTUzWVdsMFgyWnBibWx6YUNoeVpYTXBYRzRnSUNBZ0lDQWdJQ0FnSUNCOUlHTmhkR05vSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdkx5QnBaMjV2Y21WY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hCeWIyTmxjM011WjJWMFgybG1YMlY0YVhSbFpDZ3BLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWxlR2wwS0hCeWIyTmxjM011WjJWMFgyVjRhWFJmYzNSaGRIVnpLQ2tzSUdaaGJITmxLVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9jSEp2WTJWemN5NW5aWFJmYVdaZmMybG5ibUZzWldRb0tTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVpYaHBkQ2h3Y205alpYTnpMbWRsZEY5MFpYSnRYM05wWnlncExDQjBjblZsS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5S1Z4dUlDQWdJSDFjYmx4dUlDQWdJQzhxS2x4dUlDQWdJQ0FxSUZOMFlYSjBJR0VnYm1WM0lITjFZbkJ5YjJObGMzTWdkMmwwYUNCMGFHVWdaMmwyWlc0Z1kyOXRiV0Z1WkM1Y2JpQWdJQ0FnS2lCVWFHVWdabWx5YzNRZ1pXeGxiV1Z1ZENCdlppQjBhR1VnZG1WamRHOXlJR2x6SUdWNFpXTjFkR1ZrSUhkcGRHZ2dkR2hsSUhKbGJXRnBibWx1WjF4dUlDQWdJQ0FxSUdWc1pXMWxiblJ6SUdGeklIUm9aU0JoY21kMWJXVnVkQ0JzYVhOMExseHVJQ0FnSUNBcUwxeHVJQ0FnSUhOMFlYUnBZeUJ6ZFdKd2NtOWpaWE56ZGloamJXUTZJSE4wY21sdVoxdGRLU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1VISnZZMlZ6Y3loN0lHRnlaM1k2SUdOdFpDQjlLVnh1SUNBZ0lIMWNibHh1SUNBZ0lDOHFLbHh1SUNBZ0lDQXFJRk4wWVhKMElHRWdibVYzSUhOMVluQnliMk5sYzNNZ2QybDBhQ0IwYUdVZ1oybDJaVzRnWTI5dGJXRnVaRnh1SUNBZ0lDQXFJSGRvYVdOb0lHbHpJSEJoY25ObFpDQjFjMmx1WnlCN1FHeHBibXNnUjB4cFlpNXphR1ZzYkY5d1lYSnpaVjloY21kMmZTNWNiaUFnSUNBZ0tpOWNiaUFnSUNCemRHRjBhV01nYzNWaWNISnZZMlZ6Y3loamJXUTZJSE4wY21sdVp5a2dlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQmJMQ0JoY21kMlhTQTlJRWRNYVdJdWMyaGxiR3hmY0dGeWMyVmZZWEpuZGloamJXUXBYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQlFjbTlqWlhOekxuTjFZbkJ5YjJObGMzTjJLR0Z5WjNZaEtWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlFVjRaV04xZEdVZ1lTQmpiMjF0WVc1a0lITjVibU5vY205dWIzVnpiSGt1WEc0Z0lDQWdJQ29nVkdobElHWnBjbk4wSUdWc1pXMWxiblFnYjJZZ2RHaGxJSFpsWTNSdmNpQnBjeUJsZUdWamRYUmxaQ0IzYVhSb0lIUm9aU0J5WlcxaGFXNXBibWRjYmlBZ0lDQWdLaUJsYkdWdFpXNTBjeUJoY3lCMGFHVWdZWEpuZFcxbGJuUWdiR2x6ZEM1Y2JpQWdJQ0FnS2x4dUlDQWdJQ0FxSUVCMGFISnZkM01nYzNSa1pYSnlYRzRnSUNBZ0lDb2dRSEpsZEhWeWJpQnpkR1J2ZFhRZ2IyWWdkR2hsSUhOMVluQnliMk5sYzNOY2JpQWdJQ0FnS2k5Y2JpQWdJQ0J6ZEdGMGFXTWdaWGhsWTNZb1kyMWtPaUJ6ZEhKcGJtZGJYU2tnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0J3Y205alpYTnpJRDBnUjJsdkxsTjFZbkJ5YjJObGMzTXVibVYzS0Z4dUlDQWdJQ0FnSUNBZ0lDQWdZMjFrTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdSMmx2TGxOMVluQnliMk5sYzNOR2JHRm5jeTVUVkVSRlVsSmZVRWxRUlNCOElFZHBieTVUZFdKd2NtOWpaWE56Um14aFozTXVVMVJFVDFWVVgxQkpVRVVzWEc0Z0lDQWdJQ0FnSUNsY2JseHVJQ0FnSUNBZ0lDQmpiMjV6ZENCYkxDQnZkWFFzSUdWeWNsMGdQU0J3Y205alpYTnpMbU52YlcxMWJtbGpZWFJsWDNWMFpqZ29iblZzYkN3Z2JuVnNiQ2xjYmlBZ0lDQWdJQ0FnYVdZZ0tIQnliMk5sYzNNdVoyVjBYM04xWTJObGMzTm1kV3dvS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzkxZEM1MGNtbHRLQ2xjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2lobGNuSXBYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZLaXBjYmlBZ0lDQWdLaUJGZUdWamRYUmxJR0VnWTI5dGJXRnVaQ0J6ZVc1amFISnZibTkxYzJ4NUxseHVJQ0FnSUNBcUlGUm9aU0JqYjIxdFlXNWtJR2x6SUhCaGNuTmxaQ0IxYzJsdVp5QjdRR3hwYm1zZ1IweHBZaTV6YUdWc2JGOXdZWEp6WlY5aGNtZDJmUzVjYmlBZ0lDQWdLbHh1SUNBZ0lDQXFJRUIwYUhKdmQzTWdjM1JrWlhKeVhHNGdJQ0FnSUNvZ1FISmxkSFZ5YmlCemRHUnZkWFFnYjJZZ2RHaGxJSE4xWW5CeWIyTmxjM05jYmlBZ0lDQWdLaTljYmlBZ0lDQnpkR0YwYVdNZ1pYaGxZeWhqYldRNklITjBjbWx1WnlrZ2UxeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCYkxDQmhjbWQyWFNBOUlFZE1hV0l1YzJobGJHeGZjR0Z5YzJWZllYSm5kaWhqYldRcFhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCUWNtOWpaWE56TG1WNFpXTjJLR0Z5WjNZaEtWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlFVjRaV04xZEdVZ1lTQmpiMjF0WVc1a0lHRnplVzVqYUhKdmJtOTFjMng1TGx4dUlDQWdJQ0FxSUZSb1pTQm1hWEp6ZENCbGJHVnRaVzUwSUc5bUlIUm9aU0IyWldOMGIzSWdhWE1nWlhobFkzVjBaV1FnZDJsMGFDQjBhR1VnY21WdFlXbHVhVzVuWEc0Z0lDQWdJQ29nWld4bGJXVnVkSE1nWVhNZ2RHaGxJR0Z5WjNWdFpXNTBJR3hwYzNRdVhHNGdJQ0FnSUNwY2JpQWdJQ0FnS2lCQWRHaHliM2R6SUhOMFpHVnljbHh1SUNBZ0lDQXFJRUJ5WlhSMWNtNGdjM1JrYjNWMElHOW1JSFJvWlNCemRXSndjbTlqWlhOelhHNGdJQ0FnSUNvdlhHNGdJQ0FnYzNSaGRHbGpJR1Y0WldOQmMzbHVZM1lvWTIxa09pQnpkSEpwYm1kYlhTazZJRkJ5YjIxcGMyVThjM1J5YVc1blBpQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElIQnliMk5sYzNNZ1BTQkhhVzh1VTNWaWNISnZZMlZ6Y3k1dVpYY29YRzRnSUNBZ0lDQWdJQ0FnSUNCamJXUXNYRzRnSUNBZ0lDQWdJQ0FnSUNCSGFXOHVVM1ZpY0hKdlkyVnpjMFpzWVdkekxsTlVSRVZTVWw5UVNWQkZJSHdnUjJsdkxsTjFZbkJ5YjJObGMzTkdiR0ZuY3k1VFZFUlBWVlJmVUVsUVJTeGNiaUFnSUNBZ0lDQWdLVnh1WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1VISnZiV2x6WlNnb2NtVnpiMngyWlN3Z2NtVnFaV04wS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCd2NtOWpaWE56TG1OdmJXMTFibWxqWVhSbFgzVjBaamhmWVhONWJtTW9iblZzYkN3Z2JuVnNiQ3dnS0Y4c0lISmxjeWtnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUnllU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUZzc0lHOTFkQ3dnWlhKeVhTQTlJSEJ5YjJObGMzTXVZMjl0YlhWdWFXTmhkR1ZmZFhSbU9GOW1hVzVwYzJnb2NtVnpLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9jSEp2WTJWemN5NW5aWFJmYzNWalkyVnpjMloxYkNncEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2NtVnpiMngyWlNodmRYUXVkSEpwYlNncEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVZxWldOMEtHNWxkeUJGY25KdmNpaGxjbkl1ZEhKcGJTZ3BLU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdZMkYwWTJnZ0tHVnljbTl5S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsYW1WamRDaGxjbkp2Y2lsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5S1Z4dUlDQWdJQ0FnSUNCOUtWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4cUtseHVJQ0FnSUNBcUlFVjRaV04xZEdVZ1lTQmpiMjF0WVc1a0lHRnplVzVqYUhKdmJtOTFjMng1TGx4dUlDQWdJQ0FxSUZSb1pTQmpiMjF0WVc1a0lHbHpJSEJoY25ObFpDQjFjMmx1WnlCN1FHeHBibXNnUjB4cFlpNXphR1ZzYkY5d1lYSnpaVjloY21kMmZTNWNiaUFnSUNBZ0tseHVJQ0FnSUNBcUlFQjBhSEp2ZDNNZ2MzUmtaWEp5WEc0Z0lDQWdJQ29nUUhKbGRIVnliaUJ6ZEdSdmRYUWdiMllnZEdobElITjFZbkJ5YjJObGMzTmNiaUFnSUNBZ0tpOWNiaUFnSUNCemRHRjBhV01nWlhobFkwRnplVzVqS0dOdFpEb2djM1J5YVc1bktTQjdYRzRnSUNBZ0lDQWdJR052Ym5OMElGc3NJR0Z5WjNaZElEMGdSMHhwWWk1emFHVnNiRjl3WVhKelpWOWhjbWQyS0dOdFpDbGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlGQnliMk5sYzNNdVpYaGxZMEZ6ZVc1amRpaGhjbWQySVNsY2JpQWdJQ0I5WEc1OVhHNWNiblI1Y0dVZ1FYSm5jeUE5SUh0Y2JpQWdJQ0JqYldRNklITjBjbWx1WnlCOElITjBjbWx1WjF0ZFhHNGdJQ0FnYjNWMFB6b2dLSE4wWkc5MWREb2djM1J5YVc1bktTQTlQaUIyYjJsa1hHNGdJQ0FnWlhKeVB6b2dLSE4wWkdWeWNqb2djM1J5YVc1bktTQTlQaUIyYjJsa1hHNTlYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJ6ZFdKd2NtOWpaWE56S0dGeVozTTZJRUZ5WjNNcE9pQlFjbTlqWlhOelhHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQnpkV0p3Y205alpYTnpLRnh1SUNBZ0lHTnRaRG9nYzNSeWFXNW5JSHdnYzNSeWFXNW5XMTBzWEc0Z0lDQWdiMjVQZFhRL09pQW9jM1JrYjNWME9pQnpkSEpwYm1jcElEMCtJSFp2YVdRc1hHNGdJQ0FnYjI1RmNuSS9PaUFvYzNSa1pYSnlPaUJ6ZEhKcGJtY3BJRDArSUhadmFXUXNYRzRwT2lCUWNtOWpaWE56WEc1Y2JtVjRjRzl5ZENCbWRXNWpkR2x2YmlCemRXSndjbTlqWlhOektGeHVJQ0FnSUdGeVozTlBja050WkRvZ1FYSm5jeUI4SUhOMGNtbHVaeUI4SUhOMGNtbHVaMXRkTEZ4dUlDQWdJRzl1VDNWME9pQW9jM1JrYjNWME9pQnpkSEpwYm1jcElEMCtJSFp2YVdRZ1BTQndjbWx1ZEN4Y2JpQWdJQ0J2YmtWeWNqb2dLSE4wWkdWeWNqb2djM1J5YVc1bktTQTlQaUIyYjJsa0lEMGdjSEpwYm5SbGNuSXNYRzRwSUh0Y2JpQWdJQ0JqYjI1emRDQmhjbWR6SUQwZ1FYSnlZWGt1YVhOQmNuSmhlU2hoY21kelQzSkRiV1FwSUh4OElIUjVjR1Z2WmlCaGNtZHpUM0pEYldRZ1BUMDlJRndpYzNSeWFXNW5YQ0pjYmlBZ0lDQmpiMjV6ZENCN0lHTnRaQ3dnWlhKeUxDQnZkWFFnZlNBOUlIdGNiaUFnSUNBZ0lDQWdZMjFrT2lCaGNtZHpJRDhnWVhKbmMwOXlRMjFrSURvZ1lYSm5jMDl5UTIxa0xtTnRaQ3hjYmlBZ0lDQWdJQ0FnWlhKeU9pQmhjbWR6SUQ4Z2IyNUZjbklnT2lCaGNtZHpUM0pEYldRdVpYSnlJSHg4SUc5dVJYSnlMRnh1SUNBZ0lDQWdJQ0J2ZFhRNklHRnlaM01nUHlCdmJrOTFkQ0E2SUdGeVozTlBja050WkM1dmRYUWdmSHdnYjI1UGRYUXNYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1kyOXVjM1FnY0hKdll5QTlJRUZ5Y21GNUxtbHpRWEp5WVhrb1kyMWtLU0EvSUZCeWIyTmxjM011YzNWaWNISnZZMlZ6YzNZb1kyMWtLU0E2SUZCeWIyTmxjM011YzNWaWNISnZZMlZ6Y3loamJXUXBYRzRnSUNBZ2NISnZZeTVqYjI1dVpXTjBLRndpYzNSa2IzVjBYQ0lzSUNoZkxDQnpkR1J2ZFhRNklITjBjbWx1WnlrZ1BUNGdiM1YwS0hOMFpHOTFkQ2twWEc0Z0lDQWdjSEp2WXk1amIyNXVaV04wS0Z3aWMzUmtaWEp5WENJc0lDaGZMQ0J6ZEdSbGNuSTZJSE4wY21sdVp5a2dQVDRnWlhKeUtITjBaR1Z5Y2lrcFhHNGdJQ0FnY21WMGRYSnVJSEJ5YjJOY2JuMWNibHh1THlvcUlFQjBhSEp2ZDNNZ2UwVnljbTl5ZlNCVWFISnZkM01nYzNSa1pYSnlJQ292WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnWlhobFl5aGpiV1E2SUhOMGNtbHVaeUI4SUhOMGNtbHVaMXRkS1NCN1hHNGdJQ0FnY21WMGRYSnVJRUZ5Y21GNUxtbHpRWEp5WVhrb1kyMWtLU0EvSUZCeWIyTmxjM011WlhobFkzWW9ZMjFrS1NBNklGQnliMk5sYzNNdVpYaGxZeWhqYldRcFhHNTlYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJsZUdWalFYTjVibU1vWTIxa09pQnpkSEpwYm1jZ2ZDQnpkSEpwYm1kYlhTazZJRkJ5YjIxcGMyVThjM1J5YVc1blBpQjdYRzRnSUNBZ2FXWWdLRUZ5Y21GNUxtbHpRWEp5WVhrb1kyMWtLU2tnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnVUhKdlkyVnpjeTVsZUdWalFYTjVibU4yS0dOdFpDbGNiaUFnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnVUhKdlkyVnpjeTVsZUdWalFYTjVibU1vWTIxa0tWeHVJQ0FnSUgxY2JuMWNibHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJR055WldGMFpWTjFZbkJ5YjJObGMzTW9hVzVwZERvZ2MzUnlhVzVuTENCbGVHVmpPaUJ6ZEhKcGJtY2dmQ0J6ZEhKcGJtZGJYU2s2SUVGalkyVnpjMjl5UEhOMGNtbHVaejVjYmx4dVpYaHdiM0owSUdaMWJtTjBhVzl1SUdOeVpXRjBaVk4xWW5CeWIyTmxjM004VkQ0b1hHNGdJQ0FnYVc1cGREb2dWQ3hjYmlBZ0lDQmxlR1ZqT2lCemRISnBibWNnZkNCemRISnBibWRiWFN4Y2JpQWdJQ0IwY21GdWMyWnZjbTA2SUNoemRHUnZkWFE2SUhOMGNtbHVaeXdnY0hKbGRqb2dWQ2tnUFQ0Z1ZDeGNiaWs2SUVGalkyVnpjMjl5UEZRK1hHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQmpjbVZoZEdWVGRXSndjbTlqWlhOelBGUStLRnh1SUNBZ0lHbHVhWFE2SUZRc1hHNGdJQ0FnWlhobFl6b2djM1J5YVc1bklId2djM1J5YVc1blcxMHNYRzRnSUNBZ2RISmhibk5tYjNKdFB6b2dLSE4wWkc5MWREb2djM1J5YVc1bkxDQndjbVYyT2lCVUtTQTlQaUJVTEZ4dUtUb2dRV05qWlhOemIzSThWRDRnZTF4dUlDQWdJR3hsZENCamRYSnlaVzUwVm1Gc2RXVWdQU0JwYm1sMFhHNGdJQ0FnYkdWMElIQnliMk02SUZCeWIyTmxjM01nZkNCdWRXeHNJRDBnYm5Wc2JGeHVJQ0FnSUdOdmJuTjBJSE4xWW5OamNtbGlaWEp6SUQwZ2JtVjNJRk5sZER3b0tTQTlQaUIyYjJsa1BpZ3BYRzVjYmlBZ0lDQm1kVzVqZEdsdmJpQnpkV0p6WTNKcFltVW9ZMkZzYkdKaFkyczZJQ2dwSUQwK0lIWnZhV1FwT2lBb0tTQTlQaUIyYjJsa0lIdGNiaUFnSUNBZ0lDQWdhV1lnS0hOMVluTmpjbWxpWlhKekxuTnBlbVVnUFQwOUlEQXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIQnliMk1nUFNCemRXSndjbTlqWlhOektHVjRaV01zSUNoemRHUnZkWFFwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCMllXeDFaU0E5SUhSeVlXNXpabTl5YlNBL0lIUnlZVzV6Wm05eWJTaHpkR1J2ZFhRc0lHTjFjbkpsYm5SV1lXeDFaU2tnT2lBb2MzUmtiM1YwSUdGeklGUXBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dOMWNuSmxiblJXWVd4MVpTQWhQVDBnZG1Gc2RXVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kzVnljbVZ1ZEZaaGJIVmxJRDBnZG1Gc2RXVmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUVhKeVlYa3Vabkp2YlNoemRXSnpZM0pwWW1WeWN5a3VabTl5UldGamFDZ29ZMklwSUQwK0lHTmlLQ2twWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmU2xjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lITjFZbk5qY21saVpYSnpMbUZrWkNoallXeHNZbUZqYXlsY2JseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z0tDa2dQVDRnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjM1ZpYzJOeWFXSmxjbk11WkdWc1pYUmxLR05oYkd4aVlXTnJLVnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSE4xWW5OamNtbGlaWEp6TG5OcGVtVWdQVDA5SURBcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndjbTlqUHk1cmFXeHNLQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3Y205aklEMGdiblZzYkZ4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjbVYwZFhKdUlHNWxkeUJCWTJObGMzTnZjaWdvS1NBOVBpQmpkWEp5Wlc1MFZtRnNkV1VzSUhOMVluTmpjbWxpWlNsY2JuMWNiaUlzSUNKcGJYQnZjblFnUjA5aWFtVmpkQ3dnZXlCeVpXZHBjM1JsY2l3Z2MybG5ibUZzSUgwZ1puSnZiU0JjSW1kdWFXMHZaMjlpYW1WamRGd2lYRzVwYlhCdmNuUWdleUJCWTJObGMzTnZjaUI5SUdaeWIyMGdYQ0puYm1sdFhDSmNibWx0Y0c5eWRDQjdJR1Y0WldOQmMzbHVZeUI5SUdaeWIyMGdYQ0l1TDNCeWIyTmxjM011YW5OY0lseHVhVzF3YjNKMElFZE1hV0lnWm5KdmJTQmNJbWRwT2k4dlIweHBZajkyWlhKemFXOXVQVEl1TUZ3aVhHNWNibVY0Y0c5eWRDQnVZVzFsYzNCaFkyVWdWR2x0WlhJZ2UxeHVJQ0FnSUdWNGNHOXlkQ0JwYm5SbGNtWmhZMlVnVTJsbmJtRnNVMmxuYm1GMGRYSmxjeUJsZUhSbGJtUnpJRWRQWW1wbFkzUXVUMkpxWldOMExsTnBaMjVoYkZOcFoyNWhkSFZ5WlhNZ2UxeHVJQ0FnSUNBZ0lDQnViM2NvS1RvZ2RtOXBaRnh1SUNBZ0lDQWdJQ0JqWVc1alpXeHNaV1FvS1RvZ2RtOXBaRnh1SUNBZ0lIMWNibjFjYmx4dVFISmxaMmx6ZEdWeUtDbGNibVY0Y0c5eWRDQmpiR0Z6Y3lCVWFXMWxjaUJsZUhSbGJtUnpJRWRQWW1wbFkzUXVUMkpxWldOMElIdGNiaUFnSUNCa1pXTnNZWEpsSUNSemFXZHVZV3h6T2lCVWFXMWxjaTVUYVdkdVlXeFRhV2R1WVhSMWNtVnpYRzVjYmlBZ0lDQkFjMmxuYm1Gc0tDbGNiaUFnSUNCd2NtOTBaV04wWldRZ2JtOTNLQ2tnZTMxY2JseHVJQ0FnSUVCemFXZHVZV3dvS1Z4dUlDQWdJSEJ5YjNSbFkzUmxaQ0JqWVc1alpXeHNaV1FvS1NCN2ZWeHVYRzRnSUNBZ2MzUmhkR2xqSUdsdWRHVnlkbUZzS0dsdWRHVnlkbUZzT2lCdWRXMWlaWElzSUdOaGJHeGlZV05yUHpvZ0tDa2dQVDRnZG05cFpDa2dlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQjdJSFJwYldWeUxDQnViM2NnZlNBOUlGUnBiV1Z5TG01bGR5aGpZV3hzWW1GamF5d2dLQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHbHRiV1ZrYVdGMFpTNXBjMTlrWlhOMGNtOTVaV1FvS1NrZ2FXMXRaV1JwWVhSbExtUmxjM1J5YjNrb0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tITnZkWEpqWlM1cGMxOWtaWE4wY205NVpXUW9LU2tnYzI5MWNtTmxMbVJsYzNSeWIza29LVnh1SUNBZ0lDQWdJQ0I5S1Z4dUlDQWdJQ0FnSUNCamIyNXpkQ0JwYlcxbFpHbGhkR1VnUFNCelpYUlVhVzFsYjNWMEtHNXZkeWxjYmlBZ0lDQWdJQ0FnWTI5dWMzUWdjMjkxY21ObElEMGdjMlYwU1c1MFpYSjJZV3dvYm05M0xDQnBiblJsY25aaGJDbGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUnBiV1Z5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdjM1JoZEdsaklIUnBiV1Z2ZFhRb2FXNTBaWEoyWVd3NklHNTFiV0psY2l3Z1kyRnNiR0poWTJzL09pQW9LU0E5UGlCMmIybGtLU0I3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJSHNnZEdsdFpYSXNJRzV2ZHlCOUlEMGdWR2x0WlhJdWJtVjNLR05oYkd4aVlXTnJMQ0FvS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9jMjkxY21ObExtbHpYMlJsYzNSeWIzbGxaQ2dwS1NCemIzVnlZMlV1WkdWemRISnZlU2dwWEc0Z0lDQWdJQ0FnSUgwcFhHNGdJQ0FnSUNBZ0lHTnZibk4wSUhOdmRYSmpaU0E5SUhObGRGUnBiV1Z2ZFhRb2JtOTNMQ0JwYm5SbGNuWmhiQ2xjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJSFJwYldWeVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnYzNSaGRHbGpJR2xrYkdVb1kyRnNiR0poWTJzL09pQW9LU0E5UGlCMmIybGtLU0I3WEc0Z0lDQWdJQ0FnSUdOdmJuTjBJSHNnZEdsdFpYSXNJRzV2ZHlCOUlEMGdWR2x0WlhJdWJtVjNLR05oYkd4aVlXTnJMQ0FvS1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9jMjkxY21ObExtbHpYMlJsYzNSeWIzbGxaQ2dwS1NCemIzVnlZMlV1WkdWemRISnZlU2dwWEc0Z0lDQWdJQ0FnSUgwcFhHNGdJQ0FnSUNBZ0lHTnZibk4wSUhOdmRYSmpaU0E5SUhObGRGUnBiV1Z2ZFhRb2JtOTNLVnh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2x0WlhKY2JpQWdJQ0I5WEc1Y2JpQWdJQ0J3Y21sMllYUmxJSE4wWVhScFl5QnVaWGNvYjI1T2IzYy9PaUFvS1NBOVBpQjJiMmxrTENCdmJrTmhibU5sYkd4bFpEODZJQ2dwSUQwK0lIWnZhV1FwSUh0Y2JpQWdJQ0FnSUNBZ1kyOXVjM1FnZEdsdFpYSWdQU0J1WlhjZ1ZHbHRaWElvS1Z4dUlDQWdJQ0FnSUNCamIyNXpkQ0J1YjNjZ1BTQjBhVzFsY2k1amIyNXVaV04wS0Z3aWJtOTNYQ0lzSUNncElEMCtJSFp2YVdRZ2IyNU9iM2MvTGlncEtWeHVJQ0FnSUNBZ0lDQmpiMjV6ZENCallXNWpaV3hzWldRZ1BTQjBhVzFsY2k1amIyNXVaV04wS0Z3aVkyRnVZMlZzYkdWa1hDSXNJQ2dwSUQwK0lIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhScGJXVnlMbVJwYzJOdmJtNWxZM1FvYm05M0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdsdFpYSXVaR2x6WTI5dWJtVmpkQ2hqWVc1alpXeHNaV1FwWEc0Z0lDQWdJQ0FnSUNBZ0lDQnZia05oYm1ObGJHeGxaRDh1S0NsY2JpQWdJQ0FnSUNBZ2ZTbGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlIc2dkR2x0WlhJc0lHNXZkem9nS0NrZ1BUNGdkR2x0WlhJdWJtOTNLQ2tnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJR052Ym01bFkzUThVeUJsZUhSbGJtUnpJR3RsZVc5bUlGUnBiV1Z5TGxOcFoyNWhiRk5wWjI1aGRIVnlaWE0rS0Z4dUlDQWdJQ0FnSUNCemFXZHVZV3c2SUZNc1hHNGdJQ0FnSUNBZ0lHTmhiR3hpWVdOck9pQkhUMkpxWldOMExsTnBaMjVoYkVOaGJHeGlZV05yUEhSb2FYTXNJRlJwYldWeUxsTnBaMjVoYkZOcFoyNWhkSFZ5WlhOYlUxMCtMRnh1SUNBZ0lDazZJRzUxYldKbGNpQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIyNXVaV04wS0hOcFoyNWhiQ3dnWTJGc2JHSmhZMnNwWEc0Z0lDQWdmVnh1WEc0Z0lDQWdZMkZ1WTJWc0tDa2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxtTmhibU5sYkd4bFpDZ3BYRzRnSUNBZ2ZWeHVmVnh1WEc1bGVIQnZjblFnWTI5dWMzUWdleUJwYm5SbGNuWmhiQ3dnZEdsdFpXOTFkQ3dnYVdSc1pTQjlJRDBnVkdsdFpYSmNibHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJR055WldGMFpWQnZiR3dvWEc0Z0lDQWdhVzVwZERvZ2MzUnlhVzVuTEZ4dUlDQWdJR2x1ZEdWeWRtRnNPaUJ1ZFcxaVpYSXNYRzRnSUNBZ1pYaGxZem9nYzNSeWFXNW5JSHdnYzNSeWFXNW5XMTBzWEc0cE9pQkJZMk5sYzNOdmNqeHpkSEpwYm1jK1hHNWNibVY0Y0c5eWRDQm1kVzVqZEdsdmJpQmpjbVZoZEdWUWIyeHNQRlErS0Z4dUlDQWdJR2x1YVhRNklGUXNYRzRnSUNBZ2FXNTBaWEoyWVd3NklHNTFiV0psY2l4Y2JpQWdJQ0JsZUdWak9pQnpkSEpwYm1jZ2ZDQnpkSEpwYm1kYlhTeGNiaUFnSUNCMGNtRnVjMlp2Y20wNklDaHpkR1J2ZFhRNklITjBjbWx1Wnl3Z2NISmxkam9nVkNrZ1BUNGdWQ3hjYmlrNklFRmpZMlZ6YzI5eVBGUStYRzVjYm1WNGNHOXlkQ0JtZFc1amRHbHZiaUJqY21WaGRHVlFiMnhzUEZRK0tGeHVJQ0FnSUdsdWFYUTZJRlFzWEc0Z0lDQWdhVzUwWlhKMllXdzZJRzUxYldKbGNpeGNiaUFnSUNCbWJqb2dLSEJ5WlhZNklGUXBJRDArSUZRZ2ZDQlFjbTl0YVhObFBGUStMRnh1S1RvZ1FXTmpaWE56YjNJOFZENWNibHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJR055WldGMFpWQnZiR3c4VkQ0b1hHNGdJQ0FnYVc1cGREb2dWQ3hjYmlBZ0lDQnBkbUZzT2lCdWRXMWlaWElzWEc0Z0lDQWdaWGhsWTA5eVJtNDZJSE4wY21sdVp5QjhJSE4wY21sdVoxdGRJSHdnS0Nod2NtVjJPaUJVS1NBOVBpQlVJSHdnVUhKdmJXbHpaVHhVUGlrc1hHNGdJQ0FnZEhKaGJuTm1iM0p0UHpvZ0tITjBaRzkxZERvZ2MzUnlhVzVuTENCd2NtVjJPaUJVS1NBOVBpQlVMRnh1S1RvZ1FXTmpaWE56YjNJOFZENGdlMXh1SUNBZ0lHeGxkQ0JqZFhKeVpXNTBWbUZzZFdVZ1BTQnBibWwwWEc0Z0lDQWdiR1YwSUhScGJXVnlPaUJIVEdsaUxsTnZkWEpqWlNCOElHNTFiR3dnUFNCdWRXeHNYRzRnSUNBZ1kyOXVjM1FnYzNWaWMyTnlhV0psY25NZ1BTQnVaWGNnVTJWMFBDZ3BJRDArSUhadmFXUStLQ2xjYmx4dUlDQWdJR1oxYm1OMGFXOXVJSE5sZENoMllXeDFaVG9nVkNrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvZG1Gc2RXVWdJVDA5SUdOMWNuSmxiblJXWVd4MVpTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kzVnljbVZ1ZEZaaGJIVmxJRDBnZG1Gc2RXVmNiaUFnSUNBZ0lDQWdJQ0FnSUVGeWNtRjVMbVp5YjIwb2MzVmljMk55YVdKbGNuTXBMbVp2Y2tWaFkyZ29LR05pS1NBOVBpQmpZaWdwS1Z4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnWm5WdVkzUnBiMjRnWTI5dGNIVjBaU2dwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLSFI1Y0dWdlppQmxlR1ZqVDNKR2JpQTlQVDBnWENKbWRXNWpkR2x2Ymx3aUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0IyWVd4MVpTQTlJR1Y0WldOUGNrWnVLR04xY25KbGJuUldZV3gxWlNsY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMllXeDFaU0JwYm5OMFlXNWpaVzltSUZCeWIyMXBjMlVwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaUzUwYUdWdUtITmxkQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyVjBLSFpoYkhWbEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdaWGhsWTBGemVXNWpLR1Y0WldOUGNrWnVLUzUwYUdWdUtDaHpkR1J2ZFhRcElEMCtJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6WlhRb2RISmhibk5tYjNKdElEOGdkSEpoYm5ObWIzSnRLSE4wWkc5MWRDd2dZM1Z5Y21WdWRGWmhiSFZsS1NBNklDaHpkR1J2ZFhRZ1lYTWdWQ2twWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlLVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmVnh1WEc0Z0lDQWdablZ1WTNScGIyNGdjM1ZpYzJOeWFXSmxLR05oYkd4aVlXTnJPaUFvS1NBOVBpQjJiMmxrS1RvZ0tDa2dQVDRnZG05cFpDQjdYRzRnSUNBZ0lDQWdJR2xtSUNoemRXSnpZM0pwWW1WeWN5NXphWHBsSUQwOVBTQXdLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnpaWFJVYVcxbGIzVjBLR052YlhCMWRHVXBYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFXMWxjaUE5SUhObGRFbHVkR1Z5ZG1Gc0tHTnZiWEIxZEdVc0lHbDJZV3dwWEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnpkV0p6WTNKcFltVnljeTVoWkdRb1kyRnNiR0poWTJzcFhHNWNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlDZ3BJRDArSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSE4xWW5OamNtbGlaWEp6TG1SbGJHVjBaU2hqWVd4c1ltRmpheWxjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h6ZFdKelkzSnBZbVZ5Y3k1emFYcGxJRDA5UFNBd0lDWW1JSFJwYldWeUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMnhsWVhKSmJuUmxjblpoYkNoMGFXMWxjaWxjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYVcxbGNpQTlJRzUxYkd4Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJSEpsZEhWeWJpQnVaWGNnUVdOalpYTnpiM0lvS0NrZ1BUNGdZM1Z5Y21WdWRGWmhiSFZsTENCemRXSnpZM0pwWW1VcFhHNTlYRzRpTENBaWFXMXdiM0owSUdGd2NDQm1jbTl0SUZ3aVlXZHpMMmQwYXpRdllYQndYQ0pjYm1sdGNHOXlkQ0I3SUVGemRHRnNMQ0JIZEdzc0lFZGtheUI5SUdaeWIyMGdYQ0poWjNNdlozUnJORndpWEc1cGJYQnZjblFnZXlCbGVHVmpRWE41Ym1NZ2ZTQm1jbTl0SUZ3aVlXZHpMM0J5YjJObGMzTmNJbHh1YVcxd2IzSjBJSHNnWTNKbFlYUmxVRzlzYkNCOUlHWnliMjBnWENKaFozTXZkR2x0WlZ3aVhHNXBiWEJ2Y25RZ1IweHBZaUJtY205dElGd2laMms2THk5SFRHbGlYQ0pjYm1sdGNHOXlkQ0JUZVhOVWNtRjVRblYwZEc5dUlHWnliMjBnWENJdUwxTjVjM1JsYlZSeVlYa3ZVM2x6VkhKaGVVSjFkSFJ2Ymx3aVhHNXBiWEJ2Y25RZ1ZtOXNkVzFsU1c1a2FXTmhkRzl5SUdaeWIyMGdYQ0l1TDFWMGFXeHBkR2xsY3k5MmIyeDFiV1ZwYm1ScFkyRjBiM0pjSWx4dWFXMXdiM0owSUVocFpHVlhhVzVrYjNkelFuVjBkRzl1SUdaeWIyMGdYQ0l1TDBocFpHVlhhVzVrYjNkelFuVjBkRzl1WENKY2JtbHRjRzl5ZENCT1pYUjNiM0pyU1c1a2FXTmhkRzl5SUdaeWIyMGdYQ0l1TDFWMGFXeHBkR2xsY3k5dVpYUjNiM0pyYVc1a2FXTmhkRzl5WENKY2JtbHRjRzl5ZENCVmRHbHNjMVJ5WVhrZ1puSnZiU0JjSWk0dlZYUnBiR2wwYVdWekwzVjBhV3hwZEdsbGMzUnlZWGxjSWx4dVhHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCbWRXNWpkR2x2YmlCQ1lYSW9aMlJyYlc5dWFYUnZjam9nUjJSckxrMXZibWwwYjNJcElIdGNiaUFnWTI5dWMzUWdkR2x0WlNBOUlHTnlaV0YwWlZCdmJHd29YQ0pjSWl3Z01UQXdNQ3dnSjJSaGRHVWdYQ0lySld3NkpVMGdKWEJjSWljcFhHNGdJR052Ym5OMElHUmhkR1VnUFNCamNtVmhkR1ZRYjJ4c0tGd2lYQ0lzSURFd01EQXNJQ2RrWVhSbElGd2lLeVZ0THlWa0x5VlpYQ0luS1Z4dUlDQmpiMjV6ZENCN0lFSlBWRlJQVFN3Z1RFVkdWQ3dnVWtsSFNGUWdmU0E5SUVGemRHRnNMbGRwYm1SdmQwRnVZMmh2Y2x4dUlDQmpiMjV6ZENCQlUxTkZWRk5mVUVGVVNDQTlJR0FrZTBkTWFXSXVaMlYwWDJOMWNuSmxiblJmWkdseUtDbDlMMkZ6YzJWMGMyQmNibHh1SUNCeVpYUjFjbTRnS0Z4dUlDQWdJRHgzYVc1a2IzZGNiaUFnSUNBZ0lIWnBjMmxpYkdWY2JpQWdJQ0FnSUc1aGJXVTlYQ0ppWVhKY0lseHVJQ0FnSUNBZ1kyeGhjM005WENKQ1lYSmNJbHh1SUNBZ0lDQWdaMlJyYlc5dWFYUnZjajE3WjJScmJXOXVhWFJ2Y24xY2JpQWdJQ0FnSUdWNFkyeDFjMmwyYVhSNVBYdEJjM1JoYkM1RmVHTnNkWE5wZG1sMGVTNUZXRU5NVlZOSlZrVjlYRzRnSUNBZ0lDQmhibU5vYjNJOWUwSlBWRlJQVFNCOElFeEZSbFFnZkNCU1NVZElWSDFjYmlBZ0lDQWdJR0Z3Y0d4cFkyRjBhVzl1UFh0aGNIQjlYRzRnSUNBZ1BseHVJQ0FnSUNBZ1BHTmxiblJsY21KdmVDQmpjM05PWVcxbFBWd2lZMlZ1ZEdWeVltOTRYQ0krWEc0Z0lDQWdJQ0FnSUR4aWRYUjBiMjVjYmlBZ0lDQWdJQ0FnSUNCamJHRnpjejFjSW5OMFlYSjBZblYwZEc5dVhDSmNiaUFnSUNBZ0lDQWdJQ0FrZEhsd1pUMWNJbk4wWVhKMFhDSmNiaUFnSUNBZ0lDQWdJQ0J2YmtOc2FXTnJaV1E5ZXlncElEMCtJR1Y0WldOQmMzbHVZeWhjSW5kaGJHdGxjbHdpS1gxY2JpQWdJQ0FnSUNBZ0lDQm9aWGh3WVc1a1hHNGdJQ0FnSUNBZ0lDQWdhR0ZzYVdkdVBYdEhkR3N1UVd4cFoyNHVVMVJCVWxSOVhHNGdJQ0FnSUNBZ0lENWNiaUFnSUNBZ0lDQWdJQ0E4YVcxaFoyVWdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWFXeGxQWHRnSkh0QlUxTkZWRk5mVUVGVVNIMHZZWEpqYUY5aWJIVmxMbkJ1WjJCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0J3YVhobGJGTnBlbVU5ZXpJd2ZWeHVJQ0FnSUNBZ0lDQWdJQzgrWEc0Z0lDQWdJQ0FnSUR3dlluVjBkRzl1UGx4dUlDQWdJQ0FnSUNBOFltOTRJQ1IwZVhCbFBWd2lZMlZ1ZEdWeVhDSWdMejVjYmlBZ0lDQWdJQ0FnUEdKdmVDQWtkSGx3WlQxY0ltVnVaRndpSUdoaGJHbG5iajE3UjNSckxrRnNhV2R1TGtWT1JIMCtYRzRnSUNBZ0lDQWdJQ0FnUEZONWMxUnlZWGxDZFhSMGIyNGdMejVjYmlBZ0lDQWdJQ0FnSUNBOGJXVnVkV0oxZEhSdmJpQmNiaUFnSUNBZ0lDQWdJQ0FnSUdOc1lYTnpQVndpZFhScGJHbDBhV1Z6WENKY2JpQWdJQ0FnSUNBZ0lDQWdJR1JwY21WamRHbHZiajE3UjNSckxrRnljbTkzVkhsd1pTNU9UMDVGZlZ4dUlDQWdJQ0FnSUNBZ0lENWNiaUFnSUNBZ0lDQWdJQ0FnSUR4aWIzZ2diM0pwWlc1MFlYUnBiMjQ5ZTBkMGF5NVBjbWxsYm5SaGRHbHZiaTVJVDFKSldrOU9WRUZNZlNCemNHRmphVzVuUFhzMmZUNWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ1BFNWxkSGR2Y210SmJtUnBZMkYwYjNJZ0x6NWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ1BGWnZiSFZ0WlVsdVpHbGpZWFJ2Y2lBdlBseHVJQ0FnSUNBZ0lDQWdJQ0FnUEM5aWIzZytYRzRnSUNBZ0lDQWdJQ0FnSUNBOGNHOXdiM1psY2lCamJHRnpjejFjSW5ONWMzUnlZWGx0Wlc1MVhDSStYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lEeFZkR2xzYzFSeVlYa2dMejVjYmlBZ0lDQWdJQ0FnSUNBZ0lEd3ZjRzl3YjNabGNqNWNiaUFnSUNBZ0lDQWdJQ0E4TDIxbGJuVmlkWFIwYjI0K1hHNGdJQ0FnSUNBZ0lDQWdQRzFsYm5WaWRYUjBiMjRnWTJ4aGMzTTlYQ0prWVhSbGRHbHRaVndpUGx4dUlDQWdJQ0FnSUNBZ0lDQWdQR0p2ZUNCdmNtbGxiblJoZEdsdmJqMTdSM1JyTGs5eWFXVnVkR0YwYVc5dUxsWkZVbFJKUTBGTWZUNWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ1BHeGhZbVZzSUd4aFltVnNQWHQwYVcxbGZTQm9ZV3hwWjI0OWUwZDBheTVCYkdsbmJpNUZUa1I5THo1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnUEd4aFltVnNJR3hoWW1Wc1BYdGtZWFJsZlNCb1lXeHBaMjQ5ZTBkMGF5NUJiR2xuYmk1RlRrUjlMejVjYmlBZ0lDQWdJQ0FnSUNBZ0lEd3ZZbTk0UGx4dUlDQWdJQ0FnSUNBZ0lDQWdQSEJ2Y0c5MlpYSStYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lEeEhkR3N1UTJGc1pXNWtZWElnTHo1Y2JpQWdJQ0FnSUNBZ0lDQWdJRHd2Y0c5d2IzWmxjajVjYmlBZ0lDQWdJQ0FnSUNBOEwyMWxiblZpZFhSMGIyNCtYRzRnSUNBZ0lDQWdJQ0FnUEVocFpHVlhhVzVrYjNkelFuVjBkRzl1SUM4K1hHNGdJQ0FnSUNBZ0lEd3ZZbTk0UGx4dUlDQWdJQ0FnUEM5alpXNTBaWEppYjNnK1hHNGdJQ0FnUEM5M2FXNWtiM2MrWEc0Z0lDbGNibjFjYmlJc0lDSnBiWEJ2Y25RZ1FYTjBZV3hVY21GNUlHWnliMjBnSjJkcE9pOHZRWE4wWVd4VWNtRjVKenRjYm1sdGNHOXlkQ0I3SUVkMGF5QjlJR1p5YjIwZ0oyRm5jeTluZEdzMEp6dGNibHh1Wlhod2IzSjBJR2x1ZEdWeVptRmpaU0JUZVhOVWNtRjVVSEp2Y0hNZ2UxeHVJQ0JwWTI5dVUybDZaVDg2SUc1MWJXSmxjanNnTHk4Z1pHVm1ZWFZzZENBeE5seHVJQ0J6Y0dGamFXNW5Qem9nYm5WdFltVnlPeUFnTHk4Z1pHVm1ZWFZzZENBMFhHNTlYRzVjYm1WNGNHOXlkQ0JrWldaaGRXeDBJR1oxYm1OMGFXOXVJRk41YzFSeVlYa29leUJwWTI5dVUybDZaU0E5SURFMkxDQnpjR0ZqYVc1bklEMGdNVEFnZlRvZ1UzbHpWSEpoZVZCeWIzQnpLU0I3WEc0Z0lHTnZibk4wSUhSeVlYa2dQU0JCYzNSaGJGUnlZWGt1VkhKaGVTNW5aWFJmWkdWbVlYVnNkQ2dwWEc0Z0lDOHZJRU52Ym5SaGFXNWxjaUJtYjNJZ2RISmhlU0JwWTI5dWMxeHVJQ0JqYjI1emRDQjBjbUY1UW05NElEMGdibVYzSUVkMGF5NUNiM2dvZXlCdmNtbGxiblJoZEdsdmJqb2dSM1JyTGs5eWFXVnVkR0YwYVc5dUxraFBVa2xhVDA1VVFVd3NJSE53WVdOcGJtYzZJSE53WVdOcGJtY2dmU2xjYmlBZ1kyOXVjM1FnZEhKaGVVbGpiMjV6T2lCSGRHc3VTVzFoWjJWYlhTQTlJRnRkWEc1Y2JseHVJQ0JtZFc1amRHbHZiaUIxY0dSaGRHVlVjbUY1U1hSbGJYTW9LU0I3WEc0Z0lDOHZJRkpsYlc5MlpTQnZiR1FnZDJsa1oyVjBjeUJtY205dElIUnlZWGxDYjNoY2JpQWdabTl5SUNoamIyNXpkQ0JwWTI5dUlHOW1JSFJ5WVhsSlkyOXVjeWtnZTF4dUlDQWdJSFJ5WVhsQ2IzZ3VjbVZ0YjNabEtHbGpiMjRwWEc0Z0lIMWNiaUFnZEhKaGVVbGpiMjV6TG14bGJtZDBhQ0E5SURCY2JseHVJQ0F2THlCQlpHUWdibVYzSUhSeVlYa2dhWFJsYlhOY2JpQWdZMjl1YzNRZ2FYUmxiWE1nUFNCMGNtRjVMbWRsZEY5cGRHVnRjeWdwWEc0Z0lHWnZjaUFvWTI5dWMzUWdhWFJsYlNCdlppQnBkR1Z0Y3lrZ2UxeHVJQ0FnSUdOdmJuTjBJR2xqYjI0Z1BTQnBkR1Z0TG1kbGRGOW5hV052YmlncFhHNGdJQ0FnYVdZZ0tDRnBZMjl1S1NCamIyNTBhVzUxWlZ4dVhHNGdJQ0FnWTI5dWMzUWdhVzFoWjJVZ1BTQnVaWGNnUjNSckxrbHRZV2RsS0hzZ1oybGpiMjQ2SUdsamIyNHNJSEJwZUdWc1gzTnBlbVU2SUdsamIyNVRhWHBsSUgwcFhHNGdJQ0FnWTI5dWMzUWdaMlZ6ZEhWeVpTQTlJRzVsZHlCSGRHc3VSMlZ6ZEhWeVpVTnNhV05yS0hzZ1luVjBkRzl1T2lBeklIMHBYRzRnSUNBZ1oyVnpkSFZ5WlM1amIyNXVaV04wS0Z3aWNISmxjM05sWkZ3aUxDQW9LU0E5UGlCN1hHNGdJQ0FnSUNCamIyNXpkQ0J0Wlc1MVRXOWtaV3dnUFNCcGRHVnRMbWRsZEY5dFpXNTFYMjF2WkdWc0tDa2dMeThnY21WMGRYSnVjeUJIYVc4dVRXVnVkVTF2WkdWc0lId2diblZzYkZ4dUlDQWdJQ0FnYVdZZ0tHMWxiblZOYjJSbGJDa2dlMXh1SUNBZ0lDQWdJQ0JqYjI1emRDQndiM0J2ZG1WeVRXVnVkU0E5SUc1bGR5QkhkR3N1VUc5d2IzWmxjazFsYm5Vb2V5QnRaVzUxWDIxdlpHVnNPaUJ0Wlc1MVRXOWtaV3dzSUdoaGMxOWhjbkp2ZHpvZ1ptRnNjMlVnZlNsY2JpQWdJQ0FnSUNBZ2NHOXdiM1psY2sxbGJuVXVjMlYwWDNCaGNtVnVkQ2hwYldGblpTa2dJQzh2SUdGdVkyaHZjaUIwYnlCMGFHVWdkSEpoZVNCcFkyOXVYRzRnSUNBZ0lDQWdJSEJ2Y0c5MlpYSk5aVzUxTG1sdWMyVnlkRjloWTNScGIyNWZaM0p2ZFhBb0oyUmlkWE50Wlc1MUp5d2dhWFJsYlM1blpYUmZZV04wYVc5dVgyZHliM1Z3S0NrcFhHNGdJQ0FnSUNBZ0lIQnZjRzkyWlhKTlpXNTFMbkJ2Y0hWd0tDbGNiaUFnSUNBZ0lIMWNiaUFnSUNCOUtWeHVJQ0FnSUdsdFlXZGxMbUZrWkY5amIyNTBjbTlzYkdWeUtHZGxjM1IxY21VcFhHNWNiaUFnSUNCMGNtRjVRbTk0TG1Gd2NHVnVaQ2hwYldGblpTbGNiaUFnSUNCMGNtRjVTV052Ym5NdWNIVnphQ2hwYldGblpTbGNiaUFnZlZ4dWZWeHVYRzVjYmlBZ0x5OGdTVzVwZEdsaGJDQnlaVzVrWlhKY2JpQWdkWEJrWVhSbFZISmhlVWwwWlcxektDbGNibHh1SUNBdkx5Qk1hWE4wWlc0Z1ptOXlJRzVsZHlCcGRHVnRjeUJoWkdSbFpDOXlaVzF2ZG1Wa0lHUjVibUZ0YVdOaGJHeDVYRzRnSUhSeVlYa3VZMjl1Ym1WamRDaGNJbWwwWlcwdFlXUmtaV1JjSWl3Z2RYQmtZWFJsVkhKaGVVbDBaVzF6S1Z4dUlDQjBjbUY1TG1OdmJtNWxZM1FvWENKcGRHVnRMWEpsYlc5MlpXUmNJaXdnZFhCa1lYUmxWSEpoZVVsMFpXMXpLVnh1WEc0Z0lISmxkSFZ5YmlCMGNtRjVRbTk0WEc1OVhHNGlMQ0FpYVcxd2IzSjBJRWQwYXlCbWNtOXRJRndpWjJrNkx5OUhkR3MvZG1WeWMybHZiajAwTGpCY0lseHVhVzF3YjNKMElFRnpkR0ZzSUdaeWIyMGdYQ0puYVRvdkwwRnpkR0ZzUDNabGNuTnBiMjQ5TkM0d1hDSmNibWx0Y0c5eWRDQjdJRU5EVUhKdmNITWdmU0JtY205dElGd2laMjVwYlZ3aVhHNXBiWEJ2Y25RZ2V5QnBiblJ5YVc1emFXTkZiR1Z0Wlc1MGN5QjlJR1p5YjIwZ1hDSm5ibWx0TDJkMGF6UXZhbk40TFhKMWJuUnBiV1ZjSWx4dVhHNTBlWEJsSUZCeWIzQnpQRlFnWlhoMFpXNWtjeUJIZEdzdVYybGtaMlYwTENCUWNtOXdjejRnUFNCRFExQnliM0J6UEZRc0lGQmhjblJwWVd3OFVISnZjSE0rUGx4dVhHNVBZbXBsWTNRdVlYTnphV2R1S0dsdWRISnBibk5wWTBWc1pXMWxiblJ6TENCN1hHNGdJQ0FnWW05NE9pQkhkR3N1UW05NExGeHVJQ0FnSUdKMWRIUnZiam9nUjNSckxrSjFkSFJ2Yml4Y2JpQWdJQ0JqWlc1MFpYSmliM2c2SUVkMGF5NURaVzUwWlhKQ2IzZ3NYRzRnSUNBZ0x5OGdZMmx5WTNWc1lYSndjbTluY21WemN6b2dRWE4wWVd3dVEybHlZM1ZzWVhKUWNtOW5jbVZ6Y3l4Y2JpQWdJQ0JrY21GM2FXNW5ZWEpsWVRvZ1IzUnJMa1J5WVhkcGJtZEJjbVZoTEZ4dUlDQWdJR1Z1ZEhKNU9pQkhkR3N1Ulc1MGNua3NYRzRnSUNBZ2FXMWhaMlU2SUVkMGF5NUpiV0ZuWlN4Y2JpQWdJQ0JzWVdKbGJEb2dSM1JyTGt4aFltVnNMRnh1SUNBZ0lHeGxkbVZzWW1GeU9pQkhkR3N1VEdWMlpXeENZWElzWEc0Z0lDQWdiV1Z1ZFdKMWRIUnZiam9nUjNSckxrMWxiblZDZFhSMGIyNHNYRzRnSUNBZ2IzWmxjbXhoZVRvZ1IzUnJMazkyWlhKc1lYa3NYRzRnSUNBZ2NHOXdiM1psY2pvZ1IzUnJMbEJ2Y0c5MlpYSXNYRzRnSUNBZ2NtVjJaV0ZzWlhJNklFZDBheTVTWlhabFlXeGxjaXhjYmlBZ0lDQnpZM0p2Ykd4bFpIZHBibVJ2ZHpvZ1IzUnJMbE5qY205c2JHVmtWMmx1Wkc5M0xGeHVJQ0FnSUhOc2FXUmxjam9nUVhOMFlXd3VVMnhwWkdWeUxGeHVJQ0FnSUhOMFlXTnJPaUJIZEdzdVUzUmhZMnNzWEc0Z0lDQWdjM2RwZEdOb09pQkhkR3N1VTNkcGRHTm9MRnh1SUNBZ0lIUnZaMmRzWldKMWRIUnZiam9nUjNSckxsUnZaMmRzWlVKMWRIUnZiaXhjYmlBZ0lDQjNhVzVrYjNjNklFRnpkR0ZzTGxkcGJtUnZkeXhjYm4wcFhHNWNibVJsWTJ4aGNtVWdaMnh2WW1Gc0lIdGNiaUFnSUNCdVlXMWxjM0JoWTJVZ1NsTllJSHRjYmlBZ0lDQWdJQ0FnYVc1MFpYSm1ZV05sSUVsdWRISnBibk5wWTBWc1pXMWxiblJ6SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0p2ZURvZ1VISnZjSE04UjNSckxrSnZlQ3dnUjNSckxrSnZlQzVEYjI1emRISjFZM1J2Y2xCeWIzQnpQbHh1SUNBZ0lDQWdJQ0FnSUNBZ1luVjBkRzl1T2lCUWNtOXdjenhIZEdzdVFuVjBkRzl1TENCSGRHc3VRblYwZEc5dUxrTnZibk4wY25WamRHOXlVSEp2Y0hNK1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqWlc1MFpYSmliM2c2SUZCeWIzQnpQRWQwYXk1RFpXNTBaWEpDYjNnc0lFZDBheTVEWlc1MFpYSkNiM2d1UTI5dWMzUnlkV04wYjNKUWNtOXdjejVjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZJR05wY21OMWJHRnljSEp2WjNKbGMzTTZJRkJ5YjNCelBFRnpkR0ZzTGtOcGNtTjFiR0Z5VUhKdlozSmxjM01zSUVGemRHRnNMa05wY21OMWJHRnlVSEp2WjNKbGMzTXVRMjl1YzNSeWRXTjBiM0pRY205d2N6NWNiaUFnSUNBZ0lDQWdJQ0FnSUdSeVlYZHBibWRoY21WaE9pQlFjbTl3Y3p4SGRHc3VSSEpoZDJsdVowRnlaV0VzSUVkMGF5NUVjbUYzYVc1blFYSmxZUzVEYjI1emRISjFZM1J2Y2xCeWIzQnpQbHh1SUNBZ0lDQWdJQ0FnSUNBZ1pXNTBjbms2SUZCeWIzQnpQRWQwYXk1RmJuUnllU3dnUjNSckxrVnVkSEo1TGtOdmJuTjBjblZqZEc5eVVISnZjSE0rWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBiV0ZuWlRvZ1VISnZjSE04UjNSckxrbHRZV2RsTENCSGRHc3VTVzFoWjJVdVEyOXVjM1J5ZFdOMGIzSlFjbTl3Y3o1Y2JpQWdJQ0FnSUNBZ0lDQWdJR3hoWW1Wc09pQlFjbTl3Y3p4SGRHc3VUR0ZpWld3c0lFZDBheTVNWVdKbGJDNURiMjV6ZEhKMVkzUnZjbEJ5YjNCelBseHVJQ0FnSUNBZ0lDQWdJQ0FnYkdWMlpXeGlZWEk2SUZCeWIzQnpQRWQwYXk1TVpYWmxiRUpoY2l3Z1IzUnJMa3hsZG1Wc1FtRnlMa052Ym5OMGNuVmpkRzl5VUhKdmNITStYRzRnSUNBZ0lDQWdJQ0FnSUNCdFpXNTFZblYwZEc5dU9pQlFjbTl3Y3p4SGRHc3VUV1Z1ZFVKMWRIUnZiaXdnUjNSckxrMWxiblZDZFhSMGIyNHVRMjl1YzNSeWRXTjBiM0pRY205d2N6NWNiaUFnSUNBZ0lDQWdJQ0FnSUc5MlpYSnNZWGs2SUZCeWIzQnpQRWQwYXk1UGRtVnliR0Y1TENCSGRHc3VUM1psY214aGVTNURiMjV6ZEhKMVkzUnZjbEJ5YjNCelBseHVJQ0FnSUNBZ0lDQWdJQ0FnY0c5d2IzWmxjam9nVUhKdmNITThSM1JyTGxCdmNHOTJaWElzSUVkMGF5NVFiM0J2ZG1WeUxrTnZibk4wY25WamRHOXlVSEp2Y0hNK1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhabFlXeGxjam9nVUhKdmNITThSM1JyTGxKbGRtVmhiR1Z5TENCSGRHc3VVbVYyWldGc1pYSXVRMjl1YzNSeWRXTjBiM0pRY205d2N6NWNiaUFnSUNBZ0lDQWdJQ0FnSUhOamNtOXNiR1ZrZDJsdVpHOTNPaUJRY205d2N6eEhkR3N1VTJOeWIyeHNaV1JYYVc1a2IzY3NJRWQwYXk1VFkzSnZiR3hsWkZkcGJtUnZkeTVEYjI1emRISjFZM1J2Y2xCeWIzQnpQbHh1SUNBZ0lDQWdJQ0FnSUNBZ2MyeHBaR1Z5T2lCUWNtOXdjenhCYzNSaGJDNVRiR2xrWlhJc0lFRnpkR0ZzTGxOc2FXUmxjaTVEYjI1emRISjFZM1J2Y2xCeWIzQnpQbHh1SUNBZ0lDQWdJQ0FnSUNBZ2MzUmhZMnM2SUZCeWIzQnpQRWQwYXk1VGRHRmpheXdnUjNSckxsTjBZV05yTGtOdmJuTjBjblZqZEc5eVVISnZjSE0rWEc0Z0lDQWdJQ0FnSUNBZ0lDQnpkMmwwWTJnNklGQnliM0J6UEVkMGF5NVRkMmwwWTJnc0lFZDBheTVUZDJsMFkyZ3VRMjl1YzNSeWRXTjBiM0pRY205d2N6NWNiaUFnSUNBZ0lDQWdJQ0FnSUhSdloyZHNaV0oxZEhSdmJqb2dVSEp2Y0hNOFIzUnJMbFJ2WjJkc1pVSjFkSFJ2Yml3Z1IzUnJMbFJ2WjJkc1pVSjFkSFJ2Ymk1RGIyNXpkSEoxWTNSdmNsQnliM0J6UGx4dUlDQWdJQ0FnSUNBZ0lDQWdkMmx1Wkc5M09pQlFjbTl3Y3p4QmMzUmhiQzVYYVc1a2IzY3NJRUZ6ZEdGc0xsZHBibVJ2ZHk1RGIyNXpkSEoxWTNSdmNsQnliM0J6UGx4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dWZWeHVYRzVsZUhCdmNuUWdLaUJtY205dElGd2laMjVwYlM5bmRHczBMMnB6ZUMxeWRXNTBhVzFsWENKY2JpSXNJQ0pwYlhCdmNuUWdSM1JySUdaeWIyMGdYQ0puYVRvdkwwZDBhejkyWlhKemFXOXVQVFF1TUZ3aVhHNXBiWEJ2Y25RZ1IybHZJR1p5YjIwZ1hDSm5hVG92TDBkcGJ6OTJaWEp6YVc5dVBUSXVNRndpWEc1cGJYQnZjblFnZXlCamIyNW1hV2QxWlNCOUlHWnliMjBnWENJdUxpOXFjM2d2Wlc1MkxtcHpYQ0pjYm1sdGNHOXlkQ0I3SUdkbGRGUjVjR1VzSUc5dVEyeGxZVzUxY0N3Z1FXTmpaWE56YjNJc0lFWnlZV2R0Wlc1MElIMGdabkp2YlNCY0lpNHVMMmx1WkdWNExtcHpYQ0pjYmx4dWFXMXdiM0owSUhSNWNHVWdRV1IzSUdaeWIyMGdYQ0puYVRvdkwwRmtkMXdpWEc1amIyNXpkQ0JoWkhjZ1BTQmhkMkZwZENCcGJYQnZjblFvWENKbmFUb3ZMMEZrZDF3aUtTNTBhR1Z1S0NodEtTQTlQaUJ0TG1SbFptRjFiSFFwTG1OaGRHTm9LQ2dwSUQwK0lHNTFiR3dwWEc1Y2JtTnZibk4wSUdSMWJXMTVRblZwYkdSbGNpQTlJRzVsZHlCSGRHc3VRblZwYkdSbGNpZ3BYRzVjYm1OdmJuTjBJSHNnYVc1MGNtbHVjMmxqUld4bGJXVnVkSE1nZlNBOUlHTnZibVpwWjNWbEtIdGNiaUFnSUNCcGJtbDBVSEp2Y0hNb1kzUnZjaWtnZTF4dUlDQWdJQ0FnSUNCcFppQW9ZM1J2Y2lBOVBUMGdSM1JyTGxOMFlXTnJLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCclpYbHpPaUJCY25KaGVUeEZlSFJ5WVdOMFBHdGxlVzltSUVkMGF5NVRkR0ZqYXl3Z2MzUnlhVzVuUGo0Z1BTQmJYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYQ0oyYVhOcFlteGxRMmhwYkdST1lXMWxYQ0lzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWENKMmFYTnBZbXhsWDJOb2FXeGtYMjVoYldWY0lpeGNiaUFnSUNBZ0lDQWdJQ0FnSUYxY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnJaWGx6WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2FXWWdLR0ZrZHlBbUppQmpkRzl5SUQwOVBTQmhaSGN1Vkc5bloyeGxSM0p2ZFhBcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR3RsZVhNNklFRnljbUY1UEVWNGRISmhZM1E4YTJWNWIyWWdRV1IzTGxSdloyZHNaVWR5YjNWd0xDQnpkSEpwYm1jK1BpQTlJRnRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JjSW1GamRHbDJaVndpTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aVlXTjBhWFpsVG1GdFpWd2lMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpWVdOMGFYWmxYMjVoYldWY0lpeGNiaUFnSUNBZ0lDQWdJQ0FnSUYxY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnJaWGx6WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0I5TEZ4dUlDQWdJSE5sZEVOemN5aHZZbXBsWTNRc0lHTnpjeWtnZTF4dUlDQWdJQ0FnSUNCcFppQW9JU2h2WW1wbFkzUWdhVzV6ZEdGdVkyVnZaaUJIZEdzdVYybGtaMlYwS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmloRmNuSnZjaWhnWTJGdWJtOTBJSE5sZENCamMzTWdiMjRnSkh0dlltcGxZM1I5WUNrcFhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JqYjI1emRDQmpkSGdnUFNCdlltcGxZM1F1WjJWMFgzTjBlV3hsWDJOdmJuUmxlSFFvS1Z4dUlDQWdJQ0FnSUNCc1pYUWdjSEp2ZG1sa1pYSTZJRWQwYXk1RGMzTlFjbTkyYVdSbGNseHVYRzRnSUNBZ0lDQWdJR052Ym5OMElITmxkSFJsY2lBOUlDaGpjM002SUhOMGNtbHVaeWtnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRmpjM011YVc1amJIVmtaWE1vWENKN1hDSXBJSHg4SUNGamMzTXVhVzVqYkhWa1pYTW9YQ0o5WENJcEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZM056SUQwZ1lDb2dleUFrZTJOemMzMGdmV0JjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSEJ5YjNacFpHVnlLU0JqZEhndWNtVnRiM1psWDNCeWIzWnBaR1Z5S0hCeWIzWnBaR1Z5S1Z4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0J3Y205MmFXUmxjaUE5SUc1bGR5QkhkR3N1UTNOelVISnZkbWxrWlhJb0tWeHVJQ0FnSUNBZ0lDQWdJQ0FnY0hKdmRtbGtaWEl1Ykc5aFpGOW1jbTl0WDNOMGNtbHVaeWhqYzNNcFhHNGdJQ0FnSUNBZ0lDQWdJQ0JqZEhndVlXUmtYM0J5YjNacFpHVnlLSEJ5YjNacFpHVnlMQ0JIZEdzdVUxUlpURVZmVUZKUFZrbEVSVkpmVUZKSlQxSkpWRmxmVlZORlVpbGNiaUFnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUdsbUlDaGpjM01nYVc1emRHRnVZMlZ2WmlCQlkyTmxjM052Y2lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYzJWMGRHVnlLR056Y3k1blpYUW9LU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdScGMzQnZjMlVnUFNCamMzTXVjM1ZpYzJOeWFXSmxLQ2dwSUQwK0lITmxkSFJsY2loamMzTXVaMlYwS0NrcEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnYjI1RGJHVmhiblZ3S0dScGMzQnZjMlVwWEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnpaWFIwWlhJb1kzTnpLVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdmU3hjYmx4dUlDQWdJSE5sZEVOc1lYTnpLRzlpYW1WamRDd2dZMnhoYzNOT1lXMWxLU0I3WEc0Z0lDQWdJQ0FnSUdsbUlDZ2hLRzlpYW1WamRDQnBibk4wWVc1alpXOW1JRWQwYXk1WGFXUm5aWFFwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0VWeWNtOXlLR0JqWVc1dWIzUWdjMlYwSUdOc1lYTnpUbUZ0WlNCdmJpQWtlMjlpYW1WamRIMWdLU2xjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lHbG1JQ2hqYkdGemMwNWhiV1VnYVc1emRHRnVZMlZ2WmlCQlkyTmxjM052Y2lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYjJKcVpXTjBMbU56YzBOc1lYTnpaWE1nUFNCamJHRnpjMDVoYldVdVoyVjBLQ2t1YzNCc2FYUW9MMXhjY3lzdktWeHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdaR2x6Y0c5elpTQTlJR05zWVhOelRtRnRaUzV6ZFdKelkzSnBZbVVvWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnS0NrZ1BUNGdLRzlpYW1WamRDNWpjM05EYkdGemMyVnpJRDBnWTJ4aGMzTk9ZVzFsTG1kbGRDZ3BMbk53YkdsMEtDOWNYSE1yTHlrcExGeHVJQ0FnSUNBZ0lDQWdJQ0FnS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdiMjVEYkdWaGJuVndLR1JwYzNCdmMyVXBYRzRnSUNBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCdlltcGxZM1F1YzJWMFgyTnpjMTlqYkdGemMyVnpLR05zWVhOelRtRnRaUzV6Y0d4cGRDZ3ZYRnh6S3k4cEtWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZTeGNibHh1SUNBZ0lIUmxlSFJPYjJSbEtIUmxlSFFwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUVkMGF5NU1ZV0psYkM1dVpYY29kR1Y0ZEM1MGIxTjBjbWx1WnlncEtWeHVJQ0FnSUgwc1hHNWNiaUFnSUNBdkx5QmdjMlYwWDJOb2FXeGtZQ0JoYm1RZ1pYTndaV05wWVd4c2VTQmdjbVZ0YjNabFlDQnRhV2RvZENCaVpTQjNZWGtnZEc5dklHZGxibVZ5YVdNZ1lXNWtJSFJvWlhKbElHMXBaMmgwWEc0Z0lDQWdMeThnWW1VZ1kyRnpaWE1nZDJobGNtVWdhWFFnWkc5bGN5QnViM1FnWVdOMGRXRnNiSGtnWkc4Z2QyaGhkQ0IzWlNCM1lXNTBJR2wwSUhSdklHUnZYRzRnSUNBZ0x5OWNiaUFnSUNBdkx5QnBaaUIwYUdWeVpTQnBjeUJoSUhWelpXTmhjMlVnWm05eUlHVnBkR2hsY2lCdlppQjBhR1Z6WlNCMGQyOGdkR2hoZENCa2IyVnpJSE52YldWMGFHbHVaeUJsYkhObElIUm9ZVzVjYmlBZ0lDQXZMeUIzWlNCbGVIQmxZM1FnYVhRZ2RHOGdaRzhnYUdWeVpTQnBiaUJoSUVwVFdDQmpiMjUwWlhoMElIZGxJR2hoZG1VZ2RHOGdZMmhsWTJzZ1ptOXlJR3R1YjNkdUlHbHVjM1JoYm1ObGMxeHVJQ0FnSUhKbGJXOTJaVU5vYVd4a0tIQmhjbVZ1ZEN3Z1kyaHBiR1FwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLSEJoY21WdWRDQnBibk4wWVc1alpXOW1JRWQwYXk1WGFXUm5aWFFnSmlZZ1kyaHBiR1FnYVc1emRHRnVZMlZ2WmlCSGRHc3VSWFpsYm5SRGIyNTBjbTlzYkdWeUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnY0dGeVpXNTBMbkpsYlc5MlpWOWpiMjUwY205c2JHVnlLR05vYVd4a0tWeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tGd2ljMlYwWDJOb2FXeGtYQ0lnYVc0Z2NHRnlaVzUwSUNZbUlIUjVjR1Z2WmlCd1lYSmxiblF1YzJWMFgyTm9hV3hrSUQwOUlGd2lablZ1WTNScGIyNWNJaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIQmhjbVZ1ZEM1elpYUmZZMmhwYkdRb2JuVnNiQ2xjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lHbG1JQ2hjSW5KbGJXOTJaVndpSUdsdUlIQmhjbVZ1ZENBbUppQjBlWEJsYjJZZ2NHRnlaVzUwTG5KbGJXOTJaU0E5UFNCY0ltWjFibU4wYVc5dVhDSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCd1lYSmxiblF1Y21WdGIzWmxLR05vYVd4a0tWeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnZEdoeWIzY2dSWEp5YjNJb1lHTmhibTV2ZENCeVpXMXZkbVVnSkh0amFHbHNaSDBnWm5KdmJTQWtlM0JoY21WdWRIMWdLVnh1SUNBZ0lIMHNYRzRnSUNBZ1lYQndaVzVrUTJocGJHUW9jR0Z5Wlc1MExDQmphR2xzWkNrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvWEc0Z0lDQWdJQ0FnSUNBZ0lDQmphR2xzWkNCcGJuTjBZVzVqWlc5bUlFZDBheTVCWkdwMWMzUnRaVzUwSUNZbVhHNGdJQ0FnSUNBZ0lDQWdJQ0JjSW5ObGRGOWhaR3AxYzNSdFpXNTBYQ0lnYVc0Z2NHRnlaVzUwSUNZbVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbGIyWWdjR0Z5Wlc1MExuTmxkRjloWkdwMWMzUnRaVzUwSUQwOVBTQmNJbVoxYm1OMGFXOXVYQ0pjYmlBZ0lDQWdJQ0FnS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjR0Z5Wlc1MExuTmxkRjloWkdwMWMzUnRaVzUwS0dOb2FXeGtLVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLRnh1SUNBZ0lDQWdJQ0FnSUNBZ1kyaHBiR1FnYVc1emRHRnVZMlZ2WmlCSGRHc3VWMmxrWjJWMElDWW1YRzRnSUNBZ0lDQWdJQ0FnSUNCd1lYSmxiblFnYVc1emRHRnVZMlZ2WmlCSGRHc3VVM1JoWTJzZ0ppWmNiaUFnSUNBZ0lDQWdJQ0FnSUdOb2FXeGtMbTVoYldVZ0lUMDlJRndpWENJZ0ppWmNiaUFnSUNBZ0lDQWdJQ0FnSUdOb2FXeGtMbTVoYldVZ0lUMDlJRzUxYkd3Z0ppWmNiaUFnSUNBZ0lDQWdJQ0FnSUdkbGRGUjVjR1VvWTJocGJHUXBJRDA5UFNCY0ltNWhiV1ZrWENKY2JpQWdJQ0FnSUNBZ0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnY0dGeVpXNTBMbUZrWkY5dVlXMWxaQ2hqYUdsc1pDd2dZMmhwYkdRdWJtRnRaU2xjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lHbG1JQ2hqYUdsc1pDQnBibk4wWVc1alpXOW1JRWQwYXk1UWIzQnZkbVZ5SUNZbUlIQmhjbVZ1ZENCcGJuTjBZVzVqWlc5bUlFZDBheTVOWlc1MVFuVjBkRzl1S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjR0Z5Wlc1MExuTmxkRjl3YjNCdmRtVnlLR05vYVd4a0tWeHVJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tGeHVJQ0FnSUNBZ0lDQWdJQ0FnWTJocGJHUWdhVzV6ZEdGdVkyVnZaaUJIYVc4dVRXVnVkVTF2WkdWc0lDWW1YRzRnSUNBZ0lDQWdJQ0FnSUNBb2NHRnlaVzUwSUdsdWMzUmhibU5sYjJZZ1IzUnJMazFsYm5WQ2RYUjBiMjRnZkh3Z2NHRnlaVzUwSUdsdWMzUmhibU5sYjJZZ1IzUnJMbEJ2Y0c5MlpYSk5aVzUxS1Z4dUlDQWdJQ0FnSUNBcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ3WVhKbGJuUXVjMlYwWDIxbGJuVmZiVzlrWld3b1kyaHBiR1FwWEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQnBaaUFvWTJocGJHUWdhVzV6ZEdGdVkyVnZaaUJIYVc4dVRXVnVkVWwwWlcwZ0ppWWdjR0Z5Wlc1MElHbHVjM1JoYm1ObGIyWWdSMmx2TGsxbGJuVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZJRlJQUkU4NlhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JwWmlBb1kyaHBiR1FnYVc1emRHRnVZMlZ2WmlCSGRHc3VWMmx1Wkc5M0lDWW1JSEJoY21WdWRDQnBibk4wWVc1alpXOW1JRWQwYXk1QmNIQnNhV05oZEdsdmJpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhCaGNtVnVkQzVoWkdSZmQybHVaRzkzS0dOb2FXeGtLVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLR05vYVd4a0lHbHVjM1JoYm1ObGIyWWdSM1JyTGxSbGVIUkNkV1ptWlhJZ0ppWWdjR0Z5Wlc1MElHbHVjM1JoYm1ObGIyWWdSM1JyTGxSbGVIUldhV1YzS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjR0Z5Wlc1MExuTmxkRjlpZFdabVpYSW9ZMmhwYkdRcFhHNGdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0JwWmlBb2NHRnlaVzUwSUdsdWMzUmhibU5sYjJZZ1IzUnJMa0oxYVd4a1lXSnNaU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIQmhjbVZ1ZEM1MlpuVnVZMTloWkdSZlkyaHBiR1FvWkhWdGJYbENkV2xzWkdWeUxDQmphR2xzWkN3Z1oyVjBWSGx3WlNoamFHbHNaQ2twWEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQjBhSEp2ZHlCRmNuSnZjaWhnWTJGdWJtOTBJR0ZrWkNBa2UyTm9hV3hrZlNCMGJ5QWtlM0JoY21WdWRIMWdLVnh1SUNBZ0lIMHNYRzU5S1Z4dVhHNWxlSEJ2Y25RZ2V5QkdjbUZuYldWdWRDd2dhVzUwY21sdWMybGpSV3hsYldWdWRITWdmVnh1Wlhod2IzSjBJSHNnYW5ONExDQnFjM2h6SUgwZ1puSnZiU0JjSWk0dUwycHplQzlxYzNndWFuTmNJbHh1SWl3Z0ltbHRjRzl5ZENCN0lFZDBheUI5SUdaeWIyMGdYQ0poWjNNdlozUnJORndpWEc1cGJYQnZjblFnVTNsemRISmhlU0JtY205dElGd2lMaTlUZVhOVWNtRjVYQ0pjYmx4dVpYaHdiM0owSUdSbFptRjFiSFFnWm5WdVkzUnBiMjRnVTNselZISmhlVUoxZEhSdmJpZ3BJSHRjYmlBZ1kyOXVjM1FnY0c5d2IzWmxjaUE5SUNoY2JpQWdJQ0E4Y0c5d2IzWmxjaUJqYkdGemN6MWNJbk41YzNSeVlYbHRaVzUxWENJK1hHNGdJQ0FnSUNBOFUzbHpkSEpoZVNBdlBseHVJQ0FnSUR3dmNHOXdiM1psY2o1Y2JpQWdLU0JoY3lCSGRHc3VVRzl3YjNabGNqdGNibHh1SUNCamIyNXpkQ0JpZFhSMGIyNGdQU0FvWEc0Z0lDQWdQRzFsYm5WaWRYUjBiMjVjYmlBZ0lDQWdJR05zWVhOelBWd2ljM2x6ZEhKaGVXSjFkSFJ2Ymx3aVhHNGdJQ0FnSUNCa2FYSmxZM1JwYjI0OWUwZDBheTVCY25KdmQxUjVjR1V1VlZCOVhHNGdJQ0FnUGx4dUlDQWdJQ0FnZTNCdmNHOTJaWEo5WEc0Z0lDQWdQQzl0Wlc1MVluVjBkRzl1UGx4dUlDQXBJR0Z6SUVkMGF5NU5aVzUxUW5WMGRHOXVPMXh1WEc0Z0lDOHZJRmRvWlc0Z2NHOXdiM1psY2lCMmFYTnBZbWxzYVhSNUlHTm9ZVzVuWlhNc0lIUnZaMmRzWlNCaGNuSnZkeUJrYVhKbFkzUnBiMjVjYmlBZ2NHOXdiM1psY2k1amIyNXVaV04wS0Z3aWMyaHZkMXdpTENBb0tTQTlQaUI3WEc0Z0lDQWdZblYwZEc5dUxtUnBjbVZqZEdsdmJpQTlJRWQwYXk1QmNuSnZkMVI1Y0dVdVJFOVhUanRjYmlBZ2ZTazdYRzVjYmlBZ2NHOXdiM1psY2k1amIyNXVaV04wS0Z3aWFHbGtaVndpTENBb0tTQTlQaUI3WEc0Z0lDQWdZblYwZEc5dUxtUnBjbVZqZEdsdmJpQTlJRWQwYXk1QmNuSnZkMVI1Y0dVdVZWQTdYRzRnSUgwcE8xeHVYRzRnSUhKbGRIVnliaUJpZFhSMGIyNDdYRzU5WEc0aUxDQWlhVzF3YjNKMElIc2dSM1JySUgwZ1puSnZiU0JjSW1GbmN5OW5kR3MwWENKY2JtbHRjRzl5ZENCWGNDQm1jbTl0SUZ3aVoyazZMeTlCYzNSaGJGZHdYQ0pjYmx4dVpYaHdiM0owSUdSbFptRjFiSFFnWm5WdVkzUnBiMjRnVm05c2RXMWxTVzVrYVdOaGRHOXlLQ2tnZTF4dUlDQmpiMjV6ZENCaGRXUnBieUE5SUZkd0xtZGxkRjlrWldaaGRXeDBLQ2xjYmlBZ1kyOXVjM1FnYkdGaVpXd2dQU0J1WlhjZ1IzUnJMa3hoWW1Wc0tIdGNiaUFnSUNCb1lXeHBaMjQ2SUVkMGF5NUJiR2xuYmk1RlRrUXNYRzRnSUgwcFhHNWNiaUFnWTI5dWMzUWdkWEJrWVhSbFNXTnZiaUE5SUNncElEMCtJSHRjYmlBZ0lDQmpiMjV6ZENCemNHVmhhMlZ5SUQwZ1lYVmthVzh1WjJWMFgyUmxabUYxYkhSZmMzQmxZV3RsY2lncFhHNGdJQ0FnYVdZZ0tDRnpjR1ZoYTJWeUtTQnlaWFIxY201Y2JseHVJQ0FnSUdsbUlDaHpjR1ZoYTJWeUxtMTFkR1VwSUh0Y2JpQWdJQ0FnSUd4aFltVnNMbXhoWW1Wc0lEMGdYQ0pjZFVWRlJUaGNJbHh1SUNBZ0lIMGdaV3h6WlNCcFppQW9jM0JsWVd0bGNpNTJiMngxYldVZ1BEMGdNQzR6TXlrZ2UxeHVJQ0FnSUNBZ2JHRmlaV3d1YkdGaVpXd2dQU0JjSWx4MVJqQXlObHdpWEc0Z0lDQWdmU0JsYkhObElHbG1JQ2h6Y0dWaGEyVnlMblp2YkhWdFpTQThQU0F3TGpZMktTQjdYRzRnSUNBZ0lDQnNZV0psYkM1c1lXSmxiQ0E5SUZ3aVhIVkdNREkzWENKY2JpQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdiR0ZpWld3dWJHRmlaV3dnUFNCY0lseDFSakF5T0Z3aVhHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ0x5OGdTVzVwZEdsaGJDQnpaWFJjYmlBZ2RYQmtZWFJsU1dOdmJpZ3BYRzVjYmlBZ0x5OGdVbVZoWTNRZ2RHOGdZMmhoYm1kbGMxeHVJQ0JoZFdScGJ5NW5aWFJmWkdWbVlYVnNkRjl6Y0dWaGEyVnlLQ2t1WTI5dWJtVmpkQ2hjSW01dmRHbG1lVG82ZG05c2RXMWxYQ0lzSUhWd1pHRjBaVWxqYjI0cFhHNGdJR0YxWkdsdkxtZGxkRjlrWldaaGRXeDBYM053WldGclpYSW9LUzVqYjI1dVpXTjBLRndpYm05MGFXWjVPanB0ZFhSbFhDSXNJSFZ3WkdGMFpVbGpiMjRwWEc1Y2JpQWdjbVYwZFhKdUlHeGhZbVZzWEc1OVhHNGlMQ0FpYVcxd2IzSjBJSHNnUjNScklIMGdabkp2YlNCY0ltRm5jeTluZEdzMFhDSmNibWx0Y0c5eWRDQkllWEJ5YkdGdVpDQm1jbTl0SUZ3aVoyazZMeTlCYzNSaGJFaDVjSEpzWVc1a1hDSmNibHh1Wlhod2IzSjBJR1JsWm1GMWJIUWdablZ1WTNScGIyNGdTR2xrWlZkcGJtUnZkM05DZFhSMGIyNG9LU0I3WEc0Z0lHTnZibk4wSUdoNWNISWdQU0JJZVhCeWJHRnVaQzVuWlhSZlpHVm1ZWFZzZENncFhHNGdJR3hsZENCaGNtVklhV1JrWlc0Z1BTQm1ZV3h6WlZ4dUlDQmpiMjV6ZENCM2FXNWtiM2RYYjNKcmMzQmhZMlZOWVhBNklGSmxZMjl5WkR4emRISnBibWNzSUc1MWJXSmxjajRnUFNCN2ZWeHVYRzRnSUdOdmJuTjBJR2xqYjI0Z1BTQnVaWGNnUjNSckxreGhZbVZzS0h0Y2JpQWdJQ0JzWVdKbGJEb2dYQ0pjZFVZd05rVmNJaXdnTHk4Z2IzQmxiaUJsZVdWY2JpQWdmU2xjYmx4dUlDQmpiMjV6ZENCaWRYUjBiMjRnUFNCdVpYY2dSM1JyTGtKMWRIUnZiaWg3WEc0Z0lDQWdhR0ZzYVdkdU9pQkhkR3N1UVd4cFoyNHVSVTVFTEZ4dUlDQWdJR05vYVd4a09pQnBZMjl1TEZ4dUlDQjlLVnh1WEc0Z0lHSjFkSFJ2Ymk1aFpHUmZZM056WDJOc1lYTnpLRndpYUdsa1pYZHBibVJ2ZDNOaWRYUjBiMjVjSWlsY2JseHVJQ0JpZFhSMGIyNHVZMjl1Ym1WamRDaGNJbU5zYVdOclpXUmNJaXdnS0NrZ1BUNGdlMXh1SUNBZ0lHeGxkQ0JqYkdsbGJuUnpJRDBnYUhsd2NpNW5aWFJmWTJ4cFpXNTBjeWdwTzF4dUlDQWdJR1p2Y2lBb1kyOXVjM1FnWTJ4cFpXNTBJRzltSUdOc2FXVnVkSE1wZTF4dUlDQWdJQ0FnSUNCcFppaGhjbVZJYVdSa1pXNHBlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnZDNNZ1BTQjNhVzVrYjNkWGIzSnJjM0JoWTJWTllYQmJZMnhwWlc1MExtRmtaSEpsYzNOZFhHNGdJQ0FnSUNBZ0lDQWdJQ0JvZVhCeUxtMWxjM05oWjJVb1lHUnBjM0JoZEdOb0lHMXZkbVYwYjNkdmNtdHpjR0ZqWlhOcGJHVnVkQ0FrZTNkemZTeGhaR1J5WlhOek9qQjRKSHRqYkdsbGJuUXVZV1JrY21WemMzMWdLVnh1SUNBZ0lDQWdJQ0FnSUNBZ1pHVnNaWFJsSUhkcGJtUnZkMWR2Y210emNHRmpaVTFoY0Z0amJHbGxiblF1WVdSa2NtVnpjMTFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCbGJITmxlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2QybHVaRzkzVjI5eWEzTndZV05sVFdGd1cyTnNhV1Z1ZEM1aFpHUnlaWE56WFNBOUlHTnNhV1Z1ZEM1M2IzSnJjM0JoWTJVdWFXUmNiaUFnSUNBZ0lDQWdJQ0FnSUdoNWNISXViV1Z6YzJGblpTaGdaR2x6Y0dGMFkyZ2diVzkyWlhSdmQyOXlhM053WVdObGMybHNaVzUwSUhOd1pXTnBZV3dzWVdSa2NtVnpjem93ZUNSN1kyeHBaVzUwTG1Ga1pISmxjM045WUNsY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUdGeVpVaHBaR1JsYmlBOUlDRmhjbVZJYVdSa1pXNWNiaUFnSUNCcFkyOXVMbXhoWW1Wc0lEMGdZWEpsU0dsa1pHVnVJRDhnWENKY2RVWXdOekJjSWlBNklGd2lYSFZHTURaRlhDSWdMeThnWTJ4dmMyVmtJR1Y1WlNBdklHOXdaVzRnWlhsbFhHNGdJSDBwWEc1Y2JpQWdjbVYwZFhKdUlHSjFkSFJ2Ymx4dWZWeHVJaXdnSW1sdGNHOXlkQ0I3SUVkMGF5QjlJR1p5YjIwZ1hDSmhaM012WjNSck5Gd2lYRzVwYlhCdmNuUWdUbVYwZDI5eWF5Qm1jbTl0SUZ3aVoyazZMeTlCYzNSaGJFNWxkSGR2Y210Y0lseHVhVzF3YjNKMElFZE1hV0lnWm5KdmJTQmNJbWRwT2k4dlIweHBZbHdpWEc1Y2JtVjRjRzl5ZENCa1pXWmhkV3gwSUdaMWJtTjBhVzl1SUU1bGRIZHZjbXRKYm1ScFkyRjBiM0lvS1NCN1hHNGdJR052Ym5OMElHNWxkSGR2Y21zZ1BTQk9aWFIzYjNKckxtZGxkRjlrWldaaGRXeDBLQ2xjYmlBZ1kyOXVjM1FnYkdGaVpXd2dQU0J1WlhjZ1IzUnJMa3hoWW1Wc0tIdGNiaUFnSUNCb1lXeHBaMjQ2SUVkMGF5NUJiR2xuYmk1RlRrUXNYRzRnSUgwcFhHNWNiaUFnWTI5dWMzUWdkWEJrWVhSbFNXTnZiaUE5SUNncElEMCtJSHRjYmlBZ0lDQnpkMmwwWTJnZ0tHNWxkSGR2Y21zdVoyVjBYM0J5YVcxaGNua29LU2tnZTF4dUlDQWdJQ0FnSUNBdkx5QlhhWEpsWkNCamIyNXVaV04wYVc5dVhHNGdJQ0FnSUNBZ0lHTmhjMlVnTVRwY2JpQWdJQ0FnSUNBZ0lDQWdJR3hoWW1Wc0xteGhZbVZzSUQwZ1hDSmNkVVJDT0RCY2RVUkRNREpjSWx4dUlDQWdJQ0FnSUNBZ0lDQWdZbkpsWVd0Y2JpQWdJQ0FnSUNBZ0x5OGdWMmxtYVNCamIyNXVaV04wYVc5dVhHNGdJQ0FnSUNBZ0lHTmhjMlVnTWpwY2JpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCemRISmxibWQwYUNBOUlHNWxkSGR2Y21zdWQybG1hUzV6ZEhKbGJtZDBhRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSE4wY21WdVozUm9JRDRnT0RBcGUxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGhZbVZzTG14aFltVnNJRDBnWENKY2RVUkNPREpjZFVSRU1qaGNJbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnWld4elpTQnBaaWh6ZEhKbGJtZDBhQ0ErSURZd0tYdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNZV0psYkM1c1lXSmxiQ0E5SUZ3aVhIVkVRamd5WEhWRVJESTFYQ0pjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdhV1lvYzNSeVpXNW5kR2dnUGlBME1DbDdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR0ZpWld3dWJHRmlaV3dnUFNCY0lseDFSRUk0TWx4MVJFUXlNbHdpWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCbGJITmxJR2xtS0hOMGNtVnVaM1JvSUQ0Z01qQXBlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hoWW1Wc0xteGhZbVZzSUQwZ1hDSmNkVVJDT0RKY2RVUkVNVVpjSWx4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaU0JwWmloemRISmxibWQwYUNBK0lEQXBlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hoWW1Wc0xteGhZbVZzSUQwZ1hDSmNkVVJDT0RKY2RVUkVNa1pjSWx4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3RjYmlBZ0lDQWdJQ0FnTHk4Z1RtOGdZMjl1Ym1WamRHbHZiaUJrWldaaGRXeDBYRzRnSUNBZ0lDQWdJR1JsWm1GMWJIUTZYRzRnSUNBZ0lDQWdJQ0FnSUNCc1lXSmxiQzVzWVdKbGJDQTlJRndpWEhWRVFqZ3lYSFZFUkRKRlhDSmNiaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdMeThnU1c1cGRHbGhiQ0J6WlhSY2JpQWdJQ0IxY0dSaGRHVkpZMjl1S0NsY2JseHVJQ0F2THlCU1pXRmpkQ0IwYnlCamFHRnVaMlZ6WEc0Z0lDQWdibVYwZDI5eWF5NWpiMjV1WldOMEtGd2libTkwYVdaNU9qcHdjbWx0WVhKNVhDSXNJSFZ3WkdGMFpVbGpiMjRwWEc0Z0lDQWdibVYwZDI5eWF5NWpiMjV1WldOMEtGd2libTkwYVdaNU9qcHpkR0YwWlZ3aUxDQjFjR1JoZEdWSlkyOXVLVnh1SUNBZ0lHNWxkSGR2Y21zdVkyOXVibVZqZENoY0ltNXZkR2xtZVRvNlpHVjJhV05sYzF3aUxDQjFjR1JoZEdWSlkyOXVLVnh1WEc0Z0lDQWdMeThnVUc5c2JDQnpkSEpsYm1kMGFDQmxkbVZ5ZVNCelpXTnZibVJjYmlBZ0lDQkhUR2xpTG5ScGJXVnZkWFJmWVdSa0tFZE1hV0l1VUZKSlQxSkpWRmxmUkVWR1FWVk1WQ3dnTVRBd01Dd2dLQ2tnUFQ0Z2UxeHVJQ0FnSUdsbUlDaHVaWFIzYjNKckxtZGxkRjl3Y21sdFlYSjVLQ2tnUFQwOUlESXBJSHRjYmlBZ0lDQWdJQ0FnZFhCa1lYUmxTV052YmlncFhHNGdJQ0FnZlZ4dUlDQWdJSEpsZEhWeWJpQjBjblZsSUM4dklHdGxaWEFnY21Wd1pXRjBhVzVuWEc0Z0lDQWdmU2xjYmx4dUlDQWdJSEpsZEhWeWJpQnNZV0psYkZ4dWZWeHVJaXdnSW1sdGNHOXlkQ0JCYzNSaGJGUnlZWGtnWm5KdmJTQW5aMms2THk5QmMzUmhiRlJ5WVhrbk8xeHVhVzF3YjNKMElIc2dSM1JySUgwZ1puSnZiU0FuWVdkekwyZDBhelFuTzF4dWFXMXdiM0owSUVkTWFXSWdabkp2YlNCY0ltZHBPaTh2UjB4cFlsd2lYRzVwYlhCdmNuUWdUbVYwZDI5eWEwbHVaR2xqWVhSdmNpQm1jbTl0SUZ3aUxpOXVaWFIzYjNKcmFXNWthV05oZEc5eVhDSmNibWx0Y0c5eWRDQjdJR1Y0WldOQmMzbHVZeUI5SUdaeWIyMGdKMkZuY3k5d2NtOWpaWE56Snp0Y2JseHVaWGh3YjNKMElHbHVkR1Z5Wm1GalpTQlZkR2xzYzFSeVlYbFFjbTl3Y3lCN1hHNGdJR2xqYjI1VGFYcGxQem9nYm5WdFltVnlPeUF2THlCa1pXWmhkV3gwSURFMlhHNGdJSE53WVdOcGJtYy9PaUJ1ZFcxaVpYSTdJQ0F2THlCa1pXWmhkV3gwSURSY2JuMWNibHh1Wlhod2IzSjBJR1JsWm1GMWJIUWdablZ1WTNScGIyNGdWWFJwYkhOVWNtRjVLSHNnYVdOdmJsTnBlbVVnUFNBeE5pd2djM0JoWTJsdVp5QTlJREV3SUgwNklGVjBhV3h6VkhKaGVWQnliM0J6S1NCN1hHNWNiaUFnTHk4Z1FuVjBkRzl1SUdKaGNseHVJQ0JqYjI1emRDQmlkWFIwYjI1Q2IzZ2dQU0J1WlhjZ1IzUnJMa0p2ZUNoN0lHOXlhV1Z1ZEdGMGFXOXVPaUJIZEdzdVQzSnBaVzUwWVhScGIyNHVTRTlTU1ZwUFRsUkJUQ3dnYzNCaFkybHVaem9nTmlCOUtWeHVJQ0JjYmlBZ0x5OGdRMjl1ZEdWdWRDQmhjbVZoWEc0Z0lHTnZibk4wSUdOdmJuUmxiblJDYjNnZ1BTQnVaWGNnUjNSckxrSnZlQ2g3SUc5eWFXVnVkR0YwYVc5dU9pQkhkR3N1VDNKcFpXNTBZWFJwYjI0dVZrVlNWRWxEUVV3c0lITndZV05wYm1jNklEWWdmU2xjYmlBZ1hHNGdJQzh2SUZkeVlYQWdZblYwZEc5dUlHRnVaQ0JqYjI1MFpXNTBJR2x1ZEc4Z1lTQjJaWEowYVdOaGJDQmliM2dnWm05eUlIUnlZWGxjYmlBZ1kyOXVjM1FnYldGcGJrSnZlQ0E5SUc1bGR5QkhkR3N1UW05NEtIc2diM0pwWlc1MFlYUnBiMjQ2SUVkMGF5NVBjbWxsYm5SaGRHbHZiaTVXUlZKVVNVTkJUQ3dnYzNCaFkybHVaem9nTmlCOUtWeHVJQ0J0WVdsdVFtOTRMbUZ3Y0dWdVpDaGlkWFIwYjI1Q2IzZ3BYRzRnSUM4dklHMWhhVzVDYjNndVlYQndaVzVrS0dOdmJuUmxiblJDYjNncFhHNWNiaUFnTHk4Z1EzSmxZWFJsSUdOdmJuUmxiblFnZDJsa1oyVjBjMXh1SUNCamIyNXpkQ0JpYkhWbGRHOXZkR2hYYVdSblpYUWdQU0J1WlhjZ1IzUnJMa0oxZEhSdmJpaDdJR3hoWW1Wc09pQmNJbHgxUmpJNU5Gd2lJSDBwWEc0Z0lHTnZibk4wSUc1bGRIZHZjbXRYYVdSblpYUWdQU0J1WlhjZ1IzUnJMa0oxZEhSdmJpaDdJR3hoWW1Wc09pQmNJbHgxUkVJNE1GeDFSRU13TWx3aUlIMHBYRzRnSUdOdmJuTjBJSFp2YkhWdFpWZHBaR2RsZENBOUlHNWxkeUJIZEdzdVFuVjBkRzl1S0hzZ2JHRmlaV3c2SUZ3aVhIVkdNREk0WENJZ2ZTbGNiaUFnWTI5dWMzUWdjM2x6ZEdWdFYybGtaMlYwSUQwZ2JtVjNJRWQwYXk1Q2RYUjBiMjRvZXlCc1lXSmxiRG9nWENKY2RVUkNPREJjZFVSR05VSmNJaUI5S1Z4dVhHNGdJR0pzZFdWMGIyOTBhRmRwWkdkbGRDNWpiMjV1WldOMEtGd2lZMnhwWTJ0bFpGd2lMQ0FvS1NBOVBpQjdYRzRnSUNBZ1pYaGxZMEZ6ZVc1aktGdGNJbUpzZFdWaVpYSnllVndpWFNsY2JpQWdJQ0F1ZEdobGJpZ29iM1YwS1NBOVBpQmpiMjV6YjJ4bExteHZaeWh2ZFhRcEtWeHVJQ0FnSUM1allYUmphQ2dvWlhKeUtTQTlQaUJqYjI1emIyeGxMbVZ5Y205eUtHVnljaWtwWEc0Z0lIMHBYRzVjYmlBZ2JtVjBkMjl5YTFkcFpHZGxkQzVqYjI1dVpXTjBLRndpWTJ4cFkydGxaRndpTENBb0tTQTlQaUI3WEc0Z0lDQWdaWGhsWTBGemVXNWpLRnRjSW01dExXTnZibTVsWTNScGIyNHRaV1JwZEc5eVhDSmRLVnh1SUNBZ0lDNTBhR1Z1S0NodmRYUXBJRDArSUdOdmJuTnZiR1V1Ykc5bktHOTFkQ2twWEc0Z0lDQWdMbU5oZEdOb0tDaGxjbklwSUQwK0lHTnZibk52YkdVdVpYSnliM0lvWlhKeUtTbGNiaUFnZlNsY2JseHVJQ0IyYjJ4MWJXVlhhV1JuWlhRdVkyOXVibVZqZENoY0ltTnNhV05yWldSY0lpd2dLQ2tnUFQ0Z2UxeHVJQ0FnSUdWNFpXTkJjM2x1WXloYlhDSnJhWFIwZVZ3aUxDQmNJaTB0WTJ4aGMzTTlWMmx5WlcxcGVGd2lMQ0JjSWkxbFhDSXNJRndpZDJseVpXMXBlRndpWFNsY2JpQWdJQ0F1ZEdobGJpZ29iM1YwS1NBOVBpQmpiMjV6YjJ4bExteHZaeWh2ZFhRcEtWeHVJQ0FnSUM1allYUmphQ2dvWlhKeUtTQTlQaUJqYjI1emIyeGxMbVZ5Y205eUtHVnljaWtwWEc0Z0lIMHBYRzVjYmlBZ2MzbHpkR1Z0VjJsa1oyVjBMbU52Ym01bFkzUW9YQ0pqYkdsamEyVmtYQ0lzSUNncElEMCtJSHRjYmlBZ0lDQmxlR1ZqUVhONWJtTW9XMXdpYldsemMybHZibU5sYm5SbGNsd2lYU2xjYmlBZ0lDQXVkR2hsYmlnb2IzVjBLU0E5UGlCamIyNXpiMnhsTG14dlp5aHZkWFFwS1Z4dUlDQWdJQzVqWVhSamFDZ29aWEp5S1NBOVBpQmpiMjV6YjJ4bExtVnljbTl5S0dWeWNpa3BYRzRnSUgwcFhHNWNiaUFnWW5WMGRHOXVRbTk0TG1Gd2NHVnVaQ2hpYkhWbGRHOXZkR2hYYVdSblpYUXBYRzRnSUdKMWRIUnZia0p2ZUM1aGNIQmxibVFvYm1WMGQyOXlhMWRwWkdkbGRDbGNiaUFnWW5WMGRHOXVRbTk0TG1Gd2NHVnVaQ2gyYjJ4MWJXVlhhV1JuWlhRcFhHNGdJR0oxZEhSdmJrSnZlQzVoY0hCbGJtUW9jM2x6ZEdWdFYybGtaMlYwS1Z4dVhHNGdJQzh2SUM4dklGTjBiM0psSUhSb1pXMGdhVzRnWVNCdFlYQWdabTl5SUdWaGMza2djM2RwZEdOb2FXNW5YRzRnSUM4dklHTnZibk4wSUhCaGJtVnNjeUE5SUh0Y2JpQWdMeThnSUNCT1pYUTZJRzVsZEhkdmNtdFhhV1JuWlhRc1hHNGdJQzh2SUNBZ1UzbHpPaUJ6ZVhOMFpXMVhhV1JuWlhRc1hHNGdJQzh2SUNBZ1ZtOXNPaUIyYjJ4MWJXVlhhV1JuWlhRc1hHNGdJQzh2SUgxY2JseHVJQ0F2THlBdkx5QkJaR1FnWVd4c0lIZHBaR2RsZEhNZ2RHOGdZMjl1ZEdWdWRFSnZlQ0JpZFhRZ2FHbGtaU0IwYUdWdElHbHVhWFJwWVd4c2VWeHVJQ0F2THlCUFltcGxZM1F1ZG1Gc2RXVnpLSEJoYm1Wc2N5a3VabTl5UldGamFDaDNJRDArSUh0Y2JpQWdMeThnSUNCamIyNTBaVzUwUW05NExtRndjR1Z1WkNoM0tWeHVJQ0F2THlBZ0lIY3VhR2xrWlNncFhHNGdJQzh2SUgwcFhHNWNiaUFnTHk4Z0x5OGdSblZ1WTNScGIyNGdkRzhnYzNkcGRHTm9JSFpwYzJsaWJHVWdjR0Z1Wld4Y2JpQWdMeThnYkdWMElHTjFjbkpsYm5SUVlXNWxiRG9nUjNSckxsZHBaR2RsZENCOElHNTFiR3dnUFNCdWRXeHNYRzRnSUM4dklHTnZibk4wSUhOb2IzZFFZVzVsYkNBOUlDaHVZVzFsT2lCclpYbHZaaUIwZVhCbGIyWWdjR0Z1Wld4ektTQTlQaUI3WEc0Z0lDOHZJQ0FnYVdZZ0tHTjFjbkpsYm5SUVlXNWxiQ2tnWTNWeWNtVnVkRkJoYm1Wc0xtaHBaR1VvS1Z4dUlDQXZMeUFnSUdOMWNuSmxiblJRWVc1bGJDQTlJSEJoYm1Wc2MxdHVZVzFsWFZ4dUlDQXZMeUFnSUdOMWNuSmxiblJRWVc1bGJDNXphRzkzS0NsY2JpQWdMeThnZlZ4dVhHNGdJQzh2SUM4dklFSjFkSFJ2Ym5OY2JpQWdMeThnVDJKcVpXTjBMbXRsZVhNb2NHRnVaV3h6S1M1bWIzSkZZV05vS0c1aGJXVWdQVDRnZTF4dUlDQXZMeUFnSUdOdmJuTjBJR0owYmlBOUlHNWxkeUJIZEdzdVFuVjBkRzl1S0hzZ2JHRmlaV3c2SUc1aGJXVWdmU2xjYmlBZ0x5OGdJQ0JpZEc0dVkyOXVibVZqZENoY0ltTnNhV05yWldSY0lpd2dLQ2tnUFQ0Z2MyaHZkMUJoYm1Wc0tHNWhiV1VnWVhNZ2EyVjViMllnZEhsd1pXOW1JSEJoYm1Wc2N5a3BYRzRnSUM4dklDQWdZblYwZEc5dVFtOTRMbUZ3Y0dWdVpDaGlkRzRwWEc0Z0lDOHZJSDBwWEc1Y2JpQWdMeThnTHk4Z1UyaHZkeUIwYUdVZ1ptbHljM1FnY0dGdVpXd2dZbmtnWkdWbVlYVnNkRnh1SUNBdkx5QkhUR2xpTG1sa2JHVmZZV1JrS0VkTWFXSXVVRkpKVDFKSlZGbGZSRVZHUVZWTVZGOUpSRXhGTENBb0tTQTlQaUI3WEc0Z0lDOHZJQ0FnYzJodmQxQmhibVZzS0Z3aVRtVjBYQ0lwWEc0Z0lDOHZJQ0FnY21WMGRYSnVJRWRNYVdJdVUwOVZVa05GWDFKRlRVOVdSVnh1SUNBdkx5QjlLVnh1WEc0Z0lISmxkSFZ5YmlCdFlXbHVRbTk0WEc1OVhHNGlMQ0FpYVcxd2IzSjBJSHNnUVhOMFlXd3NJRWRrYXl3Z1IzUnJJSDBnWm5KdmJTQmNJbUZuY3k5bmRHczBYQ0k3WEc1cGJYQnZjblFnVG05MGFXWmtJR1p5YjIwZ1hDSm5hVG92TDBGemRHRnNUbTkwYVdaa1hDSTdYRzVwYlhCdmNuUWdZWEJ3SUdaeWIyMGdYQ0poWjNNdlozUnJOQzloY0hCY0lqdGNibHh1Wlhod2IzSjBJR1JsWm1GMWJIUWdablZ1WTNScGIyNGdUbTkwYVdaa1YybGtaMlYwS0dka2EyMXZibWwwYjNJNklFZGtheTVOYjI1cGRHOXlLU0I3WEc0Z0lHTnZibk4wSUhzZ1VrbEhTRlFzSUZSUFVDQjlJRDBnUVhOMFlXd3VWMmx1Wkc5M1FXNWphRzl5TzF4dUlDQmpiMjV6ZENCdWIzUnBabVFnUFNCT2IzUnBabVF1WjJWMFgyUmxabUYxYkhRb0tUdGNiaUFnWEc0Z0lDOHZJRXRsWlhBZ2RISmhZMnNnYjJZZ1kzVnljbVZ1ZEd4NUlHUnBjM0JzWVhsbFpDQnViM1JwWm1sallYUnBiMjV6WEc0Z0lHTnZibk4wSUdGamRHbDJaVTV2ZEdsbWFXTmhkR2x2Ym5NNklFMWhjRHh1ZFcxaVpYSXNJRUZ6ZEdGc0xsZHBibVJ2ZHo0Z1BTQnVaWGNnVFdGd0tDazdYRzRnSUZ4dUlDQXZMeUJNYVhOMFpXNGdabTl5SUc1bGR5QnViM1JwWm1sallYUnBiMjV6WEc0Z0lHNXZkR2xtWkM1amIyNXVaV04wS0Z3aWJtOTBhV1pwWldSY0lpd2dLRjhzSUdsa0tTQTlQaUI3WEc0Z0lDQWdZMjl1YzNRZ2JpQTlJRzV2ZEdsbVpDNW5aWFJmYm05MGFXWnBZMkYwYVc5dUtHbGtLVHRjYmlBZ0lDQnBaaUFvSVc0cElISmxkSFZ5Ymp0Y2JpQWdJQ0JqYjI1emRDQm9hVzUwY3lBOUlHNHVaMlYwWDJocGJuUnpLQ2t1Y21WamRYSnphWFpsVlc1d1lXTnJLQ2tnWVhNZ1lXNTVPMXh1SUNBZ0lHeGxkQ0JwYldGblpWQmhkR2dnUFNCb2FXNTBjMXRjSW1sdFlXZGxMWEJoZEdoY0lsMGdmSHdnYm5Wc2JEdGNibHh1SUNBZ0lHeGxkQ0JoY0hCSlkyOXVJRDBnYUdsdWRITmJYQ0prWlhOcmRHOXdMV1Z1ZEhKNVhDSmRJSHg4SUc1MWJHdzdYRzRnSUNBZ1hHNGdJQ0FnWTI5dWMzUWdibTkwYVdaWGFXNWtiM2NnUFNBb1hHNGdJQ0FnSUNBOGQybHVaRzkzWEc0Z0lDQWdJQ0FnSUc1aGJXVTllMkJ1YjNScFptbGpZWFJwYjI0dEpIdHBaSDFnZlZ4dUlDQWdJQ0FnSUNCamJHRnpjejFjSWs1dmRHbG1hV05oZEdsdmJsd2lYRzRnSUNBZ0lDQWdJR2RrYTIxdmJtbDBiM0k5ZTJka2EyMXZibWwwYjNKOVhHNGdJQ0FnSUNBZ0lHRnVZMmh2Y2oxN1ZFOVFJSHdnVWtsSFNGUjlYRzRnSUNBZ0lDQWdJR1Y0WTJ4MWMybDJhWFI1UFh0QmMzUmhiQzVGZUdOc2RYTnBkbWwwZVM1SlIwNVBVa1Y5WEc0Z0lDQWdJQ0FnSUdGd2NHeHBZMkYwYVc5dVBYdGhjSEI5WEc0Z0lDQWdJQ0ErWEc0Z0lDQWdJQ0FnSUR4aWIzZ2diM0pwWlc1MFlYUnBiMjQ5ZTBkMGF5NVBjbWxsYm5SaGRHbHZiaTVXUlZKVVNVTkJUSDArWEc0Z0lDQWdJQ0FnSUNBZ0lDQThZbTk0SUc5eWFXVnVkR0YwYVc5dVBYdEhkR3N1VDNKcFpXNTBZWFJwYjI0dVNFOVNTVnBQVGxSQlRIMCtYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdleWhoY0hCSlkyOXVLU0FtSmlBb1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1BHbHRZV2RsSUZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBZMjl1VG1GdFpUMTdZWEJ3U1dOdmJuMWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZQbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ2w5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUEd4aFltVnNJR3hoWW1Wc1BYdHVMbUZ3Y0U1aGJXVjlMejVjYmlBZ0lDQWdJQ0FnSUNBZ0lEd3ZZbTk0UGx4dUlDQWdJQ0FnSUNBZ0lDQWdQR0p2ZUNCdmNtbGxiblJoZEdsdmJqMTdSM1JyTGs5eWFXVnVkR0YwYVc5dUxraFBVa2xhVDA1VVFVeDlQbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSHNvYVcxaFoyVlFZWFJvS1NBbUppQW9YRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdQR2x0WVdkbElGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYVd4bFBYdHBiV0ZuWlZCaGRHaDlJRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzgrWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnS1gxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOFltOTRJRzl5YVdWdWRHRjBhVzl1UFh0SGRHc3VUM0pwWlc1MFlYUnBiMjR1VmtWU1ZFbERRVXg5UGx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQThiR0ZpWld3Z2JHRmlaV3c5ZTI0dWMzVnRiV0Z5ZVgwZ1kyeGhjM005WENKemRXMXRZWEo1WENJZ2FHRnNhV2R1UFh0SGRHc3VRV3hwWjI0dVJVNUVmUzgrWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEeHNZV0psYkNCc1lXSmxiRDE3Ymk1aWIyUjVmU0JqYkdGemN6MWNJbUp2WkhsY0lpQm9ZV3hwWjI0OWUwZDBheTVCYkdsbmJpNUZUa1I5THo1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBOEwySnZlRDVjYmlBZ0lDQWdJQ0FnSUNBZ0lEd3ZZbTk0UGx4dUlDQWdJQ0FnSUNBOEwySnZlRDVjYmlBZ0lDQWdJRHd2ZDJsdVpHOTNQbHh1SUNBZ0lDa2dZWE1nUVhOMFlXd3VWMmx1Wkc5M08xeHVJQ0FnSUZ4dUlDQWdJQzh2SUZOb2IzY2dkR2hsSUc1dmRHbG1hV05oZEdsdmJpQjNhVzVrYjNkY2JpQWdJQ0J1YjNScFpsZHBibVJ2ZHk1emFHOTNLQ2s3WEc0Z0lDQWdZV04wYVhabFRtOTBhV1pwWTJGMGFXOXVjeTV6WlhRb2FXUXNJRzV2ZEdsbVYybHVaRzkzS1R0Y2JpQWdJQ0JjYmlBZ0lDQXZMeUJCZFhSdmJXRjBhV05oYkd4NUlISmxiVzkyWlNCcGRDQmhablJsY2lBMUlITmxZMjl1WkhOY2JpQWdJQ0J6WlhSVWFXMWxiM1YwS0NncElEMCtJSHRjYmlBZ0lDQWdJRzV2ZEdsbVYybHVaRzkzTG1SbGMzUnliM2tvS1R0Y2JpQWdJQ0FnSUdGamRHbDJaVTV2ZEdsbWFXTmhkR2x2Ym5NdVpHVnNaWFJsS0dsa0tUdGNiaUFnSUNCOUxDQTFNREF3S1R0Y2JpQWdmU2s3WEc0Z0lGeHVJQ0F2THlCTWFYTjBaVzRnWm05eUlHNXZkR2xtYVdOaGRHbHZiaUJ5WlhOdmJIVjBhVzl1SUNoM2FHVnVJSFZ6WlhJZ1pHbHpiV2x6YzJWeklHOXlJRzV2ZEdsbWFXTmhkR2x2YmlCbGVIQnBjbVZ6S1Z4dUlDQnViM1JwWm1RdVkyOXVibVZqZENoY0luSmxjMjlzZG1Wa1hDSXNJQ2hmTENCcFpDa2dQVDRnZTF4dUlDQWdJR052Ym5OMElHNXZkR2xtVjJsdVpHOTNJRDBnWVdOMGFYWmxUbTkwYVdacFkyRjBhVzl1Y3k1blpYUW9hV1FwTzF4dUlDQWdJR2xtSUNodWIzUnBabGRwYm1SdmR5a2dlMXh1SUNBZ0lDQWdibTkwYVdaWGFXNWtiM2N1WkdWemRISnZlU2dwTzF4dUlDQWdJQ0FnWVdOMGFYWmxUbTkwYVdacFkyRjBhVzl1Y3k1a1pXeGxkR1VvYVdRcE8xeHVJQ0FnSUgxY2JpQWdmU2s3WEc0Z0lGeHVJQ0F2THlCU1pYUjFjbTRnYm5Wc2JDQnphVzVqWlNCdWIzUnBabWxqWVhScGIyNXpJR055WldGMFpTQjBhR1ZwY2lCdmQyNGdkMmx1Wkc5M2MxeHVJQ0J5WlhSMWNtNGdiblZzYkR0Y2JuMGlMQ0FpYVcxd2IzSjBJR0Z3Y0NCbWNtOXRJRndpWVdkekwyZDBhelF2WVhCd1hDSmNibWx0Y0c5eWRDQnpkSGxzWlNCbWNtOXRJRndpTGk5emRIbHNaUzV6WTNOelhDSmNibWx0Y0c5eWRDQkNZWElnWm5KdmJTQmNJaTR2ZDJsa1oyVjBMMEpoY2x3aVhHNXBiWEJ2Y25RZ1RtOTBhV1prVjJsa1oyVjBJR1p5YjIwZ1hDSXVMM2RwWkdkbGRDOU9iM1JwWm1sallYUnBiMjVjSWp0Y2JseHVZWEJ3TG5OMFlYSjBLSHRjYmlBZ1kzTnpPaUJ6ZEhsc1pTeGNiaUFnYldGcGJpZ3BJSHRjYmlBZ0lDQmpiMjV6ZENCdGIyNXBkRzl5Y3lBOUlHRndjQzVuWlhSZmJXOXVhWFJ2Y25Nb0tUdGNibHh1SUNBZ0lHMXZibWwwYjNKekxtMWhjQ2dvYlc5dWFYUnZjaWtnUFQ0Z2UxeHVJQ0FnSUNBZ0x5OGdVbVZ1WkdWeUlIUm9aU0IwWVhOclltRnlYRzRnSUNBZ0lDQkNZWElvYlc5dWFYUnZjaWs3WEc0Z0lDQWdmU2s3WEc0Z0lDQWdUbTkwYVdaa1YybGtaMlYwS0cxdmJtbDBiM0p6V3pCZEtUdGNiaUFnZlN4Y2JuMHBPMXh1SWwwc0NpQWdJbTFoY0hCcGJtZHpJam9nSWpzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdRVUZOUVN4VFFVRlRMRk5CUVZNc1MwRkJZVHRCUVVNelFpeFRRVUZQTEVsQlEwWXNVVUZCVVN4dFFrRkJiVUlzVDBGQlR5eEZRVU5zUXl4WFFVRlhMRXRCUVVzc1IwRkJSeXhGUVVOdVFpeFpRVUZaTzBGQlEzSkNPMEZCUlVFc1pVRkJaU3hUUVVGWkxFdEJRVGhDUVN4UlFVRjFRanRCUVVNMVJTeFRRVUZQTEVsQlFVa3NTMEZCU3l4RFFVRkRMRTFCUVUxQkxFOUJRVTBzUlVGQlJTeFBRVUZQTEVOQlFVTXNSVUZCUlN4TlFVRk5MRTFCUVUwc1RVRkJUVHRCUVVNdlJEdEJRVVZCTEZOQlFWTXNUVUZCZDBJc1QwRkJWU3hOUVVGblF6dEJRVU4yUlN4VFFVRlBMR1ZCUVdVc1QwRkJUeXhOUVVGTk8wRkJRVUVzU1VGREwwSXNUVUZCVFR0QlFVTkdMR0ZCUVU4c1MwRkJTeXhQUVVGUExGTkJRVk1zU1VGQlNTeERRVUZETEVWQlFVVXNSVUZCUlR0QlFVRkJMRWxCUTNwRE8wRkJRVUVzUlVGRFNpeERRVUZETzBGQlEwdzdRVUZGUVN4TlFVRk5MRk5CUVZNc1QwRkJUeXhuUWtGQlowSXNSMEZCUnl4RFFVRkRMRVZCUVVVc1RVRkJUU3haUVVGWkxFMUJRVTA3UVVGRGFFVXNVVUZCVFN4TFFVRkxMRmRCUVZjc1RVRkJUVHRCUVVNMVFpeFJRVUZOTEZsQlFWa3NWMEZCVnl4VlFVRlZPMEZCUTNaRExGRkJRVTBzV1VGQldTeFhRVUZYTEZsQlFWazdRVUZETjBNc1EwRkJRenRCUVVWRUxFMUJRVTBzVTBGQlV5eFBRVUZQTEcxQ1FVRnRRaXhIUVVGSExFTkJRVU1zUlVGQlJTeFBRVUZQTEUxQlFVMDdRVUZEZUVRc1VVRkJUU3hQUVVGUExGZEJRVmNzVTBGQlV6dEJRVU55UXl4RFFVRkRPMEZCUlVRc1RVRkJUU3hUUVVGVExFOUJRVThzY1VKQlFYRkNMRWRCUVVjc1EwRkJReXhGUVVGRkxGTkJRVk1zVjBGQlZ5eFBRVUZQTEUxQlFVMDdRVUZET1VVc1VVRkJUU3hSUVVGUkxGZEJRVmNzVDBGQlR6dEJRVU5vUXl4UlFVRk5MRlZCUVZVc1YwRkJWeXhWUVVGVk8wRkJRM0pETEZGQlFVMHNWVUZCVlN4WFFVRlhMRk5CUVZNN1FVRkRjRU1zVVVGQlRTeFBRVUZQTEZkQlFWY3NUMEZCVHp0QlFVTnVReXhEUVVGRE8wRkJSVVFzVFVGQlRTeFRRVUZUTEU5QlFVOHNiMEpCUVc5Q0xFZEJRVWNzUTBGQlF5eEZRVUZGTEZWQlFVRkRMRmRCUVZVc1UwRkJVeXhWUVVGVkxFMUJRVTA3UVVGREwwVXNVVUZCVFVFc1ZVRkJVeXhYUVVGWExFOUJRVTg3UVVGRGFrTXNVVUZCVFVFc1ZVRkJVeXhYUVVGWExGVkJRVlU3UVVGRGNFTXNVVUZCVFVFc1ZVRkJVeXhYUVVGWExGbEJRVms3UVVGRGRFTXNVVUZCVFVFc1ZVRkJVeXhYUVVGWExGTkJRVk03UVVGRGJrTXNVVUZCVFN4UlFVRlJMRmRCUVZjc1owSkJRV2RDTzBGQlEzcERMRkZCUVUwc1VVRkJVU3hYUVVGWExHbENRVUZwUWp0QlFVTXhReXhSUVVGTkxGVkJRVlVzVjBGQlZ5eFRRVUZUTzBGQlEzaERMRU5CUVVNN1FVRkZSQ3hOUVVGTkxGTkJRVk1zVDBGQlR5eHBRa0ZCYVVJc1IwRkJSeXhEUVVGRExFVkJRVVVzVDBGQlR5eFBRVUZQTEUxQlFVMDdRVUZETjBRc1VVRkJUU3hOUVVGTkxGZEJRVmNzVTBGQlV6dEJRVU5vUXl4UlFVRk5MRTlCUVU4c1YwRkJWeXgxUWtGQmRVSTdRVUZETDBNc1VVRkJUU3hQUVVGUExGZEJRVmNzY1VKQlFYRkNPMEZCUXpkRExGRkJRVTBzVDBGQlR5eFhRVUZYTEhOQ1FVRnpRanRCUVVNNVF5eFJRVUZOTEU5QlFVOHNWMEZCVnl4dlFrRkJiMEk3UVVGRE5VTXNVVUZCVFN4UFFVRlBMRmRCUVZjc1ZVRkJWVHRCUVVOMFF5eERRVUZETzBGQlJVUXNUVUZCVFN4VFFVRlRMRTlCUVU4c2JVSkJRVzFDTEVkQlFVY3NRMEZCUXl4RlFVRkZMRXRCUVVzc1RVRkJUVHRCUVVOMFJDeFJRVUZOTEV0QlFVc3NWMEZCVnl4bFFVRmxPMEZCUTNKRExGRkJRVTBzUzBGQlN5eFhRVUZYTEdOQlFXTTdRVUZEZUVNc1EwRkJRenRCUVVWRUxFMUJRVTBzVTBGQlV5eFBRVUZQTEd0Q1FVRnJRaXhIUVVGSExFTkJRVU1zUlVGQlJTeFJRVUZCUXl4VFFVRlJMR0ZCUVdFc1RVRkJUVHRCUVVOeVJTeFJRVUZOUVN4UlFVRlBMRmRCUVZjc1pVRkJaVHRCUVVOMlF5eFJRVUZOTEdGQlFXRXNWMEZCVnl4VFFVRlRPMEZCUXpORExFTkJRVU03UVVGRlJDeE5RVUZOTEZOQlFWTXNUMEZCVHl4NVFrRkJlVUlzUjBGQlJ5eERRVUZETEVWQlFVVXNZMEZCWXl4TlFVRk5PMEZCUTNKRkxGRkJRVTBzWTBGQll5eFhRVUZYTEZOQlFWTTdRVUZETlVNc1EwRkJRenRCUVVWRUxFMUJRVTBzVTBGQlV5eFBRVUZQTEdOQlFXTXNSMEZCUnl4RFFVRkRMRVZCUVVVc1NVRkJRVU1zUzBGQlNTeFBRVUZQTEUxQlFVMHNUVUZCVFR0QlFVTTNSQ3hSUVVGTlFTeEpRVUZITEZkQlFWY3NVMEZCVXp0QlFVTTNRaXhSUVVGTkxFMUJRVTBzVjBGQlZ5eFRRVUZUTzBGQlEyaERMRkZCUVUwc1RVRkJUU3hYUVVGWExGZEJRVmM3UVVGRGJFTXNVVUZCVFN4TlFVRk5MRmRCUVZjc1lVRkJZVHRCUVVOd1F5eFJRVUZOTEUxQlFVMHNWMEZCVnl4VlFVRlZPMEZCUTJwRExGRkJRVTBzVFVGQlRTeFhRVUZYTEZOQlFWTTdRVUZEYUVNc1VVRkJUU3hOUVVGTkxGZEJRVmNzVTBGQlV6dEJRVU5vUXl4UlFVRk5MRTFCUVUwc1YwRkJWeXhYUVVGWE8wRkJRMnhETEZGQlFVMHNUVUZCVFN4WFFVRlhMRTlCUVU4N1FVRkRPVUlzVVVGQlRTeE5RVUZOTEZkQlFWY3NVMEZCVXp0QlFVTm9ReXhSUVVGTkxFMUJRVTBzVjBGQlZ5eFRRVUZUTzBGQlEzQkRMRU5CUVVNN1FVRkZSQ3hOUVVGTkxGTkJRVk1zVDBGQlR5eG5Ra0ZCWjBJc1IwRkJSeXhEUVVGRExFVkJRVVVzUzBGQlN5eE5RVUZOTzBGQlEyNUVMRkZCUVUwc1MwRkJTeXhYUVVGWExFOUJRVTg3UVVGRGFrTXNRMEZCUXpzN08wRkRhRVpFTEU5QlFVOHNZVUZCWVR0QlFVTndRaXhQUVVGUExGVkJRVlU3T3p0QlExWldMRk5CUVZNc1UwRkJVeXhMUVVGaE8wRkJRMnhETEZOQlFVOHNTVUZEUml4UlFVRlJMRzFDUVVGdFFpeFBRVUZQTEVWQlEyeERMRmRCUVZjc1MwRkJTeXhIUVVGSExFVkJRMjVDTEZsQlFWazdRVUZEY2tJN1FVRkZUeXhUUVVGVFF5eFZRVUZUTEV0QlFXRTdRVUZEYkVNc1UwRkJUeXhKUVVOR0xGRkJRVkVzYlVKQlFXMUNMRTlCUVU4c1JVRkRiRU1zVjBGQlZ5eExRVUZMTEVkQlFVY3NSVUZEYmtJc1dVRkJXVHRCUVVOeVFqdEJRV3RDVHl4VFFVRlRMRWxCUVVrc1JVRkJSU3hOUVVGTkxGbEJRVmtzVTBGQlV5eEhRVUZaTzBGQlEzcEVMRTFCUVVrc1ZVRkJWU3hKUVVGSkxFbEJRVWs3UVVGRmRFSXNVVUZCVFN4UlFVRlJMRTlCUVU4c1VVRkJVU3hqUVVGakxFTkJRVU1zUTBGQlF6dEJRVVUzUXl4TlFVRkpMRTFCUVUwc1UwRkJVeXhIUVVGSE8wRkJRMnhDTEdWQlFWY3NRMEZCUXl4TFFVRkxMRXRCUVVzc1MwRkJTeXhQUVVGUE8wRkJRemxDTEdsQ1FVRlhMRWxCUVVrc1IwRkJSeXhMUVVGTExFdEJRVXM3UVVGQlFTeEpRVU5vUXp0QlFVRkJMRVZCUTBvN1FVRkZRU3hOUVVGSkxGbEJRVmtzVTBGQlV5eFRRVUZUTEVkQlFVYzdRVUZEYWtNc1pVRkJWenRCUVVOWUxHVkJRVmNzVVVGQlVTeFZRVUZWTzBGQlEzcENMR2xDUVVGWExFbEJRVWtzU1VGQlNUdEJRVUZCTEVsQlEzWkNPMEZCUTBFc1pVRkJWeXhMUVVGTExFbEJRVWs3UVVGQlFTeEZRVU40UWl4UFFVRlBPMEZCUTBnc1pVRkJWenRCUVVGQkxFVkJRMlk3UVVGRlFTeFRRVUZQTzBGQlExZzdRVUZsVHl4VFFVRlRMRWxCUVVrc1MwRkJjVUlzVFVGQll5eFBRVUZaTzBGQlF5OUVMRkZCUVUwc1RVRkJUVU1zVlVGQlV5eEpRVUZKTzBGQlEzcENMRkZCUVUxRExGVkJRVk1zVDBGQlR5eEhRVUZITzBGQlEzcENMRkZCUVUxRExGVkJRVk1zVDBGQlR5eEhRVUZITzBGQlJYcENMRTFCUVVrN1FVRkZTaXhOUVVGSlJDeFhRVUZWTEU5QlFVOHNUMEZCVHl4SlFVRkpRU3hQUVVGTkxFMUJRVTBzV1VGQldUdEJRVU53UkN4alFVRlhMRWxCUVVsQkxFOUJRVTBzUlVGQmIwSTdRVUZCUVN4RlFVTTNReXhQUVVGUE8wRkJRMGdzWTBGQlZTeEpRVUZKTEVsQlFYZENPMEZCUVVFc1JVRkRNVU03UVVGRlFTeE5RVUZKTEZsQlFWa3NUMEZCVHp0QlFVTnVRaXhSUVVGSlF5eFhRVUZWTEU5QlFVOHNUMEZCVHl4SlFVRkpRU3hQUVVGTkxFMUJRVTBzV1VGQldUdEJRVU53UkR0QlFVRkRMRTFCUVVNc1NVRkJTVUVzVDBGQlRTeEZRVUYxUWl4TFFVRkxPMEZCUVVFc1NVRkROVU1zVDBGQlR6dEJRVU5JTEdGQlFVOHNUMEZCVHl4TFFVRkxMRVZCUVVVc1EwRkJReXhKUVVGSkxFZEJRVWNzVFVGQlRTeERRVUZETzBGQlFVRXNTVUZEZUVNN1FVRkJRU3hGUVVOS08wRkJRMG83T3p0QlJERkZRU3hKUVVGTkxFOUJRVThzVDBGQlR5eHBRa0ZCYVVJN1FVRkRja01zU1VGQlRTeEZRVUZGTEdkQ1FVRm5RaXhoUVVGaExGRkJRVkVzU1VGQlNUdEJRVU5xUkN4SlFVRk5MRVZCUVVVc1VVRkJVU3hOUVVGTkxHTkJRV01zU1VGQlNUdEJRVXRxUXl4SlFVRk5MR05CUVdNc1VVRkJVVHRCUVVjMVFpeEpRVUZOTEd0Q1FVRnJRaXhSUVVGUk8wRkJTV2hETEVsQlFVMHNXVUZCV1N4UlFVRlJPMEZCUnpGQ0xFbEJRVTBzWVVGQllTeFJRVUZSTzBGQk9FTnNReXhUUVVGVExGbEJRMHdzUzBGRFRUdEJRVU5PTEUxQlFVa3NTVUZCU1N4UlFVRlRMRTlCUVUwc1RVRkJUU3hyUTBGQmEwTTdRVUZETDBRc1RVRkJTU3hKUVVGSkxFOUJRVkVzVDBGQlRTeE5RVUZOTEdsRFFVRnBRenRCUVVVM1JDeE5RVUZKTEU5QlFVOHNTVUZCU1N4VFFVRlRMRlZCUVZVN1FVRkRPVUlzVlVGQlRTeE5RVUZOTERKRFFVRXlRenRCUVVGQkxFVkJRek5FTzBGQlJVRXNVMEZCVHl4SlFVRkpPMEZCUTJZN1FVRjNSVThzVTBGQlV5eFBRVUZWTEdsQ1FVRTJRenRCUVVOdVJTeFRRVUZQTEZOQlFWVXNTMEZCTUVJc1MwRkJkVUk3UVVGRE9VUXNWVUZCVFN4WlFVRlpMRmxCUVZrc1IwRkJSenRCUVVOcVF5eFZRVUZOTEU5QlFYTkNMRWxCUVVrN1FVRkRhRU1zVlVGQlRTeFJRVUZUTEV0QlFVc3NaVUZCWlN4RFFVRkRPMEZCUTNCRExGRkJRVWtzWVVGQllTeFBRVUZQTzBGQlEzQkNMRmxCUVUwc1JVRkJSU3hQUVVGUExFdEJRVXNzU1VGQlNTeE5RVUZOTEZOQlFWTTdRVUZEZGtNc1dVRkJUU3hUUVVGVExFbEJRVWtzUlVGQlJTeFBRVUZQTEZGQlFWRXNWMEZCVnl4VlFVRlZMRXRCUVVzN1FVRkJRU3hKUVVOc1JTeFBRVUZQTzBGQlEwZ3NXVUZCVFN4VFFVRlRMRWxCUVVrc1JVRkJSU3hQUVVGUExGZEJRVmNzVlVGQlZTeE5RVUZOTEdkQ1FVRm5RanRCUVVGQkxFbEJRek5GTzBGQlEwRXNWMEZCVHp0QlFVRkJMRVZCUTFnN1FVRkRTanRCUVhGQ1R5eFRRVUZUTEU5QlFWVXNhVUpCUVRaRE8wRkJRMjVGTEZOQlFVOHNVMEZCVlVNc1RVRkJkVU1zUzBGQmRVSTdRVUZETTBVc1ZVRkJUU3haUVVGWkxGbEJRVmtzUjBGQlJ6dEJRVU5xUXl4VlFVRk5MRTlCUVhOQ0xFbEJRVWs3UVVGRGFFTXNWVUZCVFN4UlFVRlRMRXRCUVVzc1pVRkJaU3hEUVVGRE8wRkJRM0JETEZGQlFVa3NZVUZCWVN4UFFVRlBPMEZCUTNCQ0xGbEJRVTBzUlVGQlJTeFBRVUZQTEV0QlFVc3NTVUZCU1N4TlFVRk5MRk5CUVZNN1FVRkRka01zV1VGQlRTeFRRVUZUTEVsQlFVa3NSVUZCUlN4UFFVRlBMRkZCUVZFc1YwRkJWeXhWUVVGVkxFdEJRVXM3UVVGQlFTeEpRVU5zUlN4UFFVRlBPMEZCUTBnc1dVRkJUU3hUUVVGVExFbEJRVWtzUlVGQlJTeFBRVUZQTEZkQlFWY3NWVUZCVlN4TlFVRk5MR2RDUVVGblFqdEJRVUZCTEVsQlF6TkZPMEZCUTBFc1YwRkJUMEU3UVVGQlFTeEZRVU5ZTzBGQlEwbzdRVUYzUkU4c1UwRkJVeXhWUVVsVUxFMUJTVms3UVVGRFppeFRRVUZQTEZOQlFWVXNVVUZCVVN4TFFVRkxPMEZCUXpGQ0xGRkJRVWtzU1VGQlNTeFJRVUZUTEU5QlFVMHNUVUZCVFN4clEwRkJhME03UVVGREwwUXNVVUZCU1N4SlFVRkpMRTlCUVZFc1QwRkJUU3hOUVVGTkxHbERRVUZwUXp0QlFVVTNSQ3hSUVVGSkxFOUJRVThzU1VGQlNTeFRRVUZUTEZWQlFWVTdRVUZET1VJc1dVRkJUU3hOUVVGTkxIRkRRVUZ4UXp0QlFVRkJMRWxCUTNKRU8wRkJSVUVzVlVGQlRVTXNZMEZCWVN4VFFVRlRMRWxCUVVrc1NVRkJTVHRCUVVOd1F5eFZRVUZOTEU5QlFYTkNMRWxCUVVrN1FVRkRhRU1zVlVGQlRTeFZRVUZYTEV0QlFVc3NXVUZCV1N4RFFVRkRPMEZCUlc1RExGRkJRVWtzVFVGQlRTeFJRVUZSTEV0QlFVc3NRMEZCUXl4RFFVRkRMRWRCUVVjN1FVRkRlRUlzV1VGQlRTeERRVUZETEZGQlFWRXNXVUZCV1N4UFFVRlBMRWxCUVVrN1FVRk5kRU1zWTBGQlVVRXNWMEZCVlN4SlFVRkpPMEZCUVVFc1VVRkRiRUk3UVVGQlFTeFJRVU5CTEZOQlFWTXNVMEZCVXl4WFFVRlhPMEZCUVVFc1VVRkROMElzWVVGQllTeFBRVUZQTEVsQlFVa3NRMEZCUXl4TlFVRlBMRmxCUVZrc1NVRkJTU3hGUVVGRkxGTkJRVk1zUTBGQlJUdEJRVUZCTEZGQlF6ZEVMRWRCUVVrc1kwRkJZenRCUVVGQkxGVkJRMlFzWVVGQllTeFpRVUZaTEdGQlFXRXNWMEZCVnl4VFFVRlRPMEZCUVVFc1VVRkRPVVE3UVVGQlFTeFJRVU5CTEVkQlFVa3NVMEZCVXl4VFFVRlRPMEZCUVVFc1ZVRkRiRUlzVDBGQlR5eFJRVUZSTzBGQlFVRXNVVUZEYmtJN1FVRkJRU3hSUVVOQkxFZEJRVWtzVDBGQlR5eFRRVUZUTEdkQ1FVRm5RaXhaUVVGWk8wRkJRVUVzVlVGRE5VTXNZVUZCWVN4UlFVRlJPMEZCUVVFc1VVRkRla0k3UVVGQlFTeE5RVU5LTzBGQlFVRXNTVUZEU2l4UFFVRlBPMEZCUTBnc1dVRkJUU3hUUVVGVE8wRkJRMllzWTBGQlVVRXNWMEZCVlN4SlFVRkpPMEZCUVVFc1VVRkRiRUk3UVVGQlFTeFJRVU5CTEZOQlFWTTdRVUZCUVN4UlFVTlVMR0ZCUVdFc1QwRkJUeXhKUVVGSkxFTkJRVU1zVFVGQlR5eFpRVUZaTEVsQlFVa3NSVUZCUlN4VFFVRlRMRU5CUVVVN1FVRkJRU3hOUVVOcVJUdEJRVUZCTEVsQlEwbzdRVUZGUVN4WFFVRlBMRmxCUVdFc1VVRkJVVHRCUVVONFFpeGhRVUZQTEV0QlFVc3NTMEZCUzBFc1lVRkJXU3hIUVVGSExFMUJRVTA3UVVGQlFTeEpRVU14UXp0QlFVRkJMRVZCUTBvN1FVRkRTanRCUVVWQkxFbEJRVTBzVTBGQlV5eExRVUZMTEV0QlFVczdRVUZEZWtJc1NVRkJUU3hUUVVGVExFVkJRVVVzUzBGQlN6dEJRVU4wUWl4SlFVRk5MRlZCUVZVc1MwRkJTeXhMUVVGTE8wRkJRekZDTEVsQlFVMHNWMEZCVnp0QlFVTnFRaXhKUVVGTkxGZEJRVmM3UVVGRGFrSXNTVUZCVFN4WFFVRlhMRTlCUVU4N1FVRkRlRUlzU1VGQlRTeFhRVUZYTEU5QlFVODdRVUZGZUVJc1UwRkJVeXhsUVVGbExFMUJRWE5DTEUxQlFXTXNUMEZCYlVJN1FVRkRNMFVzVlVGQlVTeE5RVUZOTzBGQlFVRXNTVUZEVml4TFFVRkxMRkZCUVZFN1FVRkRWQ3hoUVVGUExGVkJRVlVzVVVGQlVTeE5RVUZOTEVsQlFVa3NTVUZCU1N4UFFVRlBMRXRCUVVzN1FVRkJRU3hKUVVOMlJDeExRVUZMTEZGQlFWRTdRVUZEVkN4aFFVRlBMRlZCUVZVc1QwRkJUeXhOUVVGTkxFbEJRVWtzU1VGQlNTeFBRVUZQTEVWQlFVVTdRVUZCUVN4SlFVTnVSQ3hMUVVGTExGRkJRVkU3UVVGRFZDeGhRVUZQTEZWQlFWVXNTVUZCU1N4TlFVRk5MRWxCUVVrc1NVRkJTU3hQUVVGUExGRkJRVkVzVVVGQlVTeERRVUZETzBGQlFVRXNTVUZETDBRc1MwRkJTeXhSUVVGUk8wRkJRMVFzWVVGQlR5eFZRVUZWTEV0QlFVc3NUVUZCVFN4SlFVRkpMRWxCUVVrc1QwRkJUeXhIUVVGSExGTkJRVk1zUTBGQlF6dEJRVUZCTEVsQlF6VkVMRXRCUVVzc1VVRkJVVHRCUVVOVUxHRkJRVThzVlVGQlZTeE5RVUZOTEUxQlFVMHNTVUZCU1N4SlFVRkpMRTlCUVU4c1ZVRkJWU3hWUVVGVkxFTkJRVU03UVVGQlFTeEpRVU55UlN4TFFVRkxMRkZCUVZFN1FVRkRWQ3hoUVVGUExGVkJRVlVzVDBGQlR5eE5RVUZOTEVsQlFVa3NTVUZCU1N4UFFVRlBMRWRCUVVjc1QwRkJUeXhyUWtGQmEwSXNRMEZCUXp0QlFVRkJMRWxCUXpsRkxFdEJRVXNzVVVGQlVUdEJRVU5VTEdGQlFVOHNWVUZCVlN4TlFVRk5MRTFCUVUwc1NVRkJTU3hKUVVGSkxFOUJRVThzVlVGQlZTeFZRVUZWTEVOQlFVTTdRVUZCUVN4SlFVTnlSU3hMUVVGTExGRkJRVkU3UVVGRFZDeGhRVUZQTEZWQlFWVXNUMEZCVHl4TlFVRk5MRWxCUVVrc1NVRkJTU3hQUVVGUExFOUJRVThzVjBGQlZ5eFBRVUZQTEZkQlFWY3NRMEZCUXp0QlFVRkJMRWxCUTNSR0xFdEJRVXNzVVVGQlVUdEJRVU5VTEdGQlFVOHNWVUZCVlN4VFFVRlRMRTFCUVUwc1NVRkJTU3hKUVVGSkxFdEJRVXM3UVVGQlFTeEpRVU5xUkN4TFFVRkxMRkZCUVZFN1FVRkRWQ3hoUVVGUExGVkJRVlVzVDBGQlR5eE5RVUZOTEVsQlFVa3NTVUZCU1N4UFFVRmpMRXRCUVVzc1QwRkJUenRCUVVGQkxFbEJSWEJGTEV0QlFVc3NVVUZCVVR0QlFVRkJMRWxCUTJJc1MwRkJTeXhSUVVGUk8wRkJRVUVzU1VGRFlpeExRVUZMTEZGQlFWRTdRVUZCUVN4SlFVTmlMRXRCUVVzc1VVRkJVVHRCUVVGQkxFbEJRMklzUzBGQlN5eFJRVUZSTzBGQlFVRXNTVUZEWWl4TFFVRkxMRkZCUVZFc1pVRkJaU3hQUVVGUE8wRkJReTlDTEZsQlFVMHNUVUZCVFN4elEwRkJjME1zU1VGQlNTeEhRVUZITzBGQlFVRXNTVUZETjBRc1MwRkJTeXhSUVVGUk8wRkJRVUVzU1VGRFlqdEJRVU5KTEdGQlFVOHNWVUZCVlN4UFFVRlBMRTFCUVUwc1NVRkJTU3hKUVVGSkxFOUJRV01zU1VGQlNUdEJRVUZCTEVWQlEyaEZPMEZCUTBvN1FVRkZRU3hUUVVGVExFMUJRVTBzVFVGQll5eFBRVUZ0UWl4aFFVRXJRenRCUVVNelJpeE5RVUZKTEhWQ1FVRjFRaXhWUVVGWExGRkJRVTg3UVVGRk4wTXNUVUZCU1N4blFrRkJaMElzVlVGQlZTeG5Ra0ZCWjBJc1dVRkJXU3huUWtGQlowSXNUMEZCVHp0QlFVTTNSU3hYUVVGUExGVkJRVlVzVTBGQlV5eE5RVUZOTEVsQlFVa3NTVUZCU1N4TFFVRkxPMEZCUVVFc1JVRkRha1E3UVVGRlFTeE5RVUZKTEdkQ1FVRm5RaXhSUVVGUk8wRkJRM2hDTEZkQlFVOHNWVUZCVlN4UFFVRlBMRTFCUVUwc1NVRkJTU3hKUVVGSkxFOUJRVThzUlVGQlJUdEJRVUZCTEVWQlEyNUVPMEZCUlVFc1RVRkJTU3huUWtGQlowSXNVVUZCVVR0QlFVTjRRaXhYUVVGUExGVkJRVlVzVDBGQlR5eE5RVUZOTEVsQlFVa3NTVUZCU1N4UFFVRlBMRU5CUVVNc1QwRkJUeXhYUVVGWExFOUJRVThzVjBGQlZ5eERRVUZETzBGQlFVRXNSVUZEZGtZN1FVRkZRU3hOUVVGSkxHZENRVUZuUWl4VFFVRlRPMEZCUTNwQ0xGZEJRVThzVlVGQlZTeFJRVUZSTEUxQlFVMHNTVUZCU1N4SlFVRkpMRTlCUVU4c1MwRkJTenRCUVVGQkxFVkJRM1pFTzBGQlJVRXNUVUZCU1N4WlFVRlpMR0ZCUVdFN1FVRkRla0lzVjBGQlR5eGxRVUZsTEZsQlFWa3NVVUZCVVN4TlFVRk5MRXRCUVVzN1FVRkJRU3hGUVVONlJEdEJRVVZCTEUxQlFVa3NUMEZCVHl4blFrRkJaMElzV1VGQldUdEJRVU51UXl4WFFVRlBMRmxCUVZrc1RVRkJUU3hMUVVGTE8wRkJRVUVzUlVGRGJFTTdRVUZGUVN4UlFVRk5MRTFCUVUwc2FVTkJRV2xETzBGQlEycEVPMEZCYTBKUExGTkJRVk1zVTBGQmJVUXNWVUZCYjBJc1EwRkJReXhIUVVGSE8wRkJRM1pHTEZOQlFVOHNVMEZCVlN4TFFVRlZMRXRCUVdsRE8wRkJRM2hFTEZWQlFVMHNTVUZCU1N4UlFVRlJPMEZCUld4Q0xGRkJRVWtzVDBGQlR5eE5RVUZOTEZsQlFWa3NRMEZCUXl4RlFVRkZMRmRCUVZjc1lVRkJZU3hMUVVGTExFTkJRVU1zUlVGQlJTeFhRVUZYTEZOQlFWTXNSMEZCUnp0QlFVTnVSaXhqUVVGUkxGZEJRVmNzU1VGQlNTeFpRVUZaTEVWQlFVVXNUMEZCVHl4RFFVRkRPMEZCUVVFc1NVRkRha1E3UVVGRlFTeFZRVUZOTEU5QlFVOHNTVUZCU1R0QlFVVnFRaXhWUVVGTkxGRkJRVFJETzBGQlFVRXNUVUZET1VNc1VVRkJVU3hMUVVGTExHTkJRV01zUTBGQlF5eERRVUZETEVWQlFVVXNTVUZCU1N4RFFVRkRMRU5CUVVNc1YwRkJWeXhGUVVGRkxFOUJRVThzUzBGQlN5eERRVUZETEUxQlFVMDdRVUZEYWtVc1kwRkJUU3hOUVVGTkxGTkJRVk1zVTBGQlV6dEJRVU01UWl4alFVRk5MRTlCUVU4c1RVRkJUU3hMUVVGTExFOUJRVThzU1VGQlNUdEJRVU51UXl4bFFVRlBMRU5CUVVNc1MwRkJTeXhKUVVGSk8wRkJRVUVzVFVGRGNrSXNRMEZCUXp0QlFVRkJMRWxCUTB3N1FVRkZRU3hWUVVGTkxGVkJRVlU3UVVGQlFTeE5RVU5hTEZGQlFWRXNTMEZCU3l4WFFVRlhMRU5CUVVNc1EwRkJReXhGUVVGRkxFbEJRVWtzUTBGQlF5eERRVUZEUVN4aFFVRlpMRVZCUVVVc1UwRkJVeXhMUVVGTExGRkJRVkVzUjBGQlIwTXNVVUZCVHl4RFFVRkRMRTFCUVUwN1FVRkRia1lzV1VGQlNTeExRVUZMTzBGQlEwd3NlVUpCUVdVc1NVRkJTU3hYUVVGWExFMUJRVTFFTEZsQlFWY3NWMEZCVnl4TFFVRkxMRWRCUVVjc1EwRkJReXhKUVVGSk8wRkJRVUVzV1VGRGJrVXNXVUZCV1R0QlFVRkJMRmxCUTFvc1kwRkJZenRCUVVGQkxGbEJRMlFzVDBGQlR6dEJRVUZCTEZWQlExZ3NRMEZCUXp0QlFVRkJMRkZCUTB3N1FVRkRRU3hsUVVGUExFTkJRVU5CTEdGQlFWbERMRTlCUVUwN1FVRkJRU3hOUVVNNVFpeERRVUZETzBGQlFVRXNTVUZEVER0QlFVVkJMRmRCUVU4c1MwRkJTenRCUVVOYUxGZEJRVThzUzBGQlN6dEJRVVZhTEd0Q1FVRmpMRVZCUVVVc1IwRkJSeXhUUVVGVExGbEJRVmtzVDBGQlR5eFRRVUZUTEZGQlFWRXNSMEZCUnl4SFFVRkhPMEZCUVVFc1JVRkRNVVU3UVVGRFNqdEJRVFJEUVN4VFFVRlRMRk5CUVZNc1QwRkJUenRCUVVONlFpeE5RVUZOTEZOQlFWTXNUMEZCVHp0QlFVTjBRaXhMUVVGTExGTkJRVk1zVDBGQlR6dEJRVU55UWl4SlFVRkpMRk5CUVZNc1QwRkJUenRCUVVOd1FpeEpRVUZKTEZOQlFWTXNUMEZCVHpzN08wRkZOMlZ3UWl4UFFVRlBReXhYUVVGVk8wRkJRMnBDTEU5QlFVOHNVMEZCVXp0QlFVTm9RaXhQUVVGUExGTkJRVk03UVVGRGFFSXNUMEZCVDBNc1ZVRkJVenM3TzBGRFEyaENMRTlCUVU4c1UwRkJVenRCUVVOb1FpeFBRVUZQUXl4WFFVRlZPMEZCUTJwQ0xFOUJRVTlETEdOQlFXRTdRVUZYY0VJc1NVRkJUU3hyUWtGQmEwSTdRVUZGYWtJc1NVRkJUU3hWUVVGVlF5eE5RVUZMTzBGQlJ6VkNMRWxCUVUwc1QwRkJUeXhQUVVGUExIRkNRVUZ4UWp0QlFVTjZReXhKUVVGTkxGbEJRVmtzVDBGQlR5d3dRa0ZCTUVJN1FVRkRia1FzU1VGQlRTeGxRVUZsTEU5QlFVOHNiMEpCUVc5Q08wRkJRMmhFTEVsQlFVMHNiMEpCUVc5Q0xFOUJRVThzZVVKQlFYbENPMEZCUXpGRUxFbEJRVTBzYjBKQlFXOUNMRTlCUVU4c2VVSkJRWGxDTzBGQk5VSXhSRHRCUVc5RFR5eEpRVUZOTEZWQlFVNHNZMEZCYzBKRExGTkJRVkVzVDBGQlR6dEJRVUZCTEVWQmJVSjRReXhqUVVGak8wRkJRMVlzVlVGQlRUdEJRV0pXTEZOQlFVTXNUVUZMUnp0QlFVRkJMRTFCUTBFc1RVRkJUU3hEUVVGRE8wRkJRVUVzVFVGRFVDeFJRVUZSTEc5Q1FVRkpMRWxCUVdkQ08wRkJRVUVzU1VGRGFFTTdRVUZOU1N4VlFVRk5MRlZCUVZVc1MwRkJTenRCUVVOeVFpeFJRVUZKTEVOQlFVTXNVVUZCVVN4SlFVRkpMRVZCUVVjc1QwRkJUU3hOUVVGTkxIZENRVUYzUWp0QlFVTjRSQ3hUUVVGTExGRkJRVkVzVVVGQlVTeEpRVUZKTzBGQlFVRXNSVUZETjBJN1FVRkJRU3hGUVhKQ1FTeFBRVUZQTzBGQlEwZ3NTVUZCUVVFc1UwRkJVU3hqUVVGakxFbEJRVWs3UVVGQlFTeEZRVU01UWp0QlFVRkJMRVZCV1VFN1FVRkJRU3hGUVZOQkxFOUJRVThzWTBGQmFVVTdRVUZEY0VVc1ZVRkJUU3hQUVVGUExFdEJRVXNzVFVGQlRTeG5Ra0ZCWjBJc1dVRkJXVHRCUVVWd1JDeFJRVUZKTEZGQlFWRXNTMEZCU3l4VFFVRlRMRVZCUVVVc1dVRkJXVHRCUVVOd1F5eFhRVUZMTEZOQlFWTXNSVUZCUlN4WFFVRlhPMEZCUVVFc1VVRkRka0k3UVVGQlFTeFJRVU5CTEVsQlFVbEVMRTFCUVVzc1VVRkJVU3hMUVVGTExGZEJRVmNzUzBGQlN5eFpRVUV3UWl4RFFVRkRPMEZCUVVFc1RVRkRja1U3UVVGQlFTeEpRVU5LTzBGQlJVRXNWVUZCVFN4UFFVRlBMRTlCUVU4c1UwRkJVeXhaUVVGWkxFbEJRVWtzV1VGQldUdEJRVUZCTEVWQlF6ZEVPMEZCUVVFc1JVRkZRU3hMUVVGTExGTkJRV2xDTEZGQlFYbENPMEZCUXpORExGVkJRVTFGTEZWQlFWTXNTMEZCU3l4TlFVRk5MR05CUVdNc1NVRkJTVHRCUVVVMVF5eFJRVUZKUVN4WFFVRlZMRXRCUVVzc1UwRkJVeXhGUVVGRkxGbEJRVms3UVVGRGRFTXNXVUZCVFN4WlFVRlpMRWxCUVVsQkxGRkJRVThzUzBGQlN5eEpRVUZKTEVOQlFVTXNUVUZCVFN4RlFVRkZMRk5CUVZNc1JVRkJSU3hMUVVGTExFVkJRVVVzUTBGQlF6dEJRVU5zUlN4WFFVRkxMRk5CUVZNc1JVRkJSU3hYUVVGWExGbEJRVmtzVFVGQlRTeEpRVUZKUml4TlFVRkxMRkZCUVZFc1YwRkJWeXhOUVVGTkxFTkJRVU03UVVGQlFTeEpRVU53Ump0QlFVVkJMRmRCUVU4c1RVRkJUU3hMUVVGTFJTeFZRVUZUTEZOQlFWTXNTVUZCU1N4SlFVRkpMRTFCUVUwc1IwRkJSeXhOUVVGTk8wRkJRVUVzUlVGREwwUTdRVUZCUVR0QlFVRkJMRVZCUjBFc2JVSkJRVzFDTEVkQlFUSkNMR05CUVRKRE8wRkJRM0pHTEZWQlFVMHNUMEZCVHl4TFFVRkxMRTFCUVUwc1owSkJRV2RDTEZsQlFWazdRVUZGY0VRc1VVRkJTU3hEUVVGRExFMUJRVTA3UVVGRFVDeFpRVUZOTEUxQlFVMHNSMEZCUnl4TFFVRkxMRmxCUVZrc1NVRkJTU3dyUWtGQkswSXNXVUZCV1N4SFFVRkhPMEZCUVVFc1NVRkRkRVk3UVVGRlFTeFZRVUZOTEZGQlFWRXNTMEZCU3l4WlFVRlpPMEZCUXk5Q0xGRkJRVWtzVDBGQlR5eFZRVUZWTEdGQlFXRTdRVUZET1VJc1lVRkJUeXhKUVVGSlJpeE5RVUZMTEZGQlFWRXNTMEZCU3l4WFFVRlhMRXRCUVVzN1FVRkJRU3hKUVVOcVJDeFBRVUZQTzBGQlEwZ3NZVUZCVHp0QlFVRkJMRWxCUTFnN1FVRkJRU3hGUVVOS08wRkJRVUU3UVVGQlFTeEZRVWRCTEcxQ1FVTkpMRWRCUTBFc1kwRkRRU3hQUVVOR08wRkJRMFVzVlVGQlRTeFhRVUZYTEUxQlFVMHNWMEZCVnp0QlFVTnNReXhWUVVGTkxFOUJRVThzUzBGQlN5eE5RVUZOTEdkQ1FVRm5RaXhaUVVGWk8wRkJSWEJFTEZGQlFVa3NRMEZCUXl4TlFVRk5PMEZCUTFBc1dVRkJUU3hOUVVGTkxFZEJRVWNzUzBGQlN5eFpRVUZaTEVsQlFVa3NjMEpCUVhOQ0xGbEJRVmtzUjBGQlJ6dEJRVUZCTEVsQlF6ZEZPMEZCUlVFc1VVRkJTU3hMUVVGTExGbEJRVmtzVFVGQlRTeFZRVUZWTzBGQlEycERMRmRCUVVzc1dVRkJXU3hKUVVGSkxFMUJRVTBzVjBGQlowSTdRVUZCUVN4SlFVTXZRenRCUVVGQkxFVkJRMG83UVVGQlFUdEJRVUZCTEVWQlIwRXNZVUZCWVN4UFFVRm5RaXhaUVVGelF6dEJRVU12UkN4WlFVRlJMRTFCUVUwc1MwRkJTenRCUVVOdVFpeFJRVUZKTEdsQ1FVRnBRa0VzVFVGQlN5eFBRVUZQTzBGQlF6ZENMR0ZCUVU4c1YwRkJWeXhqUVVGakxFdEJRVXM3UVVGQlFTeEpRVU42UXp0QlFVTkJMRkZCUVVrc2FVSkJRV2xDTEU5QlFVODdRVUZEZUVJc1lVRkJUeXhYUVVGWE8wRkJRVUVzVVVGRFpDeE5RVUZOTEV0QlFVc3NVMEZCVXl4SFFVRkhMRWxCUVVrc1RVRkJUU3hQUVVGUExHVkJRV1VzVFVGQlRTeEpRVUZKTzBGQlFVRXNVVUZEYWtVc1RVRkJUVHRCUVVGQkxFMUJRMVk3UVVGQlFTeEpRVU5LTzBGQlEwRXNaVUZCVnl4clFrRkJhMElzWjBOQlFXZERMRWRCUVVjc1MwRkJTeXhGUVVGRk8wRkJRVUVzUlVGRE0wVTdRVUZCUVR0QlFVRkJMRVZCUjBFc1lVRkJZU3hQUVVGblFpeFpRVUZ2UWl4WlFVRnpRenRCUVVOdVJpeFJRVUZKTEZWQlFWVXNVVUZCVVN4VlFVRlZMRkZCUVZjN1FVRkRka01zWVVGQlR5eFhRVUZYTEdGQlFXRXNTVUZCU1VFc1RVRkJTeXhSUVVGUkxFMUJRVTBzUTBGQlF5eERRVUZETEVOQlFVTTdRVUZCUVN4SlFVTTNSRHRCUVVWQkxGVkJRVTBzVDBGQlR5eExRVUZMTEUxQlFVMHNZMEZCWXl4VlFVRlZMRWRCUVVjc1dVRkJXU3hEUVVGRE8wRkJRMmhGTEZWQlFVMHNXVUZCV1N4SlFVRkpMRXRCUVVzc1NVRkJTU3hEUVVGRExGRkJRVkVzU1VGQlNTeFRRVUZUTEVWQlFVVXNTMEZCU3l4RlFVRkZMRU5CUVVNN1FVRkRMMFFzVVVGQlNTeERRVUZETEUxQlFVMHNVVUZCVVN4TFFVRkxMRVZCUVVjc1QwRkJUU3hOUVVGTkxIbENRVUY1UWp0QlFVTm9SU3hsUVVGWExHRkJRV0VzU1VGQlNVRXNUVUZCU3l4UlFVRlJMRmRCUVZjc1MwRkJTeXhEUVVGRE8wRkJRVUVzUlVGRE9VUTdRVUZCUVR0QlFVRkJMRVZCUjBFc2EwSkJRMGtzUjBGRFFTeFpRVU5CTEZsQlEwRXNXVUZEU1R0QlFVTktMRkZCUVVrN1FVRkRRU3haUVVGTkxGRkJRVk1zUzBGQlN5eFZRVUZWTzBGQlFVRXNVVUZETVVJc1IwRkJSeXhYUVVGWExGZEJRVEpDTzBGQlFVRXNUVUZETjBNN1FVRkZRU3hWUVVGSkxHbENRVUZwUWtFc1RVRkJTeXhUUVVGVE8wRkJReTlDTEcxQ1FVRlhMR0ZCUVdFc1MwRkJTenRCUVVGQkxFMUJRMnBETEZkQlFWY3NhVUpCUVdsQ0xGTkJRVk03UVVGRGFrTXNZMEZEU3l4TFFVRkxMRU5CUVVOSExGZEJRVlVzUzBGQlN5eGhRVUZoUVN4UlFVRlBMRmxCUVZrc1ZVRkJWU3hEUVVGRExFVkJRMmhGTEUxQlFVMHNRMEZCUXl4VlFVRlZMRXRCUVVzc1lVRkJZU3hQUVVGUExGVkJRVlVzUTBGQlF6dEJRVUZCTEUxQlF6bEVMRTlCUVU4N1FVRkRTQ3hoUVVGTExHRkJRV0VzVDBGQlR5eFpRVUZaTEZWQlFWVTdRVUZCUVN4TlFVTnVSRHRCUVVGQkxFbEJRMG9zVTBGQlV5eFBRVUZQTzBGQlExb3NWMEZCU3l4aFFVRmhMRTlCUVU4c1ZVRkJWVHRCUVVGQkxFbEJRM1pETzBGQlFVRXNSVUZEU2p0QlFVRkJPMEZCUVVFc1JVRkhRU3hOUVVGTkxFMUJRVTA3UVVGQlFTeEpRVU5TTEZWQlFWVXNTVUZCU1N4UlFVRlJPMEZCUVVFc1NVRkRkRUlzVDBGQlR5eExRVUZMTEUxQlFVMDdRVUZCUVN4SlFVTnNRaXhoUVVGaExFMUJRVTBzUzBGQlN5eE5RVUZOTEV0QlFVc3NUVUZCVFN4SFFVRkhMRVZCUVVVc1MwRkJTeXhIUVVGSE8wRkJRVUVzU1VGRGRFUXNVVUZCVVN4SlFVRkpMR3RDUVVGclFqdEJRVUZCTEVsQlF6bENMRk5CUVVGRExGZEJRVlU3UVVGQlFTeEZRVU5rTEVsQlRVa3NRMEZCUXl4SFFVRnJRanRCUVVOdVFpeFZRVUZOTEU5QlFVOHNTVUZCU1N4SlFVRkpPMEZCUVVFN1FVRkJRU3hOUVVWcVFpeEZRVUZGTEd0Q1FVRnJRaXhMUVVGTExFMUJRVTA3UVVGQlFTeEpRVU51UXp0QlFVVkJMRk5CUVVzc1VVRkJVU3h6UWtGQmMwSXNTMEZCU3l4clFrRkJhMElzUzBGQlN5eEpRVUZKTEVOQlFVTTdRVUZEY0VVc1UwRkJTeXhSUVVGUkxIVkNRVUYxUWl4TFFVRkxMRzFDUVVGdFFpeExRVUZMTEVsQlFVa3NRMEZCUXp0QlFVTjBSU3hUUVVGTExGRkJRVkVzZFVKQlFYVkNMRXRCUVVzc2JVSkJRVzFDTEV0QlFVc3NTVUZCU1N4RFFVRkRPMEZCUlhSRkxGTkJRVXNzVFVGQlRTeFpRVUZaTzBGQlJYWkNMRmRCUVU4c1NVRkJTU3hSUVVGUkxFTkJRVU1zVTBGQlV5eFhRVUZYTzBGQlEzQkRMRlZCUVVrc1UwRkRRVUVzVjBGQlZTeEpRVU5LTEZkQlFWY3NUVUZCVFR0QlFVTmlMR1ZCUVU4c1RVRkJUU3hwUWtGQmFVSXNRMEZCUXp0QlFVTXZRaXhwUWtGQlV6dEJRVUZCTEUxQlEySXNSMEZCUjBFc1VVRkJUeXhKUVVOV08wRkJSVllzV1VGQlRTeFJRVUZSTEUxQlFVMDdRVUZEYUVJc1dVRkJTU3hSUVVGUk8wRkJRMUlzZFVKQlFXRXNUVUZCVFR0QlFVTnVRaXh0UWtGQlV6dEJRVUZCTEZGQlEySTdRVUZCUVN4TlFVTktPMEZCUlVFc1dVRkJUU3hSUVVGUkxFbEJRVWs3UVVGQlFTeFJRVU5rTzBGQlFVRXNVVUZEUVR0QlFVRkJMRkZCUTBFN1FVRkJRU3hSUVVOQkxFTkJRVU1zVTBGQk5rSTdRVUZETVVJc1kwRkJTVHRCUVVOQkxHbENRVUZMTEU5QlFVOHNUVUZCVFN4VlFVRlZPMEZCUXpWQ0xHbENRVUZMTEZOQlFWTXNSVUZCUlN4aFFVRmhPMEZCUXpkQ0xHbENRVUZMTEZOQlFWTXNSVUZCUlN4UFFVRlBMRWxCUVVrc1RVRkJUVHRCUVVNM1FpeHJRa0ZCU1N4bFFVRmxMRXRCUVVzN1FVRkRlRUlzYlVKQlFVc3NVMEZCVXp0QlFVTmtMRzFDUVVGTExFMUJRVTBzWTBGQll6dEJRVU42UWl4eFFrRkJUeXhMUVVGTExGTkJRVk1zUlVGQlJUdEJRVUZCTEZsQlF6TkNMRU5CUVVNN1FVRkZSQ3h2UWtGQlVTeEpRVUZKTzBGQlFVRXNWVUZEYUVJc1UwRkJVeXhQUVVGUE8wRkJRMW9zYlVKQlFVOHNTMEZCU3p0QlFVRkJMRlZCUTJoQ08wRkJRVUVzVVVGRFNqdEJRVUZCTEZGQlEwRTdRVUZCUVN4UlFVTkJPMEZCUVVFc1RVRkRTanRCUVVGQkxFbEJRMG9zUTBGQlF6dEJRVUZCTEVWQlEwdzdRVUZCUVR0QlFVRkJMRVZCUjBFc2VVSkJRMGtzUjBGRFFTeFRRVU5CTEdGQlEwWTdRVUZEUlN4VlFVRk5ReXhQUVVGTkxHOUNRVUZKTEVsQlFVa3NRMEZCUXl4SFFVRkhMRTlCUVU4c1MwRkJTeXhSUVVGUkxGZEJRVmNzUTBGQlF5eEhRVUZITEVkQlFVY3NWMEZCVnl4RFFVRkRPMEZCUXpGRkxHVkJRVmNzVVVGQlVVRXNTMEZCU1N4UFFVRlBMRWRCUVVjN1FVRkROMElzVjBGQlN5eFBRVUZQTEVsQlFXMURPMEZCUVVFc1NVRkRia1E3UVVGQlFTeEZRVU5LTzBGQlFVRTdRVUZCUVN4RlFVZEJMR05CUTBrc1IwRkRRU3hUUVVOQlNDeFRRVU5CTEZsQlEwWTdRVUZEUlN4VFFVRkxMRXRCUVVzc1UwRkJVMEVzVDBGQlRTeEhRVUZITEVkQlFVY3NWMEZCVnl4WFFVRXlRaXhEUVVGRE8wRkJRVUVzUlVGRE1VVTdRVUZCUVR0QlFVRkJMRVZCUjBFc2IwSkJRMGtzV1VGRFFTeE5RVU56UXp0QlFVTjBReXhWUVVGTkxFVkJRVVVzVFVGQlRTeEpRVUZKTEV0QlFVc3NVMEZCVXp0QlFVTm9ReXhSUVVGSkxFTkJRVU1zVFVGQlR5eFBRVUZOTEUxQlFVMHNPRU5CUVRoRE8wRkJSWFJGTEZWQlFVMHNVMEZCVXl4TFFVRkxMRTFCUVUwc1kwRkJZeXhWUVVGVk8wRkJRMnhFTEZGQlFVa3NRMEZCUXl4UFFVRlJMRTlCUVUwc1RVRkJUU3hyUWtGQmEwSTdRVUZGTTBNc1ZVRkJUU3haUVVGWkxFbEJRVWtzVDBGQlR5eFJRVUZSTEVsQlFVa3NRMEZCUXl4TlFVRk5MRVZCUVVVc1UwRkJVeXhGUVVGRkxFdEJRVXNzUlVGQlJTeERRVUZETzBGQlJYSkZMRmRCUVU4N1FVRkJRU3hOUVVOSU8wRkJRVUVzVFVGRFFTeEpRVUZKUml4TlFVRkxMRkZCUVZFc1YwRkJWeXhKUVVGSk8wRkJRVUVzVFVGRGFFTXNTVUZCU1N4alFVRmpPMEZCUVVFc1RVRkRiRUk3UVVGQlFTeE5RVU5CTzBGQlFVRXNTVUZEU2p0QlFVRkJMRVZCUTBvN1FVRkJRVHRCUVVGQkxFVkJSMEVzUlVGNFVGRXNUVUZOVUN4blFrRnJVRUVzWVVGQldTeEZRVUZGTEZsQlFXOUNMRTFCUVN0Q08wRkJRemxFTEZWQlFVMHNVMEZCVXl4TFFVRkxMRzlDUVVGdlFpeFpRVUZaTEVsQlFVazdRVUZEZUVRc1YwRkJUeXhMUVVGTExGTkJRVk1zUlVGQlJTeE5RVUZQTEZWQlFWVXNSMEZCUnl4TlFVRk5PMEZCUVVFc1JVRkRja1E3UVVGQlFUdEJRVUZCTEVWQlIwRXNRMEZCUXl4cFFrRkJhVUlzUlVGQlJTeFpRVUZ2UWl4TlFVRjNRenRCUVVNMVJTeFhRVUZQTEVsQlFVa3NVVUZCVVN4RFFVRkRMRk5CUVZNc1YwRkJWenRCUVVOd1F5eFZRVUZKTzBGQlEwRXNZMEZCVFN4VFFVRlRMRXRCUVVzc2IwSkJRVzlDTEZsQlFWa3NTVUZCU1R0QlFVTjRSQ3hoUVVGTExGTkJRVk1zUlVGQlJTeE5RVUZQTEV0QlFVc3NSMEZCUnl4UlFVRlJMRU5CUVVNc1IwRkJSeXhSUVVGUk8wRkJReTlETEdOQlFVazdRVUZEUVN4dlFrRkJVU3hMUVVGTExGTkJRVk1zUlVGQlJTeE5RVUZQTEZsQlFWa3NSMEZCUnl4RFFVRkRPMEZCUVVFc1ZVRkRia1FzVTBGQlV5eFBRVUZQTzBGQlExb3NiVUpCUVU4c1MwRkJTenRCUVVGQkxGVkJRMmhDTzBGQlFVRXNVVUZEU2l4RFFVRkRPMEZCUVVFc1RVRkRUQ3hUUVVGVExFOUJRVTg3UVVGRFdpeGxRVUZQTEV0QlFVczdRVUZCUVN4TlFVTm9RanRCUVVGQkxFbEJRMG9zUTBGQlF6dEJRVUZCTEVWQlEwdzdRVUZCUVR0QlFVRkJMRVZCUjBFc1EwRkJReXhwUWtGQmFVSXNSVUZCUlN4TlFVRmpMRTlCUVdkQ08wRkJRemxETEZWQlFVMHNVVUZCVVN4TFFVRkxMRk5CUVZNc1JVRkJSVHRCUVVNNVFpeFZRVUZOTEU5QlFVOHNTMEZCU3l4TlFVRk5MR2RDUVVGblFpeEpRVUZKTzBGQlJUVkRMRlZCUVUwc1ZVRkJWU3hKUVVGSlFTeE5RVUZMTEZGQlFWRXNTMEZCU3l4WFFVRlhMRXRCUVVzN1FVRkRkRVFzVlVGQlRTeHZRa0ZCYjBJc1RVRkJUU3hQUVVGUE8wRkJSWFpETEZWQlFVMDdRVUZCUVN4TlFVTkdPMEZCUVVFc1RVRkRRU3hKUVVGSlFTeE5RVUZMTEZGQlFWRXNVMEZCVXl4RFFVRkRMRTFCUVUwc1owSkJRV2RDTEUxQlFVMHNUMEZCVHl4RFFVRkRPMEZCUVVFc1RVRkRMMFFzU1VGQlNTeGpRVUZqTzBGQlFVRXNUVUZEYkVJN1FVRkJRU3hOUVVOQk8wRkJRVUVzVFVGRFFTeERRVUZETEVkQlFVY3NVVUZCVVR0QlFVTlNMRmxCUVVrN1FVRkRRU3huUWtGQlRTeFpRVUZaTEVkQlFVYzdRVUZCUVN4UlFVTjZRaXhUUVVGVExFZEJRVWM3UVVGRFVpeHJRa0ZCVVN4TlFVRk5MRU5CUVVNN1FVRkJRU3hSUVVOdVFqdEJRVUZCTEUxQlEwbzdRVUZCUVN4SlFVTktPMEZCUVVFc1JVRkRTanRCUVVGQk8wRkJRVUVzUlVGSFFTeE5RVUZOTEUxQlFVMDdRVUZCUVN4SlFVTlNMRTFCUVUwc1NVRkJTU3hMUVVGTE8wRkJRVUVzU1VGRFppeFBRVUZQTEV0QlFVc3NUVUZCVFR0QlFVRkJMRWxCUTJ4Q0xHRkJRV0VzVFVGQlRTeExRVUZMTEUxQlFVMHNTMEZCU3l4TlFVRk5MRWRCUVVjc1JVRkJSU3hMUVVGTExFZEJRVWM3UVVGQlFTeEpRVU4wUkN4UlFVRlJMRWxCUVVrc1pVRkJaVHRCUVVGQkxFbEJRek5DTEZOQlFVRkpMRmRCUVZVN1FVRkJRU3hGUVVOa0xFbEJUVWtzUTBGQlF5eEhRVUZyUWp0QlFVTnVRaXhWUVVGTkxGRkJRVkVzU1VGQlNTeEpRVUZKTEZWQlFWVTdRVUZCUVN4TlFVTTFRaXhoUVVGaE8wRkJRVUVzVFVGRFlpeG5Ra0ZCWjBJc1MwRkJTeXhOUVVGTk8wRkJRVUVzVFVGRE0wSXNaMEpCUVdkQ0xFdEJRVXM3UVVGQlFTeE5RVU55UWl4UFFVRlBPMEZCUVVFc1RVRkRVQ3hSUVVGUk8wRkJRVUVzVFVGRFVpeGhRVUZoTzBGQlFVRXNTVUZEYWtJc1EwRkJRenRCUVVWRUxGZEJRVThzU1VGQlNTeFJRVUZSTEVOQlFVTXNVMEZCVXl4WFFVRlhPMEZCUTNCRExGbEJRVTBzWTBGQll5eEpRVUZKTEVsQlFVa3NXVUZCV1R0QlFVVjRReXhWUVVGSkxGTkJRMEZCTEZkQlFWVXNTVUZEU2l4WFFVRlhMRTFCUVUwN1FVRkRZaXhsUVVGUExFMUJRVTBzYVVKQlFXbENMRU5CUVVNN1FVRkRMMElzYVVKQlFWTTdRVUZEVkN4dlFrRkJXU3hQUVVGUE8wRkJRVUVzVFVGRGRrSXNSMEZCUjBFc1VVRkJUeXhKUVVOV08wRkJSVllzV1VGQlRTeFhRVUZYU2l4TlFVRkxMR3RDUVVGclFpeGhRVUZoTEVOQlFVTXNSMEZCUnl4UlFVRlJPMEZCUXpkRUxGbEJRVWs3UVVGRFFTeGpRVUZKTEZGQlFWRTdRVUZEVWl4NVFrRkJZU3hOUVVGTk8wRkJRMjVDTEhGQ1FVRlRPMEZCUVVFc1ZVRkRZanRCUVVWQkxHZENRVUZOTEZsQlFWa3NSMEZCUnp0QlFVTnlRaXhsUVVGTExGTkJRVk1zUlVGQlJTeFJRVUZSTzBGQlJYaENMR2RDUVVGTkxFMUJRVTA3UVVGQlFTeFpRVU5TTEUxQlFVMHNVVUZCVVN4WlFVRlpMRXRCUVVzc1kwRkJZeXhMUVVGTExFbEJRVWtzUTBGQlF6dEJRVUZCTEZsQlEzWkVMRTFCUVUwN1FVRkJRU3hqUVVOR08wRkJRVUVzWTBGRFFTeExRVUZMTEhsQ1FVRjVRaXhMUVVGTExFbEJRVWs3UVVGQlFTeFpRVU16UXp0QlFVRkJMRlZCUTBvN1FVRkZRU3hsUVVGTExGTkJRVk1zUlVGQlJTeFBRVUZQTEVsQlFVa3NUVUZCVFR0QlFVTTNRaXhuUWtGQlNTeFJRVUZSTEVOQlFVTXNUMEZCVHl4TlFVRk5MRmRCUVZjc1JVRkJSU3hEUVVGRE8wRkJRM2hETEcxQ1FVRlBMRXRCUVVzc1UwRkJVeXhGUVVGRk8wRkJRVUVzVlVGRE0wSXNRMEZCUXp0QlFVVkVMR3RDUVVGUkxFbEJRVWs3UVVGQlFTeFJRVU5vUWl4VFFVRlRMRTlCUVU4N1FVRkRXaXhwUWtGQlR5eExRVUZMTzBGQlFVRXNVVUZEYUVJN1FVRkJRU3hOUVVOS0xFTkJRVU03UVVGQlFTeEpRVU5NTEVOQlFVTTdRVUZCUVN4RlFVTk1PMEZCUVVFc1JVRkZRU3hQUVVGUE8wRkJRMGdzVlVGQlRTeEZRVUZGTEU5QlFVOHNTVUZCU1N4TFFVRkxMRk5CUVZNN1FVRkRha01zWlVGQlZ5eE5RVUZOTEU5QlFVOHNUMEZCVHl4SFFVRkhPMEZCUXpsQ0xHRkJRVThzVDBGQlR5eEZRVUZGTzBGQlEyaENMRk5CUVVjN1FVRkJRU3hKUVVOUU8wRkJRVUVzUlVGRFNqdEJRVU5LTzBGQmJVTlBMRk5CUVZNc1RVRkJUU3hOUVVGakxGTkJRVEJETzBGQlF6RkZMRk5CUVU4c1UwRkJWU3hMUVVGM1F5eExRVUUwUWp0QlFVTnFSaXhWUVVGTkxFOUJRVThzU1VGQlNUdEJRVU5xUWl4UlFVRkpMRU5CUVVNc1MwRkJUU3hQUVVGTkxFMUJRVTBzUjBGQlJ5eEpRVUZKTEVsQlFVa3NjMEpCUVhOQ08wRkJSWGhFTEZWQlFVMHNSVUZCUlN4alFVRmpMRU5CUVVNc1IwRkJSeXhqUVVGakxFTkJRVU1zUjBGQlJ5eHBRa0ZCYVVJc1EwRkJReXhGUVVGRkxFbEJRVWs3UVVGRmNFVXNWVUZCVFN4VlFVRlZMRWxCUVVrN1FVRkJRU3hOUVVOb1FpeE5RVUZOTzBGQlFVRXNUVUZEVGl4VlFVRlZPMEZCUVVFc1VVRkRUanRCUVVGQkxGVkJRMGtzVFVGQlRUdEJRVUZCTEZWQlEwNHNXVUZCV1N4RlFVRkZMRXRCUVVzN1FVRkJRU3hWUVVOdVFpeFZRVUZWTzBGQlFVRXNXVUZEVGl4SFFVRkhMRTlCUVU4c1VVRkJVU3hYUVVGWExFVkJRVVVzU1VGQlNTeERRVUZETEVOQlFVTk5MRTlCUVUwc1NVRkJTU3hQUVVGUE8wRkJRVUVzWTBGRGJFUXNUVUZCVFR0QlFVRkJMR05CUTA0c1dVRkJXU3hGUVVGRkxFMUJRVUZCTEUxQlFVczdRVUZCUVN4alFVTnVRaXhWUVVGVkxFdEJRVXNzU1VGQlNTeERRVUZETEZOQlFWTXNSVUZCUlN4TlFVRk5MRTlCUVU4c1dVRkJXU3hKUVVGSkxFVkJRVVU3UVVGQlFTeFpRVU5zUlN4RlFVRkZPMEZCUVVFc1dVRkRSaXhIUVVGSExFOUJRVThzVVVGQlVTeFhRVUZYTEVWQlFVVXNTVUZCU1N4RFFVRkRMRU5CUVVOQkxFOUJRVTBzU1VGQlNTeFBRVUZQTzBGQlFVRXNZMEZEYkVRc1RVRkJUVHRCUVVGQkxHTkJRMDRzV1VGQldTeEZRVUZGTEUxQlFVRkJMRTFCUVVzN1FVRkJRU3hqUVVOdVFpeFZRVUZWTEV0QlFVc3NTVUZCU1N4RFFVRkRMRk5CUVZNc1JVRkJSU3hOUVVGTkxFOUJRVThzV1VGQldTeEpRVUZKTEVWQlFVVTdRVUZCUVN4WlFVTnNSU3hGUVVGRk8wRkJRVUVzV1VGRFJpeEhRVUZITEU5QlFVOHNUMEZCVHl4alFVRmpMRVZCUVVVc1NVRkJTU3hEUVVGRExFVkJRVVVzVFVGQlFVRXNUMEZCVFN4TlFVRk5MRTFCUVUwc1RVRkJUU3hQUVVGUE8wRkJRVUVzWTBGRGJrVXNUVUZCVFR0QlFVRkJMR05CUTA0c1dVRkJXVHRCUVVGQkxHZENRVU5TTEVkQlFVbEJMRk5CUVZFc1JVRkJSU3hOUVVGQlFTeE5RVUZMTzBGQlFVRXNaMEpCUTI1Q08wRkJRVUVzWjBKQlEwRXNVMEZCVXl4UFFVRlBMRk5CUVZNc1QwRkJUeXhSUVVGUkxGVkJRVlU3UVVGQlFTeGpRVU4wUkR0QlFVRkJMRmxCUTBvc1JVRkJSVHRCUVVGQkxGVkJRMDQ3UVVGQlFTeFJRVU5LTzBGQlFVRXNUVUZEU2p0QlFVRkJMRWxCUTBvc1EwRkJRenRCUVVWRUxGZEJRVThzVDBGQlR5eExRVUZMTEVWQlFVVXNRMEZCUXl4SlFVRkpMRWRCUVVjc1NVRkJTU3hyUWtGQmEwSXNXVUZCV1N4UFFVRlBMRVZCUVVVc1EwRkJRenRCUVVONlJTeGhRVUZUTEU5QlFVOHNSVUZCUlN4TFFVRkxMRWRCUVVjN1FVRkJRU3hGUVVNNVFqdEJRVU5LTzBGQlkwRXNVMEZCVXl4alFVTk1MRTFCUTBFc1VVRkRRU3hMUVVOR08wRkJRMFVzVVVGQlRTeFBRVUZQTEVsQlFVazdRVUZEYWtJc1VVRkJUU3hQUVVGUExFbEJRVWs3UVVGRGFrSXNVVUZCVFN4VlFVRlhMRXRCUVVzc1owSkJRV2RDTEVOQlFVTTdRVUZGZGtNc1RVRkJTU3hQUVVGUExGTkJRVk1zVlVGQlZUdEJRVU14UWl4VlFVRk5MRTFCUVUwc2RVTkJRWFZETzBGQlFVRXNSVUZEZGtRN1FVRkZRU3hSUVVGTkxFTkJRVU1zVVVGQlVTeFZRVUZWTEVOQlFVTXNRMEZCUXl4SlFVRkxMRTFCUVUwc1VVRkJVU3hMUVVGTExFTkJRVU1zUTBGQlF5eEpRVUZKTEU5QlFVOHNRMEZCUXl4SlFVRkpPMEZCUlhKRkxGVkJRVkVzU1VGQlNTeEpRVUZKTzBGQlFVRXNTVUZEV2l4SFFVRkhMRTlCUVU4c1NVRkJTU3hEUVVGRExGTkJRVk03UVVGQlFTeE5RVU53UWl4WFFVRlhPMEZCUVVFc1RVRkRXQ3hIUVVGSkxFOUJRVThzVVVGQlVTeFhRVUZYTEVWQlFVVXNUVUZCVFN4SlFVRkpMRWxCUVVrN1FVRkJRU3hKUVVOc1JDeEZRVUZGTzBGQlFVRXNTVUZEUml4SFFVRkhMRkZCUVZFc1NVRkJTU3hEUVVGRExGTkJRVk03UVVGQlFTeE5RVU55UWl4WFFVRlhPMEZCUVVFc1RVRkRXQ3hIUVVGSkxFOUJRVThzVVVGQlVTeFhRVUZYTEVWQlFVVXNUVUZCVFN4SlFVRkpMRWxCUVVrN1FVRkJRU3hKUVVOc1JDeEZRVUZGTzBGQlFVRXNSVUZEVGp0QlFVVkJMRk5CUVU4N1FVRkRXRHRCUVRKTFR5eFRRVUZUTEdWQlIxZ3NUVUZCYjBRN1FVRkRja1FzVTBGQlR5eFRRVU5JTEZGQlNVRXNTMEZEYlVVN1FVRkRia1VzVlVGQlRTeFBRVUZQTEdOQlFXTXNUVUZCVFN4UlFVRlJMRWRCUVVjN1FVRkZOVU1zVjBGQlR5eHJRa0ZCYlVKRExFOUJRVTA3UVVGRE5VSXNWVUZCU1N4TFFVRkxMRk5CUVZNc1JVRkJSU3hQUVVGUE8wRkJRM1pDTEdOQlFVMHNVVUZCVVN4TlFVRk5MRXRCUVVzc2FVSkJRV2xDTEVWQlFVVXNUVUZCVFVFc1MwRkJTVHRCUVVOMFJDeGxRVUZQTEUxQlFVMHNWMEZCZFVNN1FVRkJRU3hOUVVONFJDeFBRVUZQTzBGQlEwZ3NaVUZCVHl4UFFVRlBMRTFCUVUwc1RVRkJUVUVzUzBGQlNUdEJRVUZCTEUxQlEyeERPMEZCUVVFc1NVRkRTanRCUVVGQkxFVkJRMG83UVVGRFNqczdPMEZETVhOQ1FTeG5SVUZCUVVNc1MwRkJRVHRCUVZOQkxIVkNRVUZETEUxQlFVMHNjMEpCUVhOQ08wRkJRM1JDTEVsQlFVMHNWMEZCVGl4TlFVRk5MR3RDUVVGblFrRXNUVUZCUVN4VFFVZDZRaXhyUWtGQlF5eFpRVUZaTEVsQlMySXNjVUpCUVVNc1dVRkJXU3hIUVVGSExFbEJTMmhDTEdGQlFVTXNXVUZCV1N4SlFVdGlMR2RDUVVGRExGbEJRVmtzUTBGQlF5eEpRVUZKTEVkQlFVY3NRMEZCUXl4SFFVRkhMRU5CUVVNc1NVRnNRa1JCTEV0QlFWRTdRVUZCUVN4RlFYVkNha01zV1VGQldTeE5RVUZ0UWp0QlFVTXpRaXhWUVVGTk8wRkJlRUpRTzBGQlEwZ3NVMEZCVVN4UFFVRlNPMEZCZDBKSkxGTkJRVXNzVDBGQlR6dEJRVUZCTEVWQlEyaENPMEZCUVVFc1JVRjBRa0VzVFVGQlRTeFpRVUV5UWp0QlFVTTNRaXhYUVVGUExGRkJRVkVzVVVGQlVTeExRVUZMTEV0QlFVc3NVMEZCVXl4RFFVRkRPMEZCUVVFc1JVRkRMME03UVVGQlFTeEZRVWRCTEUxQlFVMHNZVUZCWVN4TlFVRTJRanRCUVVNMVF5eFhRVUZQTEZGQlFWRXNVVUZCVVN4TFFVRkxMRXRCUVVzc1lVRkJZU3hKUVVGSkxFTkJRVU03UVVGQlFTeEZRVU4yUkR0QlFVRkJMRVZCUjBFc1RVRkJUU3hQUVVGelFqdEJRVU40UWl4WFFVRlBMRkZCUVZFc1VVRkJVU3hMUVVGTExFdEJRVXNzUzBGQlN5eERRVUZETzBGQlFVRXNSVUZETTBNN1FVRkJRU3hGUVVkQkxFMUJRVTBzVVVGQlVTeE5RVUZ0UXp0QlFVTTNReXhYUVVGUExFdEJRVXNzUzBGQlN5eFJRVUZSTEVsQlFVa3NSVUZCUlN4TFFVRkxMRU5CUVVNc1VVRkJVU3hEUVVGRExFZEJRVWNzUTBGQlF6dEJRVUZCTEVWQlEzUkVPMEZCUVVFc1JVRlBRU3hQUVVGUExFMUJRVTBzWTBGQmMwSTdRVUZETDBJc1ZVRkJUVU1zVDBGQlRTeEpRVUZKTEZOQlFWRTdRVUZCUVN4TlFVTndRaXhYUVVGWE8wRkJRVUVzVFVGQlF6dEJRVUZCTEUxQlExb3NaVUZCWlR0QlFVRkJMRTFCUVVNN1FVRkJRU3hOUVVOb1FpeFBRVUZQTzBGQlFVRXNUVUZCUXp0QlFVRkJMRTFCUTFJc1UwRkJVeXhOUVVGTkxGRkJRVkVzVDBGQlR6dEJRVUZCTEVsQlEyeERMRU5CUVVNN1FVRkZSQ3hYUVVGUFFTeExRVUZKTEUxQlFVMDdRVUZCUVN4TlFVTmlMRTFCUVUwc1kwRkJZenRCUVVGQkxFbEJRM2hDTEVOQlFVTTdRVUZCUVN4RlFVTk1PMEZCUTBvN1FVRjRRMDhzZVVKQlFVRkVPMEZCU1Vnc05FSkJRVTBzWVVGRVRpeG5Ra0ZJVXp0QlFWTlVMRFJDUVVGTkxHZENRVVJPTEcxQ1FWSlRPMEZCWTFRc05FSkJRVTBzVVVGRVRpeFhRV0pUTzBGQmJVSlVMRFJDUVVGTkxGZEJSRTRzWTBGc1FsTTdRVUZCUVN4WFFVRk9MSFZEUVVSUUxIRkNRVU5oTzBGQlFVNHNORUpCUVUwN1FVRkJUaXhKUVVGTkxGVkJRVTQ3T3p0QlJrWlFMRk5CUVZNc01rSkJRVEpDTzBGQlEzQkRMRk5CUVZNc1RVRkJUU3h0UWtGQmJVSTdPenRCUjFSc1F5eFBRVUZQUlN4alFVRmhPenM3UVVOQmNFSXNUMEZCVDBNc1kwRkJZVHRCUVVGd1FpeEpRVUZCUXl4TFFVRkJPMEZCVDA4c1NVRkJUU3hYUVVGT0xFMUJRVTBzYTBKQlFUQkNSQ3hUUVVGUkxFOUJRVTg3UVVGQlFTeEZRVWRzUkR0QlFVRkJMRk5CUVZFc1RVRkJiVUk3UVVGQlFTeE5RVU4yUWl4UlFVRlJMRVZCUVVVc1lVRkJZU3hEUVVGRFFTeFRRVUZSTEZkQlFWY3NSVUZCUlR0QlFVRkJMRTFCUXpkRExGRkJRVkVzUlVGQlJTeGhRVUZoTEVOQlFVTkJMRk5CUVZFc1YwRkJWeXhGUVVGRk8wRkJRVUVzU1VGRGFrUTdRVUZCUVR0QlFVRkJMRVZCUlVFN1FVRkJRU3hUUVVGUlF5eFBRVUZ6UWp0QlFVRkJMRTFCUXpGQ0xGVkJRVlZFTEZOQlFWRXNWVUZCVlN4VFFVRlRMRmxCUVZrc1NVRkJTU3hKUVVGSlFTeFRRVUZSTEZkQlFWY3NVVUZCVVR0QlFVRkJMRWxCUTNoR08wRkJRVUU3UVVGQlFTeEZRVVZCTEU5QlFVODdRVUZEU0N4SlFVRkJRU3hUUVVGUkxHTkJRV01zU1VGQlNUdEJRVUZCTEVWQlF6bENPMEZCUVVFc1JVRkZRU3hIUVdKUkxFdEJRVUZCTEZOQlFWRXNVMEZMVWtNc1RVRkJRVVFzVTBGQlVTeFpRVkZrTEU5QlFVOHNVMEZCVVN4SlFVRkpPMEZCUTJwQ0xGZEJRVThzUzBGQlN6dEJRVUZCTEVWQlEyaENPMEZCUVVFc1JVRkpRU3hQUVVGUExFOUJRV2RDTzBGQlEyNUNMRkZCUVVrc2FVSkJRV2xDTEZkQlFWVTdRVUZETTBJc1dVRkJUU3hOUVVGTkxIbERRVUY1UXp0QlFVRkJMRWxCUTNwRU8wRkJSVUVzVTBGQlN5eFZRVUZWTEV0QlFVc3NTMEZCU3p0QlFVTjZRaXhUUVVGTExFdEJRVXNzVlVGQlZTeExRVUZMTzBGQlEzcENMRk5CUVVzc1QwRkJUeXhWUVVGVk8wRkJRVUVzUlVGRE1VSTdRVUZCUVN4RlFVVkJMRTlCUVU4c1QwRkJaMEk3UVVGRGJrSXNWVUZCVFN4UlFVRlJMRXRCUVVzc1ZVRkJWU3hWUVVGVkxFTkJRVU1zVFVGQlRTeE5RVUZOTEV0QlFVczdRVUZEZWtRc1UwRkJTeXhWUVVGVkxFOUJRVThzVDBGQlR5eERRVUZETzBGQlJUbENMRk5CUVVzc1MwRkJTeXhWUVVGVkxFdEJRVXM3UVVGRGVrSXNVMEZCU3l4UFFVRlBMRlZCUVZVN1FVRkJRU3hGUVVNeFFqdEJRVUZCTEVWQlJVRXNXVUZCV1N4RlFVRkZMRmRCUVZjc1EwRkJReXhGUVVGRkxFbEJRWGxETEVOQlFVTXNSMEZCUnp0QlFVTnlSU3hWUVVGTk8wRkJRMDRzVTBGQlN5eFpRVUZaTEUxQlFVMHNVVUZCVVN4UlFVRlJMRWxCUVVrc1YwRkJWeXhEUVVGRExGRkJRVkU3UVVGQlFTeEZRVU51UlR0QlFVRkJMRVZCUlVFc1VVRkRTVVVzVTBGRFFTeFZRVU5OTzBGQlEwNHNWMEZCVHl4TlFVRk5MRkZCUVZGQkxGTkJRVkVzVVVGQlVUdEJRVUZCTEVWQlEzcERPMEZCUTBvN096dEJRekZFUVN4UFFVRlBReXhqUVVGaE8wRkJRM0JDTEU5QlFVOURMRlZCUVZNN1FVRkRhRUlzVDBGQlQwTXNWMEZCVlR0QlFWVnFRaXhKUVVGTkxGRkJRVkVzVDBGQlR5eHpRa0ZCYzBJN1FVRkhjRU1zU1VGQlRTeFhRVUZPTEUxQlFVMHNhMEpCUVRoQ0xGTkJRVk03UVVGQlFTeEZRVU5vUkR0QlFVRkJMRk5CUVU4c1UwRkJVME1zVTBGQlVUdEJRVUZCTzBGQlFVRXNSVUZGZUVJN1FVRkJRU3hGUVVOQk8wRkJRVUVzUlVGRlFTeFpRVUZaTEV0QlFXTXNWMEZCSzBJN1FVRkRja1FzVlVGQlRTeHJSVUZCYTBVN1FVRkRlRVVzVTBGQlN5eGhRVUZoTEdOQlFXTXNUVUZCVFN4TlFVRk5PMEZCUXpWRExGTkJRVXNzVDBGQlR6dEJRVUZCTEVWQlEyaENPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTEVWQlQwRXNWVUZCVlN4VlFVRTRRenRCUVVOd1JDeFhRVUZQTEV0QlFVc3NWMEZCVnl4UlFVRlJPMEZCUVVFc1JVRkRia003UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVN4RlFVdEJMRTFCUVZNN1FVRkRUQ3hYUVVGUExFdEJRVXNzUzBGQlN6dEJRVUZCTEVWQlEzSkNPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGQlFTeEZRVTFCTEVkQlFWVXNWMEZCZVVNN1FVRkRMME1zVjBGQlR5eEpRVUZKTEZWQlFWTXNUVUZCVFN4VlFVRlZMRXRCUVVzc1MwRkJTeXhEUVVGRExFZEJRVWNzUzBGQlN5eFZRVUZWTzBGQlFVRXNSVUZEY2tVN1FVRkJRU3hGUVVWVkxFMUJRV0VzVjBGQmVVTTdRVUZETlVRc1VVRkJTU3hSUVVFd1FqdEJRVU01UWl4UlFVRkpPMEZCUlVvc1ZVRkJUU3hqUVVGakxHOUNRVUZKTEVsQlFYVkNPMEZCUlM5RExGVkJRVTBzV1VGQkswSXNRMEZCUXl4aFFVRmhPMEZCUXk5RExGVkJRVWtzV1VGQldTeFRRVUZUTEVkQlFVYzdRVUZEZUVJc1owSkJRVkVzUzBGQlN5eFZRVUZWTEUxQlFVMDdRVUZEZWtJc1owSkJRVTBzVjBGQlZ5eFZRVUZWTEV0QlFVc3NTVUZCU1N4RFFVRkRPMEZCUTNKRExHTkJRVWtzVlVGQlZTeFZRVUZWTzBGQlEzQkNMRzlDUVVGUk8wRkJRMUlzYTBKQlFVMHNTMEZCU3l4WFFVRlhMRVZCUVVVc1VVRkJVU3hEUVVGRExFOUJRVThzUjBGQlJ5eERRVUZETzBGQlFVRXNWVUZEYUVRN1FVRkJRU3hSUVVOS0xFTkJRVU03UVVGQlFTeE5RVU5NTzBGQlJVRXNhMEpCUVZrc1NVRkJTU3hSUVVGUk8wRkJSWGhDTEdGQlFVOHNUVUZCVFR0QlFVTlVMRzlDUVVGWkxFOUJRVThzVVVGQlVUdEJRVU16UWl4WlFVRkpMRmxCUVZrc1UwRkJVeXhIUVVGSE8wRkJRM2hDTEd0Q1FVRlJPMEZCUTFJc1owSkJRVTA3UVVGQlFTeFJRVU5XTzBGQlFVRXNUVUZEU2p0QlFVRkJMRWxCUTBvN1FVRkZRU3hWUVVGTkxFMUJRVTBzVFVGQlV6dEJRVU5xUWl4aFFVRlBMRlZCUVZVc1VVRkJVU3hSUVVGUkxGVkJRVlVzUzBGQlN5eEpRVUZKTEVOQlFVTTdRVUZCUVN4SlFVTjZSRHRCUVVWQkxGZEJRVThzU1VGQlNTeFZRVUZUTEV0QlFVc3NVMEZCVXp0QlFVRkJMRVZCUTNSRE8wRkJRVUVzUlVGRlFTeFhRVUZ0UWp0QlFVTm1MRmRCUVU4c1dVRkJXU3hMUVVGTExFbEJRVWtzUTBGQlF6dEJRVUZCTEVWQlEycERPMEZCUVVFc1JVRkZRU3hEUVVGRExFOUJRVThzVjBGQlZ5eEpRVUZKTzBGQlEyNUNMRmxCUVZFc1MwRkJTeXh4UkVGQmNVUTdRVUZEYkVVc1YwRkJUeXhMUVVGTExGTkJRVk03UVVGQlFTeEZRVU42UWp0QlFVTktPenM3UVVOeVJrOHNVMEZCVXl4VFFVRlRMRTFCUVhWQ08wRkJRelZETEZOQlFVOHNUMEZCVHl4UFFVRlBMRXRCUVVzc1NVRkJTVHRCUVVOc1F6dEJRV1ZCTEZOQlFWTXNZMEZCYlVJN1FVRkRlRUlzVVVGQlRTeE5RVUZOTEdOQlFXTTdRVUZET1VJN1FVRkZUeXhKUVVGTkxFMUJRV003UVVGQlFTeEZRVU4yUWl4dFFrRkJiVUlzUTBGQlF6dEJRVUZCTEVWQlEzQkNMRlZCUVZVN1FVRkJRU3hGUVVOV0xHRkJRV0U3UVVGQlFTeEZRVU5pTEdGQlFXRTdRVUZCUVN4RlFVTmlMRkZCUVZFN1FVRkJRU3hGUVVOU0xGVkJRVlU3UVVGQlFTeEZRVU5XTEZkQlFWY3NUVUZCVFR0QlFVRkJMRVZCUTJwQ0xHZENRVUZuUWl4TlFVRk5PMEZCUXpGQ096czdRVU4yUTA4c1NVRkJUU3hSUVVGT0xFMUJRVTBzVDBGQlRUdEJRVUZCTEVWQlZXWXNXVUZCV1N4UlFVRjFRanRCUVU1dVF5eHZRa0ZCVnl4dlFrRkJTU3hKUVVGelFqdEJRVVZ5UXl4VFFVRlJMRmRCUVZjc2IwSkJRVWtzU1VGQlowSTdRVUZEZGtNc1UwRkJVU3hUUVVGVExHOUNRVUZKTEVsQlFXZENPMEZCUTNKRExGTkJRVkVzVlVGQlZUdEJRVWRrTEZOQlFVc3NVMEZCVXp0QlFVRkJMRVZCUTJ4Q08wRkJRVUVzUlVGRlFTeFZRVUZWTEZWQlFYTkNPMEZCUXpWQ0xGTkJRVXNzVlVGQlZTeEpRVUZKTEZGQlFWRTdRVUZCUVN4RlFVTXZRanRCUVVGQkxFVkJSVUVzVVVGQlVTeFZRVUZ6UWp0QlFVTXhRaXhSUVVGSkxFdEJRVXNzVlVGQlZTeERRVUZETEV0QlFVc3NUMEZCVHl4VFFVRlRPMEZCUTNKRExGZEJRVXNzVDBGQlR5eFJRVUZSTEZGQlFWRTdRVUZCUVN4SlFVTm9ReXhQUVVGUE8wRkJRMGdzVjBGQlN5eFBRVUZQTEVsQlFVa3NVVUZCVVR0QlFVRkJMRWxCUXpWQ08wRkJRVUVzUlVGRFNqdEJRVUZCTEVWQlJVRXNTVUZCVHl4SlFVRmhPMEZCUTJoQ0xGVkJRVTBzVDBGQlR5eFBRVUZOTzBGQlEyNUNMRmRCUVUwc1ZVRkJWVHRCUVVWb1FpeFJRVUZKTzBGQlEwRXNZVUZCVHl4SFFVRkhPMEZCUVVFc1NVRkRaQ3hWUVVGRk8wRkJRMFVzVjBGQlN5eFBRVUZQTEZGQlFWRXNRMEZCUXl4UFFVRlBMRWRCUVVjc1EwRkJRenRCUVVOb1F5eFhRVUZMTEU5QlFVOHNUVUZCVFR0QlFVTnNRaXhYUVVGTExGVkJRVlU3UVVGRFppeGhRVUZOTEZWQlFWVTdRVUZCUVN4SlFVTndRanRCUVVGQkxFVkJRMG83UVVGQlFTeEZRVVZCTEZWQlFWVTdRVUZEVGl4VFFVRkxMRk5CUVZNc1VVRkJVU3hEUVVGRExFOUJRVThzUjBGQlJ5eERRVUZETzBGQlEyeERMRk5CUVVzc1UwRkJVeXhOUVVGTk8wRkJRM0JDTEZOQlFVc3NVMEZCVXl4TlFVRk5PMEZCUTNCQ0xGZEJRVThzUzBGQlN6dEJRVUZCTEVWQlEyaENPMEZCUTBvN1FVRjVSazhzVTBGQlV5eFZRVUZWTEZOQlFYRkNPMEZCUXpORExFMUJRVWtzUTBGQlF5eE5RVUZOTEZOQlFWTTdRVUZEYUVJc1dVRkJVU3hOUVVGTkxFMUJRVTBzYzBSQlFYTkVMRU5CUVVNN1FVRkJRU3hGUVVNdlJUdEJRVVZCTEZGQlFVMHNVMEZCVXl4VlFVRlZMRTlCUVU4N1FVRkRjRU03UVVGM1EwOHNVMEZCVXl4WFFVRmpMRWxCUVdkRE8wRkJRekZFTEZGQlFVMHNVVUZCVVN4SlFVRkpMRTFCUVUwc1NVRkJTVHRCUVVNMVFpeFRRVUZQTEUxQlFVMHNTVUZCU1N4TlFVRk5MRWRCUVVjc1RVRkJUU3hOUVVGTkxGRkJRVkVzUTBGQlF5eERRVUZETzBGQlEzQkVPenM3UVVweVMwOHNTVUZCVFN4VlFVRlZMRTlCUVU4c2EwSkJRV3RDTzBGQlpYcERMRWxCUVUwc1kwRkJZeXhQUVVGUExITkNRVUZ6UWp0QlFXVnFSQ3hKUVVGTkxHTkJRV01zVDBGQlR5eDFRa0ZCZFVJN1FVRkxiRVFzVTBGQlV5eFJRVUZSTEZGQlFYZENPMEZCUXpWRExGTkJRVThzVjBGQlZ5eFRRVUZWTEU5QlFVOHNUMEZCVHl4SlFVRmxPMEZCUXpkRU8wRkJlVVZCTEZOQlFWTXNZMEZCWXl4TlFVRjFRanRCUVVNeFF5eFRRVUZQTEV0QlFVc3NjVUpCUVhGQ1F5eFRRVUZSTzBGQlF6ZERPMEZCUlVFc1UwRkJVeXhsUVVGbExFMUJRWFZDTzBGQlF6TkRMRk5CUVU4c1QwRkJUeXhUUVVGVExHTkJRV01zUTBGQlF5eGpRVUZqTEVsQlFVazdRVUZETlVRN1FVRkpUeXhUUVVGVExGZEJRVmNzUzBGQmNVSTdRVUZETlVNc1VVRkJUU3hEUVVGRExFdEJRVXNzVFVGQlRTeEpRVUZKTEZOQlFWTXNTVUZCU1N4TlFVRk5MRU5CUVVNc1EwRkJReXhGUVVGRkxFMUJRVTBzUjBGQlJ6dEJRVVYwUkN4TlFVRkpMRWxCUVVrc1YwRkJWeXhUUVVGVExFZEJRVWM3UVVGRE0wSXNWMEZCVHl4WFFVRlhMRWxCUVVrc1RVRkJUU3hEUVVGRExFTkJRVU03UVVGQlFTeEZRVU5zUXp0QlFVVkJMRk5CUVU4c1UwRkJVeXhIUVVGSExFZEJRVWNzUzBGQlN5eE5RVUZOTEV0QlFVczdRVUZETVVNN1FVRkZUeXhUUVVGVExFOUJRVThzVVVGQmQwSXNUMEZCZFVJN1FVRkRiRVVzVFVGQlNTeHJRa0ZCYTBJc1ZVRkJWVHRCUVVNMVFpeFhRVUZQTEU5QlFVOHNTMEZCU3p0QlFVTnVRanRCUVVGQkxFVkJRMG83UVVGRlFTeE5RVUZKTEdWQlFXVXNWVUZCVlN4UFFVRlBMRTlCUVU4c1YwRkJWeXhOUVVGTkxGbEJRVms3UVVGRGNFVXNWMEZCVHl4WFFVRlhMRVZCUVVVc1MwRkJTenRCUVVONlFqdEJRVUZCTEVWQlEwbzdRVUZGUVN4TlFVRkpMRmxCUVZrc1VVRkJVU3hMUVVGTE8wRkJRMnBETzBGQlJVOHNVMEZCVXl4UFFVRlBMRkZCUVhkQ0xFOUJRWFZDTzBGQlEyeEZMRTFCUVVrc2EwSkJRV3RDTEZWQlFWVTdRVUZETlVJc1YwRkJUeXhQUVVGUExFdEJRVXM3UVVGRGJrSTdRVUZCUVN4RlFVTktPMEZCUlVFc1RVRkJTU3hwUWtGQmFVSXNWVUZCVlR0QlFVTXpRaXhsUVVGWExFMUJRVTBzVDBGQlR6dEJRVU53UWl4aFFVRlBMRkZCUVZFc1JVRkJSVHRCUVVGQkxFbEJRM0pDTzBGQlJVRXNWVUZCVFN4blFrRkJaMElzVFVGQlRTeFJRVUZSTEZWQlFWVXNRMEZCUXl4SFFVRkhMRTlCUVU4N1FVRkRja1FzVlVGQlNTeEZRVUZGTEdOQlFXTkJMRk5CUVZFc1UwRkJVenRCUVVOcVF5eGxRVUZQTEZGQlFWRXNUVUZCVFN4VlFVRlZMR05CUVdNc1JVRkJSU3hQUVVGUExFMUJRVTBzUlVGQlJTeERRVUZETzBGQlFVRXNUVUZEYmtVN1FVRkRRU3hoUVVGUExGRkJRVkVzUlVGQlJUdEJRVUZCTEVsQlEzSkNMRU5CUVVNN1FVRkZSQ3hWUVVGTkxHZENRVUZuUWl4TlFVRk5MRkZCUVZFc1ZVRkJWU3hEUVVGRExFZEJRVWNzVDBGQlR6dEJRVU55UkN4VlFVRkpMRVZCUVVVc1kwRkJZMEVzVTBGQlVTeFRRVUZUTzBGQlEycERMR1ZCUVU4c1VVRkJVU3hOUVVGTkxGVkJRVlVzYVVKQlFXbENMRVZCUVVVc1UwRkJVeXhOUVVGTkxFVkJRVVVzUTBGQlF6dEJRVUZCTEUxQlEzaEZPMEZCUTBFc1lVRkJUeXhSUVVGUkxFVkJRVVU3UVVGQlFTeEpRVU55UWl4RFFVRkRPMEZCUlVRc1kwRkJWU3hOUVVGTk8wRkJRMW9zV1VGQlRTeFhRVUZYTEdGQlFXRTdRVUZET1VJc1dVRkJUU3hYUVVGWExHRkJRV0U3UVVGQlFTeEpRVU5zUXl4RFFVRkRPMEZCUlVRN1FVRkJRU3hGUVVOS08wRkJSVUVzVFVGQlNTeGxRVUZsTEZWQlFWVXNUMEZCVHl4UFFVRlBMRmRCUVZjc1RVRkJUU3haUVVGWk8wRkJRM0JGTEZkQlFVOHNWMEZCVnl4RlFVRkZMRTlCUVU4c1VVRkJVU3hMUVVGTExFTkJRVU03UVVGRGVrTTdRVUZCUVN4RlFVTktPMEZCUlVFc1RVRkJTU3haUVVGWkxGRkJRVkVzUzBGQlN6dEJRVU5xUXp0QlFVZFBMRk5CUVZNc1VVRkJVU3hSUVVGblFpeE5RVUZqTzBGQlEyeEVMRTFCUVVrc1YwRkJWeXhWUVVGVkxFOUJRVThzVDBGQlR5eE5RVUZOTEVsQlFVazdRVUZETjBNc1dVRkJVU3hMUVVGTExIVkNRVUYxUWl4UFFVRlBMRTlCUVU4c1EwRkJReXhQUVVGUExFbEJRVWtzVDBGQlR5eE5RVUZOTEVWQlFVVTdRVUZCUVN4RlFVTnFSanRCUVVWQkxGTkJRVThzVDBGQlR5eFJRVUZSTEVWQlFVVXNRMEZCUXl4UFFVRlBMRWRCUVVjc1MwRkJTeXhEUVVGRE8wRkJRemRETzBGQldVOHNVMEZCVXl4SlFVTmFMRTFCUTBFc1UwRkZRU3hMUVVORE8wRkJRMFFzVVVGQlRTeEZRVUZGTEVkQlFVY3NUMEZCVHl4alFVRmpMRlZCUVZVc1IwRkJSeXhMUVVGTExFbEJRVWs3UVVGRGRFUXNVVUZCVFN4UlFVRlJPMEZCUldRc1RVRkJTU3hKUVVGTExGRkJRVThzVDBGQlR5eFBRVUZQTEVWQlFVVXNTVUZCU1N4RFFVRkRPMEZCUlhKRExGRkJRVTBzWVVGQllTeEpRVUZKTEZWQlFWVXNUVUZCVFN4TFFVRkxMRXRCUVVzc1EwRkJRenRCUVVOc1JDeFJRVUZOTEdkQ1FVRjVReXhEUVVGRE8wRkJSV2hFTEdGQlFWY3NRMEZCUTBNc1RVRkJTeXhMUVVGTExFdEJRVXNzVDBGQlR5eFJRVUZSTEV0QlFVc3NSMEZCUnp0QlFVTTVReXhSUVVGSkxGVkJRVlVzVVVGQlZ6dEJRVU55UWl4aFFVRlBMRTFCUVUxQkxFbEJRVWM3UVVGQlFTeEpRVU53UWp0QlFVVkJMRkZCUVVrc1YwRkJWeXhUUVVGVFFTeEpRVUZITEVkQlFVYzdRVUZETVVJc2IwSkJRV05CTEVsQlFVY3NTVUZCU1N4TlFVRk5RU3hKUVVGSE8wRkJRemxDTEdGQlFVOHNUVUZCVFVFc1NVRkJSenRCUVVGQkxFbEJRM0JDTzBGQlFVRXNSVUZEU2p0QlFVVkJMRTFCUVVrc1QwRkJUeXhUUVVGVExGVkJRVlU3UVVGRE1VSXNVVUZCU1N4UlFVRlJMRWxCUVVrc2JVSkJRVzFDTzBGQlF5OUNMR0ZCUVU4c1NVRkJTU3hyUWtGQmEwSXNTVUZCU1R0QlFVRkJMRWxCUTNKRExFOUJRVTg3UVVGRFNDeFpRVUZOTEUxQlFVMHNPRUpCUVRoQ0xFbEJRVWtzUjBGQlJ6dEJRVUZCTEVsQlEzSkVPMEZCUVVFc1JVRkRTanRCUVVWQkxFMUJRVWtzWlVGQlpTeEpRVUZKTEVkQlFVYzdRVUZEZEVJc1ZVRkJUVU1zVlVGQlV5eExRVUZMTEVWQlFVVXNWVUZCVlN4SFFVRkhMRTFCUVUwc1EwRkJRenRCUVVNeFF5eFJRVUZKTEUxQlFVOHNVMEZCVVVFc1UwRkJVU3hMUVVGTE8wRkJRMmhETEZGQlFVbEJMRTlCUVUwN1FVRkRWaXhYUVVGUFFUdEJRVUZCTEVWQlExZzdRVUZIUVN4UlFVRk5MRVZCUVVVc1MwRkJTeXhQUVVGUExGVkJRVlVzU1VGQlNUdEJRVU5zUXl4VFFVRlBMRTFCUVUwN1FVRkRZaXhUUVVGUExFMUJRVTA3UVVGRllpeFJRVUZOTEZWQlFUWkVMRU5CUVVNN1FVRkRjRVVzVVVGQlRTeFhRVUVyUXl4RFFVRkRPMEZCUjNSRUxHRkJRVmNzUTBGQlEwUXNUVUZCU3l4TFFVRkxMRXRCUVVzc1QwRkJUeXhSUVVGUkxFdEJRVXNzUjBGQlJ6dEJRVU01UXl4UlFVRkpRU3hMUVVGSkxGZEJRVmNzU1VGQlNTeEhRVUZITzBGQlEzUkNMR05CUVZFc1MwRkJTeXhEUVVGRFFTeE5RVUZMTEV0QlFYTkNMRU5CUVVNN1FVRkRNVU1zWVVGQlR5eE5RVUZOUVN4SlFVRkhPMEZCUVVFc1NVRkRjRUk3UVVGRFFTeFJRVUZKTEdsQ1FVRnBRaXhWUVVGVk8wRkJRek5DTEdWQlFWTXNTMEZCU3l4RFFVRkRRU3hOUVVGTExFdEJRVXNzUTBGQlF6dEJRVU14UWl4WlFVRk5RU3hKUVVGSExFbEJRVWtzVFVGQlRTeEpRVUZKTzBGQlFVRXNTVUZETTBJN1FVRkJRU3hGUVVOS08wRkJSMEVzVVVGQlRTeFRRVUZUTEdWQlFXVXNZVUZCWVN4TFFVRkxMRWxCUVVrc1NVRkJTeXhMUVVGbExFdEJRVXM3UVVGRE4wVXNUVUZCU1N4aFFVRmpMRkZCUVU4c1QwRkJUeXhSUVVGUkxFdEJRVXM3UVVGRE4wTXNUVUZCU1N4TlFVRlBMRk5CUVZFc1VVRkJVU3hMUVVGTE8wRkJSV2hETEUxQlFVa3NTVUZCU3l4TFFVRkpMRTlCUVU4c1VVRkJVU3hIUVVGSE8wRkJReTlDTEUxQlFVa3NWVUZCVnl4TFFVRkpMRk5CUVZNc1VVRkJVU3hUUVVGVE8wRkJSemRETEZkQlFWTXNVMEZCVXl4TlFVRk5MRkZCUVZFc1VVRkJVU3hKUVVGSkxGZEJRVmNzUTBGQlF5eFJRVUZSTEVkQlFVYzdRVUZETDBRc1VVRkJTU3hWUVVGVkxFMUJRVTA3UVVGRGFFSXNZMEZCVVN4TFFVRkxMRTFCUVUwc2JVUkJRVzFFTEVOQlFVTTdRVUZEZGtVN1FVRkJRU3hKUVVOS08wRkJSVUVzVVVGQlNTeE5RVUZOTEZGQlFWRXNTMEZCU3l4SFFVRkhPMEZCUTNSQ0xHbENRVUZYTEUxQlFVMHNUMEZCVHp0QlFVTndRaXhsUVVGUExGRkJRVkVzUlVGQlJUdEJRVUZCTEUxQlEzSkNPMEZCUVVFc1NVRkRTaXhYUVVGWExFOUJRVTg3UVVGRFpDeFZRVUZKTEVWQlFVVXNhVUpCUVdsQ1JDeFRRVUZSTEZOQlFWTTdRVUZEY0VNc1owSkJRVkVzU1VGQlNTeFRRVUZUTEV0QlFVczdRVUZCUVN4TlFVTTVRanRCUVVOQkxHRkJRVThzVVVGQlVTeExRVUZMTzBGQlFVRXNTVUZEZUVJN1FVRkJRU3hGUVVOS08wRkJSMEVzVVVGQlRTeHJRa0ZCYTBJc1VVRkJVU3hKUVVGSkxFTkJRVU1zUTBGQlF5eExRVUZMTEU5QlFVOHNUVUZCVFR0QlFVTndSQ3hWUVVGTkxFdEJRVXNzVDBGQlR5eFJRVUZSTEZkQlFWY3NSMEZCUnl4SFFVRkhMRTlCUVU4N1FVRkRiRVFzVjBGQlR5eE5RVUZOTEU5QlFVOHNWMEZCVnl4RlFVRkZPMEZCUVVFc1JVRkRja01zUTBGQlF6dEJRVWRFTEdGQlFWY3NRMEZCUTBNc1RVRkJTeXhMUVVGTExFdEJRVXNzVDBGQlR5eFJRVUZSTEdGQlFXRXNSMEZCUnp0QlFVTjBSQ3hSUVVGSkxHbENRVUZwUWl4VlFVRlZPMEZCUXpOQ0xHVkJRVk1zUzBGQlN5eERRVUZEUVN4TlFVRkxMRXRCUVVzc1EwRkJRenRCUVVGQkxFbEJRemxDTEU5QlFVODdRVUZEU0N4aFFVRlBMRTlCUVU4c1VVRkJVU3hGUVVGRkxFTkJRVU5CTEVsQlFVY3NSMEZCUnl4TlFVRk5MRU5CUVVNN1FVRkJRU3hKUVVNeFF6dEJRVUZCTEVWQlEwbzdRVUZIUVN4UlFVRk5MR3RDUVVGclFpeFRRVUZUTEVsQlFVa3NRMEZCUXl4RFFVRkRMRTFCUVUwc1QwRkJUeXhOUVVGTk8wRkJRM1JFTEZWQlFVMHNWVUZCVlN4UlFVRlJMRlZCUVZVc1RVRkJUVHRCUVVOd1F5eFZRVUZKTEZGQlFWRXNUVUZCVFN4UlFVRlJMRWxCUVVrc1EwRkJRenRCUVVGQkxFbEJRMjVETEVOQlFVTTdRVUZEUkN4UlFVRkpMRkZCUVZFc1RVRkJUU3hSUVVGUkxFbEJRVWtzUTBGQlF6dEJRVU12UWl4WFFVRlBPMEZCUVVFc1JVRkRXQ3hEUVVGRE8wRkJSMFFzVFVGQlNTeG5Ra0ZCWjBJc1UwRkJVeXhMUVVGTExHZENRVUZuUWl4VFFVRlRMRWRCUVVjN1FVRkRNVVFzWTBGQlZTeE5RVUZOTzBGQlExb3NjMEpCUVdkQ0xGRkJRVkVzUTBGQlF5eFBRVUZQTEVkQlFVY3NRMEZCUXp0QlFVTndReXh6UWtGQlowSXNVVUZCVVN4RFFVRkRMRTlCUVU4c1IwRkJSeXhEUVVGRE8wRkJRVUVzU1VGRGVFTXNRMEZCUXp0QlFVRkJMRVZCUTB3N1FVRkZRU3hOUVVGSkxFMUJRVTA3UVVGRFZpeFRRVUZQTzBGQlExZzdRVUZIVHl4SlFVRk5MRTlCUVU4N096dEJTek5XY0VJc1QwRkJUMFVzWTBGQllUczdPMEZTV1hCQ0xFbEJRVWtzUzBGQlN6dEJRVWxVUXl4TlFVRkxMRk5CUVZNc1dVRkJXVHRCUVVreFFpeE5RVUZOTEU5QlFVOHNiMEpCUVc5Q0xFVkJRVVVzUzBGQlN5eERRVUZETEVWQlFVVXNVMEZCVXl4SlFVRkpMRTFCUVUwc1NVRkJTU3hMUVVGTExFTkJRVU1zUlVGQlJTeE5RVUZOTEUxQlFVMHNUVUZCVFR0QlFYQkNOVVlzYjBOQlFVRkRMRzFDUVVGQkxHZENRVUZCUXl4cFFrRkJRU3hsUVVGQlF5eG5Ra0ZCUVN4cFJFRkJRVU1zUzBGQlFTeHBTVUZCUVVNN1FVRnpRMEVzYlVKQlFVTXNVMEZCVXp0QlFVTldMRWxCUVUwc1RVRkJUaXhsUVVGclFrUXNUVUZCUVN4SlFVRkpMR0ZCTUVOc1FpeHpRa0ZCUXl4UFFVRlBMRWxCUVVrc1RVRkJUU3hKUVZGc1FpeHBRa0ZCUXl4UFFVRlBMRXRCUVVzc1NVRlRZaXhuUWtGQlF5eFBRVUZQTEV0QlFVc3NTVUZSWWtRc2FVSkJRVUVzUTBGQlF5eFBRVUZQTEUxQlFVMHNTVUZSWkN4cFFrRkJReXhQUVVGUExFMUJRVTBzU1VGUlpFUXNhMEpCUVVFc1EwRkJReXhQUVVGUExFMUJRVTBzU1VGUlpDeHJRa0ZCUXl4UFFVRlBMRTFCUVUwc1NVRlJaRVFzYjBKQlFVRXNRMEZCUXl4UFFVRlBMRTFCUVUwc1NVRlJaQ3h2UWtGQlF5eFBRVUZQTEUxQlFVMHNTVUUwU0dRc1owSkJRVU1zVDBGQlR5eFBRVUZQTEZGQlFWRXNTVUYyVDFSSExFdEJRV2RDTzBGQlFVRXNSVUUwVERsQ0xHTkJRV003UVVGRFZpeFZRVUZOTEVWQlFVVXNUMEZCVDBVc1MwRkJTU3hwUWtGQmFVSXNjVUpCUVhGQ0xFTkJRVU03UVVFM1RHeEZMSE5DUVVGQlJDeFJRVUZCTzBGQlFVRTdRVUZIU1N4elEwRkJaMEk3UVVGRGFFSTdRVUZEUVN4NVEwRkJiVUk3UVVGRGJrSTdRVUZEUVN4elEwRkJaMElzU1VGQlNTeE5RVUYxUWp0QlFYZE1ka01zZFVKQlFVc3NZMEZCWlN4SlFVRkpMRkZCUVZFN1FVRkJRU3hOUVVNMVFpeGpRVUZqTEV0QlFVc3NZMEZCWXl4TFFVRkxMRWxCUVVrN1FVRkJRU3hOUVVNeFF5eE5RVUZOTEV0QlFVc3NTMEZCU3l4TFFVRkxMRWxCUVVrN1FVRkJRU3hOUVVONlFpeFRRVUZUTEVOQlFVTXNVMEZCVXl4SlFVRkpMRkZCUVZFc1EwRkJReXhaUVVGWkxFdEJRVXNzVVVGQlVTeE5RVUZOTEU5QlFVOHNRMEZCUXp0QlFVRkJMRTFCUTNaRkxGVkJRVlVzVFVGQlRUdEJRVU5hTEZsQlFVa3NUMEZCVHl3d1FrRkJNRUlzU1VGQlNUdEJRVUZCTEUxQlF6ZERPMEZCUVVFc1NVRkRTaXhEUVVGRE8wRkJSVVFzZFVKQlFVc3NOa0pCUVZNc1lVRkJZU3hGUVVGRkxGRkJRVkVzYVVKQlFXbENMRTFCUVUwN1FVRkRlRVFzVjBGQlN5eFBRVUZQTEZWQlFWVTdRVUZCUVN4SlFVTXhRaXhEUVVGRE8wRkJSVVFzVTBGQlN5eFJRVUZSTEdkQ1FVRm5RaXhEUVVGRExFZEJRVWNzVjBGQlZ6dEJRVU40UXl4WlFVRk5MRTFCUVUwc1QwRkJUeXhSUVVGUkxHMUNRVUZ0UWl4TlFVRk5MRXRCUVVzc1kwRkJZeXhOUVVGTkxFTkJRVU03UVVGRE9VVXNXVUZCVFN4TlFVRk5MRXRCUVVzc1VVRkJVU3hyUWtGQmEwSXNRMEZCUTBVc1NVRkJSeXhaUVVGWk8wRkJRM1pFTEZsQlFVa3NWMEZCVnl4UlFVRlJPMEZCUTI1Q0xHbENRVUZQTEZkQlFWY3NSMEZCUnp0QlFVTnlRaXhsUVVGTExGZEJRVmNzUjBGQlJ6dEJRVUZCTEZGQlEzWkNPMEZCUVVFc1RVRkRTaXhEUVVGRE8wRkJRVUVzU1VGRFRDeERRVUZETzBGQlJVUXNkVUpCUVVzc09FSkJRVlVzVVVGQlVTeFZRVUZWTEVOQlFVTXNSMEZCUnl4RlFVRkZMRXRCUVVzc1RVRkJUVHRCUVVNNVF5eGpRVUZSTEUxQlFVMDdRVUZCUVN4UlFVTldMRXRCUVVzN1FVRkRSQ3hsUVVGTExFOUJRVThzVjBGQlZ6dEJRVU4yUWp0QlFVRkJMRkZCUTBvc1MwRkJTenRCUVVORUxHVkJRVXNzVDBGQlR5eFpRVUZaTzBGQlEzaENPMEZCUVVFc1VVRkRTaXhMUVVGTE8wRkJRMFFzWlVGQlN5eFBRVUZQTEdOQlFXTTdRVUZETVVJN1FVRkJRU3hSUVVOS08wRkJRMGs3UVVGQlFTeE5RVU5TTzBGQlFVRXNTVUZEU2l4RFFVRkRPMEZCUVVFc1JVRkRURHRCUVVGQkxFVkJhRTVCTEVsQlFVa3NaVUZCWlR0QlFVTm1MRmRCUVU4c2JVSkJRVXM3UVVGQlFTeEZRVU5vUWp0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQkxFVkJTMEVzWlVGQlpUdEJRVU5ZTEZWQlFVMHNUMEZCVHl4dFFrRkJTeXcyUWtGQlV5eGhRVUZoTzBGQlEzaERMRlZCUVUwc1QwRkJUeXhKUVVGSkxFMUJRVzFDTzBGQlJYQkRMRkZCUVVrc1ZVRkJPRUk3UVVGRGJFTXNVVUZCU1N4SlFVRkpPMEZCUlZJc1dVRkJVU3hWUVVGVkxFdEJRVXNzVTBGQlV5eEhRVUZITEU5QlFVOHNUVUZCVFR0QlFVTTFReXhYUVVGTExFdEJRVXNzVDBGQlR6dEJRVUZCTEVsQlEzSkNPMEZCUlVFc1YwRkJUenRCUVVGQkxFVkJRMWc3UVVGQlFTeEZRVWRSTEdOQlFXTXNVVUZCYjBJN1FVRkRkRU1zVTBGQlN6dEJRVUZCTEVWQlExUTdRVUZCUVN4RlFVMUJMRWxCUVVrc1YwRkJLMEk3UVVGREwwSXNWMEZCVHl4TFFVRkxMR0ZCUVdFN1FVRkJRU3hGUVVNM1FqdEJRVUZCTEVWQlQwRXNTVUZCU1N4VlFVRTJRanRCUVVNM1FpeFhRVUZQTEV0QlFVc3NXVUZCV1R0QlFVRkJMRVZCUXpWQ08wRkJRVUVzUlVGTlFTeEpRVUZKTEZOQlFWTXNUVUZCWXp0QlFVTjJRaXgxUWtGQlN5dzRRa0ZCVlN4bFFVRmxPMEZCUVVFc1JVRkRiRU03UVVGQlFTeEZRVTFCTEVsQlFVa3NWMEZCVnp0QlFVTllMRmRCUVU4c2JVSkJRVXNzT0VKQlFWVTdRVUZCUVN4RlFVTXhRanRCUVVGQkxFVkJUVUVzU1VGQlNTeFZRVUZWTEUxQlFXTTdRVUZEZUVJc2RVSkJRVXNzT0VKQlFWVXNiVUpCUVcxQ08wRkJRVUVzUlVGRGRFTTdRVUZCUVN4RlFVMUJMRWxCUVVrc1dVRkJXVHRCUVVOYUxGZEJRVThzYlVKQlFVc3NPRUpCUVZVN1FVRkJRU3hGUVVNeFFqdEJRVUZCTEVWQlRVRXNTVUZCU1N4WlFVRlpMRTFCUVdNN1FVRkRNVUlzZFVKQlFVc3NPRUpCUVZVc2NVSkJRWEZDTzBGQlFVRXNSVUZEZUVNN1FVRkJRU3hGUVUxQkxFbEJRVWtzWTBGQll6dEJRVU5rTEZkQlFVOHNiVUpCUVVzc09FSkJRVlU3UVVGQlFTeEZRVU14UWp0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUVzUlVGTlFTeFhRVUZYTEUxQlFXTTdRVUZEY2tJc1YwRkJUeXhMUVVGTExGRkJRVkVzUzBGQlN5eERRVUZETEUxQlFVMHNSVUZCUlN4VFFVRlRMRWxCUVVrN1FVRkJRU3hGUVVOdVJEdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFc1JVRk5RU3hqUVVGakxFMUJRV003UVVGRGVFSXNWVUZCVFN4TlFVRk5MRXRCUVVzc1YwRkJWeXhKUVVGSk8wRkJRMmhETEZGQlFVa3NRMEZCUXl4SlFVRkxMRTlCUVUwc1RVRkJUU3h0UTBGQmJVTXNTVUZCU1N4SFFVRkhPMEZCUTJoRkxGRkJRVWtzVlVGQlZTeERRVUZETEVsQlFVazdRVUZCUVN4RlFVTjJRanRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTEVWQlMwRXNXVUZCV1R0QlFVTlNMR1ZCUVZjc1dVRkJXU3h0UWtGQlN5eG5Ra0ZCWlR0QlFVTjJReXhWUVVGSkxHRkJRV0VzTkVKQlFUUkNMRzFDUVVGTExEaENRVUZWTEZGQlFWRTdRVUZCUVN4SlFVTjRSVHRCUVVGQkxFVkJRMG83UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJMRVZCVFVFc1ZVRkJWU3hQUVVGbExGRkJRVkVzVDBGQlR6dEJRVU53UXl4VlFVRk5MRmRCUVZjc1NVRkJTU3hKUVVGSkxGbEJRVms3UVVGRmNrTXNZVUZCVXl4UlFVRlJMR2xDUVVGcFFpeERRVUZETEVkQlFVY3NVMEZCVXl4VlFVRlZPMEZCUTNKRUxGbEJRVTBzVDBGQlR5eFJRVUZSTEZOQlFWTXNSMEZCUnl4aFFVRmhMRXRCUVVzN1FVRkRia1FzV1VGQlRTeFBRVUZQTEZGQlFWRXNiVUpCUVcxQ0xFVkJRVVVzVVVGQlVUdEJRVU5zUkN4WlFVRk5MRkZCUVZFc1VVRkJVU3h0UWtGQmJVSXNSVUZCUlN4aFFVRmhPMEZCUTNoRUxHTkJRVkVzVFVGQlRTeGhRVUZoTEVsQlFVa3NTVUZCU1N4SlFVRkpMRWxCUVVrc1MwRkJTeXhKUVVGSkxFMUJRVTBzVDBGQlR5eEZRVUZGTzBGQlFVRXNTVUZEZGtVc1EwRkJRenRCUVVWRUxGRkJRVWtzVFVGQlR5eE5RVUZMTEZWQlFWVTdRVUZGTVVJc1VVRkJTVkFzVFVGQlN5eFZRVUZWTEU5QlFVOUJMRTFCUVVzc1UwRkJVeXhOUVVGTkxFZEJRVWM3UVVGRE4wTXNaVUZCVXl4bFFVRmxMRXRCUVVzN1FVRkJRU3hKUVVOcVF5eFhRVUZYTEUxQlFVMHNWMEZCVnl4aFFVRmhMRWRCUVVjN1FVRkRlRU1zWlVGQlV5eHRRa0ZCYlVJc1RVRkJUU3hSUVVGUkxHVkJRV1VzUlVGQlJTeERRVUZETzBGQlFVRXNTVUZEYUVVc1QwRkJUenRCUVVOSUxHVkJRVk1zYVVKQlFXbENMRXRCUVVzN1FVRkJRU3hKUVVOdVF6dEJRVVZCTEZGQlFVa3NZVUZCWVR0QlFVRkJMRTFCUTJJc2JVSkJRVXM3UVVGQlFTeE5RVU5NTzBGQlFVRXNUVUZEUVN4SlFVRkpPMEZCUVVFc1NVRkRVanRCUVVWQkxIVkNRVUZMTEdWQlFXTXNTMEZCU3l4UlFVRlJPMEZCUVVFc1JVRkRjRU03UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVN4RlFVdEJMRlZCUVZVc1RVRkJZenRCUVVOd1FpeFJRVUZKTEZWQlFWVXNaMEpCUVdkQ0xHMUNRVUZMTERSQ1FVRlJMRVZCUVVVc1owSkJRV2RDTEVsQlFVazdRVUZCUVN4RlFVTnlSVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTEVWQlMwRXNTMEZCU3l4UFFVRlBMRWRCUVVjN1FVRkRXQ3gxUWtGQlN5eGpRVUZoTEV0QlFVczdRVUZEZGtJc1ZVRkJUU3hMUVVGTE8wRkJRMWdzVTBGQlN5eEpRVUZKTzBGQlFVRXNSVUZEWWp0QlFVRkJMRVZCT0VOUkxGRkJRVkVzVFVGQlowSXNWVUZCYzBNN1FVRkRiRVVzVVVGQlNTeHRRa0ZCU3l4elFrRkJjVUlzUjBGQlJ6dEJRVU0zUWl4bFFVRlRMR0ZCUVdFc1MwRkJTeXhaUVVGWkxITkRRVUZ6UXp0QlFVRkJMRWxCUTJwR08wRkJRMEVzVTBGQlN6dEJRVUZCTEVWQlExUTdRVUZCUVN4RlFVVkJMRzFDUVVGdFFpeExRVUY1UXp0QlFVTjRSQ3hSUVVGSkxFbEJRVWtzVlVGQlZUdEJRVU5rTEZkQlFVc3NVVUZCVVN4SlFVRkpMR05CUVdNc1IwRkJSeXhEUVVGRExGRkJRVkU3UVVGRGRrTXNXVUZCU1N4alFVRmpMRTFCUVUwc1NVRkJTVHRCUVVNMVFpeFpRVUZKTEV0QlFVczdRVUZCUVN4TlFVTmlMRU5CUVVNN1FVRkJRU3hKUVVOTUxFOUJRVTg3UVVGRFNDeFhRVUZMTEV0QlFVczdRVUZEVml4NVFrRkJTeXhqUVVGaExFMUJRVTA3UVVGQlFTeFJRVU53UWl4TlFVRk5MRXRCUVVzN1FVRkJRU3hOUVVObUxFTkJRVU03UVVGRFJDeHBRa0ZCVnl4RFFVRkRMRmxCUVZrN1FVRnFVM0JETEZsQlFVRkpPMEZCYTFOblFpeGhRVUZMTEZGQlFWRXNXVUZCV1N4UFFVRlBPMEZCUTJoRExGTkJRVUZCTEUxQlFVRXNiVUpCUVVzc1YwRkJUQ3huUWtGQlFVRXNTVUZCUVN4WFFVRmhMRWRCUVVjN1FVRkJRU3hOUVVOd1FpeERRVUZETzBGQlFVRXNTVUZEVER0QlFVVkJMRmRCUVU4N1FVRkJRU3hGUVVOWU8wRkJRVUVzUlVGRlFTeE5RVUZOTEZGQlFYRkNPMEZCUTNaQ0xGVkJRVTBzUlVGQlJTeE5RVUZOTEdkQ1FVRm5RaXhqUVVGakxFdEJRVXNzVDBGQlR5eEhRVUZITEVsQlFVa3NTVUZCU1R0QlFVVnVSU3gxUWtGQlN5eFBRVUZSTzBGQlEySXNWMEZCVHl4UFFVRlBMRTFCUVUwc1IwRkJSenRCUVVWMlFpeFJRVUZKTEdkQ1FVRm5RanRCUVVOb1FpeFhRVUZMTEZGQlFWRXNWMEZCVnl4RFFVRkRMRWRCUVVjc1RVRkJUU3hoUVVGaExHVkJRV1VzVFVGQlRTeFJRVUZSTEVOQlFVTTdRVUZCUVN4SlFVTnFSanRCUVVWQkxGRkJRVWtzWVVGQll5eHZRa0ZCU3l4bFFVRm5RanRCUVVOMlF5eFJRVUZKTEVsQlFVc3NUVUZCU3l4VlFVRlZMRXRCUVVzc1MwRkJTenRCUVVOc1F5eFJRVUZKTEUxQlFVOHNTMEZCU1N4VlFVRlZMRXRCUVVzN1FVRkZPVUlzVTBGQlN5eG5Ra0ZCWjBJc1kwRkJZeXhMUVVGTE8wRkJRM2hETEhkQ1FVRnZRaXhMUVVGTExGbEJRVms3UVVGRGNrTXNVMEZCU3l4VFFVRlRMRmRCUVZjN1FVRkJRU3hGUVVNM1FqdEJRVUZCTEVWQlJVRXNVVUZEU1Vrc1UwRkRRU3hWUVVOTk8wRkJRMDRzVVVGQlNVRXNXVUZCVnl4VlFVRlhMRzlDUVVGTExHdENRVUZNTEcxQ1FVRkxMRzlDUVVGdlFqdEJRVU51UkN4WFFVRlBMRTFCUVUwc1VVRkJVVUVzVTBGQlVTeFJRVUZSTzBGQlFVRXNSVUZEZWtNN1FVRkRTanRCUVRkU1FVZ3NVMEZCUVN4cFFrRkJRVVE3UVVGSFNUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCVUVvN1FVRlRVU3hsUVVGVExGZEJRV2xDTzBGQlF6RkNMRkZCUVUwc1YwRkJWeXhKUVVGSkxGTkJRVk1zV1VGQldUdEJRVU14UXl4TlFVRkpMRU5CUVVNc1UwRkJWU3hQUVVGTkxFMUJRVTBzZDBKQlFYZENPMEZCUTI1RUxGTkJRVTg3UVVGRFdEdEJRVVZKTEdOQlFWRXNWMEZCWjBJN1FVRkRlRUlzVVVGQlRTeFZRVUZWTEVsQlFVa3NVVUZCVVN4WlFVRlpPMEZCUTNoRExFMUJRVWtzUTBGQlF5eFJRVUZUTEU5QlFVMHNUVUZCVFN4MVFrRkJkVUk3UVVGRGFrUXNVMEZCVHp0QlFVTllPMEZCZDBKQkxHdENRVUZCUXl4UlFVRkJMRWRCUVZFc2FVSkJSRklzYjBKQk1VTkZPMEZCYlVSR0xHdENRVUZCUVN4UlFVRkJMRWRCUVVrc1dVRkVTaXhsUVd4RVJUdEJRVFJFUml4clFrRkJRVUVzVVVGQlFTeEhRVUZKTEZkQlJFb3NZMEV6UkVVN1FVRnZSVVlzYTBKQlFVRkJMRkZCUVVFc1IwRkJTU3haUVVSS1JpeG5Ra0Z1UlVVN1FVRTBSVVlzYTBKQlFVRkZMRkZCUVVFc1IwRkJTU3haUVVSS0xHVkJNMFZGTzBGQmIwWkdMR3RDUVVGQlFTeFJRVUZCTEVkQlFVa3NZVUZFU2tnc2FVSkJia1pGTzBGQk5FWkdMR3RDUVVGQlJ5eFJRVUZCTEVkQlFVa3NZVUZFU2l4blFrRXpSa1U3UVVGdlIwWXNhMEpCUVVGQkxGRkJRVUVzUjBGQlNTeGxRVVJLU2l4dFFrRnVSMFU3UVVFMFIwWXNhMEpCUVVGSkxGRkJRVUVzUjBGQlNTeGxRVVJLTEd0Q1FUTkhSVHRCUVhkUFJpeHJRa0ZCUVVFc1VVRkJRU3hIUVVGUkxGZEJSRklzWTBGMlQwVTdRVUZCUVN4TlFVRk9MR3RDUVVGQlFTeFJRVUZCTEZWQlJFRXNhVUpCUTAwN1FVRkJUaXhyUWtGQlFVRXNVVUZCUVN4SFFVRk5PMEZCSzFKT0xFbEJRVTBzVFVGQlRTeEpRVUZKTEVsQlFVazdRVUZEY0VJc1NVRkJUeXhqUVVGUk96czdRVk4yVldZN096dEJRMEZCTEU5QlFVOHNWMEZCVnp0QlFVTnNRaXhQUVVGUFNTeFZRVUZUTzBGQlEyaENMRTlCUVU5RExGVkJRVk03T3p0QlEwWm9RaXhQUVVGUFF5eFZRVUZUTzBGQlEyaENMRTlCUVU5RExGZEJRVlU3UVVGSmFrSXNTVUZCVFN4VlFVRlZMRWxCUVVrc1dVRkJXVHRCUVV4b1F5eDVRMEZCUVVNc1MwRkJRU3h4UWtGQlFVTXNVVUZCUVR0QlFXdENRU3gxUWtGQlF5eFRRVUZUTzBGQlEwZ3NTVUZCVFN4WFFVRk9MRTFCUVUwc2EwSkJRV2RDUkN4TlFVRkJMRkZCUVZFc1VVRkRha01zWlVGQlF5eFBRVUZQTEUxQlFVMHNTVUZMWkN4bFFVRkRMRTlCUVU4c1RVRkJUU3hKUVV0a0xHRkJRVU1zVDBGQlR5eFJRVUZSTEU5QlFVOHNTVUZZUlVFc1MwRkJaVHRCUVVGQkxFVkJORWQ0UXl4WlFVRlpMRVZCUVVVc1MwRkJTeXhIUVVFMlFqdEJRVU0xUXl4VlFVRk5PMEZCTjBkUUxITkNRVUZCUXl4UlFVRkJPMEZCUVVFN1FVRm5Ra2dzYVVOQlFWY3NTVUZCU1N4WlFVRlpPMEZCUXpOQ08wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQk1FWkpMRlZCUVUwc1ZVRkJWeXh0UWtGQlN5eFZRVUZYUXl4TFFVRkpMRmRCUVZjN1FVRkJRU3hOUVVNMVF6dEJRVUZCTEUxQlEwRkJMRXRCUVVrc1owSkJRV2RDTEdGQlEyaENRU3hMUVVGSkxHZENRVUZuUWl4alFVTndRa0VzUzBGQlNTeG5Ra0ZCWjBJN1FVRkJRU3hKUVVNMVFqdEJRVVZCTEhWQ1FVRkxMRmRCUVZsQkxFdEJRVWtzYVVKQlFXbENMRWxCUVVrc1VVRkJVU3hsUVVGbExFTkJRVVU3UVVGRGJrVXNkVUpCUVVzc1dVRkJZVUVzUzBGQlNTeG5Ra0ZCWjBJc1NVRkJTU3hSUVVGUkxHZENRVUZuUWl4RFFVRkZPMEZCUTNCRkxIVkNRVUZMTEZsQlFXRkJMRXRCUVVrc1owSkJRV2RDTEVsQlFVa3NVVUZCVVN4blFrRkJaMElzUTBGQlJUdEJRVVZ3UlN3d1FrRkJTeXh0UTBGQlRDeFhRVUZwUWl4dFFrRkJTenRCUVVOMFFpd3dRa0ZCU3l4dFEwRkJUQ3hYUVVGcFFpeHRRa0ZCU3p0QlFVVjBRaXhaUVVGUkxGZEJRVmNzVFVGQlRTeERRVUZETEVkQlFVY3NVVUZCVVR0QlFVTnFReXhWUVVGSk8wRkJRMEVzWjBKQlFWRXNXVUZCV1N4SFFVRkhPMEZCUVVFc1RVRkRNMElzVVVGQlVUdEJRVUZCTEUxQlJWSTdRVUZGUVN4VlFVRkpMRkZCUVZFc1kwRkJZeXhIUVVGSE8wRkJRM3BDTEdGQlFVc3NTMEZCU3l4UlFVRlJMR2RDUVVGblFpeEhRVUZITEV0QlFVczdRVUZCUVN4TlFVTTVRenRCUVVWQkxGVkJRVWtzVVVGQlVTeG5Ra0ZCWjBJc1IwRkJSenRCUVVNelFpeGhRVUZMTEV0QlFVc3NVVUZCVVN4aFFVRmhMRWRCUVVjc1NVRkJTVHRCUVVGQkxFMUJRekZETzBGQlFVRXNTVUZEU2l4RFFVRkRPMEZCUVVFc1JVRkRURHRCUVVGQkxFVkJla2xWTEU5QlFVOHNTMEZCWVR0QlFVTXhRaXhUUVVGTE8wRkJRVUVzUlVGRFZEdEJRVUZCTEVWQlIxVXNUMEZCVHl4TFFVRmhPMEZCUXpGQ0xGTkJRVXM3UVVGQlFTeEZRVU5VTzBGQlFVRXNSVUZIVlN4TFFVRkxMRTFCUVdNc1ZVRkJiVUk3UVVGRE5VTXNVMEZCU3l4RFFVRkRMRTFCUVUwc1VVRkJVVHRCUVVGQkxFVkJRM2hDTzBGQlFVRXNSVUV3UWtFc1VVRkRTVU1zVTBGRFFTeFZRVU5OTzBGQlEwNHNWMEZCVHl4TlFVRk5MRkZCUVZGQkxGTkJRVkVzVVVGQlVUdEJRVUZCTEVWQlEzcERPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUVzUlVGTFFTeFBRVUZoTzBGQlExUXNkVUpCUVVzc1ZVRkJVeXhYUVVGWE8wRkJRVUVzUlVGRE4wSTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUVzUlVGUFFTeFBRVUZQUVN4VFFVRnpRanRCUVVONlFpeDFRa0ZCU3l4VlFVRlRMRmxCUVZsQkxFOUJRVTA3UVVGQlFTeEZRVU53UXp0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTEVWQlVVRXNUVUZCVFN4TFFVRjVRenRCUVVNelF5eFhRVUZQTEVsQlFVa3NVVUZCVVN4RFFVRkRMRk5CUVZNc1YwRkJWenRCUVVOd1F5eDVRa0ZCU3l4WFFVRlZPMEZCUVVFc1VVRkRXQ3hSUVVGUkxFOUJRVThzUjBGQlJ6dEJRVUZCTEZGQlEyeENReXhOUVVGTE8wRkJRVUVzVVVGRFREdEJRVUZCTEZGQlEwRXNRMEZCUXl4SFFVRkhMRkZCUVZFN1FVRkRVaXhqUVVGSk8wRkJRMEVzYjBKQlFWRXNiVUpCUVVzc1YwRkJWU3hwUWtGQmFVSXNSMEZCUnl4RFFVRkRPMEZCUVVFc1ZVRkRhRVFzVTBGQlV5eFBRVUZQTzBGQlExb3NiVUpCUVU4c1MwRkJTenRCUVVGQkxGVkJRMmhDTzBGQlFVRXNVVUZEU2p0QlFVRkJMRTFCUTBvN1FVRkJRU3hKUVVOS0xFTkJRVU03UVVGQlFTeEZRVU5NTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQkxFVkJUMEVzVFVGQlRTeFhRVUZYTEV0QlFUUkNPMEZCUTNwRExGZEJRVThzU1VGQlNTeFJRVUZSTEVOQlFVTXNVMEZCVXl4WFFVRlhPMEZCUTNCRExIbENRVUZMTEZkQlFWVTdRVUZCUVN4UlFVTllMRzFDUVVGTExGVkJRVk1zVDBGQlR5eEhRVUZITzBGQlFVRXNVVUZEZUVKQkxFMUJRVXM3UVVGQlFTeFJRVU5NTzBGQlFVRXNVVUZEUVN4RFFVRkRMRWRCUVVjc1VVRkJVVHRCUVVOU0xHTkJRVWs3UVVGRFFTeHZRa0ZCVVN4TFFVRkxMRzFDUVVGTExGZEJRVlVzYVVKQlFXbENMRWRCUVVjc1EwRkJRenRCUVVGQkxGVkJRM0pFTEZOQlFWTXNUMEZCVHp0QlFVTmFMRzFDUVVGUExFdEJRVXM3UVVGQlFTeFZRVU5vUWp0QlFVRkJMRkZCUTBvN1FVRkJRU3hOUVVOS08wRkJRVUVzU1VGRFNpeERRVUZETzBGQlFVRXNSVUZEVER0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGQlFTeEZRWGREUVN4UFFVRlBMRmxCUVZrc1MwRkJaVHRCUVVNNVFpeFhRVUZQTEVsQlFVa3NVMEZCVVN4RlFVRkZMRTFCUVUwc1NVRkJTU3hEUVVGRE8wRkJRVUVzUlVGRGNFTTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQkxFVkJUVUVzVDBGQlR5eFhRVUZYTEV0QlFXRTdRVUZETTBJc1ZVRkJUU3hEUVVGRExFVkJRVVVzU1VGQlNTeEpRVUZKUVN4TlFVRkxMR2xDUVVGcFFpeEhRVUZITzBGQlF6RkRMRmRCUVU4c1UwRkJVU3haUVVGWkxFbEJRVXM3UVVGQlFTeEZRVU53UXp0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVN4RlFWVkJMRTlCUVU4c1RVRkJUU3hMUVVGbE8wRkJRM2hDTEZWQlFVMHNWVUZCVlVZc1MwRkJTU3hYUVVGWE8wRkJRVUVzVFVGRE0wSTdRVUZCUVN4TlFVTkJRU3hMUVVGSkxHZENRVUZuUWl4alFVRmpRU3hMUVVGSkxHZENRVUZuUWp0QlFVRkJMRWxCUXpGRU8wRkJSVUVzVlVGQlRTeERRVUZETEVWQlFVVXNTMEZCU3l4SFFVRkhMRWxCUVVrc1VVRkJVU3hwUWtGQmFVSXNUVUZCVFN4SlFVRkpPMEZCUTNoRUxGRkJRVWtzVVVGQlVTeGxRVUZsTEVkQlFVYzdRVUZETVVJc1lVRkJUeXhKUVVGSkxFdEJRVXM3UVVGQlFTeEpRVU53UWl4UFFVRlBPMEZCUTBnc1dVRkJUU3hKUVVGSkxFMUJRVTBzUjBGQlJ6dEJRVUZCTEVsQlEzWkNPMEZCUVVFc1JVRkRTanRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFc1JVRlRRU3hQUVVGUExFdEJRVXNzUzBGQllUdEJRVU55UWl4VlFVRk5MRU5CUVVNc1JVRkJSU3hKUVVGSkxFbEJRVWxGTEUxQlFVc3NhVUpCUVdsQ0xFZEJRVWM3UVVGRE1VTXNWMEZCVHl4VFFVRlJMRTFCUVUwc1NVRkJTenRCUVVGQkxFVkJRemxDTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTEVWQlZVRXNUMEZCVHl4WFFVRlhMRXRCUVdkRE8wRkJRemxETEZWQlFVMHNWVUZCVlVZc1MwRkJTU3hYUVVGWE8wRkJRVUVzVFVGRE0wSTdRVUZCUVN4TlFVTkJRU3hMUVVGSkxHZENRVUZuUWl4alFVRmpRU3hMUVVGSkxHZENRVUZuUWp0QlFVRkJMRWxCUXpGRU8wRkJSVUVzVjBGQlR5eEpRVUZKTEZGQlFWRXNRMEZCUXl4VFFVRlRMRmRCUVZjN1FVRkRjRU1zWTBGQlVTeDFRa0ZCZFVJc1RVRkJUU3hOUVVGTkxFTkJRVU1zUjBGQlJ5eFJRVUZSTzBGQlEyNUVMRmxCUVVrN1FVRkRRU3huUWtGQlRTeERRVUZETEVWQlFVVXNTMEZCU3l4SFFVRkhMRWxCUVVrc1VVRkJVU3gzUWtGQmQwSXNSMEZCUnp0QlFVTjRSQ3hqUVVGSkxGRkJRVkVzWlVGQlpTeEhRVUZITzBGQlF6RkNMRzFDUVVGUExGRkJRVkVzU1VGQlNTeExRVUZMTEVOQlFVTTdRVUZCUVN4VlFVTTNRaXhQUVVGUE8wRkJRMGdzYlVKQlFVOHNTVUZCU1N4TlFVRk5MRWxCUVVrc1MwRkJTeXhEUVVGRExFTkJRVU03UVVGQlFTeFZRVU5vUXp0QlFVRkJMRkZCUTBvc1UwRkJVeXhQUVVGUE8wRkJRMW9zYVVKQlFVOHNTMEZCU3p0QlFVRkJMRkZCUTJoQ08wRkJRVUVzVFVGRFNpeERRVUZETzBGQlFVRXNTVUZEVEN4RFFVRkRPMEZCUVVFc1JVRkRURHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFc1JVRlRRU3hQUVVGUExGVkJRVlVzUzBGQllUdEJRVU14UWl4VlFVRk5MRU5CUVVNc1JVRkJSU3hKUVVGSkxFbEJRVWxGTEUxQlFVc3NhVUpCUVdsQ0xFZEJRVWM3UVVGRE1VTXNWMEZCVHl4VFFVRlJMRmRCUVZjc1NVRkJTenRCUVVGQkxFVkJRMjVETzBGQlEwbzdRVUV4VDA5SUxGTkJRVUVzYVVKQlFVRkVPMEZCWjBKSU8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZ3UWtjN1FVRnpRa2dzWjBKQlFWY3NVMEZCUXl4UlFVRTJRanRCUVVOeVF5eFRRVUZQTEdkQ1FVRm5Ra2tzVFVGQlN5eHJRa0ZCYTBJc1RVRkJUU3hEUVVGRExFZEJRVWNzVVVGQlVUdEJRVU0xUkN4UlFVRkpPMEZCUTBFc1dVRkJUU3hEUVVGRExFMUJRVTBzU1VGQlNTeFBRVUZQTEhOQ1FVRnpRaXhIUVVGSE8wRkJRMnBFTEZWQlFVa3NWMEZCVnl4TlFVRk5PMEZCUTJwQ0xGbEJRVWtzVjBGQlZ5eHRRa0ZCU3l4aFFVRlpPMEZCUXpWQ0xHVkJRVXNzVDBGQlR5eFBRVUZQTEV0QlFVc3NRMEZCUXp0QlFVRkJMRkZCUXpkQ0xFOUJRVTg3UVVGRFNDeGxRVUZMTEU5QlFVOHNUMEZCVHl4TFFVRkxMRU5CUVVNN1FVRkJRU3hSUVVNM1FqdEJRVU5CTERoQ1FVRkxMRzFEUVVGTUxGZEJRV2xDTzBGQlFVRXNUVUZEY2tJN1FVRkJRU3hKUVVOS0xGTkJRVk1zVDBGQlR6dEJRVU5hTEdOQlFWRXNUVUZCVFN4TFFVRkxPMEZCUVVFc1NVRkRka0k3UVVGQlFTeEZRVU5LTEVOQlFVTTdRVUZEVER0QlFYQkRRU3hyUWtGQlFVZ3NVVUZCUVN4SFFVRlZMRlZCUkZZc1lVRkVVenRCUVU5VUxHdENRVUZCUVN4UlFVRkJMRWRCUVZVc1ZVRkVWaXhoUVU1VE8wRkJXVlFzYTBKQlFVRkJMRkZCUVVFc1IwRkJWU3hSUVVSV0xGZEJXRk03UVVGQlFTeFhRVUZPTEd0Q1FVRkJRU3hSUVVGQkxHTkJSRkFzY1VKQlEyRTdRVUZCVGl4clFrRkJRVUVzVVVGQlFTeEhRVUZOTzBGQlFVNHNTVUZCVFN4VlFVRk9PMEZCYVZKQkxGTkJRVk1zVlVGQlZTeExRVUY1UXp0QlFVTXZSQ3hOUVVGSkxFMUJRVTBzVVVGQlVTeEhRVUZITEVkQlFVYzdRVUZEY0VJc1YwRkJUeXhSUVVGUkxGZEJRVmNzUjBGQlJ6dEJRVUZCTEVWQlEycERMRTlCUVU4N1FVRkRTQ3hYUVVGUExGRkJRVkVzVlVGQlZTeEhRVUZITzBGQlFVRXNSVUZEYUVNN1FVRkRTanM3TzBGRE1WTkJMRGhDUVVGQlNTeExRVUZCTEcxQ1FVRkJRenRCUVZsQkxIRkNRVUZETEZOQlFWTTdRVUZEU0N4SlFVRk5MRk5CUVU0c1RVRkJUU3huUWtGQlkwUXNUVUZCUVN4UlFVRlJMRkZCUnk5Q0xGbEJRVU1zVDBGQlR5eEpRVWRTTEd0Q1FVRkRMRTlCUVU4c1NVRk9aVUVzUzBGQlpUdEJRVUZCTEVWQlFXNURPMEZCUVVFN1FVRkJRU3h6UWtGQlFVTXNVVUZCUVR0QlFVRkJPMEZCUVVFc1JVRkpUeXhOUVVGTk8wRkJRVUVzUlVGQlF6dEJRVUZCTEVWQlIxQXNXVUZCV1R0QlFVRkJMRVZCUVVNN1FVRkJRU3hGUVVWMlFpeFBRVUZQTEZOQlFWTkRMRmRCUVd0Q0xGVkJRWFZDTzBGQlEzSkVMRlZCUVUwc1JVRkJSU3hQUVVGUExFbEJRVWtzU1VGQlNTeFBRVUZOTEVsQlFVa3NWVUZCVlN4TlFVRk5PMEZCUXpkRExGVkJRVWtzVlVGQlZTeGhRVUZoTEVWQlFVY3NWMEZCVlN4UlFVRlJPMEZCUTJoRUxGVkJRVWtzVDBGQlR5eGhRVUZoTEVWQlFVY3NVVUZCVHl4UlFVRlJPMEZCUVVFc1NVRkRPVU1zUTBGQlF6dEJRVU5FTEZWQlFVMHNXVUZCV1N4WFFVRlhMRWRCUVVjN1FVRkRhRU1zVlVGQlRTeFRRVUZUTEZsQlFWa3NTMEZCUzBFc1UwRkJVVHRCUVVONFF5eFhRVUZQTzBGQlFVRXNSVUZEV0R0QlFVRkJMRVZCUlVFc1QwRkJUeXhSUVVGUlFTeFhRVUZyUWl4VlFVRjFRanRCUVVOd1JDeFZRVUZOTEVWQlFVVXNUMEZCVHl4SlFVRkpMRWxCUVVrc1QwRkJUU3hKUVVGSkxGVkJRVlVzVFVGQlRUdEJRVU0zUXl4VlFVRkpMRTlCUVU4c1lVRkJZU3hGUVVGSExGRkJRVThzVVVGQlVUdEJRVUZCTEVsQlF6bERMRU5CUVVNN1FVRkRSQ3hWUVVGTkxGTkJRVk1zVjBGQlZ5eExRVUZMUVN4VFFVRlJPMEZCUTNaRExGZEJRVTg3UVVGQlFTeEZRVU5ZTzBGQlFVRXNSVUZGUVN4UFFVRlBMRXRCUVVzc1ZVRkJkVUk3UVVGREwwSXNWVUZCVFN4RlFVRkZMRTlCUVU4c1NVRkJTU3hKUVVGSkxFOUJRVTBzU1VGQlNTeFZRVUZWTEUxQlFVMDdRVUZETjBNc1ZVRkJTU3hQUVVGUExHRkJRV0VzUlVGQlJ5eFJRVUZQTEZGQlFWRTdRVUZCUVN4SlFVTTVReXhEUVVGRE8wRkJRMFFzVlVGQlRTeFRRVUZUTEZkQlFWY3NSMEZCUnp0QlFVTTNRaXhYUVVGUE8wRkJRVUVzUlVGRFdEdEJRVUZCTEVWQlJVRXNUMEZCWlN4SlFVRkpMRTlCUVc5Q0xHRkJRVEJDTzBGQlF6ZEVMRlZCUVUwc1VVRkJVU3hKUVVGSkxFOUJRVTA3UVVGRGVFSXNWVUZCVFN4TlFVRk5MRTFCUVUwc1VVRkJVU3hQUVVGUExFMUJRVTBzUzBGQlN5eFJRVUZSTEVOQlFVTTdRVUZEY2tRc1ZVRkJUU3haUVVGWkxFMUJRVTBzVVVGQlVTeGhRVUZoTEUxQlFVMDdRVUZETDBNc1dVRkJUU3hYUVVGWExFZEJRVWM3UVVGRGNFSXNXVUZCVFN4WFFVRlhMRk5CUVZNN1FVRkRNVUlzYjBKQlFXTTdRVUZCUVN4SlFVTnNRaXhEUVVGRE8wRkJRMFFzVjBGQlR5eEZRVUZGTEU5QlFVOHNTMEZCU3l4TlFVRk5MRTFCUVUwc1NVRkJTU3hGUVVGRk8wRkJRVUVzUlVGRE0wTTdRVUZCUVN4RlFVVkJMRkZCUTBsRExGTkJRMEVzVlVGRFRUdEJRVU5PTEZkQlFVOHNUVUZCVFN4UlFVRlJRU3hUUVVGUkxGRkJRVkU3UVVGQlFTeEZRVU42UXp0QlFVRkJMRVZCUlVFc1UwRkJVenRCUVVOTUxGTkJRVXNzVlVGQlZUdEJRVUZCTEVWQlEyNUNPMEZCUTBvN1FVRjRSRTlHTEZOQlFVRXNhVUpCUVVGRU8wRkJTVWdzYTBKQlFVRkRMRkZCUVVFc1IwRkJWU3hQUVVSV0xGVkJTRk03UVVGUFZDeHJRa0ZCUVVFc1VVRkJRU3hIUVVGVkxHRkJSRllzWjBKQlRsTTdRVUZCUVN4VFFVRk9MR3RDUVVGQlFTeFJRVUZCTEZsQlJGQXNiVUpCUTJFN1FVRkJUaXhyUWtGQlFVRXNVVUZCUVN4SFFVRk5PMEZCUVU0c1NVRkJUU3hSUVVGT08wRkJNRVJCTEVsQlFVMHNSVUZCUlN4VlFVRlZMRk5CUVZNc1MwRkJTeXhKUVVGSk8wRkJjVUp3UXl4VFFVRlRMRmRCUTFvc1RVRkRRU3hOUVVOQkxGVkJRMEVzVjBGRFZ6dEJRVU5ZTEUxQlFVa3NaVUZCWlR0QlFVTnVRaXhOUVVGSkxGRkJRVFJDTzBGQlEyaERMRkZCUVUwc1kwRkJZeXh2UWtGQlNTeEpRVUZuUWp0QlFVVjRReXhYUVVGVFJ5eExRVUZKTEU5QlFWVTdRVUZEYmtJc1VVRkJTU3hWUVVGVkxHTkJRV003UVVGRGVFSXNjVUpCUVdVN1FVRkRaaXhaUVVGTkxFdEJRVXNzVjBGQlZ5eEZRVUZGTEZGQlFWRXNRMEZCUXl4UFFVRlBMRWRCUVVjc1EwRkJRenRCUVVGQkxFbEJRMmhFTzBGQlFVRXNSVUZEU2p0QlFVVkJMRmRCUVZNc1ZVRkJWVHRCUVVObUxGRkJRVWtzVDBGQlR5eGhRVUZoTEZsQlFWazdRVUZEYUVNc1dVRkJUU3hSUVVGUkxGTkJRVk1zV1VGQldUdEJRVU51UXl4VlFVRkpMR2xDUVVGcFFpeFRRVUZUTzBGQlF6RkNMR05CUVUwc1MwRkJTMEVzU1VGQlJ6dEJRVUZCTEUxQlEyeENMRTlCUVU4N1FVRkRTQ3hSUVVGQlFTeExRVUZKTEV0QlFVczdRVUZCUVN4TlFVTmlPMEZCUVVFc1NVRkRTaXhQUVVGUE8wRkJRMGdzWjBKQlFWVXNVVUZCVVN4RlFVRkZMRXRCUVVzc1EwRkJReXhYUVVGWE8wRkJRMnBETEZGQlFVRkJMRXRCUVVrc1dVRkJXU3hWUVVGVkxGRkJRVkVzV1VGQldTeEpRVUZMTEUxQlFWazdRVUZCUVN4TlFVTnVSU3hEUVVGRE8wRkJRVUVzU1VGRFREdEJRVUZCTEVWQlEwbzdRVUZGUVN4WFFVRlRMRlZCUVZVc1ZVRkJhME03UVVGRGFrUXNVVUZCU1N4WlFVRlpMRk5CUVZNc1IwRkJSenRCUVVONFFpeHBRa0ZCVnl4UFFVRlBPMEZCUTJ4Q0xHTkJRVkVzV1VGQldTeFRRVUZUTEVsQlFVazdRVUZCUVN4SlFVTnlRenRCUVVWQkxHZENRVUZaTEVsQlFVa3NVVUZCVVR0QlFVVjRRaXhYUVVGUExFMUJRVTA3UVVGRFZDeHJRa0ZCV1N4UFFVRlBMRkZCUVZFN1FVRkRNMElzVlVGQlNTeFpRVUZaTEZOQlFWTXNTMEZCU3l4UFFVRlBPMEZCUTJwRExITkNRVUZqTEV0QlFVczdRVUZEYmtJc1owSkJRVkU3UVVGQlFTeE5RVU5hTzBGQlFVRXNTVUZEU2p0QlFVRkJMRVZCUTBvN1FVRkZRU3hUUVVGUExFbEJRVWtzVTBGQlV5eE5RVUZOTEdOQlFXTXNVMEZCVXp0QlFVTnlSRHM3TzBGRE1VbEJMRTlCUVU5RExGZEJRVlU3T3p0QlEwcHFRaXhQUVVGUExHVkJRV1U3UVVGUlVDeFRRVUZTTEZGQlFYbENMRVZCUVVVc1YwRkJWeXhKUVVGSkxGVkJRVlVzUjBGQlJ5eEhRVUZwUWp0QlFVTTNSU3hSUVVGTkxFOUJRVThzVlVGQlZTeExRVUZMTEZsQlFWazdRVUZGZUVNc1VVRkJUU3hWUVVGVkxFbEJRVWxETEV0QlFVa3NTVUZCU1N4RlFVRkZMR0ZCUVdGQkxFdEJRVWtzV1VGQldTeFpRVUZaTEZGQlFXbENMRU5CUVVNN1FVRkRla1lzVVVGQlRTeFpRVUY1UWl4RFFVRkRPMEZCUjJoRExGZEJRVk1zYTBKQlFXdENPMEZCUlROQ0xHVkJRVmNzVVVGQlVTeFhRVUZYTzBGQlF6VkNMR05CUVZFc1QwRkJUeXhKUVVGSk8wRkJRVUVzU1VGRGNrSTdRVUZEUVN4alFVRlZMRk5CUVZNN1FVRkhia0lzVlVGQlRTeFJRVUZSTEV0QlFVc3NWVUZCVlR0QlFVTTNRaXhsUVVGWExGRkJRVkVzVDBGQlR6dEJRVU40UWl4WlFVRk5MRTlCUVU4c1MwRkJTeXhWUVVGVk8wRkJRelZDTEZWQlFVa3NRMEZCUXl4TFFVRk5PMEZCUlZnc1dVRkJUU3hSUVVGUkxFbEJRVWxCTEV0QlFVa3NUVUZCVFN4RlFVRkZMRTlCUVU4c1RVRkJUU3haUVVGWkxGTkJRVk1zUTBGQlF6dEJRVU5xUlN4WlFVRk5MRlZCUVZVc1NVRkJTVUVzUzBGQlNTeGhRVUZoTEVWQlFVVXNVVUZCVVN4RlFVRkZMRU5CUVVNN1FVRkRiRVFzWTBGQlVTeFJRVUZSTEZkQlFWY3NUVUZCVFR0QlFVTXZRaXhqUVVGTkxGbEJRVmtzUzBGQlN5eGxRVUZsTzBGQlEzUkRMRmxCUVVrc1YwRkJWenRCUVVOaUxHZENRVUZOTEdOQlFXTXNTVUZCU1VFc1MwRkJTU3haUVVGWkxFVkJRVVVzV1VGQldTeFhRVUZYTEZkQlFWY3NUVUZCVFN4RFFVRkRPMEZCUTI1R0xITkNRVUZaTEZkQlFWY3NTMEZCU3p0QlFVTTFRaXh6UWtGQldTeHZRa0ZCYjBJc1dVRkJXU3hMUVVGTExHbENRVUZwUWl4RFFVRkRPMEZCUTI1RkxITkNRVUZaTEUxQlFVMDdRVUZCUVN4UlFVTndRanRCUVVGQkxFMUJRMFlzUTBGQlF6dEJRVU5FTEZsQlFVMHNaVUZCWlN4UFFVRlBPMEZCUlRWQ0xHTkJRVkVzVDBGQlR5eExRVUZMTzBGQlEzQkNMR2RDUVVGVkxFdEJRVXNzUzBGQlN6dEJRVUZCTEVsQlEzUkNPMEZCUVVFc1JVRkRSanRCUVVsRkxHdENRVUZuUWp0QlFVZG9RaXhQUVVGTExGRkJRVkVzWTBGQll5eGxRVUZsTzBGQlF6RkRMRTlCUVVzc1VVRkJVU3huUWtGQlowSXNaVUZCWlR0QlFVVTFReXhUUVVGUE8wRkJRMVE3T3p0QlEzWkVRU3hQUVVGUFF5eFZRVUZUTzBGQlEyaENMRTlCUVU5RExGbEJRVmM3T3p0QlEwUnNRaXhQUVVGUFF5eFZRVUZUTzBGQlEyaENMRTlCUVU5RExGVkJRVk03UVVGTGFFSXNTVUZCVFN4TlFVRk5MRTFCUVUwc1QwRkJUeXhWUVVGVkxFVkJRVVVzUzBGQlN5eERRVUZETEUxQlFVMHNSVUZCUlN4UFFVRlBMRVZCUVVVc1RVRkJUU3hOUVVGTkxFbEJRVWs3UVVGRk5VVXNTVUZCVFN4bFFVRmxMRWxCUVVsRExFdEJRVWtzVVVGQlVUdEJRVVZ5UXl4SlFVRk5MRVZCUVVVc2EwSkJRV3RDTEVsQlFVa3NVMEZCVXp0QlFVRkJMRVZCUTI1RExGVkJRVlVzVFVGQlRUdEJRVU5hTEZGQlFVa3NVMEZCVTBFc1MwRkJTU3hQUVVGUE8wRkJRM0JDTEZsQlFVMHNUMEZCWjBRN1FVRkJRU3hSUVVOc1JEdEJRVUZCTEZGQlEwRTdRVUZCUVN4TlFVTktPMEZCUTBFc1lVRkJUenRCUVVGQkxFbEJRMWc3UVVGRFFTeFJRVUZKTEU5QlFVOHNVMEZCVXl4SlFVRkpMR0ZCUVdFN1FVRkRha01zV1VGQlRTeFBRVUZ6UkR0QlFVRkJMRkZCUTNoRU8wRkJRVUVzVVVGRFFUdEJRVUZCTEZGQlEwRTdRVUZCUVN4TlFVTktPMEZCUTBFc1lVRkJUenRCUVVGQkxFbEJRMWc3UVVGQlFTeEZRVU5LTzBGQlFVRXNSVUZEUVN4UFFVRlBMRkZCUVZFc1MwRkJTenRCUVVOb1FpeFJRVUZKTEVWQlFVVXNhMEpCUVd0Q1FTeExRVUZKTEZOQlFWTTdRVUZEYWtNc1lVRkJUeXhSUVVGUkxFdEJRVXNzVFVGQlRTeHhRa0ZCY1VJc1RVRkJUU3hGUVVGRkxFTkJRVU03UVVGQlFTeEpRVU0xUkR0QlFVVkJMRlZCUVUwc1RVRkJUU3hQUVVGUExHdENRVUZyUWp0QlFVTnlReXhSUVVGSk8wRkJSVW9zVlVGQlRVTXNWVUZCVXl4RFFVRkRReXhUUVVGblFqdEJRVU0xUWl4VlFVRkpMRU5CUVVOQkxFdEJRVWtzVTBGQlV5eEhRVUZITEV0QlFVc3NRMEZCUTBFc1MwRkJTU3hUUVVGVExFZEJRVWNzUjBGQlJ6dEJRVU14UXl4UlFVRkJRU3hQUVVGTkxFOUJRVTlCTEVsQlFVYzdRVUZCUVN4TlFVTndRanRCUVVWQkxGVkJRVWtzVTBGQlZTeExRVUZKTEdkQ1FVRm5RaXhSUVVGUk8wRkJSVEZETEdsQ1FVRlhMRWxCUVVsR0xFdEJRVWtzV1VGQldUdEJRVU12UWl4bFFVRlRMR2xDUVVGcFFrVXNTVUZCUnp0QlFVTTNRaXhWUVVGSkxHRkJRV0VzVlVGQlZVWXNTMEZCU1N3MFFrRkJORUk3UVVGQlFTeEpRVU12UkR0QlFVVkJMRkZCUVVrc1pVRkJaU3hWUVVGVk8wRkJRM3BDTEUxQlFVRkRMRkZCUVU4c1NVRkJTU3hKUVVGSkxFTkJRVU03UVVGRGFFSXNXVUZCVFN4VlFVRlZMRWxCUVVrc1ZVRkJWU3hOUVVGTlFTeFJRVUZQTEVsQlFVa3NTVUZCU1N4RFFVRkRMRU5CUVVNN1FVRkRja1FzWjBKQlFWVXNUMEZCVHp0QlFVRkJMRWxCUTNKQ0xFOUJRVTg3UVVGRFNDeE5RVUZCUVN4UlFVRlBMRWRCUVVjN1FVRkJRU3hKUVVOa08wRkJRVUVzUlVGRFNqdEJRVUZCTEVWQlJVRXNVMEZCVXl4UlFVRlJMRmRCUVZjN1FVRkRlRUlzVVVGQlNTeEZRVUZGTEd0Q1FVRnJRa1FzUzBGQlNTeFRRVUZUTzBGQlEycERMR0ZCUVU4c1VVRkJVU3hMUVVGTExFMUJRVTBzTWtKQlFUSkNMRTFCUVUwc1JVRkJSU3hEUVVGRE8wRkJRVUVzU1VGRGJFVTdRVUZGUVN4UlFVRkpMSEZDUVVGeFFpeFZRVUZWTzBGQlF5OUNMR0ZCUVU4c1lVRkJZU3hWUVVGVkxFbEJRVWtzUlVGQlJTeE5RVUZOTEV0QlFVczdRVUZETDBNc1dVRkJUU3hWUVVGVkxGVkJRVlU3UVVGQlFTeFJRVU4wUWl4TlFVRlBMRTlCUVU4c1lVRkJZU3hWUVVGVkxFbEJRVWtzUlVGQlJTeE5RVUZOTEV0QlFVczdRVUZCUVN4TlFVTXhSRHRCUVVOQkxHZENRVUZWTEU5QlFVODdRVUZCUVN4SlFVTnlRaXhQUVVGUE8wRkJRMGdzWVVGQlR5eG5Ra0ZCWjBJc1ZVRkJWU3hOUVVGTkxFdEJRVXNzUTBGQlF6dEJRVUZCTEVsQlEycEVPMEZCUVVFc1JVRkRTanRCUVVGQkxFVkJSVUVzVTBGQlV5eE5RVUZOTzBGQlExZ3NWMEZCVDBFc1MwRkJTU3hOUVVGTkxFbEJRVWtzUzBGQlN5eFRRVUZUTEVOQlFVTTdRVUZCUVN4RlFVTjRRenRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVN4RlFVOUJMRmxCUVZrc1VVRkJVU3hQUVVGUE8wRkJRM1pDTEZGQlFVa3NhMEpCUVd0Q1FTeExRVUZKTEZWQlFWVXNhVUpCUVdsQ1FTeExRVUZKTEdsQ1FVRnBRanRCUVVOMFJTeGhRVUZQTEU5QlFVOHNhMEpCUVd0Q0xFdEJRVXM3UVVGQlFTeEpRVU42UXp0QlFVVkJMRkZCUVVrc1pVRkJaU3hWUVVGVkxFOUJRVThzVDBGQlR5eGhRVUZoTEZsQlFWazdRVUZEYUVVc1lVRkJUeXhQUVVGUExGVkJRVlVzU1VGQlNUdEJRVUZCTEVsQlEyaERPMEZCUlVFc1VVRkJTU3haUVVGWkxGVkJRVlVzVDBGQlR5eFBRVUZQTEZWQlFWVXNXVUZCV1R0QlFVTXhSQ3hoUVVGUExFOUJRVThzVDBGQlR5eExRVUZMTzBGQlFVRXNTVUZET1VJN1FVRkZRU3hWUVVGTkxFMUJRVTBzYVVKQlFXbENMRXRCUVVzc1UwRkJVeXhOUVVGTkxFVkJRVVU3UVVGQlFTeEZRVU4yUkR0QlFVRkJMRVZCUTBFc1dVRkJXU3hSUVVGUkxFOUJRVTg3UVVGRGRrSXNVVUZEU1N4cFFrRkJhVUpCTEV0QlFVa3NZMEZEY2tJc2IwSkJRVzlDTEZWQlEzQkNMRTlCUVU4c1QwRkJUeXh0UWtGQmJVSXNXVUZEYmtNN1FVRkRSU3hoUVVGUExFOUJRVThzWlVGQlpTeExRVUZMTzBGQlFVRXNTVUZEZEVNN1FVRkZRU3hSUVVOSkxHbENRVUZwUWtFc1MwRkJTU3hWUVVOeVFpeHJRa0ZCYTBKQkxFdEJRVWtzVTBGRGRFSXNUVUZCVFN4VFFVRlRMRTFCUTJZc1RVRkJUU3hUUVVGVExGRkJRMllzVVVGQlVTeExRVUZMTEUxQlFVMHNVMEZEY2tJN1FVRkRSU3hoUVVGUExFOUJRVThzVlVGQlZTeFBRVUZQTEUxQlFVMHNTVUZCU1R0QlFVRkJMRWxCUXpkRE8wRkJSVUVzVVVGQlNTeHBRa0ZCYVVKQkxFdEJRVWtzVjBGQlZ5eHJRa0ZCYTBKQkxFdEJRVWtzV1VGQldUdEJRVU5zUlN4aFFVRlBMRTlCUVU4c1dVRkJXU3hMUVVGTE8wRkJRVUVzU1VGRGJrTTdRVUZGUVN4UlFVTkpMR2xDUVVGcFFrY3NTMEZCU1N4alFVTndRaXhyUWtGQmEwSklMRXRCUVVrc1kwRkJZeXhyUWtGQmEwSkJMRXRCUVVrc1kwRkROMFE3UVVGRFJTeGhRVUZQTEU5QlFVOHNaVUZCWlN4TFFVRkxPMEZCUVVFc1NVRkRkRU03UVVGRlFTeFJRVUZKTEdsQ1FVRnBRa2NzUzBGQlNTeFpRVUZaTEd0Q1FVRnJRa0VzUzBGQlNTeE5RVUZOTzBGQlFVRXNTVUZGYWtVN1FVRkZRU3hSUVVGSkxHbENRVUZwUWtnc1MwRkJTU3hWUVVGVkxHdENRVUZyUWtFc1MwRkJTU3hoUVVGaE8wRkJRMnhGTEdGQlFVOHNUMEZCVHl4WFFVRlhMRXRCUVVzN1FVRkJRU3hKUVVOc1F6dEJRVVZCTEZGQlFVa3NhVUpCUVdsQ1FTeExRVUZKTEdOQlFXTXNhMEpCUVd0Q1FTeExRVUZKTEZWQlFWVTdRVUZEYmtVc1lVRkJUeXhQUVVGUExGZEJRVmNzUzBGQlN6dEJRVUZCTEVsQlEyeERPMEZCUlVFc1VVRkJTU3hyUWtGQmEwSkJMRXRCUVVrc1YwRkJWenRCUVVOcVF5eGhRVUZQTEU5QlFVOHNaMEpCUVdkQ0xHTkJRV01zVDBGQlR5eFJRVUZSTEV0QlFVc3NRMEZCUXp0QlFVRkJMRWxCUTNKRk8wRkJSVUVzVlVGQlRTeE5RVUZOTEdOQlFXTXNTMEZCU3l4UFFVRlBMRTFCUVUwc1JVRkJSVHRCUVVGQkxFVkJRMnhFTzBGQlEwb3NRMEZCUXpzN08wRkVNVWxFTEU5QlFVOHNUMEZCVHl4dFFrRkJiVUk3UVVGQlFTeEZRVU0zUWl4TFFVRkxTU3hMUVVGSk8wRkJRVUVzUlVGRFZDeFJRVUZSUVN4TFFVRkpPMEZCUVVFc1JVRkRXaXhYUVVGWFFTeExRVUZKTzBGQlFVRTdRVUZCUVN4RlFVVm1MR0ZCUVdGQkxFdEJRVWs3UVVGQlFTeEZRVU5xUWl4UFFVRlBRU3hMUVVGSk8wRkJRVUVzUlVGRFdDeFBRVUZQUVN4TFFVRkpPMEZCUVVFc1JVRkRXQ3hQUVVGUFFTeExRVUZKTzBGQlFVRXNSVUZEV0N4VlFVRlZRU3hMUVVGSk8wRkJRVUVzUlVGRFpDeFpRVUZaUVN4TFFVRkpPMEZCUVVFc1JVRkRhRUlzVTBGQlUwRXNTMEZCU1R0QlFVRkJMRVZCUTJJc1UwRkJVMEVzUzBGQlNUdEJRVUZCTEVWQlEySXNWVUZCVlVFc1MwRkJTVHRCUVVGQkxFVkJRMlFzWjBKQlFXZENRU3hMUVVGSk8wRkJRVUVzUlVGRGNFSXNVVUZCVVVNc1QwRkJUVHRCUVVGQkxFVkJRMlFzVDBGQlQwUXNTMEZCU1R0QlFVRkJMRVZCUTFnc1VVRkJVVUVzUzBGQlNUdEJRVUZCTEVWQlExb3NZMEZCWTBFc1MwRkJTVHRCUVVGQkxFVkJRMnhDTEZGQlFWRkRMRTlCUVUwN1FVRkRiRUlzUTBGQlF6czdPMEZGZUVKakxGTkJRVklzWjBKQlFXbERPMEZCUTNSRExGRkJRVTBzVlVGRFNpeHZRa0ZCUXl4aFFVRlJMRTlCUVUwc1pVRkRZaXc0UWtGQlF5eFhRVUZSTEVkQlExZzdRVUZIUml4UlFVRk5MRk5CUTBvN1FVRkJRU3hKUVVGRE8wRkJRVUU3UVVGQlFTeE5RVU5ETEU5QlFVMDdRVUZCUVN4TlFVTk9MRmRCUVZkRExFdEJRVWtzVlVGQlZUdEJRVUZCTEUxQlJYaENPMEZCUVVFN1FVRkJRU3hGUVVOSU8wRkJTVVlzVlVGQlVTeFJRVUZSTEZGQlFWRXNUVUZCVFR0QlFVTTFRaXhYUVVGUExGbEJRVmxCTEV0QlFVa3NWVUZCVlR0QlFVRkJMRVZCUTI1RExFTkJRVU03UVVGRlJDeFZRVUZSTEZGQlFWRXNVVUZCVVN4TlFVRk5PMEZCUXpWQ0xGZEJRVThzV1VGQldVRXNTMEZCU1N4VlFVRlZPMEZCUVVFc1JVRkRia01zUTBGQlF6dEJRVVZFTEZOQlFVODdRVUZEVkRzN08wRkROVUpCTEU5QlFVOHNVVUZCVVR0QlFVVkJMRk5CUVZJc2EwSkJRVzFETzBGQlEzaERMRkZCUVUwc1VVRkJVU3hIUVVGSExGbEJRVms3UVVGRE4wSXNVVUZCVFN4UlFVRlJMRWxCUVVsRExFdEJRVWtzVFVGQlRUdEJRVUZCTEVsQlF6RkNMRkZCUVZGQkxFdEJRVWtzVFVGQlRUdEJRVUZCTEVWQlEzQkNMRU5CUVVNN1FVRkZSQ3hSUVVGTkxHRkJRV0VzVFVGQlRUdEJRVU4yUWl4VlFVRk5MRlZCUVZVc1RVRkJUU3h2UWtGQmIwSTdRVUZETVVNc1VVRkJTU3hEUVVGRExGRkJRVk03UVVGRlpDeFJRVUZKTEZGQlFWRXNUVUZCVFR0QlFVTm9RaXhaUVVGTkxGRkJRVkU3UVVGQlFTeEpRVU5vUWl4WFFVRlhMRkZCUVZFc1ZVRkJWU3hOUVVGTk8wRkJRMnBETEZsQlFVMHNVVUZCVVR0QlFVRkJMRWxCUTJoQ0xGZEJRVmNzVVVGQlVTeFZRVUZWTEUxQlFVMDdRVUZEYWtNc1dVRkJUU3hSUVVGUk8wRkJRVUVzU1VGRGFFSXNUMEZCVHp0QlFVTk1MRmxCUVUwc1VVRkJVVHRCUVVGQkxFbEJRMmhDTzBGQlFVRXNSVUZEUmp0QlFVZEJMR0ZCUVZjN1FVRkhXQ3hSUVVGTkxHOUNRVUZ2UWl4RlFVRkZMRkZCUVZFc2EwSkJRV3RDTEZWQlFWVTdRVUZEYUVVc1VVRkJUU3h2UWtGQmIwSXNSVUZCUlN4UlFVRlJMR2RDUVVGblFpeFZRVUZWTzBGQlJUbEVMRk5CUVU4N1FVRkRWRHM3TzBGREwwSkJMRTlCUVU4c1kwRkJZenRCUVVWT0xGTkJRVklzYjBKQlFYRkRPMEZCUXpGRExGRkJRVTBzVDBGQlR5eFRRVUZUTEZsQlFWazdRVUZEYkVNc1RVRkJTU3haUVVGWk8wRkJRMmhDTEZGQlFVMHNjVUpCUVRaRExFTkJRVU03UVVGRmNFUXNVVUZCVFN4UFFVRlBMRWxCUVVsRExFdEJRVWtzVFVGQlRUdEJRVUZCTEVsQlEzcENMRTlCUVU4N1FVRkJRVHRCUVVGQkxFVkJRMVFzUTBGQlF6dEJRVVZFTEZGQlFVMHNVMEZCVXl4SlFVRkpRU3hMUVVGSkxFOUJRVTg3UVVGQlFTeEpRVU0xUWl4UlFVRlJRU3hMUVVGSkxFMUJRVTA3UVVGQlFTeEpRVU5zUWl4UFFVRlBPMEZCUVVFc1JVRkRWQ3hEUVVGRE8wRkJSVVFzVTBGQlR5eGpRVUZqTEcxQ1FVRnRRanRCUVVWNFF5eFRRVUZQTEZGQlFWRXNWMEZCVnl4TlFVRk5PMEZCUXpsQ0xGRkJRVWtzVlVGQlZTeExRVUZMTEZsQlFWazdRVUZETDBJc1pVRkJWeXhWUVVGVkxGTkJRVkU3UVVGRGVrSXNWVUZCUnl4WFFVRlZPMEZCUTFRc1kwRkJUU3hMUVVGTExHMUNRVUZ0UWl4UFFVRlBMRTlCUVU4N1FVRkROVU1zWVVGQlN5eFJRVUZSTEd0RFFVRnJReXhGUVVGRkxHTkJRV01zVDBGQlR5eFBRVUZQTEVWQlFVVTdRVUZETDBVc1pVRkJUeXh0UWtGQmJVSXNUMEZCVHl4UFFVRlBPMEZCUVVFc1RVRkROVU1zVDBGRFNUdEJRVU5CTERKQ1FVRnRRaXhQUVVGUExFOUJRVThzU1VGQlNTeFBRVUZQTEZWQlFWVTdRVUZEZEVRc1lVRkJTeXhSUVVGUkxHOUVRVUZ2UkN4UFFVRlBMRTlCUVU4c1JVRkJSVHRCUVVGQkxFMUJRM0pHTzBGQlFVRXNTVUZEU2p0QlFVVkJMR2RDUVVGWkxFTkJRVU03UVVGRFlpeFRRVUZMTEZGQlFWRXNXVUZCV1N4WFFVRk5PMEZCUVVFc1JVRkRha01zUTBGQlF6dEJRVVZFTEZOQlFVODdRVUZEVkRzN08wRkRja05CTEU5QlFVOHNZVUZCWVR0QlFVTndRaXhQUVVGUFF5eFhRVUZWTzBGQlJVWXNVMEZCVWl4dFFrRkJiME03UVVGRGVrTXNVVUZCVFN4VlFVRlZMRkZCUVZFc1dVRkJXVHRCUVVOd1F5eFJRVUZOTEZGQlFWRXNTVUZCU1VNc1MwRkJTU3hOUVVGTk8wRkJRVUVzU1VGRE1VSXNVVUZCVVVFc1MwRkJTU3hOUVVGTk8wRkJRVUVzUlVGRGNFSXNRMEZCUXp0QlFVVkVMRkZCUVUwc1lVRkJZU3hOUVVGTk8wRkJRM1pDTEZsQlFWRXNVVUZCVVN4WlFVRlpMRWRCUVVjN1FVRkJRVHRCUVVGQkxFMUJSVE5DTEV0QlFVczdRVUZEUkN4alFVRk5MRkZCUVZFN1FVRkRaRHRCUVVGQk8wRkJRVUVzVFVGRlNpeExRVUZMTzBGQlEwUXNXVUZCU1N4WFFVRlhMRkZCUVZFc1MwRkJTenRCUVVNMVFpeFpRVUZKTEZkQlFWY3NTVUZCUnp0QlFVTmtMR2RDUVVGTkxGRkJRVkU3UVVGQlFTeFJRVU5zUWl4WFFVTlJMRmRCUVZjc1NVRkJSenRCUVVOc1FpeG5Ra0ZCVFN4UlFVRlJPMEZCUVVFc1VVRkRiRUlzVjBGRFVTeFhRVUZYTEVsQlFVYzdRVUZEYkVJc1owSkJRVTBzVVVGQlVUdEJRVUZCTEZGQlEyeENMRmRCUTFFc1YwRkJWeXhKUVVGSE8wRkJRMnhDTEdkQ1FVRk5MRkZCUVZFN1FVRkJRU3hSUVVOc1FpeFhRVU5STEZkQlFWY3NSMEZCUlR0QlFVTnFRaXhuUWtGQlRTeFJRVUZSTzBGQlFVRXNVVUZEYkVJN1FVRkRRVHRCUVVGQk8wRkJRVUVzVFVGRlNqdEJRVU5KTEdOQlFVMHNVVUZCVVR0QlFVTmtPMEZCUVVFc1NVRkRVanRCUVVGQkxFVkJRMFk3UVVGSFJTeGhRVUZYTzBGQlIxZ3NWVUZCVVN4UlFVRlJMRzFDUVVGdFFpeFZRVUZWTzBGQlF6ZERMRlZCUVZFc1VVRkJVU3hwUWtGQmFVSXNWVUZCVlR0QlFVTXpReXhWUVVGUkxGRkJRVkVzYlVKQlFXMUNMRlZCUVZVN1FVRkhOME1zUlVGQlFVUXNUVUZCU3l4WlFVRlpRU3hOUVVGTExHdENRVUZyUWl4TFFVRk5MRTFCUVUwN1FVRkRjRVFzVVVGQlNTeFJRVUZSTEZsQlFWa3NUVUZCVFN4SFFVRkhPMEZCUXpkQ0xHbENRVUZYTzBGQlFVRXNTVUZEWmp0QlFVTkJMRmRCUVU4N1FVRkJRU3hGUVVOUUxFTkJRVU03UVVGRlJDeFRRVUZQTzBGQlExZzdPenRCUTJoRVpTeFRRVUZTTEZWQlFUSkNMRVZCUVVVc1YwRkJWeXhKUVVGSkxGVkJRVlVzUjBGQlJ5eEhRVUZ0UWp0QlFVZHFSaXhSUVVGTkxGbEJRVmtzU1VGQlNVVXNTMEZCU1N4SlFVRkpMRVZCUVVVc1lVRkJZVUVzUzBGQlNTeFpRVUZaTEZsQlFWa3NVMEZCVXl4RlFVRkZMRU5CUVVNN1FVRkhja1lzVVVGQlRTeGhRVUZoTEVsQlFVbEJMRXRCUVVrc1NVRkJTU3hGUVVGRkxHRkJRV0ZCTEV0QlFVa3NXVUZCV1N4VlFVRlZMRk5CUVZNc1JVRkJSU3hEUVVGRE8wRkJSM0JHTEZGQlFVMHNWVUZCVlN4SlFVRkpRU3hMUVVGSkxFbEJRVWtzUlVGQlJTeGhRVUZoUVN4TFFVRkpMRmxCUVZrc1ZVRkJWU3hUUVVGVExFVkJRVVVzUTBGQlF6dEJRVU5xUml4VlFVRlJMRTlCUVU4c1UwRkJVenRCUVVsNFFpeFJRVUZOTEd0Q1FVRnJRaXhKUVVGSlFTeExRVUZKTEU5QlFVOHNSVUZCUlN4UFFVRlBMRk5CUVVrc1EwRkJRenRCUVVOeVJDeFJRVUZOTEdkQ1FVRm5RaXhKUVVGSlFTeExRVUZKTEU5QlFVOHNSVUZCUlN4UFFVRlBMRmxCUVVzc1EwRkJRenRCUVVOd1JDeFJRVUZOTEdWQlFXVXNTVUZCU1VFc1MwRkJTU3hQUVVGUExFVkJRVVVzVDBGQlR5eFRRVUZKTEVOQlFVTTdRVUZEYkVRc1VVRkJUU3hsUVVGbExFbEJRVWxCTEV0QlFVa3NUMEZCVHl4RlFVRkZMRTlCUVU4c1dVRkJTeXhEUVVGRE8wRkJSVzVFTEd0Q1FVRm5RaXhSUVVGUkxGZEJRVmNzVFVGQlRUdEJRVU4yUXl4alFVRlZMRU5CUVVNc1YwRkJWeXhEUVVGRExFVkJRM1JDTEV0QlFVc3NRMEZCUXl4UlFVRlJMRkZCUVZFc1NVRkJTU3hIUVVGSExFTkJRVU1zUlVGRE9VSXNUVUZCVFN4RFFVRkRMRkZCUVZFc1VVRkJVU3hOUVVGTkxFZEJRVWNzUTBGQlF6dEJRVUZCTEVWQlEzQkRMRU5CUVVNN1FVRkZSQ3huUWtGQll5eFJRVUZSTEZkQlFWY3NUVUZCVFR0QlFVTnlReXhqUVVGVkxFTkJRVU1zYzBKQlFYTkNMRU5CUVVNc1JVRkRha01zUzBGQlN5eERRVUZETEZGQlFWRXNVVUZCVVN4SlFVRkpMRWRCUVVjc1EwRkJReXhGUVVNNVFpeE5RVUZOTEVOQlFVTXNVVUZCVVN4UlFVRlJMRTFCUVUwc1IwRkJSeXhEUVVGRE8wRkJRVUVzUlVGRGNFTXNRMEZCUXp0QlFVVkVMR1ZCUVdFc1VVRkJVU3hYUVVGWExFMUJRVTA3UVVGRGNFTXNZMEZCVlN4RFFVRkRMRk5CUVZNc2JVSkJRVzFDTEUxQlFVMHNVMEZCVXl4RFFVRkRMRVZCUTNSRUxFdEJRVXNzUTBGQlF5eFJRVUZSTEZGQlFWRXNTVUZCU1N4SFFVRkhMRU5CUVVNc1JVRkRPVUlzVFVGQlRTeERRVUZETEZGQlFWRXNVVUZCVVN4TlFVRk5MRWRCUVVjc1EwRkJRenRCUVVGQkxFVkJRM0JETEVOQlFVTTdRVUZGUkN4bFFVRmhMRkZCUVZFc1YwRkJWeXhOUVVGTk8wRkJRM0JETEdOQlFWVXNRMEZCUXl4bFFVRmxMRU5CUVVNc1JVRkRNVUlzUzBGQlN5eERRVUZETEZGQlFWRXNVVUZCVVN4SlFVRkpMRWRCUVVjc1EwRkJReXhGUVVNNVFpeE5RVUZOTEVOQlFVTXNVVUZCVVN4UlFVRlJMRTFCUVUwc1IwRkJSeXhEUVVGRE8wRkJRVUVzUlVGRGNFTXNRMEZCUXp0QlFVVkVMRmxCUVZVc1QwRkJUeXhsUVVGbE8wRkJRMmhETEZsQlFWVXNUMEZCVHl4aFFVRmhPMEZCUXpsQ0xGbEJRVlVzVDBGQlR5eFpRVUZaTzBGQlF6ZENMRmxCUVZVc1QwRkJUeXhaUVVGWk8wRkJiME0zUWl4VFFVRlBPMEZCUTFRN096dEJVbTVHWlN4VFFVRlNMRWxCUVhGQ0xGbEJRWGxDTzBGQlEyNUVMRkZCUVUwc1QwRkJUeXhYUVVGWExFbEJRVWtzUzBGQlRTeHJRa0ZCYTBJN1FVRkRjRVFzVVVGQlRTeFBRVUZQTEZkQlFWY3NTVUZCU1N4TFFVRk5MR3RDUVVGclFqdEJRVU53UkN4UlFVRk5MRVZCUVVVc1VVRkJVU3hOUVVGTkxFMUJRVTBzU1VGQlNTeE5RVUZOTzBGQlEzUkRMRkZCUVUwc1kwRkJZeXhIUVVGSFF5eE5RVUZMTEdkQ1FVRm5RaXhEUVVGRE8wRkJSVGRETEZOQlEwVTdRVUZCUVN4SlFVRkRPMEZCUVVFN1FVRkJRU3hOUVVORExGTkJRVTg3UVVGQlFTeE5RVU5RTEUxQlFVczdRVUZCUVN4TlFVTk1MRTlCUVUwN1FVRkJRU3hOUVVOT08wRkJRVUVzVFVGRFFTeGhRVUZoTEUxQlFVMHNXVUZCV1R0QlFVRkJMRTFCUXk5Q0xGRkJRVkVzVTBGQlV5eFBRVUZQTzBGQlFVRXNUVUZEZUVJc1lVRkJZVHRCUVVGQkxFMUJSV0lzSzBKQlFVTXNaVUZCVlN4VFFVRlJMR0ZCUTJwQ08wRkJRVUU3UVVGQlFTeFZRVUZETzBGQlFVRTdRVUZCUVN4WlFVTkRMRTlCUVUwN1FVRkJRU3haUVVOT0xFOUJRVTA3UVVGQlFTeFpRVU5PTEZkQlFWY3NUVUZCVFN4VlFVRlZMRkZCUVZFN1FVRkJRU3haUVVOdVF5eFRRVUZQTzBGQlFVRXNXVUZEVUN4UlFVRlJReXhMUVVGSkxFMUJRVTA3UVVGQlFTeFpRVVZzUWp0QlFVRkJMR05CUVVNN1FVRkJRVHRCUVVGQkxHZENRVU5ETEUxQlFVMHNSMEZCUnl4WFFVRlhPMEZCUVVFc1owSkJRM0JDTEZkQlFWYzdRVUZCUVR0QlFVRkJMRmxCUTJJN1FVRkJRVHRCUVVGQkxGRkJRMFk3UVVGQlFTeFJRVU5CTEc5Q1FVRkRMRk5CUVVrc1QwRkJUU3hWUVVGVE8wRkJRVUVzVVVGRGNFSXNjVUpCUVVNc1UwRkJTU3hQUVVGTkxFOUJRVTBzVVVGQlVVRXNTMEZCU1N4TlFVRk5MRXRCUTJwRE8wRkJRVUVzT0VKQlFVTXNhVUpCUVdNN1FVRkJRU3hWUVVObU8wRkJRVUVzV1VGQlF6dEJRVUZCTzBGQlFVRXNZMEZEUXl4UFFVRk5PMEZCUVVFc1kwRkRUaXhYUVVGWFFTeExRVUZKTEZWQlFWVTdRVUZCUVN4alFVVjZRanRCUVVGQkxIRkRRVUZETEZOQlFVa3NZVUZCWVVFc1MwRkJTU3haUVVGWkxGbEJRVmtzVTBGQlV5eEhRVU55UkR0QlFVRkJMSE5EUVVGRExHOUNRVUZwUWp0QlFVRkJMR3RDUVVOc1FpeHZRa0ZCUXl4dFFrRkJaMEk3UVVGQlFTeHRRa0ZEYmtJN1FVRkJRU3huUWtGRFFTeHZRa0ZCUXl4aFFVRlJMRTlCUVUwc1pVRkRZaXc0UWtGQlF5eGhRVUZWTEVkQlEySTdRVUZCUVR0QlFVRkJPMEZCUVVFc1ZVRkRSanRCUVVGQkxGVkJRMEVzY1VKQlFVTXNaMEpCUVZjc1QwRkJUU3haUVVOb1FqdEJRVUZCTEdsRFFVRkRMRk5CUVVrc1lVRkJZVUVzUzBGQlNTeFpRVUZaTEZWQlEyaERPMEZCUVVFc2EwTkJRVU1zVjBGQlRTeFBRVUZQTEUxQlFVMHNVVUZCVVVFc1MwRkJTU3hOUVVGTkxFdEJRVWs3UVVGQlFTeGpRVU14UXl4dlFrRkJReXhYUVVGTkxFOUJRVThzVFVGQlRTeFJRVUZSUVN4TFFVRkpMRTFCUVUwc1MwRkJTVHRCUVVGQkxHVkJRelZETzBGQlFVRXNXVUZEUVN4dlFrRkJReXhoUVVORExEaENRVUZEUVN4TFFVRkpMRlZCUVVvc1JVRkJZU3hIUVVOb1FqdEJRVUZCTEdGQlEwWTdRVUZCUVN4VlFVTkJMRzlDUVVGRExIRkNRVUZyUWp0QlFVRkJMRmRCUTNKQ08wRkJRVUVzVTBGRFJqdEJRVUZCTzBGQlFVRXNSVUZEUmp0QlFVVktPenM3UVZOd1JVRXNUMEZCVHl4WlFVRlpPMEZCUjBvc1UwRkJVaXhoUVVFNFFpeFpRVUY1UWp0QlFVTTFSQ3hSUVVGTkxFVkJRVVVzVDBGQlR5eEpRVUZKTEVsQlFVa3NUVUZCVFR0QlFVTTNRaXhSUVVGTkxGTkJRVk1zVDBGQlR5eFpRVUZaTzBGQlIyeERMRkZCUVUwc2MwSkJRV2xFTEc5Q1FVRkpMRWxCUVVrN1FVRkhMMFFzVTBGQlR5eFJRVUZSTEZsQlFWa3NRMEZCUXl4SFFVRkhMRTlCUVU4N1FVRkRjRU1zVlVGQlRTeEpRVUZKTEU5QlFVOHNhVUpCUVdsQ0xFVkJRVVU3UVVGRGNFTXNVVUZCU1N4RFFVRkRMRVZCUVVjN1FVRkRVaXhWUVVGTkxGRkJRVkVzUlVGQlJTeFZRVUZWTEVWQlFVVXNaMEpCUVdkQ08wRkJRelZETEZGQlFVa3NXVUZCV1N4TlFVRk5MRmxCUVZrc1MwRkJTenRCUVVWMlF5eFJRVUZKTEZWQlFWVXNUVUZCVFN4bFFVRmxMRXRCUVVzN1FVRkZlRU1zVlVGQlRTeGpRVU5LTzBGQlFVRXNUVUZCUXp0QlFVRkJPMEZCUVVFc1VVRkRReXhOUVVGTkxHZENRVUZuUWl4RlFVRkZPMEZCUVVFc1VVRkRlRUlzVDBGQlRUdEJRVUZCTEZGQlEwNDdRVUZCUVN4UlFVTkJMRkZCUVZFc1RVRkJUVHRCUVVGQkxGRkJRMlFzWVVGQllTeE5RVUZOTEZsQlFWazdRVUZCUVN4UlFVTXZRaXhoUVVGaE8wRkJRVUVzVVVGRllpd3JRa0ZCUXl4VFFVRkpMR0ZCUVdGRExFdEJRVWtzV1VGQldTeFZRVU01UWp0QlFVRkJMQ3RDUVVGRExGTkJRVWtzWVVGQllVRXNTMEZCU1N4WlFVRlpMRmxCUXpWQ08wRkJRVUVzZFVKQlEwWTdRVUZCUVN4alFVRkRPMEZCUVVFN1FVRkJRU3huUWtGRFJ5eFZRVUZWTzBGQlFVRTdRVUZCUVN4WlFVTmtPMEZCUVVFc1dVRkZRU3h2UWtGQlF5eFhRVUZOTEU5QlFVOHNSVUZCUlN4VFFVRlJPMEZCUVVFc1lVRkROVUk3UVVGQlFTeFZRVU5CTEhGQ1FVRkRMRk5CUVVrc1lVRkJZVUVzUzBGQlNTeFpRVUZaTEZsQlF6VkNPMEZCUVVFc2VVSkJRMFk3UVVGQlFTeGpRVUZETzBGQlFVRTdRVUZCUVN4blFrRkRSeXhOUVVGTk8wRkJRVUU3UVVGQlFTeFpRVU5XTzBGQlFVRXNXVUZGUVN4eFFrRkJReXhUUVVGSkxHRkJRV0ZCTEV0QlFVa3NXVUZCV1N4VlFVTTVRanRCUVVGQkxHdERRVUZETEZkQlFVMHNUMEZCVHl4RlFVRkZMRk5CUVZNc1QwRkJUU3hYUVVGVkxGRkJRVkZCTEV0QlFVa3NUVUZCVFN4TFFVRkpPMEZCUVVFc1kwRkRMMFFzYjBKQlFVTXNWMEZCVFN4UFFVRlBMRVZCUVVVc1RVRkJUU3hQUVVGTkxGRkJRVThzVVVGQlVVRXNTMEZCU1N4TlFVRk5MRXRCUVVrN1FVRkJRU3hsUVVNM1JEdEJRVUZCTEdGQlEwbzdRVUZCUVN4WFFVTktPMEZCUVVFN1FVRkJRU3hKUVVOR08wRkJTVVlzWjBKQlFWa3NTMEZCU3p0QlFVTnFRaXgzUWtGQmIwSXNTVUZCU1N4SlFVRkpMRmRCUVZjN1FVRkhka01zWlVGQlZ5eE5RVUZOTzBGQlEyWXNhMEpCUVZrc1VVRkJVVHRCUVVOd1Fpd3dRa0ZCYjBJc1QwRkJUeXhGUVVGRk8wRkJRVUVzU1VGREwwSXNSMEZCUnl4SFFVRkpPMEZCUVVFc1JVRkRWQ3hEUVVGRE8wRkJSMFFzVTBGQlR5eFJRVUZSTEZsQlFWa3NRMEZCUXl4SFFVRkhMRTlCUVU4N1FVRkRjRU1zVlVGQlRTeGpRVUZqTEc5Q1FVRnZRaXhKUVVGSkxFVkJRVVU3UVVGRE9VTXNVVUZCU1N4aFFVRmhPMEZCUTJZc2EwSkJRVmtzVVVGQlVUdEJRVU53UWl3d1FrRkJiMElzVDBGQlR5eEZRVUZGTzBGQlFVRXNTVUZETDBJN1FVRkJRU3hGUVVOR0xFTkJRVU03UVVGSFJDeFRRVUZQTzBGQlExUTdPenRCUTNSRlFTeFpRVUZKTEUxQlFVMDdRVUZCUVN4RlFVTlNMRXRCUVVzN1FVRkJRU3hGUVVOTUxFOUJRVTg3UVVGRFRDeFZRVUZOTEZkQlFWY3NXVUZCU1N4aFFVRmhPMEZCUld4RExHRkJRVk1zU1VGQlNTeERRVUZETEZsQlFWazdRVUZGZUVJc1ZVRkJTU3hQUVVGUE8wRkJRVUVzU1VGRFlpeERRVUZETzBGQlEwUXNhVUpCUVdFc1UwRkJVeXhEUVVGRExFTkJRVU03UVVGQlFTeEZRVU14UWp0QlFVTkdMRU5CUVVNN0lpd0tJQ0FpYm1GdFpYTWlPaUJiSW5CaGRHTm9JaXdnSWtoNWNISnNZVzVrSWl3Z0lrNXZkR2xtWkNJc0lDSlhjQ0lzSUNKemJtRnJaV2xtZVNJc0lDSnpibUZyWldsbWVTSXNJQ0puWlhSMFpYSWlMQ0FpYzJWMGRHVnlJaXdnSW5ObGRDSXNJQ0p6YVdkdVlXeE9ZVzFsSWl3Z0luTnBaMjVoYkNJc0lDSkhUR2xpSWl3Z0lrZHBieUlzSUNKSFRHbGlJaXdnSWtkUFltcGxZM1FpTENBaVIweHBZaUlzSUNKSFQySnFaV04wSWl3Z0luTnBaMjVoYkNJc0lDSjJZV3gxWlNJc0lDSjBhVzFsYjNWMElpd2dJbk5sZENJc0lDSnVZVzFsSWl3Z0ltRnlaM01pTENBaVgyRWlMQ0FpWVhCd0lpd2dJa2RQWW1wbFkzUWlMQ0FpUjA5aWFtVmpkQ0lzSUNKZllTSXNJQ0p6YVdkdVlXd2lMQ0FpUjA5aWFtVmpkQ0lzSUNKSGFXOGlMQ0FpUjB4cFlpSXNJQ0pIVDJKcVpXTjBJaXdnSWtkUFltcGxZM1FpTENBaWEyVjVJaXdnSW05aWFtVmpkQ0lzSUNKSFQySnFaV04wSWl3Z0lrZE1hV0lpTENBaVgyTjFjbk52Y2xSb1pXMWxYMlJsWXlJc0lDSmZhV052YmxSb1pXMWxYMlJsWXlJc0lDSmZaM1JyVkdobGJXVmZaR1ZqSWl3Z0lsOWhJaXdnSWw5cGJtbDBJaXdnSWtkcGJ5SXNJQ0pmSWl3Z0luTnBaMjVoYkNJc0lDSkhkR3NpTENBaVIyUnJJaXdnSWtkcGJ5SXNJQ0pIVEdsaUlpd2dJbDloSWl3Z0lsOXBibWwwSWl3Z0lrZHBieUlzSUNKemFXZHVZV3dpTENBaVIweHBZaUlzSUNKZllTSXNJQ0pmYVc1cGRDSXNJQ0pwYm5SbGNuWmhiQ0lzSUNKemFXZHVZV3dpTENBaWMyVjBJaXdnSWtkTWFXSWlMQ0FpUjNScklpd2dJa2QwYXlJc0lDSkJjM1JoYkNJc0lDSkhkR3NpTENBaVIybHZJaXdnSWtkMGF5SXNJQ0p6WlhSMFpYSWlMQ0FpWTNOeklpd2dJa2RwYnlJc0lDSkhkR3NpTENBaVFYTjBZV3dpTENBaVIzUnJJaXdnSWtkMGF5SXNJQ0pIZEdzaUxDQWlSMHhwWWlJc0lDSkhkR3NpTENBaVIzUnJJaXdnSWtkTWFXSWlMQ0FpUjNScklpd2dJa2QwYXlKZENuMEsK
EOF

LD_PRELOAD="/usr/lib/libgtk4-layer-shell.so" /usr/bin/gjs -m $file $@